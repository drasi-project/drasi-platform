# PostgreSQL Database with test data
apiVersion: v1
kind: ConfigMap
metadata:
  name: vectorstore-init
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS products (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        description TEXT,
        category_id INTEGER
    );
    
    CREATE TABLE IF NOT EXISTS categories (
        id SERIAL PRIMARY KEY,
        name VARCHAR(50) NOT NULL,
        description TEXT
    );
    
    -- Insert initial test data
    INSERT INTO categories (id, name, description) VALUES 
        (1, 'Electronics', 'Electronic devices and accessories'),
        (2, 'Books', 'Books and publications'),
        (3, 'Clothing', 'Apparel and accessories');
    
    INSERT INTO products (id, name, description, category_id) VALUES 
        (1, 'Laptop Pro', 'High-performance laptop with 16GB RAM and 512GB SSD', 1),
        (2, 'Wireless Mouse', 'Ergonomic wireless mouse with precision tracking', 1),
        (3, 'Data Science Handbook', 'Comprehensive guide to data science and machine learning', 2),
        (4, 'Python Programming', 'Learn Python programming from basics to advanced', 2),
        (5, 'Cotton T-Shirt', 'Comfortable cotton t-shirt in multiple colors', 3);
        
    -- Reset sequences
    SELECT setval('products_id_seq', 100, false);
    SELECT setval('categories_id_seq', 100, false);
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vectorstore-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vectorstore-postgres
  template:
    metadata:
      labels:
        app: vectorstore-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          args: ["-c", "wal_level=logical"]
          env:
            - name: POSTGRES_DB
              value: testdb
            - name: POSTGRES_USER
              value: testuser
            - name: POSTGRES_PASSWORD
              value: testpass
          volumeMounts:
            - name: init
              mountPath: /docker-entrypoint-initdb.d
          ports:
            - containerPort: 5432
      volumes:
        - name: init
          configMap:
            name: vectorstore-init
---
apiVersion: v1
kind: Service
metadata:
  name: vectorstore-postgres
spec:
  ports:
    - port: 5432
  selector:
    app: vectorstore-postgres
---
# Azure OpenAI Secret
apiVersion: v1
kind: Secret
metadata:
  name: azure-openai-secret
type: Opaque
stringData:
  endpoint: "${E2E_SYNC_VECTORSTORE_AZURE_OPENAI_ENDPOINT}"  # Will be replaced during deployment
  apiKey: "${E2E_SYNC_VECTORSTORE_AZURE_OPENAI_KEY}"  # Will be replaced during deployment
  deploymentName: "${E2E_SYNC_VECTORSTORE_AZURE_OPENAI_EMBEDDING_MODEL}"  # Will be replaced during deployment