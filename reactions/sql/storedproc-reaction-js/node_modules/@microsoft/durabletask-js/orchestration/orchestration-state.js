"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrchestrationState = void 0;
const orchestration_failed_error_1 = require("./exception/orchestration-failed-error");
class OrchestrationState {
    constructor(instanceId, name, runtimeStatus, createdAt, lastUpdatedAt, serializedInput, serializedOutput, serializedCustomStatus, failureDetails) {
        this.instanceId = instanceId;
        this.name = name;
        this.runtimeStatus = runtimeStatus;
        this.createdAt = createdAt;
        this.lastUpdatedAt = lastUpdatedAt;
        this.serializedInput = serializedInput;
        this.serializedOutput = serializedOutput;
        this.serializedCustomStatus = serializedCustomStatus;
        this.failureDetails = failureDetails;
    }
    raiseIfFailed() {
        if (this.failureDetails) {
            throw new orchestration_failed_error_1.OrchestrationFailedError(`Orchestration '${this.instanceId}' failed: ${this.failureDetails.message}`, this.failureDetails);
        }
    }
}
exports.OrchestrationState = OrchestrationState;
