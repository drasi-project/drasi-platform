"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.getName = exports.whenAny = exports.whenAll = void 0;
const when_all_task_1 = require("./when-all-task");
const when_any_task_1 = require("./when-any-task");
/**
 * Returns a task that completes when all of the provided tasks complete or when one of the tasks fail
 *
 * @param tasks the tasks to wait for
 * @returns {WhenAllTask} a task that completes when all of the provided tasks complete or when one of the tasks fail
 */
function whenAll(tasks) {
    return new when_all_task_1.WhenAllTask(tasks);
}
exports.whenAll = whenAll;
/**
 * Returns a task that completes when any of the provided tasks complete or fail
 *
 * @param tasks
 * @returns
 */
function whenAny(tasks) {
    return new when_any_task_1.WhenAnyTask(tasks);
}
exports.whenAny = whenAny;
/**
 * Returns the name of the provided function
 *
 * @param fn
 * @returns
 */
function getName(fn) {
    if (!fn) {
        throw new Error("Cannot infer a name from a null or undefined function. Please provide a name explicitly.");
    }
    const name = fn.name;
    if (!name) {
        throw new Error("Cannot infer a name from a lambda function. Please provide a name explicitly.");
    }
    return name;
}
exports.getName = getName;
