"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityExecutor = void 0;
const types_1 = require("util/types");
const activity_context_1 = require("../task/context/activity-context");
const activity_not_registered_error_1 = require("./exception/activity-not-registered-error");
class ActivityExecutor {
    constructor(registry) {
        this._registry = registry;
    }
    async execute(orchestrationId, name, taskId, encodedInput) {
        const fn = this._registry.getActivity(name);
        if (!fn) {
            throw new activity_not_registered_error_1.ActivityNotRegisteredError(name);
        }
        const activityInput = encodedInput ? JSON.parse(encodedInput) : undefined;
        const ctx = new activity_context_1.ActivityContext(orchestrationId, taskId);
        // Execute the activity function
        let activityOutput = fn(ctx, activityInput);
        if ((0, types_1.isPromise)(activityOutput)) {
            activityOutput = await activityOutput;
        }
        // Return the output
        const encodedOutput = activityOutput ? JSON.stringify(activityOutput) : undefined;
        const chars = encodedOutput ? encodedOutput.length : 0;
        console.log(`Activity ${name} completed with output ${encodedOutput} (${chars} chars)`);
        return encodedOutput;
    }
}
exports.ActivityExecutor = ActivityExecutor;
