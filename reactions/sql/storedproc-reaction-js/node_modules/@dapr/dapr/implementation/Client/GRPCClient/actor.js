"use strict";
/*
Copyright 2022 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ActorProxyBuilder_1 = __importDefault(require("../../../actors/client/ActorProxyBuilder"));
const ActorId_1 = __importDefault(require("../../../actors/ActorId"));
// https://docs.dapr.io/reference/api/actors_api/
class GRPCClientActor {
    constructor(client) {
        this.client = client;
    }
    // Note: actorTypeClass is required since Javascript compiled has type information erased
    // this means that we can't use T to new up an object (sadly enough) so we have to pass it
    create(actorTypeClass) {
        const builder = new ActorProxyBuilder_1.default(actorTypeClass, this.client.options.daprHost, this.client.options.daprPort, this.client.options.communicationProtocol, this.client.options);
        const actor = builder.build(ActorId_1.default.createRandomId());
        return actor;
    }
}
exports.default = GRPCClientActor;
