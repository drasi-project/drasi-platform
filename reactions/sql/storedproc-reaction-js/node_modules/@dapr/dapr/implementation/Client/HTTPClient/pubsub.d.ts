import HTTPClient from "./HTTPClient";
import IClientPubSub from "../../../interfaces/Client/IClientPubSub";
import { KeyValueType } from "../../../types/KeyValue.type";
import { PubSubBulkPublishResponse } from "../../../types/pubsub/PubSubBulkPublishResponse.type";
import { PubSubBulkPublishMessage } from "../../../types/pubsub/PubSubBulkPublishMessage.type";
import { PubSubPublishResponseType } from "../../../types/pubsub/PubSubPublishResponse.type";
import { PubSubPublishOptions } from "../../../types/pubsub/PubSubPublishOptions.type";
export default class HTTPClientPubSub implements IClientPubSub {
    client: HTTPClient;
    private readonly logger;
    constructor(client: HTTPClient);
    publish(pubSubName: string, topic: string, data: object | string, options?: PubSubPublishOptions): Promise<PubSubPublishResponseType>;
    publishBulk(pubSubName: string, topic: string, messages: PubSubBulkPublishMessage[], metadata?: KeyValueType | undefined): Promise<PubSubBulkPublishResponse>;
    private handleBulkPublishError;
}
