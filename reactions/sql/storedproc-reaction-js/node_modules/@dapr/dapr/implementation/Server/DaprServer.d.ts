import IServer from "../../interfaces/Server/IServer";
import IServerPubSub from "../../interfaces/Server/IServerPubSub";
import IServerBinding from "../../interfaces/Server/IServerBinding";
import IServerInvoker from "../../interfaces/Server/IServerInvoker";
import IServerActor from "../../interfaces/Server/IServerActor";
import { DaprServerOptions } from "../../types/DaprServerOptions";
import DaprClient from "../Client/DaprClient";
export default class DaprServer {
    private readonly serverOptions;
    readonly daprServer: IServer;
    readonly pubsub: IServerPubSub;
    readonly binding: IServerBinding;
    readonly invoker: IServerInvoker;
    readonly actor: IServerActor;
    readonly client: DaprClient;
    constructor(serverOptions?: Partial<DaprServerOptions>);
    start(): Promise<void>;
    stop(): Promise<void>;
    getDaprClient(): IServer;
}
