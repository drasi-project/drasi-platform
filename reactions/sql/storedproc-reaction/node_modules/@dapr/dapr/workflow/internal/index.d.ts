import { TInput, TOutput } from "../../types/workflow/InputOutput.type";
import { TWorkflowActivity } from "../../types/workflow/Activity.type";
import { TWorkflow } from "../../types/workflow/Workflow.type";
import * as grpc from "@grpc/grpc-js";
import { WorkflowClientOptions } from "../../types/workflow/WorkflowClientOption";
import { GrpcEndpoint } from "../../network/GrpcEndpoint";
/**
 * Gets the name of a function from its definition or string representation.
 *
 * @param fn - The function for which the name is to be retrieved. Can be either a function or a string representation of a function.
 * @returns The name of the function.
 *
 * @typeparam TWorkflow - The type of the workflow function.
 * @typeparam TInput - The type of the input for the workflow activity.
 * @typeparam TOutput - The type of the output for the workflow activity.
 */
export declare function getFunctionName(fn: TWorkflow | TWorkflowActivity<TInput, TOutput>): string;
/**
 * Generates a Dapr gRPC endpoint based on the provided options or defaults.
 *
 * @param options - An object containing optional settings for the WorkflowClient.
 * @returns A GrpcEndpoint representing the Dapr gRPC endpoint.
 */
export declare function generateEndpoint(options: Partial<WorkflowClientOptions>): GrpcEndpoint;
/**
 * Gets the Dapr API token based on the provided options or defaults.
 *
 * @param options - An object containing optional settings for the WorkflowClient.
 * @returns A string representing the Dapr API token, or undefined if not set.
 */
export declare function getDaprApiToken(options: Partial<WorkflowClientOptions>): string | undefined;
/**
 * Generates a gRPC interceptor function that adds a Dapr API token to the metadata if not already present.
 * This interceptor is intended for use with gRPC client calls.
 *
 * @param options - The gRPC call options object.
 * @param nextCall - The next call function in the interceptor chain.
 * @returns A gRPC InterceptingCall instance with added functionality to include a Dapr API token in the metadata.
 */
export declare function generateApiTokenClientInterceptors(workflowOptions: Partial<WorkflowClientOptions>): (options: any, nextCall: any) => grpc.InterceptingCall;
