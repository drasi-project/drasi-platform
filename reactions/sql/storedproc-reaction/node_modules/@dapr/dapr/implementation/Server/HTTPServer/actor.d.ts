import HTTPServer from "./HTTPServer";
import IServerActor from "../../../interfaces/Server/IServerActor";
import AbstractActor from "../../../actors/runtime/AbstractActor";
import Class from "../../../types/Class";
import { DaprClient } from "../../..";
export default class HTTPServerActor implements IServerActor {
    private readonly server;
    private readonly client;
    private readonly serializer;
    private readonly logger;
    constructor(server: HTTPServer, client: DaprClient);
    registerActor<T extends AbstractActor>(cls: Class<T>): Promise<void>;
    getRegisteredActors(): Promise<string[]>;
    /**
     * Initialize actors in the HTTP Server
     * This will create the routes that get invoked by the Dapr Sidecar
     */
    init(): Promise<void>;
    private handlerHealth;
    private handlerConfig;
    private handlerDeactivate;
    private handlerMethod;
    private handlerTimer;
    private handlerReminder;
    private handleResult;
}
