import * as grpc from "@grpc/grpc-js";
import GRPCServerImpl from "./GRPCServerImpl";
import IServer from "../../../interfaces/Server/IServer";
import { DaprClient } from "../../..";
import { DaprServerOptions } from "../../../types/DaprServerOptions";
export type IServerType = grpc.Server;
export type IServerImplType = GRPCServerImpl;
export default class GRPCServer implements IServer {
    isInitialized: boolean;
    serverHost: string;
    serverPort: string;
    serverOptions: DaprServerOptions;
    server: IServerType;
    serverImpl: IServerImplType;
    serverCredentials: grpc.ServerCredentials;
    client: DaprClient;
    private readonly logger;
    constructor(client: DaprClient, options: DaprServerOptions);
    private generateChannelOptions;
    getServerAddress(): string;
    getServer(): IServerType;
    getServerImpl(): IServerImplType;
    start(host: string, port: string): Promise<void>;
    stop(): Promise<void>;
    private initializeBind;
}
