"use strict";
/*
Copyright 2022 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const CommunicationProtocol_enum_1 = __importDefault(require("../../../enum/CommunicationProtocol.enum"));
const GRPCClient_1 = __importDefault(require("../../../implementation/Client/GRPCClient/GRPCClient"));
const HTTPClient_1 = __importDefault(require("../../../implementation/Client/HTTPClient/HTTPClient"));
const ActorClientGRPC_1 = __importDefault(require("./ActorClientGRPC"));
const ActorClientHTTP_1 = __importDefault(require("./ActorClientHTTP"));
class ActorClient {
    constructor(daprHost, daprPort, communicationProtocol, options) {
        this.daprHost = daprHost;
        this.daprPort = daprPort;
        this.communicationProtocol = communicationProtocol;
        this.options = options;
        // Builder
        switch (communicationProtocol) {
            case CommunicationProtocol_enum_1.default.GRPC: {
                const client = new GRPCClient_1.default(this.options);
                this.actor = new ActorClientGRPC_1.default(client);
                break;
            }
            case CommunicationProtocol_enum_1.default.HTTP:
            default: {
                const client = new HTTPClient_1.default(this.options);
                this.actor = new ActorClientHTTP_1.default(client);
                break;
            }
        }
    }
}
exports.default = ActorClient;
