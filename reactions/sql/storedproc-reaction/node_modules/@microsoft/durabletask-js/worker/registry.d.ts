import { TActivity } from "../types/activity.type";
import { TInput } from "../types/input.type";
import { TOrchestrator } from "../types/orchestrator.type";
import { TOutput } from "../types/output.type";
export declare class Registry {
    private _orchestrators;
    private _activities;
    constructor();
    addOrchestrator(fn: TOrchestrator): string;
    addNamedOrchestrator(name: string, fn: TOrchestrator): void;
    getOrchestrator(name?: string): TOrchestrator | undefined;
    addActivity(fn: TActivity<TInput, TOutput>): string;
    addNamedActivity(name: string, fn: TActivity<TInput, TOutput>): void;
    getActivity(name: string): TActivity<TInput, TOutput> | undefined;
    _getFunctionName(fn: Function): string;
}
