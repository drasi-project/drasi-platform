"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigValue = getConfigValue;
exports.parseJson = parseJson;
exports.parseYaml = parseYaml;
const yaml_1 = __importDefault(require("yaml"));
/**
 * Retrieves a configuration value for the Reaction.
 *
 * @param key The configuration key to retrieve
 * @param defaultValue The default value to return if the key is not found
 * @returns The configuration value or the default value if the key is not found
 *
 * @example
 * ```typescript
 * const connectionString = getConfigValue("MyConnectionString");
 * ```
 * The above code will retrieve the value of the MyConnectionString configuration key, as defined in the reaction manifest:
 * ```yaml
 * kind: Reaction
 * apiVersion: v1
 * name: test
 * spec:
 *  kind: MyReaction
 *  properties:
 *    MyConnectionString: "some connection string"
 *  queries:
 *    query1:
 * ```
 *
 */
function getConfigValue(key, defaultValue) {
    return process.env[key] ?? defaultValue;
}
/**
 * Parses a JSON configuration string into an object.
 *
 * @example
 * ```typescript
 * let myReaction = new DrasiReaction(onChangeEvent, {
 *   parseQueryConfig: parseJson,
 * });
 * ```
 */
function parseJson(queryId, config) {
    return JSON.parse(config);
}
/**
 * Parses a YAML configuration string into an object.
 *
 * @example
 * ```typescript
 * let myReaction = new DrasiReaction(onChangeEvent, {
 *   parseQueryConfig: parseYaml,
 * });
 * ```
 */
function parseYaml(queryId, config) {
    return yaml_1.default.parse(config);
}
//# sourceMappingURL=utils.js.map