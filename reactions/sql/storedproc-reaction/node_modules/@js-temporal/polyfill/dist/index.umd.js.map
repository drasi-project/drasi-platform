{"version":3,"file":"index.umd.js","sources":["../node_modules/big-integer/BigInteger.js","../tsc-out/intrinsicclass.js","../tsc-out/slots.js","../tsc-out/calendar.js","../tsc-out/regex.js","../tsc-out/ecmascript.js","../tsc-out/intl.js","../tsc-out/instant.js","../tsc-out/plaindate.js","../tsc-out/plaindatetime.js","../tsc-out/duration.js","../tsc-out/plainmonthday.js","../tsc-out/now.js","../tsc-out/plaintime.js","../tsc-out/timezone.js","../tsc-out/plainyearmonth.js","../tsc-out/zoneddatetime.js","../tsc-out/legacydate.js"],"sourcesContent":["var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < digits[i]) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { DEBUG } from './debug';\nconst INTRINSICS = {};\nconst customUtilInspectFormatters = {\n    ['Temporal.Duration'](depth, options) {\n        const descr = options.stylize(`${this[Symbol.toStringTag]} <${this}>`, 'special');\n        if (depth < 1)\n            return descr;\n        const entries = [];\n        for (const prop of [\n            'years',\n            'months',\n            'weeks',\n            'days',\n            'hours',\n            'minutes',\n            'seconds',\n            'milliseconds',\n            'microseconds',\n            'nanoseconds'\n        ]) {\n            if (this[prop] !== 0)\n                entries.push(`  ${prop}: ${options.stylize(this[prop], 'number')}`);\n        }\n        return descr + ' {\\n' + entries.join(',\\n') + '\\n}';\n    }\n};\nfunction defaultUtilInspectFormatter(depth, options) {\n    return options.stylize(`${this[Symbol.toStringTag]} <${this}>`, 'special');\n}\nexport function MakeIntrinsicClass(Class, name) {\n    Object.defineProperty(Class.prototype, Symbol.toStringTag, {\n        value: name,\n        writable: false,\n        enumerable: false,\n        configurable: true\n    });\n    if (DEBUG) {\n        Object.defineProperty(Class.prototype, Symbol.for('nodejs.util.inspect.custom'), {\n            value: customUtilInspectFormatters[name] || defaultUtilInspectFormatter,\n            writable: false,\n            enumerable: false,\n            configurable: true\n        });\n    }\n    for (const prop of Object.getOwnPropertyNames(Class)) {\n        const desc = Object.getOwnPropertyDescriptor(Class, prop);\n        if (!desc.configurable || !desc.enumerable)\n            continue;\n        desc.enumerable = false;\n        Object.defineProperty(Class, prop, desc);\n    }\n    for (const prop of Object.getOwnPropertyNames(Class.prototype)) {\n        const desc = Object.getOwnPropertyDescriptor(Class.prototype, prop);\n        if (!desc.configurable || !desc.enumerable)\n            continue;\n        desc.enumerable = false;\n        Object.defineProperty(Class.prototype, prop, desc);\n    }\n    DefineIntrinsic(name, Class);\n    DefineIntrinsic(`${name}.prototype`, Class.prototype);\n}\nexport function DefineIntrinsic(name, value) {\n    const key = `%${name}%`;\n    if (INTRINSICS[key] !== undefined)\n        throw new Error(`intrinsic ${name} already exists`);\n    INTRINSICS[key] = value;\n}\nexport function GetIntrinsic(intrinsic) {\n    return INTRINSICS[intrinsic];\n}\n//# sourceMappingURL=intrinsicclass.js.map","// Instant\nexport const EPOCHNANOSECONDS = 'slot-epochNanoSeconds';\n// TimeZone\nexport const TIMEZONE_ID = 'slot-timezone-identifier';\n// DateTime, Date, Time, YearMonth, MonthDay\nexport const ISO_YEAR = 'slot-year';\nexport const ISO_MONTH = 'slot-month';\nexport const ISO_DAY = 'slot-day';\nexport const ISO_HOUR = 'slot-hour';\nexport const ISO_MINUTE = 'slot-minute';\nexport const ISO_SECOND = 'slot-second';\nexport const ISO_MILLISECOND = 'slot-millisecond';\nexport const ISO_MICROSECOND = 'slot-microsecond';\nexport const ISO_NANOSECOND = 'slot-nanosecond';\nexport const CALENDAR = 'slot-calendar';\n// Date, YearMonth, and MonthDay all have the same slots, disambiguation needed:\nexport const DATE_BRAND = 'slot-date-brand';\nexport const YEAR_MONTH_BRAND = 'slot-year-month-brand';\nexport const MONTH_DAY_BRAND = 'slot-month-day-brand';\n// ZonedDateTime\nexport const INSTANT = 'slot-cached-instant';\nexport const TIME_ZONE = 'slot-time-zone';\n// Duration\nexport const YEARS = 'slot-years';\nexport const MONTHS = 'slot-months';\nexport const WEEKS = 'slot-weeks';\nexport const DAYS = 'slot-days';\nexport const HOURS = 'slot-hours';\nexport const MINUTES = 'slot-minutes';\nexport const SECONDS = 'slot-seconds';\nexport const MILLISECONDS = 'slot-milliseconds';\nexport const MICROSECONDS = 'slot-microseconds';\nexport const NANOSECONDS = 'slot-nanoseconds';\n// Calendar\nexport const CALENDAR_ID = 'slot-calendar-identifier';\nconst slots = new WeakMap();\nexport function CreateSlots(container) {\n    slots.set(container, Object.create(null));\n}\nfunction GetSlots(container) {\n    return slots.get(container);\n}\nexport function HasSlot(container, ...ids) {\n    if (!container || 'object' !== typeof container)\n        return false;\n    const myslots = GetSlots(container);\n    return !!myslots && ids.reduce((all, id) => all && id in myslots, true);\n}\nexport function GetSlot(container, id) {\n    const value = GetSlots(container)[id];\n    if (value === undefined)\n        throw new TypeError(`Missing internal slot ${id}`);\n    return value;\n}\nexport function SetSlot(container, id, value) {\n    GetSlots(container)[id] = value;\n}\n//# sourceMappingURL=slots.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass, DefineIntrinsic } from './intrinsicclass';\nimport { CALENDAR_ID, ISO_YEAR, ISO_MONTH, ISO_DAY, YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS, CreateSlots, GetSlot, HasSlot, SetSlot } from './slots';\nconst ArrayIncludes = Array.prototype.includes;\nconst ArrayPrototypePush = Array.prototype.push;\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst MathAbs = Math.abs;\nconst MathFloor = Math.floor;\nconst ObjectAssign = Object.assign;\nconst ObjectEntries = Object.entries;\nconst ObjectKeys = Object.keys;\nconst ReflectApply = Reflect.apply;\nconst impl = {};\nexport class Calendar {\n    constructor(idParam) {\n        // Note: if the argument is not passed, IsBuiltinCalendar(\"undefined\") will fail. This check\n        //       exists only to improve the error message.\n        if (arguments.length < 1) {\n            throw new RangeError('missing argument: id is required');\n        }\n        const id = ES.ToString(idParam);\n        if (!IsBuiltinCalendar(id))\n            throw new RangeError(`invalid calendar identifier ${id}`);\n        CreateSlots(this);\n        SetSlot(this, CALENDAR_ID, id);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${id}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get id() {\n        return ES.ToString(this);\n    }\n    dateFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dateFromFields(fields, options, this);\n    }\n    yearMonthFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].yearMonthFromFields(fields, options, this);\n    }\n    monthDayFromFields(fields, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(fields))\n            throw new TypeError('invalid fields');\n        const options = ES.GetOptionsObject(optionsParam);\n        return impl[GetSlot(this, CALENDAR_ID)].monthDayFromFields(fields, options, this);\n    }\n    fields(fields) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const fieldsArray = [];\n        const allowed = new Set([\n            'year',\n            'month',\n            'monthCode',\n            'day',\n            'hour',\n            'minute',\n            'second',\n            'millisecond',\n            'microsecond',\n            'nanosecond'\n        ]);\n        for (const name of fields) {\n            if (typeof name !== 'string')\n                throw new TypeError('invalid fields');\n            if (!allowed.has(name))\n                throw new RangeError(`invalid field name ${name}`);\n            allowed.delete(name);\n            ArrayPrototypePush.call(fieldsArray, name);\n        }\n        return impl[GetSlot(this, CALENDAR_ID)].fields(fieldsArray);\n    }\n    mergeFields(fields, additionalFields) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return impl[GetSlot(this, CALENDAR_ID)].mergeFields(fields, additionalFields);\n    }\n    dateAdd(dateParam, durationParam, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        const duration = ES.ToTemporalDuration(durationParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        const { days } = ES.BalanceDuration(GetSlot(duration, DAYS), GetSlot(duration, HOURS), GetSlot(duration, MINUTES), GetSlot(duration, SECONDS), GetSlot(duration, MILLISECONDS), GetSlot(duration, MICROSECONDS), GetSlot(duration, NANOSECONDS), 'day');\n        return impl[GetSlot(this, CALENDAR_ID)].dateAdd(date, GetSlot(duration, YEARS), GetSlot(duration, MONTHS), GetSlot(duration, WEEKS), days, overflow, this);\n    }\n    dateUntil(oneParam, twoParam, optionsParam = undefined) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const one = ES.ToTemporalDate(oneParam);\n        const two = ES.ToTemporalDate(twoParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', ['hour', 'minute', 'second', 'millisecond', 'microsecond', 'nanosecond'], 'day');\n        const { years, months, weeks, days } = impl[GetSlot(this, CALENDAR_ID)].dateUntil(one, two, largestUnit);\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    }\n    year(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].year(date);\n    }\n    month(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (ES.IsTemporalMonthDay(date))\n            throw new TypeError('use monthCode on PlainMonthDay instead');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].month(date);\n    }\n    monthCode(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date) && !ES.IsTemporalMonthDay(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].monthCode(date);\n    }\n    day(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalMonthDay(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].day(date);\n    }\n    era(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].era(date);\n    }\n    eraYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        return impl[GetSlot(this, CALENDAR_ID)].eraYear(date);\n    }\n    dayOfWeek(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dayOfWeek(date);\n    }\n    dayOfYear(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].dayOfYear(date);\n    }\n    weekOfYear(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].weekOfYear(date);\n    }\n    daysInWeek(dateParam) {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        const date = ES.ToTemporalDate(dateParam);\n        return impl[GetSlot(this, CALENDAR_ID)].daysInWeek(date);\n    }\n    daysInMonth(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        // TODO: is the cast below (here and in other methods) safe?  What if it's\n        // a PlainYearMonth?\n        return impl[GetSlot(this, CALENDAR_ID)].daysInMonth(date);\n    }\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        // TODO: is the cast below (here and in other methods) safe?  What if it's\n        // a PlainYearMonth?\n        return impl[GetSlot(this, CALENDAR_ID)].daysInYear(date);\n    }\n    monthsInYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        // TODO: is the cast below (here and in other methods) safe?  What if it's\n        // a PlainYearMonth?\n        return impl[GetSlot(this, CALENDAR_ID)].monthsInYear(date);\n    }\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsTemporalYearMonth(date))\n            date = ES.ToTemporalDate(date);\n        // TODO: is the cast below (here and in other methods) safe?  What if it's\n        // a PlainYearMonth?\n        return impl[GetSlot(this, CALENDAR_ID)].inLeapYear(date);\n    }\n    toString() {\n        if (!ES.IsTemporalCalendar(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR_ID);\n    }\n    toJSON() {\n        return ES.ToString(this);\n    }\n    static from(item) {\n        return ES.ToTemporalCalendar(item);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Calendar, 'Temporal.Calendar');\nDefineIntrinsic('Temporal.Calendar.from', Calendar.from);\nimpl['iso8601'] = {\n    dateFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['day'],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year']\n        ]);\n        fields = resolveNonLunisolarMonth(fields);\n        let { year, month, day } = fields;\n        ({ year, month, day } = ES.RegulateISODate(year, month, day, overflow));\n        return ES.CreateTemporalDate(year, month, day, calendar);\n    },\n    yearMonthFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year']\n        ]);\n        fields = resolveNonLunisolarMonth(fields);\n        let { year, month } = fields;\n        ({ year, month } = ES.RegulateISOYearMonth(year, month, overflow));\n        return ES.CreateTemporalYearMonth(year, month, calendar, /* referenceISODay = */ 1);\n    },\n    monthDayFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        let fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['day'],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year', undefined]\n        ]);\n        if (fields.month !== undefined && fields.year === undefined && fields.monthCode === undefined) {\n            throw new TypeError('either year or monthCode required with month');\n        }\n        const useYear = fields.monthCode === undefined;\n        const referenceISOYear = 1972;\n        fields = resolveNonLunisolarMonth(fields);\n        let { month, day, year } = fields;\n        ({ month, day } = ES.RegulateISODate(useYear ? year : referenceISOYear, month, day, overflow));\n        return ES.CreateTemporalMonthDay(month, day, calendar, referenceISOYear);\n    },\n    fields(fields) {\n        return fields;\n    },\n    mergeFields(fields, additionalFields) {\n        const merged = {};\n        for (const nextKey of ObjectKeys(fields)) {\n            if (nextKey === 'month' || nextKey === 'monthCode')\n                continue;\n            merged[nextKey] = fields[nextKey];\n        }\n        const newKeys = ObjectKeys(additionalFields);\n        for (const nextKey of newKeys) {\n            merged[nextKey] = additionalFields[nextKey];\n        }\n        if (!ArrayIncludes.call(newKeys, 'month') && !ArrayIncludes.call(newKeys, 'monthCode')) {\n            const { month, monthCode } = fields;\n            if (month !== undefined)\n                merged.month = month;\n            if (monthCode !== undefined)\n                merged.monthCode = monthCode;\n        }\n        return merged;\n    },\n    dateAdd(date, years, months, weeks, days, overflow, calendar) {\n        let year = GetSlot(date, ISO_YEAR);\n        let month = GetSlot(date, ISO_MONTH);\n        let day = GetSlot(date, ISO_DAY);\n        ({ year, month, day } = ES.AddISODate(year, month, day, years, months, weeks, days, overflow));\n        return ES.CreateTemporalDate(year, month, day, calendar);\n    },\n    dateUntil(one, two, largestUnit) {\n        return ES.DifferenceISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY), largestUnit);\n    },\n    year(date) {\n        return GetSlot(date, ISO_YEAR);\n    },\n    era() {\n        return undefined;\n    },\n    eraYear() {\n        return undefined;\n    },\n    month(date) {\n        return GetSlot(date, ISO_MONTH);\n    },\n    monthCode(date) {\n        return buildMonthCode(GetSlot(date, ISO_MONTH));\n    },\n    day(date) {\n        return GetSlot(date, ISO_DAY);\n    },\n    dayOfWeek(date) {\n        return ES.DayOfWeek(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    dayOfYear(date) {\n        return ES.DayOfYear(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    weekOfYear(date) {\n        return ES.WeekOfYear(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH), GetSlot(date, ISO_DAY));\n    },\n    daysInWeek() {\n        return 7;\n    },\n    daysInMonth(date) {\n        return ES.ISODaysInMonth(GetSlot(date, ISO_YEAR), GetSlot(date, ISO_MONTH));\n    },\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        return ES.LeapYear(GetSlot(date, ISO_YEAR)) ? 366 : 365;\n    },\n    monthsInYear() {\n        return 12;\n    },\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        return ES.LeapYear(GetSlot(date, ISO_YEAR));\n    }\n};\n// Note: other built-in calendars than iso8601 are not part of the Temporal\n// proposal for ECMA-262. These calendars will be standardized as part of\n// ECMA-402.\nfunction monthCodeNumberPart(monthCode) {\n    if (!monthCode.startsWith('M')) {\n        throw new RangeError(`Invalid month code: ${monthCode}.  Month codes must start with M.`);\n    }\n    const month = +monthCode.slice(1);\n    if (isNaN(month))\n        throw new RangeError(`Invalid month code: ${monthCode}`);\n    return month;\n}\nfunction buildMonthCode(month, leap = false) {\n    return `M${month.toString().padStart(2, '0')}${leap ? 'L' : ''}`;\n}\n/**\n * Safely merge a month, monthCode pair into an integer month.\n * If both are present, make sure they match.\n * This logic doesn't work for lunisolar calendars!\n * */\nfunction resolveNonLunisolarMonth(calendarDate, overflow = undefined, monthsPerYear = 12) {\n    let { month, monthCode } = calendarDate;\n    if (monthCode === undefined) {\n        if (month === undefined)\n            throw new TypeError('Either month or monthCode are required');\n        // The ISO calendar uses the default (undefined) value because it does\n        // constrain/reject after this method returns. Non-ISO calendars, however,\n        // rely on this function to constrain/reject out-of-range `month` values.\n        if (overflow === 'reject')\n            ES.RejectToRange(month, 1, monthsPerYear);\n        if (overflow === 'constrain')\n            month = ES.ConstrainToRange(month, 1, monthsPerYear);\n        monthCode = buildMonthCode(month);\n    }\n    else {\n        const numberPart = monthCodeNumberPart(monthCode);\n        if (month !== undefined && month !== numberPart) {\n            throw new RangeError(`monthCode ${monthCode} and month ${month} must match if both are present`);\n        }\n        if (monthCode !== buildMonthCode(numberPart)) {\n            throw new RangeError(`Invalid month code: ${monthCode}`);\n        }\n        month = numberPart;\n        if (month < 1 || month > monthsPerYear)\n            throw new RangeError(`Invalid monthCode: ${monthCode}`);\n    }\n    return { ...calendarDate, month, monthCode };\n}\n/**\n * This prototype implementation of non-ISO calendars makes many repeated calls\n * to Intl APIs which may be slow (e.g. >0.2ms). This trivial cache will speed\n * up these repeat accesses. Each cache instance is associated (via a WeakMap)\n * to a specific Temporal object, which speeds up multiple calendar calls on the\n * same Temporal object instance.  No invalidation or pruning is necessary\n * because each object's cache is thrown away when the object is GC-ed.\n */\nclass OneObjectCache {\n    constructor(cacheToClone = undefined) {\n        this.map = new Map();\n        this.calls = 0;\n        this.hits = 0;\n        this.misses = 0;\n        this.now = globalThis.performance ? globalThis.performance.now() : Date.now();\n        if (cacheToClone !== undefined) {\n            let i = 0; // TODO why was this originally cacheToClone.length ?\n            for (const entry of cacheToClone.map.entries()) {\n                if (++i > OneObjectCache.MAX_CACHE_ENTRIES)\n                    break;\n                this.map.set(...entry);\n            }\n        }\n    }\n    get(key) {\n        const result = this.map.get(key);\n        if (result) {\n            this.hits++;\n            this.report();\n        }\n        this.calls++;\n        return result;\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.misses++;\n        this.report();\n    }\n    report() {\n        /*\n        if (this.calls === 0) return;\n        const ms = (globalThis.performance ? globalThis.performance.now() : Date.now()) - this.now;\n        const hitRate = ((100 * this.hits) / this.calls).toFixed(0);\n        console.log(`${this.calls} calls in ${ms.toFixed(2)}ms. Hits: ${this.hits} (${hitRate}%). Misses: ${this.misses}.`);\n        */\n    }\n    setObject(obj) {\n        if (OneObjectCache.objectMap.get(obj))\n            throw new RangeError('object already cached');\n        OneObjectCache.objectMap.set(obj, this);\n        this.report();\n    }\n    /**\n     * Returns a WeakMap-backed cache that's used to store expensive results\n     * that are associated with a particular Temporal object instance.\n     *\n     * @param obj - object to associate with the cache\n     */\n    static getCacheForObject(obj) {\n        let cache = OneObjectCache.objectMap.get(obj);\n        if (!cache) {\n            cache = new OneObjectCache();\n            OneObjectCache.objectMap.set(obj, cache);\n        }\n        return cache;\n    }\n}\nOneObjectCache.objectMap = new WeakMap();\nOneObjectCache.MAX_CACHE_ENTRIES = 1000;\nfunction toUtcIsoDateString({ isoYear, isoMonth, isoDay }) {\n    const yearString = ES.ISOYearString(isoYear);\n    const monthString = ES.ISODateTimePartString(isoMonth);\n    const dayString = ES.ISODateTimePartString(isoDay);\n    return `${yearString}-${monthString}-${dayString}T00:00Z`;\n}\nfunction simpleDateDiff(one, two) {\n    return {\n        years: one.year - two.year,\n        months: one.month - two.month,\n        days: one.day - two.day\n    };\n}\n/**\n * Implementation that's common to all non-trivial non-ISO calendars\n */\nconst nonIsoHelperBase = {\n    // The properties and methods below here should be the same for all lunar/lunisolar calendars.\n    getFormatter() {\n        // `new Intl.DateTimeFormat()` is amazingly slow and chews up RAM. Per\n        // https://bugs.chromium.org/p/v8/issues/detail?id=6528#c4, we cache one\n        // DateTimeFormat instance per calendar. Caching is lazy so we only pay for\n        // calendars that are used. Note that the nonIsoHelperBase object is spread\n        // into each each calendar's implementation before any cache is created, so\n        // each calendar gets its own separate cached formatter.\n        if (typeof this.formatter === 'undefined') {\n            this.formatter = new IntlDateTimeFormat(`en-US-u-ca-${this.id}`, {\n                day: 'numeric',\n                month: 'numeric',\n                year: 'numeric',\n                era: this.eraLength,\n                timeZone: 'UTC'\n            });\n        }\n        return this.formatter;\n    },\n    isoToCalendarDate(isoDate, cache) {\n        const { year: isoYear, month: isoMonth, day: isoDay } = isoDate;\n        const key = JSON.stringify({ func: 'isoToCalendarDate', isoYear, isoMonth, isoDay, id: this.id });\n        const cached = cache.get(key);\n        if (cached)\n            return cached;\n        const dateTimeFormat = this.getFormatter();\n        let parts, isoString;\n        try {\n            isoString = toUtcIsoDateString({ isoYear, isoMonth, isoDay });\n            parts = dateTimeFormat.formatToParts(new Date(isoString));\n        }\n        catch (e) {\n            throw new RangeError(`Invalid ISO date: ${JSON.stringify({ isoYear, isoMonth, isoDay })}`);\n        }\n        const result = {};\n        for (let { type, value } of parts) {\n            if (type === 'year')\n                result.eraYear = +value;\n            // TODO: remove this type annotation when this value gets into TS lib types\n            if (type === 'relatedYear')\n                result.eraYear = +value;\n            if (type === 'month') {\n                const matches = /^([-0-9.]+)(.*?)$/.exec(value);\n                if (!matches || matches.length != 3)\n                    throw new RangeError(`Unexpected month: ${value}`);\n                result.month = +matches[1];\n                if (result.month < 1) {\n                    throw new RangeError(`Invalid month ${value} from ${isoString}[u-ca-${this.id}]` +\n                        ' (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10527)');\n                }\n                if (result.month > 13) {\n                    throw new RangeError(`Invalid month ${value} from ${isoString}[u-ca-${this.id}]` +\n                        ' (probably due to https://bugs.chromium.org/p/v8/issues/detail?id=10529)');\n                }\n                if (matches[2])\n                    result.monthExtra = matches[2];\n            }\n            if (type === 'day')\n                result.day = +value;\n            if (this.hasEra && type === 'era' && value != null && value !== '') {\n                // The convention for Temporal era values is lowercase, so following\n                // that convention in this prototype. Punctuation is removed, accented\n                // letters are normalized, and spaces are replaced with dashes.\n                // E.g.: \"ERA0\" => \"era0\", \"Before R.O.C.\" => \"before-roc\", \"En’ō\" => \"eno\"\n                // The call to normalize() and the replacement regex deals with era\n                // names that contain non-ASCII characters like Japanese eras. Also\n                // ignore extra content in parentheses like JPN era date ranges.\n                value = value.split(' (')[0];\n                result.era = value\n                    .normalize('NFD')\n                    .replace(/[^-0-9 \\p{L}]/gu, '')\n                    .replace(' ', '-')\n                    .toLowerCase();\n            }\n        }\n        if (result.eraYear === undefined) {\n            // Node 12 has outdated ICU data that lacks the `relatedYear` field in the\n            // output of Intl.DateTimeFormat.formatToParts.\n            throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);\n        }\n        // Translate eras that may be handled differently by Temporal vs. by Intl\n        // (e.g. Japanese pre-Meiji eras). See #526 for details.\n        if (this.reviseIntlEra) {\n            const { era, eraYear } = this.reviseIntlEra(result, isoDate);\n            result.era = era;\n            result.eraYear = eraYear;\n        }\n        if (this.checkIcuBugs)\n            this.checkIcuBugs(result, isoDate);\n        const calendarDate = this.adjustCalendarDate(result, cache, 'constrain', true);\n        if (calendarDate.year === undefined)\n            throw new RangeError(`Missing year converting ${JSON.stringify(isoDate)}`);\n        if (calendarDate.month === undefined)\n            throw new RangeError(`Missing month converting ${JSON.stringify(isoDate)}`);\n        if (calendarDate.day === undefined)\n            throw new RangeError(`Missing day converting ${JSON.stringify(isoDate)}`);\n        cache.set(key, calendarDate);\n        // Also cache the reverse mapping\n        ['constrain', 'reject'].forEach((overflow) => {\n            const keyReverse = JSON.stringify({\n                func: 'calendarToIsoDate',\n                year: calendarDate.year,\n                month: calendarDate.month,\n                day: calendarDate.day,\n                overflow,\n                id: this.id\n            });\n            cache.set(keyReverse, isoDate);\n        });\n        return calendarDate;\n    },\n    validateCalendarDate(calendarDate) {\n        const { era, month, year, day, eraYear, monthCode, monthExtra } = calendarDate;\n        // When there's a suffix (e.g. \"5bis\" for a leap month in Chinese calendar)\n        // the derived class must deal with it.\n        if (monthExtra !== undefined)\n            throw new RangeError('Unexpected `monthExtra` value');\n        if (year === undefined && eraYear === undefined)\n            throw new TypeError('year or eraYear is required');\n        if (month === undefined && monthCode === undefined)\n            throw new TypeError('month or monthCode is required');\n        if (day === undefined)\n            throw new RangeError('Missing day');\n        if (monthCode !== undefined) {\n            if (typeof monthCode !== 'string') {\n                throw new RangeError(`monthCode must be a string, not ${typeof monthCode}`);\n            }\n            if (!/^M([01]?\\d)(L?)$/.test(monthCode))\n                throw new RangeError(`Invalid monthCode: ${monthCode}`);\n        }\n        if (this.constantEra) {\n            if (era !== undefined && era !== this.constantEra) {\n                throw new RangeError(`era must be ${this.constantEra}, not ${era}`);\n            }\n            if (eraYear !== undefined && year !== undefined && eraYear !== year) {\n                throw new RangeError(`eraYear ${eraYear} does not match year ${year}`);\n            }\n        }\n    },\n    /**\n     * Allows derived calendars to add additional fields and/or to make\n     * adjustments e.g. to set the era based on the date or to revise the month\n     * number in lunisolar calendars per\n     * https://github.com/tc39/proposal-temporal/issues/1203.\n     *\n     * The base implementation fills in missing values by assuming the simplest\n     * possible calendar:\n     * - no eras or a constant era defined in `.constantEra`\n     * - non-lunisolar calendar (no leap months)\n     * */\n    adjustCalendarDate(calendarDateParam, cache, overflow /*, fromLegacyDate = false */) {\n        if (this.calendarType === 'lunisolar')\n            throw new RangeError('Override required for lunisolar calendars');\n        let calendarDate = calendarDateParam;\n        this.validateCalendarDate(calendarDate);\n        const largestMonth = this.monthsInYear(calendarDate, cache);\n        let { month, year, eraYear, monthCode } = calendarDate;\n        // For calendars that always use the same era, set it here so that derived\n        // calendars won't need to implement this method simply to set the era.\n        if (this.constantEra) {\n            // year and eraYear always match when there's only one possible era\n            if (year === undefined)\n                year = eraYear;\n            if (eraYear === undefined)\n                eraYear = year;\n            calendarDate = { ...calendarDate, era: this.constantEra, year, eraYear };\n        }\n        ({ month, monthCode } = resolveNonLunisolarMonth(calendarDate, overflow, largestMonth));\n        return { ...calendarDate, month, monthCode };\n    },\n    regulateMonthDayNaive(calendarDate, overflow, cache) {\n        const largestMonth = this.monthsInYear(calendarDate, cache);\n        let { month, day } = calendarDate;\n        if (overflow === 'reject') {\n            ES.RejectToRange(month, 1, largestMonth);\n            ES.RejectToRange(day, 1, this.maximumMonthLength(calendarDate));\n        }\n        else {\n            month = ES.ConstrainToRange(month, 1, largestMonth);\n            day = ES.ConstrainToRange(day, 1, this.maximumMonthLength({ ...calendarDate, month }));\n        }\n        return { ...calendarDate, month, day };\n    },\n    calendarToIsoDate(dateParam, overflow = 'constrain', cache) {\n        const originalDate = dateParam;\n        // First, normalize the calendar date to ensure that (year, month, day)\n        // are all present, converting monthCode and eraYear if needed.\n        let date = this.adjustCalendarDate(dateParam, cache, overflow, false);\n        // Fix obviously out-of-bounds values. Values that are valid generally, but\n        // not in this particular year, may not be caught here for some calendars.\n        // If so, these will be handled lower below.\n        date = this.regulateMonthDayNaive(date, overflow, cache);\n        const { year, month, day } = date;\n        const key = JSON.stringify({ func: 'calendarToIsoDate', year, month, day, overflow, id: this.id });\n        let cached = cache.get(key);\n        if (cached)\n            return cached;\n        // If YMD are present in the input but the input has been constrained\n        // already, then cache both the original value and the constrained value.\n        let keyOriginal;\n        if (originalDate.year !== undefined &&\n            originalDate.month !== undefined &&\n            originalDate.day !== undefined &&\n            (originalDate.year !== date.year || originalDate.month !== date.month || originalDate.day !== date.day)) {\n            keyOriginal = JSON.stringify({\n                func: 'calendarToIsoDate',\n                year: originalDate.year,\n                month: originalDate.month,\n                day: originalDate.day,\n                overflow,\n                id: this.id\n            });\n            cached = cache.get(keyOriginal);\n            if (cached)\n                return cached;\n        }\n        // First, try to roughly guess the result\n        let isoEstimate = this.estimateIsoDate({ year, month, day });\n        const calculateSameMonthResult = (diffDays) => {\n            // If the estimate is in the same year & month as the target, then we can\n            // calculate the result exactly and short-circuit any additional logic.\n            // This optimization assumes that months are continuous. It would break if\n            // a calendar skipped days, like the Julian->Gregorian switchover. But the\n            // only ICU calendars that currently skip days (japanese/roc/buddhist) is\n            // a bug (https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)\n            // that's currently detected by `checkIcuBugs()` which will throw. So\n            // this optimization should be safe for all ICU calendars.\n            let testIsoEstimate = this.addDaysIso(isoEstimate, diffDays);\n            if (date.day > this.minimumMonthLength(date)) {\n                // There's a chance that the calendar date is out of range. Throw or\n                // constrain if so.\n                let testCalendarDate = this.isoToCalendarDate(testIsoEstimate, cache);\n                while (testCalendarDate.month !== month || testCalendarDate.year !== year) {\n                    if (overflow === 'reject') {\n                        throw new RangeError(`day ${day} does not exist in month ${month} of year ${year}`);\n                    }\n                    // Back up a day at a time until we're not hanging over the month end\n                    testIsoEstimate = this.addDaysIso(testIsoEstimate, -1);\n                    testCalendarDate = this.isoToCalendarDate(testIsoEstimate, cache);\n                }\n            }\n            return testIsoEstimate;\n        };\n        let sign = 0;\n        let roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n        let diff = simpleDateDiff(date, roundtripEstimate);\n        if (diff.years !== 0 || diff.months !== 0 || diff.days !== 0) {\n            const diffTotalDaysEstimate = diff.years * 365 + diff.months * 30 + diff.days;\n            isoEstimate = this.addDaysIso(isoEstimate, diffTotalDaysEstimate);\n            roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n            diff = simpleDateDiff(date, roundtripEstimate);\n            if (diff.years === 0 && diff.months === 0) {\n                isoEstimate = calculateSameMonthResult(diff.days);\n            }\n            else {\n                sign = this.compareCalendarDates(date, roundtripEstimate);\n            }\n        }\n        // If the initial guess is not in the same month, then then bisect the\n        // distance to the target, starting with 8 days per step.\n        let increment = 8;\n        let maybeConstrained = false;\n        while (sign) {\n            isoEstimate = this.addDaysIso(isoEstimate, sign * increment);\n            const oldRoundtripEstimate = roundtripEstimate;\n            roundtripEstimate = this.isoToCalendarDate(isoEstimate, cache);\n            const oldSign = sign;\n            sign = this.compareCalendarDates(date, roundtripEstimate);\n            if (sign) {\n                diff = simpleDateDiff(date, roundtripEstimate);\n                if (diff.years === 0 && diff.months === 0) {\n                    isoEstimate = calculateSameMonthResult(diff.days);\n                    // Signal the loop condition that there's a match.\n                    sign = 0;\n                    // If the calendar day is larger than the minimal length for this\n                    // month, then it might be larger than the actual length of the month.\n                    // So we won't cache it as the correct calendar date for this ISO\n                    // date.\n                    maybeConstrained = date.day > this.minimumMonthLength(date);\n                }\n                else if (oldSign && sign !== oldSign) {\n                    if (increment > 1) {\n                        // If the estimate overshot the target, try again with a smaller increment\n                        // in the reverse direction.\n                        increment /= 2;\n                    }\n                    else {\n                        // Increment is 1, and neither the previous estimate nor the new\n                        // estimate is correct. The only way that can happen is if the\n                        // original date was an invalid value that will be constrained or\n                        // rejected here.\n                        if (overflow === 'reject') {\n                            throw new RangeError(`Can't find ISO date from calendar date: ${JSON.stringify({ ...originalDate })}`);\n                        }\n                        else {\n                            // To constrain, pick the earliest value\n                            const order = this.compareCalendarDates(roundtripEstimate, oldRoundtripEstimate);\n                            // If current value is larger, then back up to the previous value.\n                            if (order > 0)\n                                isoEstimate = this.addDaysIso(isoEstimate, -1);\n                            maybeConstrained = true;\n                            sign = 0;\n                        }\n                    }\n                }\n            }\n        }\n        cache.set(key, isoEstimate);\n        if (keyOriginal)\n            cache.set(keyOriginal, isoEstimate);\n        if (date.year === undefined ||\n            date.month === undefined ||\n            date.day === undefined ||\n            date.monthCode === undefined ||\n            (this.hasEra && (date.era === undefined || date.eraYear === undefined))) {\n            throw new RangeError('Unexpected missing property');\n        }\n        if (!maybeConstrained) {\n            // Also cache the reverse mapping\n            const keyReverse = JSON.stringify({\n                func: 'isoToCalendarDate',\n                isoYear: isoEstimate.year,\n                isoMonth: isoEstimate.month,\n                isoDay: isoEstimate.day,\n                id: this.id\n            });\n            cache.set(keyReverse, date);\n        }\n        return isoEstimate;\n    },\n    temporalToCalendarDate(date, cache) {\n        const isoDate = { year: GetSlot(date, ISO_YEAR), month: GetSlot(date, ISO_MONTH), day: GetSlot(date, ISO_DAY) };\n        const result = this.isoToCalendarDate(isoDate, cache);\n        return result;\n    },\n    compareCalendarDates(date1Param, date2Param) {\n        // `date1` and `date2` are already records. The calls below simply validate\n        // that all three required fields are present.\n        const date1 = ES.PrepareTemporalFields(date1Param, [['day'], ['month'], ['year']]);\n        const date2 = ES.PrepareTemporalFields(date2Param, [['day'], ['month'], ['year']]);\n        if (date1.year !== date2.year)\n            return ES.ComparisonResult(date1.year - date2.year);\n        if (date1.month !== date2.month)\n            return ES.ComparisonResult(date1.month - date2.month);\n        if (date1.day !== date2.day)\n            return ES.ComparisonResult(date1.day - date2.day);\n        return 0;\n    },\n    /** Ensure that a calendar date actually exists. If not, return the closest earlier date. */\n    regulateDate(calendarDate, overflow = 'constrain', cache) {\n        const isoDate = this.calendarToIsoDate(calendarDate, overflow, cache);\n        return this.isoToCalendarDate(isoDate, cache);\n    },\n    addDaysIso(isoDate, days) {\n        const added = ES.AddISODate(isoDate.year, isoDate.month, isoDate.day, 0, 0, 0, days, 'constrain');\n        return added;\n    },\n    addDaysCalendar(calendarDate, days, cache) {\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const addedIso = this.addDaysIso(isoDate, days);\n        const addedCalendar = this.isoToCalendarDate(addedIso, cache);\n        return addedCalendar;\n    },\n    addMonthsCalendar(calendarDateParam, months, overflow, cache) {\n        let calendarDate = calendarDateParam;\n        const { day } = calendarDate;\n        for (let i = 0, absMonths = MathAbs(months); i < absMonths; i++) {\n            const { month } = calendarDate;\n            const oldCalendarDate = calendarDate;\n            const days = months < 0\n                ? -Math.max(day, this.daysInPreviousMonth(calendarDate, cache))\n                : this.daysInMonth(calendarDate, cache);\n            const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n            let addedIso = this.addDaysIso(isoDate, days, cache);\n            calendarDate = this.isoToCalendarDate(addedIso, cache);\n            // Normally, we can advance one month by adding the number of days in the\n            // current month. However, if we're at the end of the current month and\n            // the next month has fewer days, then we rolled over to the after-next\n            // month. Below we detect this condition and back up until we're back in\n            // the desired month.\n            if (months > 0) {\n                const monthsInOldYear = this.monthsInYear(oldCalendarDate, cache);\n                while (calendarDate.month - 1 !== month % monthsInOldYear) {\n                    addedIso = this.addDaysIso(addedIso, -1, cache);\n                    calendarDate = this.isoToCalendarDate(addedIso, cache);\n                }\n            }\n            if (calendarDate.day !== day) {\n                // try to retain the original day-of-month, if possible\n                calendarDate = this.regulateDate({ ...calendarDate, day }, 'constrain', cache);\n            }\n        }\n        if (overflow === 'reject' && calendarDate.day !== day) {\n            throw new RangeError(`Day ${day} does not exist in resulting calendar month`);\n        }\n        return calendarDate;\n    },\n    addCalendar(calendarDate, { years = 0, months = 0, weeks = 0, days = 0 }, overflow, cache) {\n        const { year, month, day } = calendarDate;\n        const addedMonths = this.addMonthsCalendar({ year: year + years, month, day }, months, overflow, cache);\n        const initialDays = days + weeks * 7;\n        const addedDays = this.addDaysCalendar(addedMonths, initialDays, cache);\n        return addedDays;\n    },\n    untilCalendar(calendarOne, calendarTwo, largestUnit, cache) {\n        let days = 0;\n        let weeks = 0;\n        let months = 0;\n        let years = 0;\n        switch (largestUnit) {\n            case 'day':\n                days = this.calendarDaysUntil(calendarOne, calendarTwo, cache);\n                break;\n            case 'week': {\n                const totalDays = this.calendarDaysUntil(calendarOne, calendarTwo, cache);\n                days = totalDays % 7;\n                weeks = (totalDays - days) / 7;\n                break;\n            }\n            case 'month':\n            case 'year': {\n                const diffYears = calendarTwo.year - calendarOne.year;\n                const diffMonths = calendarTwo.month - calendarOne.month;\n                const diffDays = calendarTwo.day - calendarOne.day;\n                const sign = this.compareCalendarDates(calendarTwo, calendarOne);\n                if (largestUnit === 'year' && diffYears) {\n                    const isOneFurtherInYear = diffMonths * sign < 0 || (diffMonths === 0 && diffDays * sign < 0);\n                    years = isOneFurtherInYear ? diffYears - sign : diffYears;\n                }\n                const yearsAdded = years ? this.addCalendar(calendarOne, { years }, 'constrain', cache) : calendarOne;\n                // Now we have less than one year remaining. Add one month at a time\n                // until we go over the target, then back up one month and calculate\n                // remaining days and weeks.\n                let current;\n                let next = yearsAdded;\n                do {\n                    months += sign;\n                    current = next;\n                    next = this.addMonthsCalendar(current, sign, 'constrain', cache);\n                    if (next.day !== calendarOne.day) {\n                        // In case the day was constrained down, try to un-constrain it\n                        next = this.regulateDate({ ...next, day: calendarOne.day }, 'constrain', cache);\n                    }\n                } while (this.compareCalendarDates(calendarTwo, next) * sign >= 0);\n                months -= sign; // correct for loop above which overshoots by 1\n                const remainingDays = this.calendarDaysUntil(current, calendarTwo, cache);\n                days = remainingDays;\n                break;\n            }\n        }\n        return { years, months, weeks, days };\n    },\n    daysInMonth(calendarDate, cache) {\n        // Add enough days to roll over to the next month. One we're in the next\n        // month, we can calculate the length of the current month. NOTE: This\n        // algorithm assumes that months are continuous. It would break if a\n        // calendar skipped days, like the Julian->Gregorian switchover. But the\n        // only ICU calendars that currently skip days (japanese/roc/buddhist) is a\n        // bug (https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)\n        // that's currently detected by `checkIcuBugs()` which will throw. So this\n        // code should be safe for all ICU calendars.\n        const { day } = calendarDate;\n        const max = this.maximumMonthLength(calendarDate);\n        const min = this.minimumMonthLength(calendarDate);\n        // easiest case: we already know the month length if min and max are the same.\n        if (min === max)\n            return min;\n        // Add enough days to get into the next month, without skipping it\n        const increment = day <= max - min ? max : min;\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const addedIsoDate = this.addDaysIso(isoDate, increment);\n        const addedCalendarDate = this.isoToCalendarDate(addedIsoDate, cache);\n        // Now back up to the last day of the original month\n        const endOfMonthIso = this.addDaysIso(addedIsoDate, -addedCalendarDate.day);\n        const endOfMonthCalendar = this.isoToCalendarDate(endOfMonthIso, cache);\n        return endOfMonthCalendar.day;\n    },\n    daysInPreviousMonth(calendarDate, cache) {\n        const { day, month, year } = calendarDate;\n        // Check to see if we already know the month length, and return it if so\n        const previousMonthYear = month > 1 ? year : year - 1;\n        let previousMonthDate = { year: previousMonthYear, month, day: 1 };\n        const previousMonth = month > 1 ? month - 1 : this.monthsInYear(previousMonthDate, cache);\n        previousMonthDate = { ...previousMonthDate, month: previousMonth };\n        const min = this.minimumMonthLength(previousMonthDate);\n        const max = this.maximumMonthLength(previousMonthDate);\n        if (min === max)\n            return max;\n        const isoDate = this.calendarToIsoDate(calendarDate, 'constrain', cache);\n        const lastDayOfPreviousMonthIso = this.addDaysIso(isoDate, -day);\n        const lastDayOfPreviousMonthCalendar = this.isoToCalendarDate(lastDayOfPreviousMonthIso, cache);\n        return lastDayOfPreviousMonthCalendar.day;\n    },\n    startOfCalendarYear(calendarDate) {\n        return { year: calendarDate.year, month: 1, day: 1 };\n    },\n    startOfCalendarMonth(calendarDate) {\n        return { year: calendarDate.year, month: calendarDate.month, day: 1 };\n    },\n    calendarDaysUntil(calendarOne, calendarTwo, cache) {\n        const oneIso = this.calendarToIsoDate(calendarOne, 'constrain', cache);\n        const twoIso = this.calendarToIsoDate(calendarTwo, 'constrain', cache);\n        return this.isoDaysUntil(oneIso, twoIso);\n    },\n    isoDaysUntil(oneIso, twoIso) {\n        const duration = ES.DifferenceISODate(oneIso.year, oneIso.month, oneIso.day, twoIso.year, twoIso.month, twoIso.day, 'day');\n        return duration.days;\n    },\n    // The short era format works for all calendars except Japanese, which will\n    // override.\n    eraLength: 'short',\n    // All built-in calendars except Chinese/Dangi and Hebrew use an era\n    hasEra: true,\n    monthDayFromFields(fields, overflow, cache) {\n        let { year, month, monthCode, day, era, eraYear } = fields;\n        if (monthCode === undefined) {\n            if (year === undefined && (era === undefined || eraYear === undefined)) {\n                throw new TypeError('`monthCode`, `year`, or `era` and `eraYear` is required');\n            }\n            ({ monthCode, year } = this.adjustCalendarDate({ year, month, monthCode, day, era, eraYear }, cache, overflow));\n        }\n        let isoYear, isoMonth, isoDay;\n        let closestCalendar, closestIso;\n        // Look backwards starting from the calendar year of 1972-01-01 up to 100\n        // calendar years to find a year that has this month and day. Normal months\n        // and days will match immediately, but for leap days and leap months we may\n        // have to look for a while.\n        const startDateIso = { year: 1972, month: 1, day: 1 };\n        const { year: calendarYear } = this.isoToCalendarDate(startDateIso, cache);\n        for (let i = 0; i < 100; i++) {\n            const testCalendarDate = this.adjustCalendarDate({ day, monthCode, year: calendarYear - i }, cache);\n            const isoDate = this.calendarToIsoDate(testCalendarDate, 'constrain', cache);\n            const roundTripCalendarDate = this.isoToCalendarDate(isoDate, cache);\n            ({ year: isoYear, month: isoMonth, day: isoDay } = isoDate);\n            if (roundTripCalendarDate.monthCode === monthCode && roundTripCalendarDate.day === day) {\n                return { month: isoMonth, day: isoDay, year: isoYear };\n            }\n            else if (overflow === 'constrain') {\n                // non-ISO constrain algorithm tries to find the closest date in a matching month\n                if (closestCalendar === undefined ||\n                    (roundTripCalendarDate.monthCode === closestCalendar.monthCode &&\n                        roundTripCalendarDate.day > closestCalendar.day)) {\n                    closestCalendar = roundTripCalendarDate;\n                    closestIso = isoDate;\n                }\n            }\n        }\n        if (overflow === 'constrain' && closestIso !== undefined)\n            return closestIso;\n        throw new RangeError(`No recent ${this.id} year with monthCode ${monthCode} and day ${day}`);\n    }\n};\nconst helperHebrew = ObjectAssign({}, nonIsoHelperBase, {\n    id: 'hebrew',\n    calendarType: 'lunisolar',\n    inLeapYear(calendarDate /*, cache */) {\n        const { year } = calendarDate;\n        // FYI: In addition to adding a month in leap years, the Hebrew calendar\n        // also has per-year changes to the number of days of Heshvan and Kislev.\n        // Given that these can be calculated by counting the number of days in\n        // those months, I assume that these DO NOT need to be exposed as\n        // Hebrew-only prototype fields or methods.\n        return (7 * year + 1) % 19 < 7;\n    },\n    monthsInYear(calendarDate) {\n        return this.inLeapYear(calendarDate) ? 13 : 12;\n    },\n    minimumMonthLength(calendarDate) {\n        return this.minMaxMonthLength(calendarDate, 'min');\n    },\n    maximumMonthLength(calendarDate) {\n        return this.minMaxMonthLength(calendarDate, 'max');\n    },\n    minMaxMonthLength(calendarDate, minOrMax) {\n        const { month, year } = calendarDate;\n        const monthCode = this.getMonthCode(year, month);\n        const monthInfo = ObjectEntries(this.months).find((m) => m[1].monthCode === monthCode);\n        if (monthInfo === undefined)\n            throw new RangeError(`unmatched Hebrew month: ${month}`);\n        const daysInMonth = monthInfo[1].days;\n        return typeof daysInMonth === 'number' ? daysInMonth : daysInMonth[minOrMax];\n    },\n    /** Take a guess at what ISO date a particular calendar date corresponds to */\n    estimateIsoDate(calendarDate) {\n        const { year } = calendarDate;\n        return { year: year - 3760, month: 1, day: 1 };\n    },\n    months: {\n        Tishri: { leap: 1, regular: 1, monthCode: 'M01', days: 30 },\n        Heshvan: { leap: 2, regular: 2, monthCode: 'M02', days: { min: 29, max: 30 } },\n        Kislev: { leap: 3, regular: 3, monthCode: 'M03', days: { min: 29, max: 30 } },\n        Tevet: { leap: 4, regular: 4, monthCode: 'M04', days: 29 },\n        Shevat: { leap: 5, regular: 5, monthCode: 'M05', days: 30 },\n        Adar: { leap: undefined, regular: 6, monthCode: 'M06', days: 29 },\n        'Adar I': { leap: 6, regular: undefined, monthCode: 'M05L', days: 30 },\n        'Adar II': { leap: 7, regular: undefined, monthCode: 'M06', days: 29 },\n        Nisan: { leap: 8, regular: 7, monthCode: 'M07', days: 30 },\n        Iyar: { leap: 9, regular: 8, monthCode: 'M08', days: 29 },\n        Sivan: { leap: 10, regular: 9, monthCode: 'M09', days: 30 },\n        Tamuz: { leap: 11, regular: 10, monthCode: 'M10', days: 29 },\n        Av: { leap: 12, regular: 11, monthCode: 'M11', days: 30 },\n        Elul: { leap: 13, regular: 12, monthCode: 'M12', days: 29 }\n    },\n    getMonthCode(year, month) {\n        if (this.inLeapYear({ year })) {\n            return month === 6 ? buildMonthCode(5, true) : buildMonthCode(month < 6 ? month : month - 1);\n        }\n        else {\n            return buildMonthCode(month);\n        }\n    },\n    adjustCalendarDate(calendarDate, cache, overflow = 'constrain', fromLegacyDate = false) {\n        let { year, eraYear, month, monthCode, day, monthExtra } = calendarDate;\n        if (year === undefined)\n            year = eraYear;\n        if (eraYear === undefined)\n            eraYear = year;\n        if (fromLegacyDate) {\n            // In Pre Node-14 V8, DateTimeFormat.formatToParts `month: 'numeric'`\n            // output returns the numeric equivalent of `month` as a string, meaning\n            // that `'6'` in a leap year is Adar I, while `'6'` in a non-leap year\n            // means Adar. In this case, `month` will already be correct and no action\n            // is needed. However, in Node 14 and later formatToParts returns the name\n            // of the Hebrew month (e.g. \"Tevet\"), so we'll need to look up the\n            // correct `month` using the string name as a key.\n            if (monthExtra) {\n                const monthInfo = this.months[monthExtra];\n                if (!monthInfo)\n                    throw new RangeError(`Unrecognized month from formatToParts: ${monthExtra}`);\n                month = this.inLeapYear({ year }) ? monthInfo.leap : monthInfo.regular;\n            }\n            monthCode = this.getMonthCode(year, month);\n            const result = { year, month, day, era: undefined, eraYear, monthCode };\n            return result;\n        }\n        else {\n            // When called without input coming from legacy Date output, simply ensure\n            // that all fields are present.\n            this.validateCalendarDate(calendarDate);\n            if (month === undefined) {\n                if (monthCode.endsWith('L')) {\n                    if (monthCode !== 'M05L') {\n                        throw new RangeError(`Hebrew leap month must have monthCode M05L, not ${monthCode}`);\n                    }\n                    month = 6;\n                    if (!this.inLeapYear({ year })) {\n                        if (overflow === 'reject') {\n                            throw new RangeError(`Hebrew monthCode M05L is invalid in year ${year} which is not a leap year`);\n                        }\n                        else {\n                            // constrain to last day of previous month (Av)\n                            month = 5;\n                            day = 30;\n                            monthCode = 'M05';\n                        }\n                    }\n                }\n                else {\n                    month = monthCodeNumberPart(monthCode);\n                    // if leap month is before this one, the month index is one more than the month code\n                    if (this.inLeapYear({ year }) && month > 6)\n                        month++;\n                    const largestMonth = this.monthsInYear({ year });\n                    if (month < 1 || month > largestMonth)\n                        throw new RangeError(`Invalid monthCode: ${monthCode}`);\n                }\n            }\n            else {\n                if (overflow === 'reject') {\n                    ES.RejectToRange(month, 1, this.monthsInYear({ year }));\n                    ES.RejectToRange(day, 1, this.maximumMonthLength(calendarDate));\n                }\n                else {\n                    month = ES.ConstrainToRange(month, 1, this.monthsInYear({ year }));\n                    day = ES.ConstrainToRange(day, 1, this.maximumMonthLength({ ...calendarDate, month }));\n                }\n                if (monthCode === undefined) {\n                    monthCode = this.getMonthCode(year, month);\n                }\n                else {\n                    const calculatedMonthCode = this.getMonthCode(year, month);\n                    if (calculatedMonthCode !== monthCode) {\n                        throw new RangeError(`monthCode ${monthCode} doesn't correspond to month ${month} in Hebrew year ${year}`);\n                    }\n                }\n            }\n            return { ...calendarDate, day, month, monthCode, year, eraYear };\n        }\n    },\n    // All built-in calendars except Chinese/Dangi and Hebrew use an era\n    hasEra: false\n});\n/**\n * For Temporal purposes, the Islamic calendar is simple because it's always the\n * same 12 months in the same order.\n */\nconst helperIslamic = ObjectAssign({}, nonIsoHelperBase, {\n    id: 'islamic',\n    calendarType: 'lunar',\n    inLeapYear(calendarDate, cache) {\n        // In leap years, the 12th month has 30 days. In non-leap years: 29.\n        const days = this.daysInMonth({ year: calendarDate.year, month: 12, day: 1 }, cache);\n        return days === 30;\n    },\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    },\n    minimumMonthLength: ( /* calendarDate */) => 29,\n    maximumMonthLength: ( /* calendarDate */) => 30,\n    DAYS_PER_ISLAMIC_YEAR: 354 + 11 / 30,\n    DAYS_PER_ISO_YEAR: 365.2425,\n    constantEra: 'ah',\n    estimateIsoDate(calendarDate) {\n        const { year } = this.adjustCalendarDate(calendarDate);\n        return { year: MathFloor((year * this.DAYS_PER_ISLAMIC_YEAR) / this.DAYS_PER_ISO_YEAR) + 622, month: 1, day: 1 };\n    }\n});\nconst helperPersian = ObjectAssign({}, nonIsoHelperBase, {\n    id: 'persian',\n    calendarType: 'solar',\n    inLeapYear(calendarDate, cache) {\n        // Same logic (count days in the last month) for Persian as for Islamic,\n        // even though Persian is solar and Islamic is lunar.\n        return helperIslamic.inLeapYear(calendarDate, cache);\n    },\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    },\n    minimumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        if (month === 12)\n            return 29;\n        return month <= 6 ? 31 : 30;\n    },\n    maximumMonthLength(calendarDate) {\n        const { month } = calendarDate;\n        if (month === 12)\n            return 30;\n        return month <= 6 ? 31 : 30;\n    },\n    constantEra: 'ap',\n    estimateIsoDate(calendarDate) {\n        const { year } = this.adjustCalendarDate(calendarDate);\n        return { year: year + 621, month: 1, day: 1 };\n    }\n});\nconst helperIndian = ObjectAssign({}, nonIsoHelperBase, {\n    id: 'indian',\n    calendarType: 'solar',\n    inLeapYear(calendarDate /*, cache*/) {\n        // From https://en.wikipedia.org/wiki/Indian_national_calendar:\n        // Years are counted in the Saka era, which starts its year 0 in the year 78\n        // of the Common Era. To determine leap years, add 78 to the Saka year – if\n        // the result is a leap year in the Gregorian calendar, then the Saka year\n        // is a leap year as well.\n        return isGregorianLeapYear(calendarDate.year + 78);\n    },\n    monthsInYear( /* calendarYear, cache */) {\n        return 12;\n    },\n    minimumMonthLength(calendarDate) {\n        return this.getMonthInfo(calendarDate).length;\n    },\n    maximumMonthLength(calendarDate) {\n        return this.getMonthInfo(calendarDate).length;\n    },\n    constantEra: 'saka',\n    // Indian months always start at the same well-known Gregorian month and\n    // day. So this conversion is easy and fast. See\n    // https://en.wikipedia.org/wiki/Indian_national_calendar\n    months: {\n        1: { length: 30, month: 3, day: 22, leap: { length: 31, month: 3, day: 21 } },\n        2: { length: 31, month: 4, day: 21 },\n        3: { length: 31, month: 5, day: 22 },\n        4: { length: 31, month: 6, day: 22 },\n        5: { length: 31, month: 7, day: 23 },\n        6: { length: 31, month: 8, day: 23 },\n        7: { length: 30, month: 9, day: 23 },\n        8: { length: 30, month: 10, day: 23 },\n        9: { length: 30, month: 11, day: 22 },\n        10: { length: 30, month: 12, day: 22 },\n        11: { length: 30, month: 1, nextYear: true, day: 21 },\n        12: { length: 30, month: 2, nextYear: true, day: 20 }\n    },\n    getMonthInfo(calendarDate) {\n        const { month } = calendarDate;\n        let monthInfo = this.months[month];\n        if (monthInfo === undefined)\n            throw new RangeError(`Invalid month: ${month}`);\n        if (this.inLeapYear(calendarDate) && monthInfo.leap)\n            monthInfo = monthInfo.leap;\n        return monthInfo;\n    },\n    estimateIsoDate(calendarDateParam) {\n        // FYI, this \"estimate\" is always the exact ISO date, which makes the Indian\n        // calendar fast!\n        const calendarDate = this.adjustCalendarDate(calendarDateParam);\n        const monthInfo = this.getMonthInfo(calendarDate);\n        const isoYear = calendarDate.year + 78 + (monthInfo.nextYear ? 1 : 0);\n        const isoMonth = monthInfo.month;\n        const isoDay = monthInfo.day;\n        const isoDate = ES.AddISODate(isoYear, isoMonth, isoDay, 0, 0, 0, calendarDate.day - 1, 'constrain');\n        return isoDate;\n    },\n    // https://bugs.chromium.org/p/v8/issues/detail?id=10529 causes Intl's Indian\n    // calendar output to fail for all dates before 0001-01-01 ISO.  For example,\n    // in Node 12 0000-01-01 is calculated as 6146/12/-583 instead of 10/11/-79 as\n    // expected.\n    vulnerableToBceBug: new Date('0000-01-01T00:00Z').toLocaleDateString('en-US-u-ca-indian', { timeZone: 'UTC' }) !== '10/11/-79 Saka',\n    checkIcuBugs(calendarDate, isoDate) {\n        if (this.vulnerableToBceBug && isoDate.year < 1) {\n            throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 0001-01-01` +\n                ' (see https://bugs.chromium.org/p/v8/issues/detail?id=10529)');\n        }\n    }\n});\n/**\n * This function adds additional metadata that makes it easier to work with\n * eras. Note that it mutates and normalizes the original era objects, which is\n * OK because this is non-observable, internal-only metadata.\n *\n * The result is an array of eras with the shape defined above.\n * */\nfunction adjustEras(erasParam) {\n    let eras = erasParam;\n    if (eras.length === 0) {\n        throw new RangeError('Invalid era data: eras are required');\n    }\n    if (eras.length === 1 && eras[0].reverseOf) {\n        throw new RangeError('Invalid era data: anchor era cannot count years backwards');\n    }\n    if (eras.length === 1 && !eras[0].name) {\n        throw new RangeError('Invalid era data: at least one named era is required');\n    }\n    if (eras.filter((e) => e.reverseOf != null).length > 1) {\n        throw new RangeError('Invalid era data: only one era can count years backwards');\n    }\n    // Find the \"anchor era\" which is the era used for (era-less) `year`. Reversed\n    // eras can never be anchors. The era without an `anchorEpoch` property is the\n    // anchor.\n    let anchorEra;\n    eras.forEach((e) => {\n        if (e.isAnchor || (!e.anchorEpoch && !e.reverseOf)) {\n            if (anchorEra)\n                throw new RangeError('Invalid era data: cannot have multiple anchor eras');\n            anchorEra = e;\n            e.anchorEpoch = { year: e.hasYearZero ? 0 : 1 };\n        }\n        else if (!e.name) {\n            throw new RangeError('If era name is blank, it must be the anchor era');\n        }\n    });\n    // If the era name is undefined, then it's an anchor that doesn't interact\n    // with eras at all. For example, Japanese `year` is always the same as ISO\n    // `year`.  So this \"era\" is the anchor era but isn't used for era matching.\n    // Strip it from the list that's returned.\n    eras = eras.filter((e) => e.name);\n    eras.forEach((e) => {\n        // Some eras are mirror images of another era e.g. B.C. is the reverse of A.D.\n        // Replace the string-valued \"reverseOf\" property with the actual era object\n        // that's reversed.\n        const { reverseOf } = e;\n        if (reverseOf) {\n            const reversedEra = eras.find((era) => era.name === reverseOf);\n            if (reversedEra === undefined)\n                throw new RangeError(`Invalid era data: unmatched reverseOf era: ${reverseOf}`);\n            e.reverseOf = reversedEra;\n            e.anchorEpoch = reversedEra.anchorEpoch;\n            e.isoEpoch = reversedEra.isoEpoch;\n        }\n        if (e.anchorEpoch.month === undefined)\n            e.anchorEpoch.month = 1;\n        if (e.anchorEpoch.day === undefined)\n            e.anchorEpoch.day = 1;\n    });\n    // Ensure that the latest epoch is first in the array. This lets us try to\n    // match eras in index order, with the last era getting the remaining older\n    // years. Any reverse-signed era must be at the end.\n    eras.sort((e1, e2) => {\n        if (e1.reverseOf)\n            return 1;\n        if (e2.reverseOf)\n            return -1;\n        return e2.isoEpoch.year - e1.isoEpoch.year;\n    });\n    // If there's a reversed era, then the one before it must be the era that's\n    // being reversed.\n    const lastEraReversed = eras[eras.length - 1].reverseOf;\n    if (lastEraReversed) {\n        if (lastEraReversed !== eras[eras.length - 2])\n            throw new RangeError('Invalid era data: invalid reverse-sign era');\n    }\n    // Finally, add a \"genericName\" property in the format \"era{n} where `n` is\n    // zero-based index, with the oldest era being zero. This format is used by\n    // older versions of ICU data.\n    eras.forEach((e, i) => {\n        e.genericName = `era${eras.length - 1 - i}`;\n    });\n    return { eras: eras, anchorEra: (anchorEra || eras[0]) };\n}\nfunction isGregorianLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n/** Base for all Gregorian-like calendars. */\nconst makeHelperGregorian = (id, originalEras) => {\n    const { eras, anchorEra } = adjustEras(originalEras);\n    const helperGregorian = ObjectAssign({}, nonIsoHelperBase, {\n        id,\n        eras,\n        anchorEra,\n        calendarType: 'solar',\n        inLeapYear(calendarDate /*, cache */) {\n            const { year } = this.estimateIsoDate(calendarDate);\n            return isGregorianLeapYear(year);\n        },\n        monthsInYear( /* calendarDate */) {\n            return 12;\n        },\n        minimumMonthLength(calendarDate) {\n            const { month } = calendarDate;\n            if (month === 2)\n                return this.inLeapYear(calendarDate) ? 29 : 28;\n            return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31;\n        },\n        maximumMonthLength(calendarDate) {\n            return this.minimumMonthLength(calendarDate);\n        },\n        /** Fill in missing parts of the (year, era, eraYear) tuple */\n        completeEraYear(calendarDate) {\n            const checkField = (name, value) => {\n                const currentValue = calendarDate[name];\n                if (currentValue != null && currentValue != value) {\n                    throw new RangeError(`Input ${name} ${currentValue} doesn't match calculated value ${value}`);\n                }\n            };\n            const eraFromYear = (year) => {\n                let eraYear;\n                const adjustedCalendarDate = { ...calendarDate, year };\n                const matchingEra = this.eras.find((e, i) => {\n                    if (i === this.eras.length - 1) {\n                        if (e.reverseOf) {\n                            // This is a reverse-sign era (like BCE) which must be the oldest\n                            // era. Count years backwards.\n                            if (year > 0)\n                                throw new RangeError(`Signed year ${year} is invalid for era ${e.name}`);\n                            eraYear = e.anchorEpoch.year - year;\n                            return true;\n                        }\n                        // last era always gets all \"leftover\" (older than epoch) years,\n                        // so no need for a comparison like below.\n                        eraYear = year - e.anchorEpoch.year + (e.hasYearZero ? 0 : 1);\n                        return true;\n                    }\n                    const comparison = nonIsoHelperBase.compareCalendarDates(adjustedCalendarDate, e.anchorEpoch);\n                    if (comparison >= 0) {\n                        eraYear = year - e.anchorEpoch.year + (e.hasYearZero ? 0 : 1);\n                        return true;\n                    }\n                    return false;\n                });\n                if (!matchingEra)\n                    throw new RangeError(`Year ${year} was not matched by any era`);\n                return { eraYear, era: matchingEra.name };\n            };\n            let { year, eraYear, era } = calendarDate;\n            if (year != null) {\n                ({ eraYear, era } = eraFromYear(year));\n                checkField('era', era);\n                checkField('eraYear', eraYear);\n            }\n            else if (eraYear != null) {\n                const matchingEra = era === undefined ? undefined : this.eras.find((e) => e.name === era || e.genericName === era);\n                if (!matchingEra)\n                    throw new RangeError(`Era ${era} (ISO year ${eraYear}) was not matched by any era`);\n                if (eraYear < 1 && matchingEra.reverseOf) {\n                    throw new RangeError(`Years in ${era} era must be positive, not ${year}`);\n                }\n                if (matchingEra.reverseOf) {\n                    year = matchingEra.anchorEpoch.year - eraYear;\n                }\n                else {\n                    year = eraYear + matchingEra.anchorEpoch.year - (matchingEra.hasYearZero ? 0 : 1);\n                }\n                checkField('year', year);\n                // We'll accept dates where the month/day is earlier than the start of\n                // the era or after its end as long as it's in the same year. If that\n                // happens, we'll adjust the era/eraYear pair to be the correct era for\n                // the `year`.\n                ({ eraYear, era } = eraFromYear(year));\n            }\n            else {\n                throw new RangeError('Either `year` or `eraYear` and `era` are required');\n            }\n            return { ...calendarDate, year, eraYear, era };\n        },\n        adjustCalendarDate(calendarDateParam, cache, overflow /*, fromLegacyDate = false */) {\n            let calendarDate = calendarDateParam;\n            // Because this is not a lunisolar calendar, it's safe to convert monthCode to a number\n            const { month, monthCode } = calendarDate;\n            if (month === undefined)\n                calendarDate = { ...calendarDate, month: monthCodeNumberPart(monthCode) };\n            this.validateCalendarDate(calendarDate);\n            calendarDate = this.completeEraYear(calendarDate);\n            // TODO this can become `super` later.\n            calendarDate = ReflectApply(nonIsoHelperBase.adjustCalendarDate, this, [calendarDate, cache, overflow]);\n            return calendarDate;\n        },\n        estimateIsoDate(calendarDateParam) {\n            const calendarDate = this.adjustCalendarDate(calendarDateParam);\n            const { year, month, day } = calendarDate;\n            const { anchorEra } = this;\n            const isoYearEstimate = year + anchorEra.isoEpoch.year - (anchorEra.hasYearZero ? 0 : 1);\n            return ES.RegulateISODate(isoYearEstimate, month, day, 'constrain');\n        },\n        // Several calendars based on the Gregorian calendar use Julian dates (not\n        // proleptic Gregorian dates) before the Julian switchover in Oct 1582. See\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1173158.\n        v8IsVulnerableToJulianBug: new Date('+001001-01-01T00:00Z')\n            .toLocaleDateString('en-US-u-ca-japanese', { timeZone: 'UTC' })\n            .startsWith('12'),\n        calendarIsVulnerableToJulianBug: false,\n        checkIcuBugs(calendarDate, isoDate) {\n            if (this.calendarIsVulnerableToJulianBug && this.v8IsVulnerableToJulianBug) {\n                const beforeJulianSwitch = ES.CompareISODate(isoDate.year, isoDate.month, isoDate.day, 1582, 10, 15) < 0;\n                if (beforeJulianSwitch) {\n                    throw new RangeError(`calendar '${this.id}' is broken for ISO dates before 1582-10-15` +\n                        ' (see https://bugs.chromium.org/p/chromium/issues/detail?id=1173158)');\n                }\n            }\n        }\n    });\n    return helperGregorian;\n};\nconst makeHelperOrthodox = (id, originalEras) => {\n    const base = makeHelperGregorian(id, originalEras);\n    return ObjectAssign(base, {\n        inLeapYear(calendarDate /*, cache */) {\n            // Leap years happen one year before the Julian leap year. Note that this\n            // calendar is based on the Julian calendar which has a leap year every 4\n            // years, unlike the Gregorian calendar which doesn't have leap years on\n            // years divisible by 100 except years divisible by 400.\n            //\n            // Note that we're assuming that leap years in before-epoch times match\n            // how leap years are defined now. This is probably not accurate but I'm\n            // not sure how better to do it.\n            const { year } = calendarDate;\n            return (year + 1) % 4 === 0;\n        },\n        monthsInYear( /* calendarDate */) {\n            return 13;\n        },\n        minimumMonthLength(calendarDate) {\n            const { month } = calendarDate;\n            // Ethiopian/Coptic calendars have 12 30-day months and an extra 5-6 day 13th month.\n            if (month === 13)\n                return this.inLeapYear(calendarDate) ? 6 : 5;\n            return 30;\n        },\n        maximumMonthLength(calendarDate) {\n            return this.minimumMonthLength(calendarDate);\n        }\n    });\n};\n// `coptic` and `ethiopic` calendars are very similar to `ethioaa` calendar,\n// with the following differences:\n// - Coptic uses BCE-like positive numbers for years before its epoch (the other\n//   two use negative year numbers before epoch)\n// - Coptic has a different epoch date\n// - Ethiopic has an additional second era that starts at the same date as the\n//   zero era of ethioaa.\nconst helperEthioaa = makeHelperOrthodox('ethioaa', [{ name: 'era0', isoEpoch: { year: -5492, month: 7, day: 17 } }]);\nconst helperCoptic = makeHelperOrthodox('coptic', [\n    { name: 'era1', isoEpoch: { year: 284, month: 8, day: 29 } },\n    { name: 'era0', reverseOf: 'era1' }\n]);\n// Anchor is currently the older era to match ethioaa, but should it be the newer era?\n// See https://github.com/tc39/ecma402/issues/534 for discussion.\nconst helperEthiopic = makeHelperOrthodox('ethiopic', [\n    { name: 'era0', isoEpoch: { year: -5492, month: 7, day: 17 } },\n    { name: 'era1', isoEpoch: { year: 8, month: 8, day: 27 }, anchorEpoch: { year: 5501 } }\n]);\nconst helperRoc = ObjectAssign({}, makeHelperGregorian('roc', [\n    { name: 'minguo', isoEpoch: { year: 1912, month: 1, day: 1 } },\n    { name: 'before-roc', reverseOf: 'minguo' }\n]), {\n    calendarIsVulnerableToJulianBug: true\n});\nconst helperBuddhist = ObjectAssign({}, makeHelperGregorian('buddhist', [{ name: 'be', hasYearZero: true, isoEpoch: { year: -543, month: 1, day: 1 } }]), {\n    calendarIsVulnerableToJulianBug: true\n});\nconst helperGregory = ObjectAssign({}, makeHelperGregorian('gregory', [\n    { name: 'ce', isoEpoch: { year: 1, month: 1, day: 1 } },\n    { name: 'bce', reverseOf: 'ce' }\n]), {\n    reviseIntlEra(calendarDate /*, isoDate*/) {\n        let { era, eraYear } = calendarDate;\n        if (era === 'bc')\n            era = 'bce';\n        if (era === 'ad')\n            era = 'ce';\n        return { era, eraYear };\n    }\n});\nconst helperJapanese = ObjectAssign({}, \n// NOTE: Only the 5 modern eras (Meiji and later) are included. For dates\n// before Meiji 1, the `ce` and `bce` eras are used. Challenges with pre-Meiji\n// eras include:\n// - Start/end dates of older eras are not precisely defined, which is\n//   challenging given Temporal's need for precision\n// - Some era dates and/or names are disputed by historians\n// - As historical research proceeds, new eras are discovered and existing era\n//   dates are modified, leading to considerable churn which is not good for\n//   Temporal use.\n//  - The earliest era (in 645 CE) may not end up being the earliest depending\n//    on future historical scholarship\n//  - Before Meiji, Japan used a lunar (or lunisolar?) calendar but AFAIK\n//    that's not reflected in the ICU implementation.\n//\n// For more discussion: https://github.com/tc39/proposal-temporal/issues/526.\n//\n// Here's a full list of CLDR/ICU eras:\n// https://github.com/unicode-org/icu/blob/master/icu4c/source/data/locales/root.txt#L1582-L1818\n// https://github.com/unicode-org/cldr/blob/master/common/supplemental/supplementalData.xml#L4310-L4546\n//\n// NOTE: Japan started using the Gregorian calendar in 6 Meiji, replacing a\n// lunisolar calendar. So the day before January 1 of 6 Meiji (1873) was not\n// December 31, but December 2, of 5 Meiji (1872). The existing Ecma-402\n// Japanese calendar doesn't seem to take this into account, so neither do we:\n// > args = ['en-ca-u-ca-japanese', { era: 'short' }]\n// > new Date('1873-01-01T12:00').toLocaleString(...args)\n// '1 1, 6 Meiji, 12:00:00 PM'\n// > new Date('1872-12-31T12:00').toLocaleString(...args)\n// '12 31, 5 Meiji, 12:00:00 PM'\nmakeHelperGregorian('japanese', [\n    // The Japanese calendar `year` is just the ISO year, because (unlike other\n    // ICU calendars) there's no obvious \"default era\", we use the ISO year.\n    { name: 'reiwa', isoEpoch: { year: 2019, month: 5, day: 1 }, anchorEpoch: { year: 2019, month: 5, day: 1 } },\n    { name: 'heisei', isoEpoch: { year: 1989, month: 1, day: 8 }, anchorEpoch: { year: 1989, month: 1, day: 8 } },\n    { name: 'showa', isoEpoch: { year: 1926, month: 12, day: 25 }, anchorEpoch: { year: 1926, month: 12, day: 25 } },\n    { name: 'taisho', isoEpoch: { year: 1912, month: 7, day: 30 }, anchorEpoch: { year: 1912, month: 7, day: 30 } },\n    { name: 'meiji', isoEpoch: { year: 1868, month: 9, day: 8 }, anchorEpoch: { year: 1868, month: 9, day: 8 } },\n    { name: 'ce', isoEpoch: { year: 1, month: 1, day: 1 } },\n    { name: 'bce', reverseOf: 'ce' }\n]), {\n    // The last 3 Japanese eras confusingly return only one character in the\n    // default \"short\" era, so need to use the long format.\n    eraLength: 'long',\n    calendarIsVulnerableToJulianBug: true,\n    reviseIntlEra(calendarDate, isoDate) {\n        const { era, eraYear } = calendarDate;\n        const { year: isoYear } = isoDate;\n        if (this.eras.find((e) => e.name === era))\n            return { era, eraYear };\n        return isoYear < 1 ? { era: 'bce', eraYear: 1 - isoYear } : { era: 'ce', eraYear: isoYear };\n    }\n});\nconst helperChinese = ObjectAssign({}, nonIsoHelperBase, {\n    id: 'chinese',\n    calendarType: 'lunisolar',\n    inLeapYear(calendarDate, cache) {\n        const months = this.getMonthList(calendarDate.year, cache);\n        return ObjectEntries(months).length === 13;\n    },\n    monthsInYear(calendarDate, cache) {\n        return this.inLeapYear(calendarDate, cache) ? 13 : 12;\n    },\n    minimumMonthLength: ( /* calendarDate */) => 29,\n    maximumMonthLength: ( /* calendarDate */) => 30,\n    getMonthList(calendarYear, cache) {\n        if (calendarYear === undefined) {\n            throw new TypeError('Missing year');\n        }\n        const key = JSON.stringify({ func: 'getMonthList', calendarYear, id: this.id });\n        const cached = cache.get(key);\n        if (cached)\n            return cached;\n        const dateTimeFormat = this.getFormatter();\n        const getCalendarDate = (isoYear, daysPastFeb1) => {\n            const isoStringFeb1 = toUtcIsoDateString({ isoYear, isoMonth: 2, isoDay: 1 });\n            const legacyDate = new Date(isoStringFeb1);\n            // Now add the requested number of days, which may wrap to the next month.\n            legacyDate.setUTCDate(daysPastFeb1 + 1);\n            const newYearGuess = dateTimeFormat.formatToParts(legacyDate);\n            const calendarMonthString = newYearGuess.find((tv) => tv.type === 'month').value;\n            const calendarDay = +newYearGuess.find((tv) => tv.type === 'day').value;\n            let calendarYearToVerify = newYearGuess.find((tv) => tv.type === 'relatedYear');\n            if (calendarYearToVerify !== undefined) {\n                calendarYearToVerify = +calendarYearToVerify.value;\n            }\n            else {\n                // Node 12 has outdated ICU data that lacks the `relatedYear` field in the\n                // output of Intl.DateTimeFormat.formatToParts.\n                throw new RangeError(`Intl.DateTimeFormat.formatToParts lacks relatedYear in ${this.id} calendar. Try Node 14+ or modern browsers.`);\n            }\n            return { calendarMonthString, calendarDay, calendarYearToVerify };\n        };\n        // First, find a date close to Chinese New Year. Feb 17 will either be in\n        // the first month or near the end of the last month of the previous year.\n        let isoDaysDelta = 17;\n        let { calendarMonthString, calendarDay, calendarYearToVerify } = getCalendarDate(calendarYear, isoDaysDelta);\n        // If we didn't guess the first month correctly, add (almost in some months)\n        // a lunar month\n        if (calendarMonthString !== '1') {\n            isoDaysDelta += 29;\n            ({ calendarMonthString, calendarDay } = getCalendarDate(calendarYear, isoDaysDelta));\n        }\n        // Now back up to near the start of the first month, but not too near that\n        // off-by-one issues matter.\n        isoDaysDelta -= calendarDay - 5;\n        const result = {}; // TODO: type the month list result\n        let monthIndex = 1;\n        let oldCalendarDay;\n        let oldMonthString;\n        let done = false;\n        do {\n            ({ calendarMonthString, calendarDay, calendarYearToVerify } = getCalendarDate(calendarYear, isoDaysDelta));\n            if (oldCalendarDay) {\n                result[oldMonthString].daysInMonth = oldCalendarDay + 30 - calendarDay;\n            }\n            if (calendarYearToVerify !== calendarYear) {\n                done = true;\n            }\n            else {\n                result[calendarMonthString] = { monthIndex: monthIndex++ };\n                // Move to the next month. Because months are sometimes 29 days, the day of the\n                // calendar month will move forward slowly but not enough to flip over to a new\n                // month before the loop ends at 12-13 months.\n                isoDaysDelta += 30;\n            }\n            oldCalendarDay = calendarDay;\n            oldMonthString = calendarMonthString;\n        } while (!done);\n        result[oldMonthString].daysInMonth = oldCalendarDay + 30 - calendarDay;\n        cache.set(key, result);\n        return result;\n    },\n    estimateIsoDate(calendarDate) {\n        const { year, month } = calendarDate;\n        return { year, month: month >= 12 ? 12 : month + 1, day: 1 };\n    },\n    adjustCalendarDate(calendarDate, cache, overflow = 'constrain', fromLegacyDate = false) {\n        let { year, month, monthExtra, day, monthCode, eraYear } = calendarDate;\n        if (fromLegacyDate) {\n            // Legacy Date output returns a string that's an integer with an optional\n            // \"bis\" suffix used only by the Chinese/Dangi calendar to indicate a leap\n            // month. Below we'll normalize the output.\n            year = eraYear;\n            if (monthExtra && monthExtra !== 'bis')\n                throw new RangeError(`Unexpected leap month suffix: ${monthExtra}`);\n            const monthCode = buildMonthCode(month, monthExtra !== undefined);\n            const monthString = `${month}${monthExtra || ''}`;\n            const months = this.getMonthList(year, cache);\n            const monthInfo = months[monthString];\n            if (monthInfo === undefined)\n                throw new RangeError(`Unmatched month ${monthString} in Chinese year ${year}`);\n            month = monthInfo.monthIndex;\n            return { year, month, day, era: undefined, eraYear, monthCode };\n        }\n        else {\n            // When called without input coming from legacy Date output,\n            // simply ensure that all fields are present.\n            this.validateCalendarDate(calendarDate);\n            if (year === undefined)\n                year = eraYear;\n            if (eraYear === undefined)\n                eraYear = year;\n            if (month === undefined) {\n                const months = this.getMonthList(year, cache);\n                let numberPart = monthCode.replace('L', 'bis').slice(1);\n                if (numberPart[0] === '0')\n                    numberPart = numberPart.slice(1);\n                let monthInfo = months[numberPart];\n                month = monthInfo && monthInfo.monthIndex;\n                // If this leap month isn't present in this year, constrain down to the last day of the previous month.\n                if (month === undefined &&\n                    monthCode.endsWith('L') &&\n                    !['M01L', 'M12L', 'M13L'].includes(monthCode) &&\n                    overflow === 'constrain') {\n                    let withoutML = monthCode.slice(1, -1);\n                    if (withoutML[0] === '0')\n                        withoutML = withoutML.slice(1);\n                    monthInfo = months[withoutML];\n                    if (monthInfo) {\n                        ({ daysInMonth: day, monthIndex: month } = monthInfo);\n                        monthCode = buildMonthCode(withoutML);\n                    }\n                }\n                if (month === undefined) {\n                    throw new RangeError(`Unmatched month ${monthCode} in Chinese year ${year}`);\n                }\n            }\n            else if (monthCode === undefined) {\n                const months = this.getMonthList(year, cache);\n                const monthEntries = ObjectEntries(months);\n                const largestMonth = monthEntries.length;\n                if (overflow === 'reject') {\n                    ES.RejectToRange(month, 1, largestMonth);\n                    ES.RejectToRange(day, 1, this.maximumMonthLength());\n                }\n                else {\n                    month = ES.ConstrainToRange(month, 1, largestMonth);\n                    day = ES.ConstrainToRange(day, 1, this.maximumMonthLength());\n                }\n                const matchingMonthEntry = monthEntries.find(([, v]) => v.monthIndex === month);\n                if (matchingMonthEntry === undefined) {\n                    throw new RangeError(`Invalid month ${month} in Chinese year ${year}`);\n                }\n                monthCode = buildMonthCode(matchingMonthEntry[0].replace('bis', ''), matchingMonthEntry[0].indexOf('bis') !== -1);\n            }\n            else {\n                // Both month and monthCode are present. Make sure they don't conflict.\n                const months = this.getMonthList(year, cache);\n                let numberPart = monthCode.replace('L', 'bis').slice(1);\n                if (numberPart[0] === '0')\n                    numberPart = numberPart.slice(1);\n                const monthInfo = months[numberPart];\n                if (!monthInfo)\n                    throw new RangeError(`Unmatched monthCode ${monthCode} in Chinese year ${year}`);\n                if (month !== monthInfo.monthIndex) {\n                    throw new RangeError(`monthCode ${monthCode} doesn't correspond to month ${month} in Chinese year ${year}`);\n                }\n            }\n            return { ...calendarDate, year, eraYear, month, monthCode, day };\n        }\n    },\n    // All built-in calendars except Chinese/Dangi and Hebrew use an era\n    hasEra: false\n});\n// Dangi (Korean) calendar has same implementation as Chinese\nconst helperDangi = ObjectAssign({}, { ...helperChinese, id: 'dangi' });\n/**\n * Common implementation of all non-ISO calendars.\n * Per-calendar id and logic live in `id` and `helper` properties attached later.\n * This split allowed an easy separation between code that was similar between\n * ISO and non-ISO implementations vs. code that was very different.\n */\nconst nonIsoGeneralImpl = {\n    dateFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        const cache = new OneObjectCache();\n        // Intentionally alphabetical\n        const fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['day'],\n            ['era', undefined],\n            ['eraYear', undefined],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year', undefined]\n        ]);\n        const { year, month, day } = this.helper.calendarToIsoDate(fields, overflow, cache);\n        const result = ES.CreateTemporalDate(year, month, day, calendar);\n        cache.setObject(result);\n        return result;\n    },\n    yearMonthFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        const cache = new OneObjectCache();\n        // Intentionally alphabetical\n        const fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['era', undefined],\n            ['eraYear', undefined],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year', undefined]\n        ]);\n        const { year, month, day } = this.helper.calendarToIsoDate({ ...fields, day: 1 }, overflow, cache);\n        const result = ES.CreateTemporalYearMonth(year, month, calendar, /* referenceISODay = */ day);\n        cache.setObject(result);\n        return result;\n    },\n    monthDayFromFields(fieldsParam, options, calendar) {\n        const overflow = ES.ToTemporalOverflow(options);\n        // All built-in calendars require `day`, but some allow other fields to be\n        // substituted for `month`. And for lunisolar calendars, either `monthCode`\n        // or `year` must be provided because `month` is ambiguous without a year or\n        // a code.\n        const cache = new OneObjectCache();\n        const fields = ES.PrepareTemporalFields(fieldsParam, [\n            ['day'],\n            ['era', undefined],\n            ['eraYear', undefined],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['year', undefined]\n        ]);\n        const { year, month, day } = this.helper.monthDayFromFields(fields, overflow, cache);\n        // `year` is a reference year where this month/day exists in this calendar\n        const result = ES.CreateTemporalMonthDay(month, day, calendar, /* referenceISOYear = */ year);\n        cache.setObject(result);\n        return result;\n    },\n    fields(fieldsParam) {\n        let fields = fieldsParam;\n        if (fields.includes('year'))\n            fields = [...fields, 'era', 'eraYear'];\n        return fields;\n    },\n    mergeFields(fields, additionalFields) {\n        const fieldsCopy = { ...fields };\n        const additionalFieldsCopy = { ...additionalFields };\n        // era and eraYear are intentionally unused\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { month, monthCode, year, era, eraYear, ...original } = fieldsCopy;\n        const { month: newMonth, monthCode: newMonthCode, year: newYear, era: newEra, eraYear: newEraYear } = additionalFieldsCopy;\n        if (newMonth === undefined && newMonthCode === undefined) {\n            original.month = month;\n            original.monthCode = monthCode;\n        }\n        if (newYear === undefined && newEra === undefined && newEraYear === undefined) {\n            // Only `year` is needed. We don't set era and eraYear because it's\n            // possible to create a conflict for eras that start or end mid-year. See\n            // https://github.com/tc39/proposal-temporal/issues/1784.\n            original.year = year;\n        }\n        return { ...original, ...additionalFieldsCopy };\n    },\n    dateAdd(date, years, months, weeks, days, overflow, calendar) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const added = this.helper.addCalendar(calendarDate, { years, months, weeks, days }, overflow, cache);\n        const isoAdded = this.helper.calendarToIsoDate(added, 'constrain', cache);\n        const { year, month, day } = isoAdded;\n        const newTemporalObject = ES.CreateTemporalDate(year, month, day, calendar);\n        // The new object's cache starts with the cache of the old object\n        const newCache = new OneObjectCache(cache);\n        newCache.setObject(newTemporalObject);\n        return newTemporalObject;\n    },\n    dateUntil(one, two, largestUnit) {\n        const cacheOne = OneObjectCache.getCacheForObject(one);\n        const cacheTwo = OneObjectCache.getCacheForObject(two);\n        const calendarOne = this.helper.temporalToCalendarDate(one, cacheOne);\n        const calendarTwo = this.helper.temporalToCalendarDate(two, cacheTwo);\n        const result = this.helper.untilCalendar(calendarOne, calendarTwo, largestUnit, cacheOne);\n        return result;\n    },\n    year(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.year;\n    },\n    month(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.month;\n    },\n    day(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.day;\n    },\n    era(date) {\n        if (!this.helper.hasEra)\n            return undefined;\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.era;\n    },\n    eraYear(date) {\n        if (!this.helper.hasEra)\n            return undefined;\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.eraYear;\n    },\n    monthCode(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        return calendarDate.monthCode;\n    },\n    dayOfWeek(date) {\n        return impl['iso8601'].dayOfWeek(date);\n    },\n    dayOfYear(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.isoToCalendarDate(date, cache);\n        const startOfYear = this.helper.startOfCalendarYear(calendarDate);\n        const diffDays = this.helper.calendarDaysUntil(startOfYear, calendarDate, cache);\n        return diffDays + 1;\n    },\n    weekOfYear(date) {\n        return impl['iso8601'].weekOfYear(date);\n    },\n    daysInWeek(date) {\n        return impl['iso8601'].daysInWeek(date);\n    },\n    daysInMonth(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        // Easy case: if the helper knows the length without any heavy calculation.\n        const max = this.helper.maximumMonthLength(calendarDate);\n        const min = this.helper.minimumMonthLength(calendarDate);\n        if (max === min)\n            return max;\n        // The harder case is where months vary every year, e.g. islamic calendars.\n        // Find the answer by calculating the difference in days between the first\n        // day of the current month and the first day of the next month.\n        const startOfMonthCalendar = this.helper.startOfCalendarMonth(calendarDate);\n        const startOfNextMonthCalendar = this.helper.addMonthsCalendar(startOfMonthCalendar, 1, 'constrain', cache);\n        const result = this.helper.calendarDaysUntil(startOfMonthCalendar, startOfNextMonthCalendar, cache);\n        return result;\n    },\n    daysInYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const startOfYearCalendar = this.helper.startOfCalendarYear(calendarDate);\n        const startOfNextYearCalendar = this.helper.addCalendar(startOfYearCalendar, { years: 1 }, 'constrain', cache);\n        const result = this.helper.calendarDaysUntil(startOfYearCalendar, startOfNextYearCalendar, cache);\n        return result;\n    },\n    monthsInYear(date) {\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const result = this.helper.monthsInYear(calendarDate, cache);\n        return result;\n    },\n    inLeapYear(dateParam) {\n        let date = dateParam;\n        if (!HasSlot(date, ISO_YEAR))\n            date = ES.ToTemporalDate(date);\n        const cache = OneObjectCache.getCacheForObject(date);\n        const calendarDate = this.helper.temporalToCalendarDate(date, cache);\n        const result = this.helper.inLeapYear(calendarDate, cache);\n        return result;\n    }\n};\nimpl['hebrew'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperHebrew });\nimpl['islamic'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperIslamic });\n['islamic-umalqura', 'islamic-tbla', 'islamic-civil', 'islamic-rgsa', 'islamicc'].forEach((id) => {\n    impl[id] = ObjectAssign({}, nonIsoGeneralImpl, { helper: { ...helperIslamic, id } });\n});\nimpl['persian'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperPersian });\nimpl['ethiopic'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperEthiopic });\nimpl['ethioaa'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperEthioaa });\nimpl['coptic'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperCoptic });\nimpl['chinese'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperChinese });\nimpl['dangi'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperDangi });\nimpl['roc'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperRoc });\nimpl['indian'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperIndian });\nimpl['buddhist'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperBuddhist });\nimpl['japanese'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperJapanese });\nimpl['gregory'] = ObjectAssign({}, nonIsoGeneralImpl, { helper: helperGregory });\nconst BUILTIN_CALENDAR_IDS = Object.keys(impl);\nexport function IsBuiltinCalendar(id) {\n    return ArrayIncludes.call(BUILTIN_CALENDAR_IDS, id);\n}\n//# sourceMappingURL=calendar.js.map","const tzComponent = /\\.[-A-Za-z_]|\\.\\.[-A-Za-z._]{1,12}|\\.[-A-Za-z_][-A-Za-z._]{0,12}|[A-Za-z_][-A-Za-z._]{0,13}/;\nconst offsetNoCapture = /(?:[+\\u2212-][0-2][0-9](?::?[0-5][0-9](?::?[0-5][0-9](?:[.,]\\d{1,9})?)?)?)/;\nconst timeZoneID = new RegExp(`(?:(?:${tzComponent.source})(?:\\\\/(?:${tzComponent.source}))*|Etc/GMT[-+]\\\\d{1,2}|${offsetNoCapture.source})`);\nconst calComponent = /[A-Za-z0-9]{3,8}/;\nconst calendarID = new RegExp(`(?:${calComponent.source}(?:-${calComponent.source})*)`);\nconst yearpart = /(?:[+\\u2212-]\\d{6}|\\d{4})/;\nconst monthpart = /(?:0[1-9]|1[0-2])/;\nconst daypart = /(?:0[1-9]|[12]\\d|3[01])/;\nconst datesplit = new RegExp(`(${yearpart.source})(?:-(${monthpart.source})-(${daypart.source})|(${monthpart.source})(${daypart.source}))`);\nconst timesplit = /(\\d{2})(?::(\\d{2})(?::(\\d{2})(?:[.,](\\d{1,9}))?)?|(\\d{2})(?:(\\d{2})(?:[.,](\\d{1,9}))?)?)?/;\nexport const offset = /([+\\u2212-])([01][0-9]|2[0-3])(?::?([0-5][0-9])(?::?([0-5][0-9])(?:[.,](\\d{1,9}))?)?)?/;\nconst zonesplit = new RegExp(`(?:([zZ])|(?:${offset.source})?)(?:\\\\[(${timeZoneID.source})\\\\])?`);\nconst calendar = new RegExp(`\\\\[u-ca=(${calendarID.source})\\\\]`);\nexport const instant = new RegExp(`^${datesplit.source}(?:(?:T|\\\\s+)${timesplit.source})?${zonesplit.source}(?:${calendar.source})?$`, 'i');\nexport const datetime = new RegExp(`^${datesplit.source}(?:(?:T|\\\\s+)${timesplit.source})?(?:${zonesplit.source})?(?:${calendar.source})?$`, 'i');\nexport const time = new RegExp(`^${timesplit.source}(?:${zonesplit.source})?(?:${calendar.source})?$`, 'i');\n// The short forms of YearMonth and MonthDay are only for the ISO calendar.\n// Non-ISO calendar YearMonth and MonthDay have to parse as a Temporal.PlainDate,\n// with the reference fields.\n// YYYYMM forbidden by ISO 8601, but since it is not ambiguous with anything\n// else we could parse in a YearMonth context, we allow it\nexport const yearmonth = new RegExp(`^(${yearpart.source})-?(${monthpart.source})$`);\nexport const monthday = new RegExp(`^(?:--)?(${monthpart.source})-?(${daypart.source})$`);\nconst fraction = /(\\d+)(?:[.,](\\d{1,9}))?/;\nconst durationDate = /(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?/;\nconst durationTime = new RegExp(`(?:${fraction.source}H)?(?:${fraction.source}M)?(?:${fraction.source}S)?`);\nexport const duration = new RegExp(`^([+\\u2212-])?P${durationDate.source}(?:T(?!$)${durationTime.source})?$`, 'i');\n//# sourceMappingURL=regex.js.map","const ArrayPrototypePush = Array.prototype.push;\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst MathMin = Math.min;\nconst MathMax = Math.max;\nconst MathAbs = Math.abs;\nconst MathFloor = Math.floor;\nconst MathSign = Math.sign;\nconst MathTrunc = Math.trunc;\nconst NumberIsNaN = Number.isNaN;\nconst NumberIsFinite = Number.isFinite;\nconst NumberCtor = Number;\nconst StringCtor = String;\nconst NumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nconst ObjectCreate = Object.create;\nconst ObjectDefineProperty = Object.defineProperty;\nconst ObjectIs = Object.is;\nconst ReflectApply = Reflect.apply;\nimport { DEBUG } from './debug';\nimport bigInt from 'big-integer';\nimport { GetIntrinsic } from './intrinsicclass';\nimport { CreateSlots, GetSlot, HasSlot, SetSlot, EPOCHNANOSECONDS, TIMEZONE_ID, CALENDAR_ID, INSTANT, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, DATE_BRAND, YEAR_MONTH_BRAND, MONTH_DAY_BRAND, TIME_ZONE, CALENDAR, YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS } from './slots';\nimport { IsBuiltinCalendar } from './calendar';\nconst DAY_SECONDS = 86400;\nconst DAY_NANOS = bigInt(DAY_SECONDS).multiply(1e9);\nconst NS_MIN = bigInt(-DAY_SECONDS).multiply(1e17);\nconst NS_MAX = bigInt(DAY_SECONDS).multiply(1e17);\nconst YEAR_MIN = -271821;\nconst YEAR_MAX = 275760;\nconst BEFORE_FIRST_DST = bigInt(-388152).multiply(1e13); // 1847-01-01T00:00:00Z\nfunction IsInteger(value) {\n    if (typeof value !== 'number' || !NumberIsFinite(value))\n        return false;\n    const abs = MathAbs(value);\n    return MathFloor(abs) === abs;\n}\nexport function IsObject(value) {\n    return (typeof value === 'object' && value !== null) || typeof value === 'function';\n}\nexport function ToNumber(value) {\n    if (typeof value === 'bigint')\n        throw new TypeError('Cannot convert BigInt to number');\n    return NumberCtor(value);\n}\nfunction ToInteger(value) {\n    const num = ToNumber(value);\n    if (NumberIsNaN(num))\n        return 0;\n    const integer = MathTrunc(num);\n    if (num === 0)\n        return 0;\n    return integer;\n}\nexport function ToString(value) {\n    if (typeof value === 'symbol') {\n        throw new TypeError('Cannot convert a Symbol value to a String');\n    }\n    return StringCtor(value);\n}\nexport function ToIntegerThrowOnInfinity(value) {\n    const integer = ToInteger(value);\n    if (!NumberIsFinite(integer)) {\n        throw new RangeError('infinity is out of range');\n    }\n    return integer;\n}\nexport function ToPositiveInteger(valueParam, property) {\n    const value = ToInteger(valueParam);\n    if (!NumberIsFinite(value)) {\n        throw new RangeError('infinity is out of range');\n    }\n    if (value < 1) {\n        if (property !== undefined) {\n            throw new RangeError(`property '${property}' cannot be a a number less than one`);\n        }\n        throw new RangeError('Cannot convert a number less than one to a positive integer');\n    }\n    return value;\n}\nexport function ToIntegerWithoutRounding(valueParam) {\n    const value = ToNumber(valueParam);\n    if (NumberIsNaN(value))\n        return 0;\n    if (!NumberIsFinite(value)) {\n        throw new RangeError('infinity is out of range');\n    }\n    if (!IsInteger(value)) {\n        throw new RangeError(`unsupported fractional value ${value}`);\n    }\n    return ToInteger(value); // ℝ(value) in spec text; converts -0 to 0\n}\nconst BUILTIN_CASTS = new Map([\n    ['year', ToIntegerThrowOnInfinity],\n    ['month', ToPositiveInteger],\n    ['monthCode', ToString],\n    ['day', ToPositiveInteger],\n    ['hour', ToIntegerThrowOnInfinity],\n    ['minute', ToIntegerThrowOnInfinity],\n    ['second', ToIntegerThrowOnInfinity],\n    ['millisecond', ToIntegerThrowOnInfinity],\n    ['microsecond', ToIntegerThrowOnInfinity],\n    ['nanosecond', ToIntegerThrowOnInfinity],\n    ['years', ToIntegerWithoutRounding],\n    ['months', ToIntegerWithoutRounding],\n    ['weeks', ToIntegerWithoutRounding],\n    ['days', ToIntegerWithoutRounding],\n    ['hours', ToIntegerWithoutRounding],\n    ['minutes', ToIntegerWithoutRounding],\n    ['seconds', ToIntegerWithoutRounding],\n    ['milliseconds', ToIntegerWithoutRounding],\n    ['microseconds', ToIntegerWithoutRounding],\n    ['nanoseconds', ToIntegerWithoutRounding],\n    ['era', ToString],\n    ['eraYear', ToInteger],\n    ['offset', ToString]\n]);\nconst ALLOWED_UNITS = [\n    'year',\n    'month',\n    'week',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'millisecond',\n    'microsecond',\n    'nanosecond'\n];\nconst SINGULAR_PLURAL_UNITS = [\n    ['years', 'year'],\n    ['months', 'month'],\n    ['weeks', 'week'],\n    ['days', 'day'],\n    ['hours', 'hour'],\n    ['minutes', 'minute'],\n    ['seconds', 'second'],\n    ['milliseconds', 'millisecond'],\n    ['microseconds', 'microsecond'],\n    ['nanoseconds', 'nanosecond']\n];\nimport * as PARSE from './regex';\nconst IntlDateTimeFormatEnUsCache = new Map();\nfunction getIntlDateTimeFormatEnUsForTimeZone(timeZoneIdentifier) {\n    let instance = IntlDateTimeFormatEnUsCache.get(timeZoneIdentifier);\n    if (instance === undefined) {\n        instance = new IntlDateTimeFormat('en-us', {\n            timeZone: StringCtor(timeZoneIdentifier),\n            hour12: false,\n            era: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n        IntlDateTimeFormatEnUsCache.set(timeZoneIdentifier, instance);\n    }\n    return instance;\n}\nexport function IsTemporalInstant(item) {\n    return HasSlot(item, EPOCHNANOSECONDS) && !HasSlot(item, TIME_ZONE, CALENDAR);\n}\nexport function IsTemporalTimeZone(item) {\n    return HasSlot(item, TIMEZONE_ID);\n}\nexport function IsTemporalCalendar(item) {\n    return HasSlot(item, CALENDAR_ID);\n}\nexport function IsTemporalDuration(item) {\n    return HasSlot(item, YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS);\n}\nexport function IsTemporalDate(item) {\n    return HasSlot(item, DATE_BRAND);\n}\nexport function IsTemporalTime(item) {\n    return (HasSlot(item, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND) &&\n        !HasSlot(item, ISO_YEAR, ISO_MONTH, ISO_DAY));\n}\nexport function IsTemporalDateTime(item) {\n    return HasSlot(item, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND);\n}\nexport function IsTemporalYearMonth(item) {\n    return HasSlot(item, YEAR_MONTH_BRAND);\n}\nexport function IsTemporalMonthDay(item) {\n    return HasSlot(item, MONTH_DAY_BRAND);\n}\nexport function IsTemporalZonedDateTime(item) {\n    return HasSlot(item, EPOCHNANOSECONDS, TIME_ZONE, CALENDAR);\n}\nexport function RejectObjectWithCalendarOrTimeZone(item) {\n    if (HasSlot(item, CALENDAR) || HasSlot(item, TIME_ZONE)) {\n        throw new TypeError('with() does not support a calendar or timeZone property');\n    }\n    if (item.calendar !== undefined) {\n        throw new TypeError('with() does not support a calendar property');\n    }\n    if (item.timeZone !== undefined) {\n        throw new TypeError('with() does not support a timeZone property');\n    }\n}\nfunction ParseTemporalTimeZone(stringIdent) {\n    // TODO: why aren't these three variables destructured to include `undefined` as possible types?\n    let { ianaName, offset, z } = ParseTemporalTimeZoneString(stringIdent);\n    if (ianaName)\n        return ianaName;\n    if (z)\n        return 'UTC';\n    return offset;\n}\nfunction FormatCalendarAnnotation(id, showCalendar) {\n    if (showCalendar === 'never')\n        return '';\n    if (showCalendar === 'auto' && id === 'iso8601')\n        return '';\n    return `[u-ca=${id}]`;\n}\nfunction ParseISODateTime(isoString, { zoneRequired }) {\n    const regex = zoneRequired ? PARSE.instant : PARSE.datetime;\n    const match = regex.exec(isoString);\n    if (!match)\n        throw new RangeError(`invalid ISO 8601 string: ${isoString}`);\n    let yearString = match[1];\n    if (yearString[0] === '\\u2212')\n        yearString = `-${yearString.slice(1)}`;\n    const year = ToInteger(yearString);\n    const month = ToInteger(match[2] || match[4]);\n    const day = ToInteger(match[3] || match[5]);\n    const hour = ToInteger(match[6]);\n    const minute = ToInteger(match[7] || match[10]);\n    let second = ToInteger(match[8] || match[11]);\n    if (second === 60)\n        second = 59;\n    const fraction = (match[9] || match[12]) + '000000000';\n    const millisecond = ToInteger(fraction.slice(0, 3));\n    const microsecond = ToInteger(fraction.slice(3, 6));\n    const nanosecond = ToInteger(fraction.slice(6, 9));\n    let offset;\n    let z = false;\n    if (match[13]) {\n        offset = undefined;\n        z = true;\n    }\n    else if (match[14] && match[15]) {\n        const offsetSign = match[14] === '-' || match[14] === '\\u2212' ? '-' : '+';\n        const offsetHours = match[15] || '00';\n        const offsetMinutes = match[16] || '00';\n        const offsetSeconds = match[17] || '00';\n        let offsetFraction = match[18] || '0';\n        offset = `${offsetSign}${offsetHours}:${offsetMinutes}`;\n        if (+offsetFraction) {\n            while (offsetFraction.endsWith('0'))\n                offsetFraction = offsetFraction.slice(0, -1);\n            offset += `:${offsetSeconds}.${offsetFraction}`;\n        }\n        else if (+offsetSeconds) {\n            offset += `:${offsetSeconds}`;\n        }\n        if (offset === '-00:00')\n            offset = '+00:00';\n    }\n    let ianaName = match[19];\n    if (ianaName) {\n        try {\n            // Canonicalize name if it is an IANA link name or is capitalized wrong\n            ianaName = GetCanonicalTimeZoneIdentifier(ianaName).toString();\n        }\n        catch {\n            // Not an IANA name, may be a custom ID, pass through unchanged\n        }\n    }\n    const calendar = match[20];\n    return {\n        year,\n        month,\n        day,\n        hour,\n        minute,\n        second,\n        millisecond,\n        microsecond,\n        nanosecond,\n        ianaName,\n        offset,\n        z,\n        calendar\n    };\n}\nfunction ParseTemporalInstantString(isoString) {\n    return ParseISODateTime(isoString, { zoneRequired: true });\n}\nfunction ParseTemporalZonedDateTimeString(isoString) {\n    return ParseISODateTime(isoString, { zoneRequired: true });\n}\nfunction ParseTemporalDateTimeString(isoString) {\n    return ParseISODateTime(isoString, { zoneRequired: false });\n}\nfunction ParseTemporalDateString(isoString) {\n    return ParseISODateTime(isoString, { zoneRequired: false });\n}\nfunction ParseTemporalTimeString(isoString) {\n    const match = PARSE.time.exec(isoString);\n    let hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (match) {\n        hour = ToInteger(match[1]);\n        minute = ToInteger(match[2] || match[5]);\n        second = ToInteger(match[3] || match[6]);\n        if (second === 60)\n            second = 59;\n        const fraction = (match[4] || match[7]) + '000000000';\n        millisecond = ToInteger(fraction.slice(0, 3));\n        microsecond = ToInteger(fraction.slice(3, 6));\n        nanosecond = ToInteger(fraction.slice(6, 9));\n        calendar = match[15];\n    }\n    else {\n        let z;\n        ({ hour, minute, second, millisecond, microsecond, nanosecond, calendar, z } = ParseISODateTime(isoString, {\n            zoneRequired: false\n        }));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainTime');\n    }\n    return { hour, minute, second, millisecond, microsecond, nanosecond, calendar };\n}\nfunction ParseTemporalYearMonthString(isoString) {\n    const match = PARSE.yearmonth.exec(isoString);\n    let year, month, calendar, referenceISODay;\n    if (match) {\n        let yearString = match[1];\n        if (yearString[0] === '\\u2212')\n            yearString = `-${yearString.slice(1)}`;\n        year = ToInteger(yearString);\n        month = ToInteger(match[2]);\n        calendar = match[3];\n    }\n    else {\n        let z;\n        ({ year, month, calendar, day: referenceISODay, z } = ParseISODateTime(isoString, { zoneRequired: false }));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainYearMonth');\n    }\n    return { year, month, calendar, referenceISODay };\n}\nfunction ParseTemporalMonthDayString(isoString) {\n    const match = PARSE.monthday.exec(isoString);\n    let month, day, calendar, referenceISOYear;\n    if (match) {\n        month = ToInteger(match[1]);\n        day = ToInteger(match[2]);\n    }\n    else {\n        let z;\n        ({ month, day, calendar, year: referenceISOYear, z } = ParseISODateTime(isoString, { zoneRequired: false }));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainMonthDay');\n    }\n    return { month, day, calendar, referenceISOYear };\n}\nfunction ParseTemporalTimeZoneString(stringIdent) {\n    try {\n        let canonicalIdent = GetCanonicalTimeZoneIdentifier(stringIdent);\n        if (canonicalIdent) {\n            canonicalIdent = canonicalIdent.toString();\n            if (ParseOffsetString(canonicalIdent) !== null)\n                return { offset: canonicalIdent };\n            return { ianaName: canonicalIdent };\n        }\n    }\n    catch {\n        // fall through\n    }\n    try {\n        // Try parsing ISO string instead\n        return ParseISODateTime(stringIdent, { zoneRequired: true });\n    }\n    catch {\n        throw new RangeError(`Invalid time zone: ${stringIdent}`);\n    }\n}\nfunction ParseTemporalDurationString(isoString) {\n    const match = PARSE.duration.exec(isoString);\n    if (!match)\n        throw new RangeError(`invalid duration: ${isoString}`);\n    if (match.slice(2).every((element) => element === undefined)) {\n        throw new RangeError(`invalid duration: ${isoString}`);\n    }\n    const sign = match[1] === '-' || match[1] === '\\u2212' ? -1 : 1;\n    const years = ToInteger(match[2]) * sign;\n    const months = ToInteger(match[3]) * sign;\n    const weeks = ToInteger(match[4]) * sign;\n    const days = ToInteger(match[5]) * sign;\n    const hours = ToInteger(match[6]) * sign;\n    let fHours = match[7];\n    let minutes = ToInteger(match[8]) * sign;\n    let fMinutes = match[9];\n    let seconds = ToInteger(match[10]) * sign;\n    const fSeconds = match[11] + '000000000';\n    let milliseconds = ToInteger(fSeconds.slice(0, 3)) * sign;\n    let microseconds = ToInteger(fSeconds.slice(3, 6)) * sign;\n    let nanoseconds = ToInteger(fSeconds.slice(6, 9)) * sign;\n    fHours = fHours ? (sign * ToInteger(fHours)) / 10 ** fHours.length : 0;\n    fMinutes = fMinutes ? (sign * ToInteger(fMinutes)) / 10 ** fMinutes.length : 0;\n    ({ minutes, seconds, milliseconds, microseconds, nanoseconds } = DurationHandleFractions(fHours, minutes, fMinutes, seconds, milliseconds, microseconds, nanoseconds));\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction ParseTemporalInstant(isoString) {\n    const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offset, z } = ParseTemporalInstantString(isoString);\n    const epochNs = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (epochNs === null)\n        throw new RangeError('DateTime outside of supported range');\n    if (!z && !offset)\n        throw new RangeError('Temporal.Instant requires a time zone offset');\n    const offsetNs = z ? 0 : ParseOffsetString(offset);\n    return epochNs.subtract(offsetNs);\n}\nexport function RegulateISODate(yearParam, monthParam, dayParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    switch (overflow) {\n        case 'reject':\n            RejectISODate(year, month, day);\n            break;\n        case 'constrain':\n            ({ year, month, day } = ConstrainISODate(year, month, day));\n            break;\n    }\n    return { year, month, day };\n}\nexport function RegulateTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, overflow) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    switch (overflow) {\n        case 'reject':\n            RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n            break;\n        case 'constrain':\n            ({ hour, minute, second, millisecond, microsecond, nanosecond } = ConstrainTime(hour, minute, second, millisecond, microsecond, nanosecond));\n            break;\n    }\n    return { hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RegulateISOYearMonth(yearParam, monthParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    const referenceISODay = 1;\n    switch (overflow) {\n        case 'reject':\n            RejectISODate(year, month, referenceISODay);\n            break;\n        case 'constrain':\n            ({ year, month } = ConstrainISODate(year, month));\n            break;\n    }\n    return { year, month };\n}\nfunction DurationHandleFractions(fHoursParam, minutesParam, fMinutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam) {\n    let fHours = fHoursParam;\n    let minutes = minutesParam;\n    let fMinutes = fMinutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = nanosecondsParam;\n    if (fHours !== 0) {\n        [minutes, fMinutes, seconds, milliseconds, microseconds, nanoseconds].forEach((val) => {\n            if (val !== 0)\n                throw new RangeError('only the smallest unit can be fractional');\n        });\n        const mins = fHours * 60;\n        minutes = MathTrunc(mins);\n        fMinutes = mins % 1;\n    }\n    if (fMinutes !== 0) {\n        [seconds, milliseconds, microseconds, nanoseconds].forEach((val) => {\n            if (val !== 0)\n                throw new RangeError('only the smallest unit can be fractional');\n        });\n        const secs = fMinutes * 60;\n        seconds = MathTrunc(secs);\n        const fSeconds = secs % 1;\n        if (fSeconds !== 0) {\n            const mils = fSeconds * 1000;\n            milliseconds = MathTrunc(mils);\n            const fMilliseconds = mils % 1;\n            if (fMilliseconds !== 0) {\n                const mics = fMilliseconds * 1000;\n                microseconds = MathTrunc(mics);\n                const fMicroseconds = mics % 1;\n                if (fMicroseconds !== 0) {\n                    const nans = fMicroseconds * 1000;\n                    nanoseconds = MathTrunc(nans);\n                }\n            }\n        }\n    }\n    return { minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nfunction ToTemporalDurationRecord(item) {\n    if (IsTemporalDuration(item)) {\n        return {\n            years: GetSlot(item, YEARS),\n            months: GetSlot(item, MONTHS),\n            weeks: GetSlot(item, WEEKS),\n            days: GetSlot(item, DAYS),\n            hours: GetSlot(item, HOURS),\n            minutes: GetSlot(item, MINUTES),\n            seconds: GetSlot(item, SECONDS),\n            milliseconds: GetSlot(item, MILLISECONDS),\n            microseconds: GetSlot(item, MICROSECONDS),\n            nanoseconds: GetSlot(item, NANOSECONDS)\n        };\n    }\n    const props = ToPartialRecord(item, [\n        'days',\n        'hours',\n        'microseconds',\n        'milliseconds',\n        'minutes',\n        'months',\n        'nanoseconds',\n        'seconds',\n        'weeks',\n        'years'\n    ]);\n    if (!props)\n        throw new TypeError('invalid duration-like');\n    const { years = 0, months = 0, weeks = 0, days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0, microseconds = 0, nanoseconds = 0 } = props;\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function ToLimitedTemporalDuration(item, disallowedProperties = []) {\n    let record;\n    if (IsObject(item)) {\n        record = ToTemporalDurationRecord(item);\n    }\n    else {\n        const str = ToString(item);\n        record = ParseTemporalDurationString(str);\n    }\n    const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = record;\n    RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    for (const property of disallowedProperties) {\n        if (record[property] !== 0) {\n            throw new RangeError(`Duration field ${property} not supported by Temporal.Instant. Try Temporal.ZonedDateTime instead.`);\n        }\n    }\n    return record;\n}\nexport function ToTemporalOverflow(options) {\n    return GetOption(options, 'overflow', ['constrain', 'reject'], 'constrain');\n}\nexport function ToTemporalDisambiguation(options) {\n    return GetOption(options, 'disambiguation', ['compatible', 'earlier', 'later', 'reject'], 'compatible');\n}\nexport function ToTemporalRoundingMode(options, fallback) {\n    return GetOption(options, 'roundingMode', ['ceil', 'floor', 'trunc', 'halfExpand'], fallback);\n}\nexport function NegateTemporalRoundingMode(roundingMode) {\n    switch (roundingMode) {\n        case 'ceil':\n            return 'floor';\n        case 'floor':\n            return 'ceil';\n        default:\n            return roundingMode;\n    }\n}\nexport function ToTemporalOffset(options, fallback) {\n    return GetOption(options, 'offset', ['prefer', 'use', 'ignore', 'reject'], fallback);\n}\nexport function ToShowCalendarOption(options) {\n    return GetOption(options, 'calendarName', ['auto', 'always', 'never'], 'auto');\n}\nexport function ToShowTimeZoneNameOption(options) {\n    return GetOption(options, 'timeZoneName', ['auto', 'never'], 'auto');\n}\nexport function ToShowOffsetOption(options) {\n    return GetOption(options, 'offset', ['auto', 'never'], 'auto');\n}\nexport function ToTemporalRoundingIncrement(options, dividend, inclusive) {\n    let maximum = Infinity;\n    if (dividend !== undefined)\n        maximum = dividend;\n    if (!inclusive && dividend !== undefined)\n        maximum = dividend > 1 ? dividend - 1 : 1;\n    const increment = GetNumberOption(options, 'roundingIncrement', 1, maximum, 1);\n    if (dividend !== undefined && dividend % increment !== 0) {\n        throw new RangeError(`Rounding increment must divide evenly into ${dividend}`);\n    }\n    return increment;\n}\nexport function ToTemporalDateTimeRoundingIncrement(options, smallestUnit) {\n    const maximumIncrements = {\n        year: undefined,\n        month: undefined,\n        week: undefined,\n        day: undefined,\n        hour: 24,\n        minute: 60,\n        second: 60,\n        millisecond: 1000,\n        microsecond: 1000,\n        nanosecond: 1000\n    };\n    return ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n}\nexport function ToSecondsStringPrecision(options) {\n    const smallestUnit = ToSmallestTemporalUnit(options, undefined, ['year', 'month', 'week', 'day', 'hour']);\n    switch (smallestUnit) {\n        case 'minute':\n            return { precision: 'minute', unit: 'minute', increment: 1 };\n        case 'second':\n            return { precision: 0, unit: 'second', increment: 1 };\n        case 'millisecond':\n            return { precision: 3, unit: 'millisecond', increment: 1 };\n        case 'microsecond':\n            return { precision: 6, unit: 'microsecond', increment: 1 };\n        case 'nanosecond':\n            return { precision: 9, unit: 'nanosecond', increment: 1 };\n        default: // fall through if option not given\n    }\n    let digits = options.fractionalSecondDigits;\n    if (digits === undefined)\n        digits = 'auto';\n    if (typeof digits !== 'number') {\n        const stringDigits = ToString(digits);\n        if (stringDigits === 'auto')\n            return { precision: 'auto', unit: 'nanosecond', increment: 1 };\n        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${stringDigits}`);\n    }\n    if (NumberIsNaN(digits) || digits < 0 || digits > 9) {\n        throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${digits}`);\n    }\n    const precision = MathFloor(digits);\n    switch (precision) {\n        case 0:\n            return { precision, unit: 'second', increment: 1 };\n        case 1:\n        case 2:\n        case 3:\n            return { precision, unit: 'millisecond', increment: 10 ** (3 - precision) };\n        case 4:\n        case 5:\n        case 6:\n            return { precision, unit: 'microsecond', increment: 10 ** (6 - precision) };\n        case 7:\n        case 8:\n        case 9:\n            return { precision, unit: 'nanosecond', increment: 10 ** (9 - precision) };\n        default:\n            throw new RangeError(`fractionalSecondDigits must be 'auto' or 0 through 9, not ${digits}`);\n    }\n}\nexport function ToLargestTemporalUnit(options, fallback, disallowedStrings = [], autoValue) {\n    const singular = new Map(SINGULAR_PLURAL_UNITS.filter(([, sing]) => !disallowedStrings.includes(sing)));\n    const allowed = new Set(ALLOWED_UNITS);\n    for (const s of disallowedStrings) {\n        allowed.delete(s);\n    }\n    const retval = GetOption(options, 'largestUnit', ['auto', ...allowed, ...singular.keys()], fallback);\n    if (retval === 'auto' && autoValue !== undefined)\n        return autoValue;\n    if (singular.has(retval)) {\n        return singular.get(retval);\n    }\n    return retval;\n}\nexport function ToSmallestTemporalUnit(options, fallback, disallowedStrings = []) {\n    const singular = new Map(SINGULAR_PLURAL_UNITS.filter(([, sing]) => !disallowedStrings.includes(sing)));\n    const allowed = new Set(ALLOWED_UNITS);\n    for (const s of disallowedStrings) {\n        allowed.delete(s);\n    }\n    const value = GetOption(options, 'smallestUnit', [...allowed, ...singular.keys()], fallback);\n    if (singular.has(value))\n        return singular.get(value);\n    return value;\n}\nexport function ToTemporalDurationTotalUnit(options) {\n    // This AO is identical to ToSmallestTemporalUnit, except:\n    // - default is always `undefined` (caller will throw if omitted)\n    // - option is named `unit` (not `smallestUnit`)\n    // - all units are valid (no `disallowedStrings`)\n    const singular = new Map(SINGULAR_PLURAL_UNITS);\n    const value = GetOption(options, 'unit', [...singular.values(), ...singular.keys()], undefined);\n    if (singular.has(value)) {\n        return singular.get(value);\n    }\n    return value;\n}\nexport function ToRelativeTemporalObject(options) {\n    const relativeTo = options.relativeTo;\n    // TODO: `as undefined` below should not be needed.  Verify that it can be\n    // removed after strictNullChecks is enabled.\n    if (relativeTo === undefined)\n        return relativeTo;\n    let offsetBehaviour = 'option';\n    let matchMinutes = false;\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, timeZone, offset;\n    if (IsObject(relativeTo)) {\n        if (IsTemporalZonedDateTime(relativeTo) || IsTemporalDate(relativeTo))\n            return relativeTo;\n        if (IsTemporalDateTime(relativeTo))\n            return TemporalDateTimeToDate(relativeTo);\n        calendar = GetTemporalCalendarWithISODefault(relativeTo);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fields = ToTemporalDateTimeFields(relativeTo, fieldNames);\n        const dateOptions = ObjectCreate(null);\n        dateOptions.overflow = 'constrain';\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, dateOptions));\n        // The `offset` and `timeZone` properties only exist on ZonedDateTime (or\n        // ZonedDateTimeLike-property bags). The assertions below are used to avoid\n        // TS errors while not diverging runtime code from proposal-temporal.\n        offset = relativeTo.offset;\n        if (offset === undefined)\n            offsetBehaviour = 'wall';\n        timeZone = relativeTo.timeZone;\n    }\n    else {\n        let ianaName, z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, ianaName, offset, z } =\n            ParseISODateTime(ToString(relativeTo), { zoneRequired: false }));\n        if (ianaName)\n            timeZone = ianaName;\n        if (z) {\n            offsetBehaviour = 'exact';\n        }\n        else if (!offset) {\n            offsetBehaviour = 'wall';\n        }\n        if (!calendar)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n        matchMinutes = true;\n    }\n    if (timeZone) {\n        timeZone = ToTemporalTimeZone(timeZone);\n        let offsetNs = 0;\n        if (offsetBehaviour === 'option')\n            offsetNs = ParseOffsetString(ToString(offset));\n        const epochNanoseconds = InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, 'compatible', 'reject', matchMinutes);\n        return CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n    }\n    return CreateTemporalDate(year, month, day, calendar);\n}\nexport function ValidateTemporalUnitRange(largestUnit, smallestUnit) {\n    if (ALLOWED_UNITS.indexOf(largestUnit) > ALLOWED_UNITS.indexOf(smallestUnit)) {\n        throw new RangeError(`largestUnit ${largestUnit} cannot be smaller than smallestUnit ${smallestUnit}`);\n    }\n}\nexport function DefaultTemporalLargestUnit(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds) {\n    const singular = new Map(SINGULAR_PLURAL_UNITS);\n    for (const [prop, v] of [\n        ['years', years],\n        ['months', months],\n        ['weeks', weeks],\n        ['days', days],\n        ['hours', hours],\n        ['minutes', minutes],\n        ['seconds', seconds],\n        ['milliseconds', milliseconds],\n        ['microseconds', microseconds],\n        ['nanoseconds', nanoseconds]\n    ]) {\n        if (v !== 0)\n            return singular.get(prop);\n    }\n    return 'nanosecond';\n}\nexport function LargerOfTwoTemporalUnits(unit1, unit2) {\n    if (ALLOWED_UNITS.indexOf(unit1) > ALLOWED_UNITS.indexOf(unit2))\n        return unit2;\n    return unit1;\n}\nexport function ToPartialRecord(bag, fields, callerCast) {\n    if (!IsObject(bag))\n        return false;\n    let any;\n    for (const property of fields) {\n        const value = bag[property];\n        if (value !== undefined) {\n            any = any || {};\n            if (callerCast === undefined && BUILTIN_CASTS.has(property)) {\n                any[property] = BUILTIN_CASTS.get(property)(value);\n            }\n            else if (callerCast !== undefined) {\n                any[property] = callerCast(value);\n            }\n            else {\n                any[property] = value;\n            }\n        }\n    }\n    return any ? any : false;\n}\nexport function PrepareTemporalFields(bag, fields) {\n    if (!IsObject(bag))\n        return undefined;\n    const result = {};\n    let any = false;\n    for (const fieldRecord of fields) {\n        const [property, defaultValue] = fieldRecord;\n        let value = bag[property];\n        if (value === undefined) {\n            if (fieldRecord.length === 1) {\n                throw new TypeError(`required property '${property}' missing or undefined`);\n            }\n            // TODO: two TS issues here:\n            // 1. `undefined` was stripped from the type of `defaultValue`. Will it\n            //    come back when strictNullChecks is enabled?\n            // 2. Can types be improved to remove the need for the type assertion?\n            value = defaultValue;\n        }\n        else {\n            any = true;\n            if (BUILTIN_CASTS.has(property)) {\n                value = BUILTIN_CASTS.get(property)(value);\n            }\n        }\n        result[property] = value;\n    }\n    if (!any) {\n        throw new TypeError('no supported properties found');\n    }\n    if ((result['era'] === undefined) !==\n        (result['eraYear'] === undefined)) {\n        throw new RangeError(\"properties 'era' and 'eraYear' must be provided together\");\n    }\n    return result;\n}\n// field access in the following operations is intentionally alphabetical\nexport function ToTemporalDateFields(bag, fieldNames) {\n    const entries = [\n        ['day', undefined],\n        ['month', undefined],\n        ['monthCode', undefined],\n        ['year', undefined]\n    ];\n    // Add extra fields from the calendar at the end\n    fieldNames.forEach((fieldName) => {\n        if (!entries.some(([name]) => name === fieldName)) {\n            entries.push([fieldName, undefined]);\n        }\n    });\n    return PrepareTemporalFields(bag, entries);\n}\nexport function ToTemporalDateTimeFields(bag, fieldNames) {\n    const entries = [\n        ['day', undefined],\n        ['hour', 0],\n        ['microsecond', 0],\n        ['millisecond', 0],\n        ['minute', 0],\n        ['month', undefined],\n        ['monthCode', undefined],\n        ['nanosecond', 0],\n        ['second', 0],\n        ['year', undefined]\n    ];\n    // Add extra fields from the calendar at the end\n    fieldNames.forEach((fieldName) => {\n        if (!entries.some(([name]) => name === fieldName)) {\n            entries.push([fieldName, undefined]);\n        }\n    });\n    return PrepareTemporalFields(bag, entries);\n}\nexport function ToTemporalMonthDayFields(bag, fieldNames) {\n    const entries = [\n        ['day', undefined],\n        ['month', undefined],\n        ['monthCode', undefined],\n        ['year', undefined]\n    ];\n    // Add extra fields from the calendar at the end\n    fieldNames.forEach((fieldName) => {\n        if (!entries.some(([name]) => name === fieldName)) {\n            entries.push([fieldName, undefined]);\n        }\n    });\n    return PrepareTemporalFields(bag, entries);\n}\nexport function ToTemporalTimeRecord(bag) {\n    return PrepareTemporalFields(bag, [\n        ['hour', 0],\n        ['microsecond', 0],\n        ['millisecond', 0],\n        ['minute', 0],\n        ['nanosecond', 0],\n        ['second', 0]\n    ]);\n}\nexport function ToTemporalYearMonthFields(bag, fieldNames) {\n    const entries = [\n        ['month', undefined],\n        ['monthCode', undefined],\n        ['year', undefined]\n    ];\n    // Add extra fields from the calendar at the end\n    fieldNames.forEach((fieldName) => {\n        if (!entries.some(([name]) => name === fieldName)) {\n            entries.push([fieldName, undefined]);\n        }\n    });\n    return PrepareTemporalFields(bag, entries);\n}\nfunction ToTemporalZonedDateTimeFields(bag, fieldNames) {\n    const entries = [\n        ['day', undefined],\n        ['hour', 0],\n        ['microsecond', 0],\n        ['millisecond', 0],\n        ['minute', 0],\n        ['month', undefined],\n        ['monthCode', undefined],\n        ['nanosecond', 0],\n        ['second', 0],\n        ['year', undefined],\n        ['offset', undefined],\n        ['timeZone']\n    ];\n    // Add extra fields from the calendar at the end\n    fieldNames.forEach((fieldName) => {\n        if (!entries.some(([name]) => name === fieldName)) {\n            entries.push([fieldName, undefined]);\n        }\n    });\n    return PrepareTemporalFields(bag, entries);\n}\nexport function ToTemporalDate(itemParam, options = ObjectCreate(null)) {\n    let item = itemParam;\n    if (IsObject(item)) {\n        if (IsTemporalDate(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            item = BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDateTime(item)) {\n            return CreateTemporalDate(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR));\n        }\n        const calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const fields = ToTemporalDateFields(item, fieldNames);\n        return DateFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    const { year, month, day, calendar, z } = ParseTemporalDateString(ToString(item));\n    if (z)\n        throw new RangeError('Z designator not supported for PlainDate');\n    const TemporalPlainDate = GetIntrinsic('%Temporal.PlainDate%');\n    return new TemporalPlainDate(year, month, day, calendar); // include validation\n}\nexport function InterpretTemporalDateTimeFields(calendar, fields, options) {\n    let { hour, minute, second, millisecond, microsecond, nanosecond } = ToTemporalTimeRecord(fields);\n    const overflow = ToTemporalOverflow(options);\n    const date = DateFromFields(calendar, fields, options);\n    const year = GetSlot(date, ISO_YEAR);\n    const month = GetSlot(date, ISO_MONTH);\n    const day = GetSlot(date, ISO_DAY);\n    ({ hour, minute, second, millisecond, microsecond, nanosecond } = RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function ToTemporalDateTime(item, options = ObjectCreate(null)) {\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (IsObject(item)) {\n        if (IsTemporalDateTime(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            return BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDate(item)) {\n            return CreateTemporalDateTime(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), 0, 0, 0, 0, 0, 0, GetSlot(item, CALENDAR));\n        }\n        calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fields = ToTemporalDateTimeFields(item, fieldNames);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, options));\n    }\n    else {\n        ToTemporalOverflow(options); // validate and ignore\n        let z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, z } =\n            ParseTemporalDateTimeString(ToString(item)));\n        if (z)\n            throw new RangeError('Z designator not supported for PlainDateTime');\n        RejectDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n        if (calendar === undefined)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n    }\n    return CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n}\nexport function ToTemporalDuration(item) {\n    let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n    if (IsObject(item)) {\n        if (IsTemporalDuration(item))\n            return item;\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ToTemporalDurationRecord(item));\n    }\n    else {\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ParseTemporalDurationString(ToString(item)));\n    }\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    return new TemporalDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n}\nexport function ToTemporalInstant(item) {\n    if (IsTemporalInstant(item))\n        return item;\n    if (IsTemporalZonedDateTime(item)) {\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        return new TemporalInstant(GetSlot(item, EPOCHNANOSECONDS));\n    }\n    const ns = ParseTemporalInstant(ToString(item));\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    return new TemporalInstant(ns);\n}\nexport function ToTemporalMonthDay(item, options = ObjectCreate(null)) {\n    if (IsObject(item)) {\n        if (IsTemporalMonthDay(item))\n            return item;\n        let calendar, calendarAbsent;\n        if (HasSlot(item, CALENDAR)) {\n            calendar = GetSlot(item, CALENDAR);\n            calendarAbsent = false;\n        }\n        else {\n            let maybeStringCalendar = item.calendar;\n            calendarAbsent = maybeStringCalendar === undefined;\n            if (maybeStringCalendar === undefined)\n                maybeStringCalendar = GetISO8601Calendar();\n            calendar = ToTemporalCalendar(maybeStringCalendar);\n        }\n        const fieldNames = CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const fields = ToTemporalMonthDayFields(item, fieldNames);\n        // Callers who omit the calendar are not writing calendar-independent\n        // code. In that case, `monthCode`/`year` can be omitted; `month` and\n        // `day` are sufficient. Add a `year` to satisfy calendar validation.\n        if (calendarAbsent && fields.month !== undefined && fields.monthCode === undefined && fields.year === undefined) {\n            fields.year = 1972;\n        }\n        return MonthDayFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    let { month, day, referenceISOYear, calendar: maybeStringCalendar } = ParseTemporalMonthDayString(ToString(item));\n    // TODO: should this be a ternary?\n    let calendar = maybeStringCalendar;\n    if (calendar === undefined)\n        calendar = GetISO8601Calendar();\n    calendar = ToTemporalCalendar(calendar);\n    if (referenceISOYear === undefined) {\n        RejectISODate(1972, month, day);\n        return CreateTemporalMonthDay(month, day, calendar);\n    }\n    const result = CreateTemporalMonthDay(month, day, calendar, referenceISOYear);\n    const canonicalOptions = ObjectCreate(null);\n    return MonthDayFromFields(calendar, result, canonicalOptions);\n}\nexport function ToTemporalTime(itemParam, overflow = 'constrain') {\n    let item = itemParam;\n    let hour, minute, second, millisecond, microsecond, nanosecond, calendar;\n    if (IsObject(item)) {\n        if (IsTemporalTime(item))\n            return item;\n        if (IsTemporalZonedDateTime(item)) {\n            item = BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(item, TIME_ZONE), GetSlot(item, INSTANT), GetSlot(item, CALENDAR));\n        }\n        if (IsTemporalDateTime(item)) {\n            const TemporalPlainTime = GetIntrinsic('%Temporal.PlainTime%');\n            return new TemporalPlainTime(GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND));\n        }\n        calendar = GetTemporalCalendarWithISODefault(item);\n        if (ToString(calendar) !== 'iso8601') {\n            throw new RangeError('PlainTime can only have iso8601 calendar');\n        }\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ToTemporalTimeRecord(item));\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n    }\n    else {\n        ({ hour, minute, second, millisecond, microsecond, nanosecond, calendar } = ParseTemporalTimeString(ToString(item)));\n        RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n        if (calendar !== undefined && calendar !== 'iso8601') {\n            throw new RangeError('PlainTime can only have iso8601 calendar');\n        }\n    }\n    const TemporalPlainTime = GetIntrinsic('%Temporal.PlainTime%');\n    return new TemporalPlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n}\nexport function ToTemporalYearMonth(item, options = ObjectCreate(null)) {\n    if (IsObject(item)) {\n        if (IsTemporalYearMonth(item))\n            return item;\n        const calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, ['month', 'monthCode', 'year']);\n        const fields = ToTemporalYearMonthFields(item, fieldNames);\n        return YearMonthFromFields(calendar, fields, options);\n    }\n    ToTemporalOverflow(options); // validate and ignore\n    let { year, month, referenceISODay, calendar: maybeStringCalendar } = ParseTemporalYearMonthString(ToString(item));\n    // TODO: replace with ternary?\n    let calendar = maybeStringCalendar;\n    if (calendar === undefined)\n        calendar = GetISO8601Calendar();\n    calendar = ToTemporalCalendar(calendar);\n    if (referenceISODay === undefined) {\n        RejectISODate(year, month, 1);\n        return CreateTemporalYearMonth(year, month, calendar);\n    }\n    const result = CreateTemporalYearMonth(year, month, calendar, referenceISODay);\n    const canonicalOptions = ObjectCreate(null);\n    return YearMonthFromFields(calendar, result, canonicalOptions);\n}\nexport function InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, disambiguation, offsetOpt, matchMinute) {\n    const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    const dt = new DateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (offsetBehaviour === 'wall' || offsetOpt === 'ignore') {\n        // Simple case: ISO string without a TZ offset (or caller wants to ignore\n        // the offset), so just convert DateTime to Instant in the given time zone\n        const instant = BuiltinTimeZoneGetInstantFor(timeZone, dt, disambiguation);\n        return GetSlot(instant, EPOCHNANOSECONDS);\n    }\n    // The caller wants the offset to always win ('use') OR the caller is OK\n    // with the offset winning ('prefer' or 'reject') as long as it's valid\n    // for this timezone and date/time.\n    if (offsetBehaviour === 'exact' || offsetOpt === 'use') {\n        // Calculate the instant for the input's date/time and offset\n        const epochNs = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n        if (epochNs === null)\n            throw new RangeError('ZonedDateTime outside of supported range');\n        return epochNs.minus(offsetNs);\n    }\n    // \"prefer\" or \"reject\"\n    const possibleInstants = GetPossibleInstantsFor(timeZone, dt);\n    for (const candidate of possibleInstants) {\n        const candidateOffset = GetOffsetNanosecondsFor(timeZone, candidate);\n        const roundedCandidateOffset = RoundNumberToIncrement(bigInt(candidateOffset), 60e9, 'halfExpand').toJSNumber();\n        if (candidateOffset === offsetNs || (matchMinute && roundedCandidateOffset === offsetNs)) {\n            return GetSlot(candidate, EPOCHNANOSECONDS);\n        }\n    }\n    // the user-provided offset doesn't match any instants for this time\n    // zone and date/time.\n    if (offsetOpt === 'reject') {\n        const offsetStr = FormatTimeZoneOffsetString(offsetNs);\n        const timeZoneString = IsTemporalTimeZone(timeZone) ? GetSlot(timeZone, TIMEZONE_ID) : 'time zone';\n        // The tsc emit for this line rewrites to invoke the PlainDateTime's valueOf method, NOT\n        // toString (which is invoked by Node when using template literals directly).\n        // See https://github.com/microsoft/TypeScript/issues/39744 for the proposed fix in tsc emit\n        throw new RangeError(`Offset ${offsetStr} is invalid for ${dt.toString()} in ${timeZoneString}`);\n    }\n    // fall through: offsetOpt === 'prefer', but the offset doesn't match\n    // so fall back to use the time zone instead.\n    const instant = DisambiguatePossibleInstants(possibleInstants, timeZone, dt, disambiguation);\n    return GetSlot(instant, EPOCHNANOSECONDS);\n}\nexport function ToTemporalZonedDateTime(item, options = ObjectCreate(null)) {\n    let year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, timeZone, offset, calendar;\n    let matchMinute = false;\n    let offsetBehaviour = 'option';\n    if (IsObject(item)) {\n        if (IsTemporalZonedDateTime(item))\n            return item;\n        calendar = GetTemporalCalendarWithISODefault(item);\n        const fieldNames = CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const fields = ToTemporalZonedDateTimeFields(item, fieldNames);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = InterpretTemporalDateTimeFields(calendar, fields, options));\n        timeZone = ToTemporalTimeZone(fields.timeZone);\n        offset = fields.offset;\n        if (offset === undefined) {\n            offsetBehaviour = 'wall';\n        }\n        else {\n            offset = ToString(offset);\n        }\n    }\n    else {\n        ToTemporalOverflow(options); // validate and ignore\n        let ianaName, z;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, ianaName, offset, z, calendar } =\n            ParseTemporalZonedDateTimeString(ToString(item)));\n        if (!ianaName)\n            throw new RangeError('time zone ID required in brackets');\n        if (z) {\n            offsetBehaviour = 'exact';\n        }\n        else if (!offset) {\n            offsetBehaviour = 'wall';\n        }\n        const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n        timeZone = new TemporalTimeZone(ianaName);\n        if (!calendar)\n            calendar = GetISO8601Calendar();\n        calendar = ToTemporalCalendar(calendar);\n        matchMinute = true; // ISO strings may specify offset with less precision\n    }\n    let offsetNs = 0;\n    if (offsetBehaviour === 'option')\n        offsetNs = ParseOffsetString(offset);\n    const disambiguation = ToTemporalDisambiguation(options);\n    const offsetOpt = ToTemporalOffset(options, 'reject');\n    const epochNanoseconds = InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, offsetBehaviour, offsetNs, timeZone, disambiguation, offsetOpt, matchMinute);\n    return CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n}\nexport function CreateTemporalDateSlots(result, isoYear, isoMonth, isoDay, calendar) {\n    RejectISODate(isoYear, isoMonth, isoDay);\n    RejectDateRange(isoYear, isoMonth, isoDay);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, DATE_BRAND, true);\n    if (DEBUG) {\n        ObjectDefineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalDateToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalDate(isoYear, isoMonth, isoDay, calendar = GetISO8601Calendar()) {\n    const TemporalPlainDate = GetIntrinsic('%Temporal.PlainDate%');\n    const result = ObjectCreate(TemporalPlainDate.prototype);\n    CreateTemporalDateSlots(result, isoYear, isoMonth, isoDay, calendar);\n    return result;\n}\nexport function CreateTemporalDateTimeSlots(result, isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar) {\n    RejectDateTime(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns);\n    RejectDateTimeRange(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, ISO_HOUR, h);\n    SetSlot(result, ISO_MINUTE, min);\n    SetSlot(result, ISO_SECOND, s);\n    SetSlot(result, ISO_MILLISECOND, ms);\n    SetSlot(result, ISO_MICROSECOND, µs);\n    SetSlot(result, ISO_NANOSECOND, ns);\n    SetSlot(result, CALENDAR, calendar);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalDateTimeToString(result, 'auto')}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalDateTime(isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar = GetISO8601Calendar()) {\n    const TemporalPlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    const result = ObjectCreate(TemporalPlainDateTime.prototype);\n    CreateTemporalDateTimeSlots(result, isoYear, isoMonth, isoDay, h, min, s, ms, µs, ns, calendar);\n    return result;\n}\nexport function CreateTemporalMonthDaySlots(result, isoMonth, isoDay, calendar, referenceISOYear) {\n    RejectISODate(referenceISOYear, isoMonth, isoDay);\n    RejectDateRange(referenceISOYear, isoMonth, isoDay);\n    CreateSlots(result);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, isoDay);\n    SetSlot(result, ISO_YEAR, referenceISOYear);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, MONTH_DAY_BRAND, true);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalMonthDayToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalMonthDay(isoMonth, isoDay, calendar = GetISO8601Calendar(), referenceISOYear = 1972) {\n    const TemporalPlainMonthDay = GetIntrinsic('%Temporal.PlainMonthDay%');\n    const result = ObjectCreate(TemporalPlainMonthDay.prototype);\n    CreateTemporalMonthDaySlots(result, isoMonth, isoDay, calendar, referenceISOYear);\n    return result;\n}\nexport function CreateTemporalYearMonthSlots(result, isoYear, isoMonth, calendar, referenceISODay) {\n    RejectISODate(isoYear, isoMonth, referenceISODay);\n    RejectYearMonthRange(isoYear, isoMonth);\n    CreateSlots(result);\n    SetSlot(result, ISO_YEAR, isoYear);\n    SetSlot(result, ISO_MONTH, isoMonth);\n    SetSlot(result, ISO_DAY, referenceISODay);\n    SetSlot(result, CALENDAR, calendar);\n    SetSlot(result, YEAR_MONTH_BRAND, true);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalYearMonthToString(result)}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalYearMonth(isoYear, isoMonth, calendar = GetISO8601Calendar(), referenceISODay = 1) {\n    const TemporalPlainYearMonth = GetIntrinsic('%Temporal.PlainYearMonth%');\n    const result = ObjectCreate(TemporalPlainYearMonth.prototype);\n    CreateTemporalYearMonthSlots(result, isoYear, isoMonth, calendar, referenceISODay);\n    return result;\n}\nexport function CreateTemporalZonedDateTimeSlots(result, epochNanoseconds, timeZone, calendar) {\n    ValidateEpochNanoseconds(epochNanoseconds);\n    CreateSlots(result);\n    SetSlot(result, EPOCHNANOSECONDS, epochNanoseconds);\n    SetSlot(result, TIME_ZONE, timeZone);\n    SetSlot(result, CALENDAR, calendar);\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const instant = new TemporalInstant(GetSlot(result, EPOCHNANOSECONDS));\n    SetSlot(result, INSTANT, instant);\n    if (DEBUG) {\n        Object.defineProperty(result, '_repr_', {\n            value: `${result[Symbol.toStringTag]} <${TemporalZonedDateTimeToString(result, 'auto')}>`,\n            writable: false,\n            enumerable: false,\n            configurable: false\n        });\n    }\n}\nexport function CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar = GetISO8601Calendar()) {\n    const TemporalZonedDateTime = GetIntrinsic('%Temporal.ZonedDateTime%');\n    const result = ObjectCreate(TemporalZonedDateTime.prototype);\n    CreateTemporalZonedDateTimeSlots(result, epochNanoseconds, timeZone, calendar);\n    return result;\n}\nexport function GetISO8601Calendar() {\n    const TemporalCalendar = GetIntrinsic('%Temporal.Calendar%');\n    return new TemporalCalendar('iso8601');\n}\n// TODO: should (can?) we make this generic so the field names are checked\n// against the type that the calendar is a property of?\nexport function CalendarFields(calendar, fieldNamesParam) {\n    let fieldNames = fieldNamesParam;\n    if (calendar.fields) {\n        fieldNames = calendar.fields(fieldNames);\n    }\n    const result = [];\n    for (const name of fieldNames) {\n        if (typeof name !== 'string')\n            throw new TypeError('bad return from calendar.fields()');\n        ArrayPrototypePush.call(result, name);\n    }\n    return result;\n}\nexport function CalendarMergeFields(calendar, fields, additionalFields) {\n    const calMergeFields = calendar.mergeFields;\n    if (!calMergeFields) {\n        return { ...fields, ...additionalFields };\n    }\n    const result = Reflect.apply(calMergeFields, calendar, [fields, additionalFields]);\n    if (!IsObject(result))\n        throw new TypeError('bad return from calendar.mergeFields()');\n    return result;\n}\nexport function CalendarDateAdd(calendar, date, duration, options, dateAddParam) {\n    let dateAdd = dateAddParam;\n    if (dateAdd === undefined) {\n        dateAdd = calendar.dateAdd;\n    }\n    const result = ReflectApply(dateAdd, calendar, [date, duration, options]);\n    if (!IsTemporalDate(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function CalendarDateUntil(calendar, date, otherDate, options, dateUntilParam) {\n    let dateUntil = dateUntilParam;\n    if (dateUntil === undefined) {\n        dateUntil = calendar.dateUntil;\n    }\n    const result = ReflectApply(dateUntil, calendar, [date, otherDate, options]);\n    if (!IsTemporalDuration(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function CalendarYear(calendar, dateLike) {\n    const result = calendar.year(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar year result must be an integer');\n    }\n    return ToIntegerThrowOnInfinity(result);\n}\nexport function CalendarMonth(calendar, dateLike) {\n    const result = calendar.month(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar month result must be a positive integer');\n    }\n    return ToPositiveInteger(result);\n}\nexport function CalendarMonthCode(calendar, dateLike) {\n    const result = calendar.monthCode(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar monthCode result must be a string');\n    }\n    return ToString(result);\n}\nexport function CalendarDay(calendar, dateLike) {\n    const result = calendar.day(dateLike);\n    if (result === undefined) {\n        throw new RangeError('calendar day result must be a positive integer');\n    }\n    return ToPositiveInteger(result);\n}\nexport function CalendarEra(calendar, dateLike) {\n    let result = calendar.era(dateLike);\n    if (result !== undefined) {\n        result = ToString(result);\n    }\n    return result;\n}\nexport function CalendarEraYear(calendar, dateLike) {\n    let result = calendar.eraYear(dateLike);\n    if (result !== undefined) {\n        result = ToIntegerThrowOnInfinity(result);\n    }\n    return result;\n}\nexport function CalendarDayOfWeek(calendar, dateLike) {\n    return calendar.dayOfWeek(dateLike);\n}\nexport function CalendarDayOfYear(calendar, dateLike) {\n    return calendar.dayOfYear(dateLike);\n}\nexport function CalendarWeekOfYear(calendar, dateLike) {\n    return calendar.weekOfYear(dateLike);\n}\nexport function CalendarDaysInWeek(calendar, dateLike) {\n    return calendar.daysInWeek(dateLike);\n}\nexport function CalendarDaysInMonth(calendar, dateLike) {\n    return calendar.daysInMonth(dateLike);\n}\nexport function CalendarDaysInYear(calendar, dateLike) {\n    return calendar.daysInYear(dateLike);\n}\nexport function CalendarMonthsInYear(calendar, dateLike) {\n    return calendar.monthsInYear(dateLike);\n}\nexport function CalendarInLeapYear(calendar, dateLike) {\n    return calendar.inLeapYear(dateLike);\n}\nexport function ToTemporalCalendar(calendarLikeParam) {\n    let calendarLike = calendarLikeParam;\n    if (IsObject(calendarLike)) {\n        if (HasSlot(calendarLike, CALENDAR))\n            return GetSlot(calendarLike, CALENDAR);\n        if (!('calendar' in calendarLike))\n            return calendarLike;\n        calendarLike = calendarLike.calendar;\n        if (IsObject(calendarLike) && !('calendar' in calendarLike))\n            return calendarLike;\n    }\n    const identifier = ToString(calendarLike);\n    const TemporalCalendar = GetIntrinsic('%Temporal.Calendar%');\n    if (IsBuiltinCalendar(identifier))\n        return new TemporalCalendar(identifier);\n    let calendar;\n    try {\n        ({ calendar } = ParseISODateTime(identifier, { zoneRequired: false }));\n    }\n    catch {\n        throw new RangeError(`Invalid calendar: ${identifier}`);\n    }\n    if (!calendar)\n        calendar = 'iso8601';\n    return new TemporalCalendar(calendar);\n}\nfunction GetTemporalCalendarWithISODefault(item) {\n    if (HasSlot(item, CALENDAR))\n        return GetSlot(item, CALENDAR);\n    const { calendar } = item;\n    if (calendar === undefined)\n        return GetISO8601Calendar();\n    return ToTemporalCalendar(calendar);\n}\nexport function CalendarEquals(one, two) {\n    if (one === two)\n        return true;\n    const cal1 = ToString(one);\n    const cal2 = ToString(two);\n    return cal1 === cal2;\n}\nexport function ConsolidateCalendars(one, two) {\n    if (one === two)\n        return two;\n    const sOne = ToString(one);\n    const sTwo = ToString(two);\n    if (sOne === sTwo || sOne === 'iso8601') {\n        return two;\n    }\n    else if (sTwo === 'iso8601') {\n        return one;\n    }\n    else {\n        throw new RangeError('irreconcilable calendars');\n    }\n}\nexport function DateFromFields(calendar, fields, options) {\n    const result = calendar.dateFromFields(fields, options);\n    if (!IsTemporalDate(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function YearMonthFromFields(calendar, fields, options) {\n    const result = calendar.yearMonthFromFields(fields, options);\n    if (!IsTemporalYearMonth(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function MonthDayFromFields(calendar, fields, options) {\n    const result = calendar.monthDayFromFields(fields, options);\n    if (!IsTemporalMonthDay(result))\n        throw new TypeError('invalid result');\n    return result;\n}\nexport function ToTemporalTimeZone(temporalTimeZoneLikeParam) {\n    let temporalTimeZoneLike = temporalTimeZoneLikeParam;\n    if (IsObject(temporalTimeZoneLike)) {\n        if (IsTemporalZonedDateTime(temporalTimeZoneLike))\n            return GetSlot(temporalTimeZoneLike, TIME_ZONE);\n        if (!('timeZone' in temporalTimeZoneLike))\n            return temporalTimeZoneLike;\n        temporalTimeZoneLike = temporalTimeZoneLike.timeZone;\n        if (IsObject(temporalTimeZoneLike) && !('timeZone' in temporalTimeZoneLike)) {\n            return temporalTimeZoneLike;\n        }\n    }\n    const identifier = ToString(temporalTimeZoneLike);\n    const timeZone = ParseTemporalTimeZone(identifier);\n    const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n    return new TemporalTimeZone(timeZone);\n}\nexport function TimeZoneEquals(one, two) {\n    if (one === two)\n        return true;\n    const tz1 = ToString(one);\n    const tz2 = ToString(two);\n    return tz1 === tz2;\n}\nexport function TemporalDateTimeToDate(dateTime) {\n    return CreateTemporalDate(GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, CALENDAR));\n}\nexport function TemporalDateTimeToTime(dateTime) {\n    const Time = GetIntrinsic('%Temporal.PlainTime%');\n    return new Time(GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n}\nexport function GetOffsetNanosecondsFor(timeZone, instant) {\n    let getOffsetNanosecondsFor = timeZone.getOffsetNanosecondsFor;\n    if (typeof getOffsetNanosecondsFor !== 'function') {\n        throw new TypeError('getOffsetNanosecondsFor not callable');\n    }\n    const offsetNs = Reflect.apply(getOffsetNanosecondsFor, timeZone, [instant]);\n    if (typeof offsetNs !== 'number') {\n        throw new TypeError('bad return from getOffsetNanosecondsFor');\n    }\n    if (!IsInteger(offsetNs) || MathAbs(offsetNs) > 86400e9) {\n        throw new RangeError('out-of-range return from getOffsetNanosecondsFor');\n    }\n    return offsetNs;\n}\nexport function BuiltinTimeZoneGetOffsetStringFor(timeZone, instant) {\n    const offsetNs = GetOffsetNanosecondsFor(timeZone, instant);\n    return FormatTimeZoneOffsetString(offsetNs);\n}\nexport function BuiltinTimeZoneGetPlainDateTimeFor(timeZone, instant, calendar) {\n    const ns = GetSlot(instant, EPOCHNANOSECONDS);\n    const offsetNs = GetOffsetNanosecondsFor(timeZone, instant);\n    let { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = GetISOPartsFromEpoch(ns);\n    ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond + offsetNs));\n    return CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n}\nexport function BuiltinTimeZoneGetInstantFor(timeZone, dateTime, disambiguation) {\n    const possibleInstants = GetPossibleInstantsFor(timeZone, dateTime);\n    return DisambiguatePossibleInstants(possibleInstants, timeZone, dateTime, disambiguation);\n}\nfunction DisambiguatePossibleInstants(possibleInstants, timeZone, dateTime, disambiguation) {\n    const Instant = GetIntrinsic('%Temporal.Instant%');\n    const numInstants = possibleInstants.length;\n    if (numInstants === 1)\n        return possibleInstants[0];\n    if (numInstants) {\n        switch (disambiguation) {\n            case 'compatible':\n            // fall through because 'compatible' means 'earlier' for \"fall back\" transitions\n            case 'earlier':\n                return possibleInstants[0];\n            case 'later':\n                return possibleInstants[numInstants - 1];\n            case 'reject': {\n                throw new RangeError('multiple instants found');\n            }\n        }\n    }\n    const year = GetSlot(dateTime, ISO_YEAR);\n    const month = GetSlot(dateTime, ISO_MONTH);\n    const day = GetSlot(dateTime, ISO_DAY);\n    const hour = GetSlot(dateTime, ISO_HOUR);\n    const minute = GetSlot(dateTime, ISO_MINUTE);\n    const second = GetSlot(dateTime, ISO_SECOND);\n    const millisecond = GetSlot(dateTime, ISO_MILLISECOND);\n    const microsecond = GetSlot(dateTime, ISO_MICROSECOND);\n    const nanosecond = GetSlot(dateTime, ISO_NANOSECOND);\n    const utcns = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (utcns === null)\n        throw new RangeError('DateTime outside of supported range');\n    const dayBefore = new Instant(utcns.minus(86400e9));\n    const dayAfter = new Instant(utcns.plus(86400e9));\n    const offsetBefore = GetOffsetNanosecondsFor(timeZone, dayBefore);\n    const offsetAfter = GetOffsetNanosecondsFor(timeZone, dayAfter);\n    const nanoseconds = offsetAfter - offsetBefore;\n    switch (disambiguation) {\n        case 'earlier': {\n            const calendar = GetSlot(dateTime, CALENDAR);\n            const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n            const earlier = AddDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, 0, 0, 0, 0, 0, 0, 0, 0, 0, -nanoseconds, undefined);\n            const earlierPlainDateTime = new PlainDateTime(earlier.year, earlier.month, earlier.day, earlier.hour, earlier.minute, earlier.second, earlier.millisecond, earlier.microsecond, earlier.nanosecond, calendar);\n            return GetPossibleInstantsFor(timeZone, earlierPlainDateTime)[0];\n        }\n        case 'compatible':\n        // fall through because 'compatible' means 'later' for \"spring forward\" transitions\n        case 'later': {\n            const calendar = GetSlot(dateTime, CALENDAR);\n            const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n            const later = AddDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar, 0, 0, 0, 0, 0, 0, 0, 0, 0, nanoseconds, undefined);\n            const laterPlainDateTime = new PlainDateTime(later.year, later.month, later.day, later.hour, later.minute, later.second, later.millisecond, later.microsecond, later.nanosecond, calendar);\n            const possible = GetPossibleInstantsFor(timeZone, laterPlainDateTime);\n            return possible[possible.length - 1];\n        }\n        case 'reject': {\n            throw new RangeError('no such instant found');\n        }\n    }\n}\nfunction GetPossibleInstantsFor(timeZone, dateTime) {\n    const possibleInstants = timeZone.getPossibleInstantsFor(dateTime);\n    const result = [];\n    for (const instant of possibleInstants) {\n        if (!IsTemporalInstant(instant)) {\n            throw new TypeError('bad return from getPossibleInstantsFor');\n        }\n        ArrayPrototypePush.call(result, instant);\n    }\n    return result;\n}\nexport function ISOYearString(year) {\n    let yearString;\n    if (year < 1000 || year > 9999) {\n        const sign = year < 0 ? '-' : '+';\n        const yearNumber = MathAbs(year);\n        yearString = sign + `000000${yearNumber}`.slice(-6);\n    }\n    else {\n        yearString = `${year}`;\n    }\n    return yearString;\n}\nexport function ISODateTimePartString(part) {\n    return `00${part}`.slice(-2);\n}\nexport function FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision) {\n    if (precision === 'minute')\n        return '';\n    const secs = `:${ISODateTimePartString(second)}`;\n    let fractionNumber = millisecond * 1e6 + microsecond * 1e3 + nanosecond;\n    let fraction;\n    if (precision === 'auto') {\n        if (fractionNumber === 0)\n            return secs;\n        fraction = `${fractionNumber}`.padStart(9, '0');\n        while (fraction[fraction.length - 1] === '0')\n            fraction = fraction.slice(0, -1);\n    }\n    else {\n        if (precision === 0)\n            return secs;\n        fraction = `${fractionNumber}`.padStart(9, '0').slice(0, precision);\n    }\n    return `${secs}.${fraction}`;\n}\nexport function TemporalInstantToString(instant, timeZone, precision) {\n    let outputTimeZone = timeZone;\n    if (outputTimeZone === undefined) {\n        const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n        outputTimeZone = new TemporalTimeZone('UTC');\n    }\n    const iso = GetISO8601Calendar();\n    const dateTime = BuiltinTimeZoneGetPlainDateTimeFor(outputTimeZone, instant, iso);\n    const year = ISOYearString(GetSlot(dateTime, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(dateTime, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(dateTime, ISO_DAY));\n    const hour = ISODateTimePartString(GetSlot(dateTime, ISO_HOUR));\n    const minute = ISODateTimePartString(GetSlot(dateTime, ISO_MINUTE));\n    const seconds = FormatSecondsStringPart(GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND), precision);\n    let timeZoneString = 'Z';\n    if (timeZone !== undefined) {\n        const offsetNs = GetOffsetNanosecondsFor(outputTimeZone, instant);\n        timeZoneString = FormatISOTimeZoneOffsetString(offsetNs);\n    }\n    return `${year}-${month}-${day}T${hour}:${minute}${seconds}${timeZoneString}`;\n}\nexport function TemporalDurationToString(duration, precision = 'auto', options = undefined) {\n    function formatNumber(num) {\n        if (num <= NumberMaxSafeInteger)\n            return num.toString(10);\n        return bigInt(num).toString();\n    }\n    const years = GetSlot(duration, YEARS);\n    const months = GetSlot(duration, MONTHS);\n    const weeks = GetSlot(duration, WEEKS);\n    const days = GetSlot(duration, DAYS);\n    const hours = GetSlot(duration, HOURS);\n    const minutes = GetSlot(duration, MINUTES);\n    let seconds = GetSlot(duration, SECONDS);\n    let ms = GetSlot(duration, MILLISECONDS);\n    let µs = GetSlot(duration, MICROSECONDS);\n    let ns = GetSlot(duration, NANOSECONDS);\n    const sign = DurationSign(years, months, weeks, days, hours, minutes, seconds, ms, µs, ns);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({\n            seconds,\n            milliseconds: ms,\n            microseconds: µs,\n            nanoseconds: ns\n        } = RoundDuration(0, 0, 0, 0, 0, 0, seconds, ms, µs, ns, increment, unit, roundingMode));\n    }\n    const dateParts = [];\n    if (years)\n        dateParts.push(`${formatNumber(MathAbs(years))}Y`);\n    if (months)\n        dateParts.push(`${formatNumber(MathAbs(months))}M`);\n    if (weeks)\n        dateParts.push(`${formatNumber(MathAbs(weeks))}W`);\n    if (days)\n        dateParts.push(`${formatNumber(MathAbs(days))}D`);\n    const timeParts = [];\n    if (hours)\n        timeParts.push(`${formatNumber(MathAbs(hours))}H`);\n    if (minutes)\n        timeParts.push(`${formatNumber(MathAbs(minutes))}M`);\n    const secondParts = [];\n    let total = TotalDurationNanoseconds(0, 0, 0, seconds, ms, µs, ns, 0);\n    let nsBigInt, µsBigInt, msBigInt, secondsBigInt;\n    ({ quotient: total, remainder: nsBigInt } = total.divmod(1000));\n    ({ quotient: total, remainder: µsBigInt } = total.divmod(1000));\n    ({ quotient: secondsBigInt, remainder: msBigInt } = total.divmod(1000));\n    const fraction = MathAbs(msBigInt.toJSNumber()) * 1e6 + MathAbs(µsBigInt.toJSNumber()) * 1e3 + MathAbs(nsBigInt.toJSNumber());\n    let decimalPart;\n    if (precision === 'auto') {\n        if (fraction !== 0) {\n            decimalPart = `${fraction}`.padStart(9, '0');\n            while (decimalPart[decimalPart.length - 1] === '0') {\n                decimalPart = decimalPart.slice(0, -1);\n            }\n        }\n    }\n    else if (precision !== 0) {\n        decimalPart = `${fraction}`.padStart(9, '0').slice(0, precision);\n    }\n    if (decimalPart)\n        secondParts.unshift('.', decimalPart);\n    if (!secondsBigInt.isZero() || secondParts.length)\n        secondParts.unshift(secondsBigInt.abs().toString());\n    if (secondParts.length)\n        timeParts.push(`${secondParts.join('')}S`);\n    if (timeParts.length)\n        timeParts.unshift('T');\n    if (!dateParts.length && !timeParts.length)\n        return 'PT0S';\n    return `${sign < 0 ? '-' : ''}P${dateParts.join('')}${timeParts.join('')}`;\n}\nexport function TemporalDateToString(date, showCalendar = 'auto') {\n    const year = ISOYearString(GetSlot(date, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(date, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(date, ISO_DAY));\n    const calendarID = ToString(GetSlot(date, CALENDAR));\n    const calendar = FormatCalendarAnnotation(calendarID, showCalendar);\n    return `${year}-${month}-${day}${calendar}`;\n}\nexport function TemporalDateTimeToString(dateTime, precision, showCalendar = 'auto', options = undefined) {\n    let year = GetSlot(dateTime, ISO_YEAR);\n    let month = GetSlot(dateTime, ISO_MONTH);\n    let day = GetSlot(dateTime, ISO_DAY);\n    let hour = GetSlot(dateTime, ISO_HOUR);\n    let minute = GetSlot(dateTime, ISO_MINUTE);\n    let second = GetSlot(dateTime, ISO_SECOND);\n    let millisecond = GetSlot(dateTime, ISO_MILLISECOND);\n    let microsecond = GetSlot(dateTime, ISO_MICROSECOND);\n    let nanosecond = GetSlot(dateTime, ISO_NANOSECOND);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode));\n    }\n    const yearString = ISOYearString(year);\n    const monthString = ISODateTimePartString(month);\n    const dayString = ISODateTimePartString(day);\n    const hourString = ISODateTimePartString(hour);\n    const minuteString = ISODateTimePartString(minute);\n    const secondsString = FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision);\n    const calendarID = ToString(GetSlot(dateTime, CALENDAR));\n    const calendar = FormatCalendarAnnotation(calendarID, showCalendar);\n    return `${yearString}-${monthString}-${dayString}T${hourString}:${minuteString}${secondsString}${calendar}`;\n}\nexport function TemporalMonthDayToString(monthDay, showCalendar = 'auto') {\n    const month = ISODateTimePartString(GetSlot(monthDay, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(monthDay, ISO_DAY));\n    let resultString = `${month}-${day}`;\n    const calendar = GetSlot(monthDay, CALENDAR);\n    const calendarID = ToString(calendar);\n    if (calendarID !== 'iso8601') {\n        const year = ISOYearString(GetSlot(monthDay, ISO_YEAR));\n        resultString = `${year}-${resultString}`;\n    }\n    const calendarString = FormatCalendarAnnotation(calendarID, showCalendar);\n    if (calendarString)\n        resultString += calendarString;\n    return resultString;\n}\nexport function TemporalYearMonthToString(yearMonth, showCalendar = 'auto') {\n    const year = ISOYearString(GetSlot(yearMonth, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(yearMonth, ISO_MONTH));\n    let resultString = `${year}-${month}`;\n    const calendar = GetSlot(yearMonth, CALENDAR);\n    const calendarID = ToString(calendar);\n    if (calendarID !== 'iso8601') {\n        const day = ISODateTimePartString(GetSlot(yearMonth, ISO_DAY));\n        resultString += `-${day}`;\n    }\n    const calendarString = FormatCalendarAnnotation(calendarID, showCalendar);\n    if (calendarString)\n        resultString += calendarString;\n    return resultString;\n}\nexport function TemporalZonedDateTimeToString(zdt, precision, showCalendar = 'auto', showTimeZone = 'auto', showOffset = 'auto', options = undefined) {\n    let instant = GetSlot(zdt, INSTANT);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        const ns = RoundInstant(GetSlot(zdt, EPOCHNANOSECONDS), increment, unit, roundingMode);\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        instant = new TemporalInstant(ns);\n    }\n    const tz = GetSlot(zdt, TIME_ZONE);\n    const iso = GetISO8601Calendar();\n    const dateTime = BuiltinTimeZoneGetPlainDateTimeFor(tz, instant, iso);\n    const year = ISOYearString(GetSlot(dateTime, ISO_YEAR));\n    const month = ISODateTimePartString(GetSlot(dateTime, ISO_MONTH));\n    const day = ISODateTimePartString(GetSlot(dateTime, ISO_DAY));\n    const hour = ISODateTimePartString(GetSlot(dateTime, ISO_HOUR));\n    const minute = ISODateTimePartString(GetSlot(dateTime, ISO_MINUTE));\n    const seconds = FormatSecondsStringPart(GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND), precision);\n    let result = `${year}-${month}-${day}T${hour}:${minute}${seconds}`;\n    if (showOffset !== 'never') {\n        const offsetNs = GetOffsetNanosecondsFor(tz, instant);\n        result += FormatISOTimeZoneOffsetString(offsetNs);\n    }\n    if (showTimeZone !== 'never')\n        result += `[${tz}]`;\n    const calendarID = ToString(GetSlot(zdt, CALENDAR));\n    result += FormatCalendarAnnotation(calendarID, showCalendar);\n    return result;\n}\nexport function ParseOffsetString(string) {\n    const match = OFFSET.exec(StringCtor(string));\n    if (!match)\n        return null;\n    const sign = match[1] === '-' || match[1] === '\\u2212' ? -1 : +1;\n    const hours = +match[2];\n    const minutes = +(match[3] || 0);\n    const seconds = +(match[4] || 0);\n    const nanoseconds = +((match[5] || 0) + '000000000').slice(0, 9);\n    return sign * (((hours * 60 + minutes) * 60 + seconds) * 1e9 + nanoseconds);\n}\nexport function GetCanonicalTimeZoneIdentifier(timeZoneIdentifier) {\n    const offsetNs = ParseOffsetString(timeZoneIdentifier);\n    if (offsetNs !== null)\n        return FormatTimeZoneOffsetString(offsetNs);\n    const formatter = getIntlDateTimeFormatEnUsForTimeZone(StringCtor(timeZoneIdentifier));\n    return formatter.resolvedOptions().timeZone;\n}\nexport function GetIANATimeZoneOffsetNanoseconds(epochNanoseconds, id) {\n    const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = GetIANATimeZoneDateTimeParts(epochNanoseconds, id);\n    const utc = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (utc === null)\n        throw new RangeError('Date outside of supported range');\n    return +utc.minus(epochNanoseconds);\n}\nfunction FormatTimeZoneOffsetString(offsetNanosecondsParam) {\n    const sign = offsetNanosecondsParam < 0 ? '-' : '+';\n    const offsetNanoseconds = MathAbs(offsetNanosecondsParam);\n    const nanoseconds = offsetNanoseconds % 1e9;\n    const seconds = MathFloor(offsetNanoseconds / 1e9) % 60;\n    const minutes = MathFloor(offsetNanoseconds / 60e9) % 60;\n    const hours = MathFloor(offsetNanoseconds / 3600e9);\n    const hourString = ISODateTimePartString(hours);\n    const minuteString = ISODateTimePartString(minutes);\n    const secondString = ISODateTimePartString(seconds);\n    let post = '';\n    if (nanoseconds) {\n        let fraction = `${nanoseconds}`.padStart(9, '0');\n        while (fraction[fraction.length - 1] === '0')\n            fraction = fraction.slice(0, -1);\n        post = `:${secondString}.${fraction}`;\n    }\n    else if (seconds) {\n        post = `:${secondString}`;\n    }\n    return `${sign}${hourString}:${minuteString}${post}`;\n}\nfunction FormatISOTimeZoneOffsetString(offsetNanosecondsParam) {\n    let offsetNanoseconds = RoundNumberToIncrement(bigInt(offsetNanosecondsParam), 60e9, 'halfExpand').toJSNumber();\n    const sign = offsetNanoseconds < 0 ? '-' : '+';\n    offsetNanoseconds = MathAbs(offsetNanoseconds);\n    const minutes = (offsetNanoseconds / 60e9) % 60;\n    const hours = MathFloor(offsetNanoseconds / 3600e9);\n    const hourString = ISODateTimePartString(hours);\n    const minuteString = ISODateTimePartString(minutes);\n    return `${sign}${hourString}:${minuteString}`;\n}\nexport function GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    // Note: Date.UTC() interprets one and two-digit years as being in the\n    // 20th century, so don't use it\n    const legacyDate = new Date();\n    legacyDate.setUTCHours(hour, minute, second, millisecond);\n    legacyDate.setUTCFullYear(year, month - 1, day);\n    const ms = legacyDate.getTime();\n    if (NumberIsNaN(ms))\n        return null;\n    let ns = bigInt(ms).multiply(1e6);\n    ns = ns.plus(bigInt(microsecond).multiply(1e3));\n    ns = ns.plus(bigInt(nanosecond));\n    if (ns.lesser(NS_MIN) || ns.greater(NS_MAX))\n        return null;\n    return ns;\n}\nfunction GetISOPartsFromEpoch(epochNanoseconds) {\n    const { quotient, remainder } = bigInt(epochNanoseconds).divmod(1e6);\n    let epochMilliseconds = +quotient;\n    let nanos = +remainder;\n    if (nanos < 0) {\n        nanos += 1e6;\n        epochMilliseconds -= 1;\n    }\n    const microsecond = MathFloor(nanos / 1e3) % 1e3;\n    const nanosecond = nanos % 1e3;\n    const item = new Date(epochMilliseconds);\n    const year = item.getUTCFullYear();\n    const month = item.getUTCMonth() + 1;\n    const day = item.getUTCDate();\n    const hour = item.getUTCHours();\n    const minute = item.getUTCMinutes();\n    const second = item.getUTCSeconds();\n    const millisecond = item.getUTCMilliseconds();\n    return { epochMilliseconds, year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\n// ts-prune-ignore-next TODO: remove this after tests are converted to TS\nexport function GetIANATimeZoneDateTimeParts(epochNanoseconds, id) {\n    const { epochMilliseconds, millisecond, microsecond, nanosecond } = GetISOPartsFromEpoch(epochNanoseconds);\n    const { year, month, day, hour, minute, second } = GetFormatterParts(id, epochMilliseconds);\n    return BalanceISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n}\nexport function GetIANATimeZoneNextTransition(epochNanoseconds, id) {\n    const uppercap = SystemUTCEpochNanoSeconds().plus(DAY_NANOS.multiply(366));\n    let leftNanos = epochNanoseconds;\n    const leftOffsetNs = GetIANATimeZoneOffsetNanoseconds(leftNanos, id);\n    let rightNanos = leftNanos;\n    let rightOffsetNs = leftOffsetNs;\n    while (leftOffsetNs === rightOffsetNs && bigInt(leftNanos).compare(uppercap) === -1) {\n        rightNanos = bigInt(leftNanos).plus(DAY_NANOS.multiply(2 * 7));\n        rightOffsetNs = GetIANATimeZoneOffsetNanoseconds(rightNanos, id);\n        if (leftOffsetNs === rightOffsetNs) {\n            leftNanos = rightNanos;\n        }\n    }\n    if (leftOffsetNs === rightOffsetNs)\n        return null;\n    const result = bisect((epochNs) => GetIANATimeZoneOffsetNanoseconds(epochNs, id), leftNanos, rightNanos, leftOffsetNs, rightOffsetNs);\n    return result;\n}\nexport function GetIANATimeZonePreviousTransition(epochNanoseconds, id) {\n    const lowercap = BEFORE_FIRST_DST; // 1847-01-01T00:00:00Z\n    let rightNanos = bigInt(epochNanoseconds).minus(1);\n    const rightOffsetNs = GetIANATimeZoneOffsetNanoseconds(rightNanos, id);\n    let leftNanos = rightNanos;\n    let leftOffsetNs = rightOffsetNs;\n    while (rightOffsetNs === leftOffsetNs && bigInt(rightNanos).compare(lowercap) === 1) {\n        leftNanos = bigInt(rightNanos).minus(DAY_NANOS.multiply(2 * 7));\n        leftOffsetNs = GetIANATimeZoneOffsetNanoseconds(leftNanos, id);\n        if (rightOffsetNs === leftOffsetNs) {\n            rightNanos = leftNanos;\n        }\n    }\n    if (rightOffsetNs === leftOffsetNs)\n        return null;\n    const result = bisect((epochNs) => GetIANATimeZoneOffsetNanoseconds(epochNs, id), leftNanos, rightNanos, leftOffsetNs, rightOffsetNs);\n    return result;\n}\n// ts-prune-ignore-next TODO: remove this after tests are converted to TS\nexport function GetFormatterParts(timeZone, epochMilliseconds) {\n    const formatter = getIntlDateTimeFormatEnUsForTimeZone(timeZone);\n    // Using `format` instead of `formatToParts` for compatibility with older clients\n    const datetime = formatter.format(new Date(epochMilliseconds));\n    const [month, day, year, era, hour, minute, second] = datetime.split(/[^\\w]+/);\n    return {\n        year: era.toUpperCase().startsWith('B') ? -year + 1 : +year,\n        month: +month,\n        day: +day,\n        hour: hour === '24' ? 0 : +hour,\n        minute: +minute,\n        second: +second\n    };\n}\nexport function GetIANATimeZoneEpochValue(id, year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    const ns = GetEpochFromISOParts(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond);\n    if (ns === null)\n        throw new RangeError('DateTime outside of supported range');\n    let nsEarlier = ns.minus(DAY_NANOS);\n    if (nsEarlier.lesser(NS_MIN))\n        nsEarlier = ns;\n    let nsLater = ns.plus(DAY_NANOS);\n    if (nsLater.greater(NS_MAX))\n        nsLater = ns;\n    const earliest = GetIANATimeZoneOffsetNanoseconds(nsEarlier, id);\n    const latest = GetIANATimeZoneOffsetNanoseconds(nsLater, id);\n    const found = earliest === latest ? [earliest] : [earliest, latest];\n    return found\n        .map((offsetNanoseconds) => {\n        const epochNanoseconds = bigInt(ns).minus(offsetNanoseconds);\n        const parts = GetIANATimeZoneDateTimeParts(epochNanoseconds, id);\n        if (year !== parts.year ||\n            month !== parts.month ||\n            day !== parts.day ||\n            hour !== parts.hour ||\n            minute !== parts.minute ||\n            second !== parts.second ||\n            millisecond !== parts.millisecond ||\n            microsecond !== parts.microsecond ||\n            nanosecond !== parts.nanosecond) {\n            return undefined;\n        }\n        return epochNanoseconds;\n    })\n        .filter((x) => x !== undefined);\n}\nexport function LeapYear(year) {\n    if (undefined === year)\n        return false;\n    const isDiv4 = year % 4 === 0;\n    const isDiv100 = year % 100 === 0;\n    const isDiv400 = year % 400 === 0;\n    return isDiv4 && (!isDiv100 || isDiv400);\n}\nexport function ISODaysInMonth(year, month) {\n    const DoM = {\n        standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    };\n    return DoM[LeapYear(year) ? 'leapyear' : 'standard'][month - 1];\n}\nexport function DayOfWeek(year, month, day) {\n    const m = month + (month < 3 ? 10 : -2);\n    const Y = year - (month < 3 ? 1 : 0);\n    const c = MathFloor(Y / 100);\n    const y = Y - c * 100;\n    const d = day;\n    const pD = d;\n    const pM = MathFloor(2.6 * m - 0.2);\n    const pY = y + MathFloor(y / 4);\n    const pC = MathFloor(c / 4) - 2 * c;\n    const dow = (pD + pM + pY + pC) % 7;\n    return dow + (dow <= 0 ? 7 : 0);\n}\nexport function DayOfYear(year, month, day) {\n    let days = day;\n    for (let m = month - 1; m > 0; m--) {\n        days += ISODaysInMonth(year, m);\n    }\n    return days;\n}\nexport function WeekOfYear(year, month, day) {\n    const doy = DayOfYear(year, month, day);\n    const dow = DayOfWeek(year, month, day) || 7;\n    const doj = DayOfWeek(year, 1, 1);\n    const week = MathFloor((doy - dow + 10) / 7);\n    if (week < 1) {\n        if (doj === 5 || (doj === 6 && LeapYear(year - 1))) {\n            return 53;\n        }\n        else {\n            return 52;\n        }\n    }\n    if (week === 53) {\n        if ((LeapYear(year) ? 366 : 365) - doy < 4 - dow) {\n            return 1;\n        }\n    }\n    return week;\n}\nexport function DurationSign(y, mon, w, d, h, min, s, ms, µs, ns) {\n    for (const prop of [y, mon, w, d, h, min, s, ms, µs, ns]) {\n        if (prop !== 0)\n            return prop < 0 ? -1 : 1;\n    }\n    return 0;\n}\nfunction BalanceISOYearMonth(yearParam, monthParam) {\n    let year = yearParam;\n    let month = monthParam;\n    if (!NumberIsFinite(year) || !NumberIsFinite(month))\n        throw new RangeError('infinity is out of range');\n    month -= 1;\n    year += MathFloor(month / 12);\n    month %= 12;\n    if (month < 0)\n        month += 12;\n    month += 1;\n    return { year, month };\n}\nfunction BalanceISODate(yearParam, monthParam, dayParam) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    if (!NumberIsFinite(day))\n        throw new RangeError('infinity is out of range');\n    ({ year, month } = BalanceISOYearMonth(year, month));\n    let daysInYear = 0;\n    let testYear = month > 2 ? year : year - 1;\n    while (((daysInYear = LeapYear(testYear) ? 366 : 365), day < -daysInYear)) {\n        year -= 1;\n        testYear -= 1;\n        day += daysInYear;\n    }\n    testYear += 1;\n    while (((daysInYear = LeapYear(testYear) ? 366 : 365), day > daysInYear)) {\n        year += 1;\n        testYear += 1;\n        day -= daysInYear;\n    }\n    while (day < 1) {\n        ({ year, month } = BalanceISOYearMonth(year, month - 1));\n        day += ISODaysInMonth(year, month);\n    }\n    while (day > ISODaysInMonth(year, month)) {\n        day -= ISODaysInMonth(year, month);\n        ({ year, month } = BalanceISOYearMonth(year, month + 1));\n    }\n    return { year, month, day };\n}\nfunction BalanceISODateTime(yearParam, monthParam, dayParam, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    const { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam);\n    const { year, month, day } = BalanceISODate(yearParam, monthParam, dayParam + deltaDays);\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nfunction BalanceTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    if (!NumberIsFinite(hour) ||\n        !NumberIsFinite(minute) ||\n        !NumberIsFinite(second) ||\n        !NumberIsFinite(millisecond) ||\n        !NumberIsFinite(microsecond) ||\n        !NumberIsFinite(nanosecond)) {\n        throw new RangeError('infinity is out of range');\n    }\n    microsecond += MathFloor(nanosecond / 1000);\n    nanosecond = NonNegativeModulo(nanosecond, 1000);\n    millisecond += MathFloor(microsecond / 1000);\n    microsecond = NonNegativeModulo(microsecond, 1000);\n    second += MathFloor(millisecond / 1000);\n    millisecond = NonNegativeModulo(millisecond, 1000);\n    minute += MathFloor(second / 60);\n    second = NonNegativeModulo(second, 60);\n    hour += MathFloor(minute / 60);\n    minute = NonNegativeModulo(minute, 60);\n    const deltaDays = MathFloor(hour / 24);\n    hour = NonNegativeModulo(hour, 24);\n    return { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function TotalDurationNanoseconds(daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, offsetShift) {\n    const days = bigInt(daysParam);\n    let nanoseconds = bigInt(nanosecondsParam);\n    if (daysParam !== 0)\n        nanoseconds = bigInt(nanosecondsParam).subtract(offsetShift);\n    const hours = bigInt(hoursParam).add(bigInt(days).multiply(24));\n    const minutes = bigInt(minutesParam).add(hours.multiply(60));\n    const seconds = bigInt(secondsParam).add(minutes.multiply(60));\n    const milliseconds = bigInt(millisecondsParam).add(seconds.multiply(1000));\n    const microseconds = bigInt(microsecondsParam).add(milliseconds.multiply(1000));\n    return bigInt(nanoseconds).add(microseconds.multiply(1000));\n}\nfunction NanosecondsToDays(nanosecondsParam, relativeTo) {\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const sign = MathSign(nanosecondsParam.toJSNumber());\n    let nanoseconds = bigInt(nanosecondsParam);\n    let dayLengthNs = 86400e9;\n    if (sign === 0)\n        return { days: 0, nanoseconds: bigInt.zero, dayLengthNs };\n    if (!IsTemporalZonedDateTime(relativeTo)) {\n        let days;\n        ({ quotient: days, remainder: nanoseconds } = nanoseconds.divmod(dayLengthNs));\n        days = days.toJSNumber();\n        return { days, nanoseconds, dayLengthNs };\n    }\n    const startNs = GetSlot(relativeTo, EPOCHNANOSECONDS);\n    const start = GetSlot(relativeTo, INSTANT);\n    const endNs = startNs.add(nanoseconds);\n    const end = new TemporalInstant(endNs);\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    // Find the difference in days only.\n    const dtStart = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, start, calendar);\n    const dtEnd = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, end, calendar);\n    let { days } = DifferenceISODateTime(GetSlot(dtStart, ISO_YEAR), GetSlot(dtStart, ISO_MONTH), GetSlot(dtStart, ISO_DAY), GetSlot(dtStart, ISO_HOUR), GetSlot(dtStart, ISO_MINUTE), GetSlot(dtStart, ISO_SECOND), GetSlot(dtStart, ISO_MILLISECOND), GetSlot(dtStart, ISO_MICROSECOND), GetSlot(dtStart, ISO_NANOSECOND), GetSlot(dtEnd, ISO_YEAR), GetSlot(dtEnd, ISO_MONTH), GetSlot(dtEnd, ISO_DAY), GetSlot(dtEnd, ISO_HOUR), GetSlot(dtEnd, ISO_MINUTE), GetSlot(dtEnd, ISO_SECOND), GetSlot(dtEnd, ISO_MILLISECOND), GetSlot(dtEnd, ISO_MICROSECOND), GetSlot(dtEnd, ISO_NANOSECOND), calendar, 'day');\n    let intermediateNs = AddZonedDateTime(start, timeZone, calendar, 0, 0, 0, days, 0, 0, 0, 0, 0, 0);\n    // may disambiguate\n    // If clock time after addition was in the middle of a skipped period, the\n    // endpoint was disambiguated to a later clock time. So it's possible that\n    // the resulting disambiguated result is later than endNs. If so, then back\n    // up one day and try again. Repeat if necessary (some transitions are\n    // > 24 hours) until either there's zero days left or the date duration is\n    // back inside the period where it belongs. Note that this case only can\n    // happen for positive durations because the only direction that\n    // `disambiguation: 'compatible'` can change clock time is forwards.\n    if (sign === 1) {\n        while (days > 0 && intermediateNs.greater(endNs)) {\n            --days;\n            intermediateNs = AddZonedDateTime(start, timeZone, calendar, 0, 0, 0, days, 0, 0, 0, 0, 0, 0);\n            // may do disambiguation\n        }\n    }\n    nanoseconds = endNs.subtract(intermediateNs);\n    let isOverflow = false;\n    let relativeInstant = new TemporalInstant(intermediateNs);\n    do {\n        // calculate length of the next day (day that contains the time remainder)\n        const oneDayFartherNs = AddZonedDateTime(relativeInstant, timeZone, calendar, 0, 0, 0, sign, 0, 0, 0, 0, 0, 0);\n        const relativeNs = GetSlot(relativeInstant, EPOCHNANOSECONDS);\n        dayLengthNs = oneDayFartherNs.subtract(relativeNs).toJSNumber();\n        isOverflow = nanoseconds.subtract(dayLengthNs).multiply(sign).geq(0);\n        if (isOverflow) {\n            nanoseconds = nanoseconds.subtract(dayLengthNs);\n            relativeInstant = new TemporalInstant(oneDayFartherNs);\n            days += sign;\n        }\n    } while (isOverflow);\n    return { days, nanoseconds, dayLengthNs: MathAbs(dayLengthNs) };\n}\nexport function BalanceDuration(daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, largestUnit, relativeTo = undefined) {\n    let days = daysParam;\n    let nanosecondsBigInt, microsecondsBigInt, millisecondsBigInt, secondsBigInt, minutesBigInt, hoursBigInt;\n    if (IsTemporalZonedDateTime(relativeTo)) {\n        const endNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), GetSlot(relativeTo, TIME_ZONE), GetSlot(relativeTo, CALENDAR), 0, 0, 0, days, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam);\n        const startNs = GetSlot(relativeTo, EPOCHNANOSECONDS);\n        nanosecondsBigInt = endNs.subtract(startNs);\n    }\n    else {\n        nanosecondsBigInt = TotalDurationNanoseconds(days, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, 0);\n    }\n    if (largestUnit === 'year' || largestUnit === 'month' || largestUnit === 'week' || largestUnit === 'day') {\n        ({ days, nanoseconds: nanosecondsBigInt } = NanosecondsToDays(nanosecondsBigInt, relativeTo));\n    }\n    else {\n        days = 0;\n    }\n    const sign = nanosecondsBigInt.lesser(0) ? -1 : 1;\n    nanosecondsBigInt = nanosecondsBigInt.abs();\n    microsecondsBigInt = millisecondsBigInt = secondsBigInt = minutesBigInt = hoursBigInt = bigInt.zero;\n    switch (largestUnit) {\n        case 'year':\n        case 'month':\n        case 'week':\n        case 'day':\n        case 'hour':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = nanosecondsBigInt.divmod(1000));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = microsecondsBigInt.divmod(1000));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = millisecondsBigInt.divmod(1000));\n            ({ quotient: minutesBigInt, remainder: secondsBigInt } = secondsBigInt.divmod(60));\n            ({ quotient: hoursBigInt, remainder: minutesBigInt } = minutesBigInt.divmod(60));\n            break;\n        case 'minute':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = nanosecondsBigInt.divmod(1000));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = microsecondsBigInt.divmod(1000));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = millisecondsBigInt.divmod(1000));\n            ({ quotient: minutesBigInt, remainder: secondsBigInt } = secondsBigInt.divmod(60));\n            break;\n        case 'second':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = nanosecondsBigInt.divmod(1000));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = microsecondsBigInt.divmod(1000));\n            ({ quotient: secondsBigInt, remainder: millisecondsBigInt } = millisecondsBigInt.divmod(1000));\n            break;\n        case 'millisecond':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = nanosecondsBigInt.divmod(1000));\n            ({ quotient: millisecondsBigInt, remainder: microsecondsBigInt } = microsecondsBigInt.divmod(1000));\n            break;\n        case 'microsecond':\n            ({ quotient: microsecondsBigInt, remainder: nanosecondsBigInt } = nanosecondsBigInt.divmod(1000));\n            break;\n        case 'nanosecond':\n            break;\n        default:\n            throw new Error('assert not reached');\n    }\n    const hours = hoursBigInt.toJSNumber() * sign;\n    const minutes = minutesBigInt.toJSNumber() * sign;\n    const seconds = secondsBigInt.toJSNumber() * sign;\n    const milliseconds = millisecondsBigInt.toJSNumber() * sign;\n    const microseconds = microsecondsBigInt.toJSNumber() * sign;\n    const nanoseconds = nanosecondsBigInt.toJSNumber() * sign;\n    return { days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function UnbalanceDurationRelative(yearsParam, monthsParam, weeksParam, daysParam, largestUnit, relativeToParam) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const sign = DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    let calendar;\n    let relativeTo;\n    if (relativeToParam) {\n        relativeTo = ToTemporalDate(relativeToParam);\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    const oneYear = new TemporalDuration(sign);\n    const oneMonth = new TemporalDuration(0, sign);\n    const oneWeek = new TemporalDuration(0, 0, sign);\n    switch (largestUnit) {\n        case 'year':\n            // no-op\n            break;\n        case 'month':\n            {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for months balancing');\n                // balance years down to months\n                const dateAdd = calendar.dateAdd;\n                const dateUntil = calendar.dateUntil;\n                let relativeToDateOnly = relativeTo;\n                while (MathAbs(years) > 0) {\n                    const addOptions = ObjectCreate(null);\n                    const newRelativeTo = CalendarDateAdd(calendar, relativeToDateOnly, oneYear, addOptions, dateAdd);\n                    const untilOptions = ObjectCreate(null);\n                    untilOptions.largestUnit = 'month';\n                    const untilResult = CalendarDateUntil(calendar, relativeToDateOnly, newRelativeTo, untilOptions, dateUntil);\n                    const oneYearMonths = GetSlot(untilResult, MONTHS);\n                    relativeToDateOnly = newRelativeTo;\n                    months += oneYearMonths;\n                    years -= sign;\n                }\n            }\n            break;\n        case 'week':\n            if (!calendar)\n                throw new RangeError('a starting point is required for weeks balancing');\n            // balance years down to days\n            while (MathAbs(years) > 0) {\n                let oneYearDays;\n                ({ relativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n                days += oneYearDays;\n                years -= sign;\n            }\n            // balance months down to days\n            while (MathAbs(months) > 0) {\n                let oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n                days += oneMonthDays;\n                months -= sign;\n            }\n            break;\n        default:\n            // balance years down to days\n            while (MathAbs(years) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneYearDays;\n                ({ relativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n                days += oneYearDays;\n                years -= sign;\n            }\n            // balance months down to days\n            while (MathAbs(months) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n                days += oneMonthDays;\n                months -= sign;\n            }\n            // balance weeks down to days\n            while (MathAbs(weeks) > 0) {\n                if (!calendar)\n                    throw new RangeError('a starting point is required for balancing calendar units');\n                let oneWeekDays;\n                ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n                days += oneWeekDays;\n                weeks -= sign;\n            }\n            break;\n    }\n    return { years, months, weeks, days };\n}\nexport function BalanceDurationRelative(yearsParam, monthsParam, weeksParam, daysParam, largestUnit, relativeToParam) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const sign = DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    if (sign === 0)\n        return { years, months, weeks, days };\n    let calendar;\n    let relativeTo;\n    if (relativeToParam) {\n        relativeTo = ToTemporalDate(relativeToParam);\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    const oneYear = new TemporalDuration(sign);\n    const oneMonth = new TemporalDuration(0, sign);\n    const oneWeek = new TemporalDuration(0, 0, sign);\n    switch (largestUnit) {\n        case 'year': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for years balancing');\n            // balance days up to years\n            let newRelativeTo, oneYearDays;\n            ({ relativeTo: newRelativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n            while (MathAbs(days) >= MathAbs(oneYearDays)) {\n                days -= oneYearDays;\n                years += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear));\n            }\n            // balance days up to months\n            let oneMonthDays;\n            ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                days -= oneMonthDays;\n                months += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            // balance months up to years\n            const dateAdd = calendar.dateAdd;\n            const addOptions = ObjectCreate(null);\n            newRelativeTo = CalendarDateAdd(calendar, relativeTo, oneYear, addOptions, dateAdd);\n            const dateUntil = calendar.dateUntil;\n            const untilOptions = ObjectCreate(null);\n            untilOptions.largestUnit = 'month';\n            let untilResult = CalendarDateUntil(calendar, relativeTo, newRelativeTo, untilOptions, dateUntil);\n            let oneYearMonths = GetSlot(untilResult, MONTHS);\n            while (MathAbs(months) >= MathAbs(oneYearMonths)) {\n                months -= oneYearMonths;\n                years += sign;\n                relativeTo = newRelativeTo;\n                const addOptions = ObjectCreate(null);\n                newRelativeTo = CalendarDateAdd(calendar, relativeTo, oneYear, addOptions, dateAdd);\n                const untilOptions = ObjectCreate(null);\n                untilOptions.largestUnit = 'month';\n                untilResult = CalendarDateUntil(calendar, relativeTo, newRelativeTo, untilOptions, dateUntil);\n                oneYearMonths = GetSlot(untilResult, MONTHS);\n            }\n            break;\n        }\n        case 'month': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for months balancing');\n            // balance days up to months\n            let newRelativeTo, oneMonthDays;\n            ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                days -= oneMonthDays;\n                months += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            break;\n        }\n        case 'week': {\n            if (!calendar)\n                throw new RangeError('a starting point is required for weeks balancing');\n            // balance days up to weeks\n            let newRelativeTo, oneWeekDays;\n            ({ relativeTo: newRelativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            while (MathAbs(days) >= MathAbs(oneWeekDays)) {\n                days -= oneWeekDays;\n                weeks += sign;\n                relativeTo = newRelativeTo;\n                ({ relativeTo: newRelativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            }\n            break;\n        }\n        default:\n            // no-op\n            break;\n    }\n    return { years, months, weeks, days };\n}\nexport function CalculateOffsetShift(relativeTo, y, mon, w, d, h, min, s, ms, µs, ns) {\n    if (IsTemporalZonedDateTime(relativeTo)) {\n        const instant = GetSlot(relativeTo, INSTANT);\n        const timeZone = GetSlot(relativeTo, TIME_ZONE);\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const offsetBefore = GetOffsetNanosecondsFor(timeZone, instant);\n        const after = AddZonedDateTime(instant, timeZone, calendar, y, mon, w, d, h, min, s, ms, µs, ns);\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        const instantAfter = new TemporalInstant(after);\n        const offsetAfter = GetOffsetNanosecondsFor(timeZone, instantAfter);\n        return offsetAfter - offsetBefore;\n    }\n    return 0;\n}\nexport function CreateNegatedTemporalDuration(duration) {\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    return new TemporalDuration(-GetSlot(duration, YEARS), -GetSlot(duration, MONTHS), -GetSlot(duration, WEEKS), -GetSlot(duration, DAYS), -GetSlot(duration, HOURS), -GetSlot(duration, MINUTES), -GetSlot(duration, SECONDS), -GetSlot(duration, MILLISECONDS), -GetSlot(duration, MICROSECONDS), -GetSlot(duration, NANOSECONDS));\n}\nexport function ConstrainToRange(value, min, max) {\n    return MathMin(max, MathMax(min, value));\n}\nfunction ConstrainISODate(year, monthParam, dayParam) {\n    const month = ConstrainToRange(monthParam, 1, 12);\n    const day = ConstrainToRange(dayParam, 1, ISODaysInMonth(year, month));\n    return { year, month, day };\n}\nfunction ConstrainTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam) {\n    const hour = ConstrainToRange(hourParam, 0, 23);\n    const minute = ConstrainToRange(minuteParam, 0, 59);\n    const second = ConstrainToRange(secondParam, 0, 59);\n    const millisecond = ConstrainToRange(millisecondParam, 0, 999);\n    const microsecond = ConstrainToRange(microsecondParam, 0, 999);\n    const nanosecond = ConstrainToRange(nanosecondParam, 0, 999);\n    return { hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RejectToRange(value, min, max) {\n    if (value < min || value > max)\n        throw new RangeError(`value out of range: ${min} <= ${value} <= ${max}`);\n}\nfunction RejectISODate(year, month, day) {\n    RejectToRange(month, 1, 12);\n    RejectToRange(day, 1, ISODaysInMonth(year, month));\n}\nfunction RejectDateRange(year, month, day) {\n    // Noon avoids trouble at edges of DateTime range (excludes midnight)\n    RejectDateTimeRange(year, month, day, 12, 0, 0, 0, 0, 0);\n}\nexport function RejectTime(hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectToRange(hour, 0, 23);\n    RejectToRange(minute, 0, 59);\n    RejectToRange(second, 0, 59);\n    RejectToRange(millisecond, 0, 999);\n    RejectToRange(microsecond, 0, 999);\n    RejectToRange(nanosecond, 0, 999);\n}\nfunction RejectDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectISODate(year, month, day);\n    RejectTime(hour, minute, second, millisecond, microsecond, nanosecond);\n}\nfunction RejectDateTimeRange(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond) {\n    RejectToRange(year, YEAR_MIN, YEAR_MAX);\n    // Reject any DateTime 24 hours or more outside the Instant range\n    if ((year === YEAR_MIN &&\n        null ==\n            GetEpochFromISOParts(year, month, day + 1, hour, minute, second, millisecond, microsecond, nanosecond - 1)) ||\n        (year === YEAR_MAX &&\n            null ==\n                GetEpochFromISOParts(year, month, day - 1, hour, minute, second, millisecond, microsecond, nanosecond + 1))) {\n        throw new RangeError('DateTime outside of supported range');\n    }\n}\nexport function ValidateEpochNanoseconds(epochNanoseconds) {\n    if (epochNanoseconds.lesser(NS_MIN) || epochNanoseconds.greater(NS_MAX)) {\n        throw new RangeError('Instant outside of supported range');\n    }\n}\nfunction RejectYearMonthRange(year, month) {\n    RejectToRange(year, YEAR_MIN, YEAR_MAX);\n    if (year === YEAR_MIN) {\n        RejectToRange(month, 4, 12);\n    }\n    else if (year === YEAR_MAX) {\n        RejectToRange(month, 1, 9);\n    }\n}\nfunction RejectDuration(y, mon, w, d, h, min, s, ms, µs, ns) {\n    const sign = DurationSign(y, mon, w, d, h, min, s, ms, µs, ns);\n    for (const prop of [y, mon, w, d, h, min, s, ms, µs, ns]) {\n        if (!NumberIsFinite(prop))\n            throw new RangeError('infinite values not allowed as duration fields');\n        const propSign = MathSign(prop);\n        if (propSign !== 0 && propSign !== sign)\n            throw new RangeError('mixed-sign values not allowed as duration fields');\n    }\n}\nexport function DifferenceISODate(y1, m1, d1, y2, m2, d2, largestUnit) {\n    switch (largestUnit) {\n        case 'year':\n        case 'month': {\n            const sign = -CompareISODate(y1, m1, d1, y2, m2, d2);\n            if (sign === 0)\n                return { years: 0, months: 0, weeks: 0, days: 0 };\n            const start = { year: y1, month: m1, day: d1 };\n            const end = { year: y2, month: m2, day: d2 };\n            let years = end.year - start.year;\n            let mid = AddISODate(y1, m1, d1, years, 0, 0, 0, 'constrain');\n            let midSign = -CompareISODate(mid.year, mid.month, mid.day, y2, m2, d2);\n            if (midSign === 0) {\n                return largestUnit === 'year'\n                    ? { years, months: 0, weeks: 0, days: 0 }\n                    : { years: 0, months: years * 12, weeks: 0, days: 0 };\n            }\n            let months = end.month - start.month;\n            if (midSign !== sign) {\n                years -= sign;\n                months += sign * 12;\n            }\n            mid = AddISODate(y1, m1, d1, years, months, 0, 0, 'constrain');\n            midSign = -CompareISODate(mid.year, mid.month, mid.day, y2, m2, d2);\n            if (midSign === 0) {\n                return largestUnit === 'year'\n                    ? { years, months, weeks: 0, days: 0 }\n                    : { years: 0, months: months + years * 12, weeks: 0, days: 0 };\n            }\n            if (midSign !== sign) {\n                // The end date is later in the month than mid date (or earlier for\n                // negative durations). Back up one month.\n                months -= sign;\n                if (months === -sign) {\n                    years -= sign;\n                    months = 11 * sign;\n                }\n                mid = AddISODate(y1, m1, d1, years, months, 0, 0, 'constrain');\n                midSign = -CompareISODate(y1, m1, d1, mid.year, mid.month, mid.day);\n            }\n            let days = 0;\n            // If we get here, months and years are correct (no overflow), and `mid`\n            // is within the range from `start` to `end`. To count the days between\n            // `mid` and `end`, there are 3 cases:\n            // 1) same month: use simple subtraction\n            // 2) end is previous month from intermediate (negative duration)\n            // 3) end is next month from intermediate (positive duration)\n            if (mid.month === end.month) {\n                // 1) same month: use simple subtraction\n                days = end.day - mid.day;\n            }\n            else if (sign < 0) {\n                // 2) end is previous month from intermediate (negative duration)\n                // Example: intermediate: Feb 1, end: Jan 30, DaysInMonth = 31, days = -2\n                days = -mid.day - (ISODaysInMonth(end.year, end.month) - end.day);\n            }\n            else {\n                // 3) end is next month from intermediate (positive duration)\n                // Example: intermediate: Jan 29, end: Feb 1, DaysInMonth = 31, days = 3\n                days = end.day + (ISODaysInMonth(mid.year, mid.month) - mid.day);\n            }\n            if (largestUnit === 'month') {\n                months += years * 12;\n                years = 0;\n            }\n            return { years, months, weeks: 0, days };\n        }\n        case 'week':\n        case 'day': {\n            let larger, smaller, sign;\n            if (CompareISODate(y1, m1, d1, y2, m2, d2) < 0) {\n                smaller = { year: y1, month: m1, day: d1 };\n                larger = { year: y2, month: m2, day: d2 };\n                sign = 1;\n            }\n            else {\n                smaller = { year: y2, month: m2, day: d2 };\n                larger = { year: y1, month: m1, day: d1 };\n                sign = -1;\n            }\n            let days = DayOfYear(larger.year, larger.month, larger.day) - DayOfYear(smaller.year, smaller.month, smaller.day);\n            for (let year = smaller.year; year < larger.year; ++year) {\n                days += LeapYear(year) ? 366 : 365;\n            }\n            let weeks = 0;\n            if (largestUnit === 'week') {\n                weeks = MathFloor(days / 7);\n                days %= 7;\n            }\n            weeks *= sign;\n            days *= sign;\n            return { years: 0, months: 0, weeks, days };\n        }\n        default:\n            throw new Error('assert not reached');\n    }\n}\nexport function DifferenceTime(h1, min1, s1, ms1, µs1, ns1, h2, min2, s2, ms2, µs2, ns2) {\n    let hours = h2 - h1;\n    let minutes = min2 - min1;\n    let seconds = s2 - s1;\n    let milliseconds = ms2 - ms1;\n    let microseconds = µs2 - µs1;\n    let nanoseconds = ns2 - ns1;\n    const sign = DurationSign(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    hours *= sign;\n    minutes *= sign;\n    seconds *= sign;\n    milliseconds *= sign;\n    microseconds *= sign;\n    nanoseconds *= sign;\n    let deltaDays = 0;\n    ({\n        deltaDays,\n        hour: hours,\n        minute: minutes,\n        second: seconds,\n        millisecond: milliseconds,\n        microsecond: microseconds,\n        nanosecond: nanoseconds\n    } = BalanceTime(hours, minutes, seconds, milliseconds, microseconds, nanoseconds));\n    deltaDays *= sign;\n    hours *= sign;\n    minutes *= sign;\n    seconds *= sign;\n    milliseconds *= sign;\n    microseconds *= sign;\n    nanoseconds *= sign;\n    return { deltaDays, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function DifferenceInstant(ns1, ns2, increment, unit, roundingMode) {\n    const diff = ns2.minus(ns1);\n    const remainder = diff.mod(86400e9);\n    const wholeDays = diff.minus(remainder);\n    const roundedRemainder = RoundNumberToIncrement(remainder, nsPerTimeUnit[unit] * increment, roundingMode);\n    const roundedDiff = wholeDays.plus(roundedRemainder);\n    const nanoseconds = +roundedDiff.mod(1e3);\n    const microseconds = +roundedDiff.divide(1e3).mod(1e3);\n    const milliseconds = +roundedDiff.divide(1e6).mod(1e3);\n    const seconds = +roundedDiff.divide(1e9);\n    return { seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function DifferenceISODateTime(y1Param, mon1Param, d1Param, h1, min1, s1, ms1, µs1, ns1, y2, mon2, d2, h2, min2, s2, ms2, µs2, ns2, calendar, largestUnit, options = ObjectCreate(null)) {\n    let y1 = y1Param;\n    let mon1 = mon1Param;\n    let d1 = d1Param;\n    let { deltaDays, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = DifferenceTime(h1, min1, s1, ms1, µs1, ns1, h2, min2, s2, ms2, µs2, ns2);\n    const timeSign = DurationSign(0, 0, 0, deltaDays, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    ({ year: y1, month: mon1, day: d1 } = BalanceISODate(y1, mon1, d1 + deltaDays));\n    const dateSign = CompareISODate(y2, mon2, d2, y1, mon1, d1);\n    if (dateSign === -timeSign) {\n        ({ year: y1, month: mon1, day: d1 } = BalanceISODate(y1, mon1, d1 - timeSign));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(-timeSign, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    }\n    const date1 = CreateTemporalDate(y1, mon1, d1, calendar);\n    const date2 = CreateTemporalDate(y2, mon2, d2, calendar);\n    const dateLargestUnit = LargerOfTwoTemporalUnits('day', largestUnit);\n    const untilOptions = { ...options, largestUnit: dateLargestUnit };\n    let { years, months, weeks, days } = CalendarDateUntil(calendar, date1, date2, untilOptions);\n    // Signs of date part and time part may not agree; balance them together\n    ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function DifferenceZonedDateTime(ns1, ns2, timeZone, calendar, largestUnit, options) {\n    const nsDiff = ns2.subtract(ns1);\n    if (nsDiff.isZero()) {\n        return {\n            years: 0,\n            months: 0,\n            weeks: 0,\n            days: 0,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            milliseconds: 0,\n            microseconds: 0,\n            nanoseconds: 0\n        };\n    }\n    // Find the difference in dates only.\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const start = new TemporalInstant(ns1);\n    const end = new TemporalInstant(ns2);\n    const dtStart = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, start, calendar);\n    const dtEnd = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, end, calendar);\n    let { years, months, weeks, days } = DifferenceISODateTime(GetSlot(dtStart, ISO_YEAR), GetSlot(dtStart, ISO_MONTH), GetSlot(dtStart, ISO_DAY), GetSlot(dtStart, ISO_HOUR), GetSlot(dtStart, ISO_MINUTE), GetSlot(dtStart, ISO_SECOND), GetSlot(dtStart, ISO_MILLISECOND), GetSlot(dtStart, ISO_MICROSECOND), GetSlot(dtStart, ISO_NANOSECOND), GetSlot(dtEnd, ISO_YEAR), GetSlot(dtEnd, ISO_MONTH), GetSlot(dtEnd, ISO_DAY), GetSlot(dtEnd, ISO_HOUR), GetSlot(dtEnd, ISO_MINUTE), GetSlot(dtEnd, ISO_SECOND), GetSlot(dtEnd, ISO_MILLISECOND), GetSlot(dtEnd, ISO_MICROSECOND), GetSlot(dtEnd, ISO_NANOSECOND), calendar, largestUnit, options);\n    const intermediateNs = AddZonedDateTime(start, timeZone, calendar, years, months, weeks, 0, 0, 0, 0, 0, 0, 0);\n    // may disambiguate\n    let timeRemainderNs = ns2.subtract(intermediateNs);\n    const intermediate = CreateTemporalZonedDateTime(intermediateNs, timeZone, calendar);\n    ({ nanoseconds: timeRemainderNs, days } = NanosecondsToDays(timeRemainderNs, intermediate));\n    // Finally, merge the date and time durations and return the merged result.\n    const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, 0, 0, 0, timeRemainderNs.toJSNumber(), 'hour');\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function AddISODate(yearParam, monthParam, dayParam, yearsParam, monthsParam, weeksParam, daysParam, overflow) {\n    let year = yearParam;\n    let month = monthParam;\n    let day = dayParam;\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    year += years;\n    month += months;\n    ({ year, month } = BalanceISOYearMonth(year, month));\n    ({ year, month, day } = RegulateISODate(year, month, day, overflow));\n    days += 7 * weeks;\n    day += days;\n    ({ year, month, day } = BalanceISODate(year, month, day));\n    return { year, month, day };\n}\nexport function AddTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds) {\n    let hour = hourParam;\n    let minute = minuteParam;\n    let second = secondParam;\n    let millisecond = millisecondParam;\n    let microsecond = microsecondParam;\n    let nanosecond = nanosecondParam;\n    hour += hours;\n    minute += minutes;\n    second += seconds;\n    millisecond += milliseconds;\n    microsecond += microseconds;\n    nanosecond += nanoseconds;\n    let deltaDays = 0;\n    ({ deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = BalanceTime(hour, minute, second, millisecond, microsecond, nanosecond));\n    return { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function AddDuration(y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1, y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2, relativeTo) {\n    const largestUnit1 = DefaultTemporalLargestUnit(y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1);\n    const largestUnit2 = DefaultTemporalLargestUnit(y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2);\n    const largestUnit = LargerOfTwoTemporalUnits(largestUnit1, largestUnit2);\n    let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n    if (!relativeTo) {\n        if (largestUnit === 'year' || largestUnit === 'month' || largestUnit === 'week') {\n            throw new RangeError('relativeTo is required for years, months, or weeks arithmetic');\n        }\n        years = months = weeks = 0;\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(d1 + d2, h1 + h2, min1 + min2, s1 + s2, ms1 + ms2, µs1 + µs2, ns1 + ns2, largestUnit));\n    }\n    else if (IsTemporalDate(relativeTo)) {\n        const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const dateDuration1 = new TemporalDuration(y1, mon1, w1, d1, 0, 0, 0, 0, 0, 0);\n        const dateDuration2 = new TemporalDuration(y2, mon2, w2, d2, 0, 0, 0, 0, 0, 0);\n        const dateAdd = calendar.dateAdd;\n        const firstAddOptions = ObjectCreate(null);\n        const intermediate = CalendarDateAdd(calendar, relativeTo, dateDuration1, firstAddOptions, dateAdd);\n        const secondAddOptions = ObjectCreate(null);\n        const end = CalendarDateAdd(calendar, intermediate, dateDuration2, secondAddOptions, dateAdd);\n        const dateLargestUnit = LargerOfTwoTemporalUnits('day', largestUnit);\n        const differenceOptions = ObjectCreate(null);\n        differenceOptions.largestUnit = dateLargestUnit;\n        ({ years, months, weeks, days } = CalendarDateUntil(calendar, relativeTo, end, differenceOptions));\n        // Signs of date part and time part may not agree; balance them together\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(days, h1 + h2, min1 + min2, s1 + s2, ms1 + ms2, µs1 + µs2, ns1 + ns2, largestUnit));\n    }\n    else {\n        // relativeTo is a ZonedDateTime\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        const timeZone = GetSlot(relativeTo, TIME_ZONE);\n        const calendar = GetSlot(relativeTo, CALENDAR);\n        const intermediateNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1);\n        const endNs = AddZonedDateTime(new TemporalInstant(intermediateNs), timeZone, calendar, y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2);\n        if (largestUnit !== 'year' && largestUnit !== 'month' && largestUnit !== 'week' && largestUnit !== 'day') {\n            // The user is only asking for a time difference, so return difference of instants.\n            years = 0;\n            months = 0;\n            weeks = 0;\n            days = 0;\n            ({ seconds, milliseconds, microseconds, nanoseconds } = DifferenceInstant(GetSlot(relativeTo, EPOCHNANOSECONDS), endNs, 1, 'nanosecond', 'halfExpand'));\n            ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        }\n        else {\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                DifferenceZonedDateTime(GetSlot(relativeTo, EPOCHNANOSECONDS), endNs, timeZone, calendar, largestUnit));\n        }\n    }\n    RejectDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function AddInstant(epochNanoseconds, h, min, s, ms, µs, ns) {\n    let sum = bigInt.zero;\n    sum = sum.plus(bigInt(ns));\n    sum = sum.plus(bigInt(µs).multiply(1e3));\n    sum = sum.plus(bigInt(ms).multiply(1e6));\n    sum = sum.plus(bigInt(s).multiply(1e9));\n    sum = sum.plus(bigInt(min).multiply(60 * 1e9));\n    sum = sum.plus(bigInt(h).multiply(60 * 60 * 1e9));\n    const result = bigInt(epochNanoseconds).plus(sum);\n    ValidateEpochNanoseconds(result);\n    return result;\n}\nexport function AddDateTime(year, month, day, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, calendar, years, months, weeks, daysParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, options) {\n    let days = daysParam;\n    // Add the time part\n    let { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = AddTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    days += deltaDays;\n    // Delegate the date part addition to the calendar\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    const datePart = CreateTemporalDate(year, month, day, calendar);\n    const dateDuration = new TemporalDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const addedDate = CalendarDateAdd(calendar, datePart, dateDuration, options);\n    return {\n        year: GetSlot(addedDate, ISO_YEAR),\n        month: GetSlot(addedDate, ISO_MONTH),\n        day: GetSlot(addedDate, ISO_DAY),\n        hour,\n        minute,\n        second,\n        millisecond,\n        microsecond,\n        nanosecond\n    };\n}\nexport function AddZonedDateTime(instant, timeZone, calendar, years, months, weeks, days, h, min, s, ms, µs, ns, options) {\n    // If only time is to be added, then use Instant math. It's not OK to fall\n    // through to the date/time code below because compatible disambiguation in\n    // the PlainDateTime=>Instant conversion will change the offset of any\n    // ZonedDateTime in the repeated clock time after a backwards transition.\n    // When adding/subtracting time units and not dates, this disambiguation is\n    // not expected and so is avoided below via a fast path for time-only\n    // arithmetic.\n    // BTW, this behavior is similar in spirit to offset: 'prefer' in `with`.\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    if (DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0) === 0) {\n        return AddInstant(GetSlot(instant, EPOCHNANOSECONDS), h, min, s, ms, µs, ns);\n    }\n    // RFC 5545 requires the date portion to be added in calendar days and the\n    // time portion to be added in exact time.\n    const dt = BuiltinTimeZoneGetPlainDateTimeFor(timeZone, instant, calendar);\n    const datePart = CreateTemporalDate(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), calendar);\n    const dateDuration = new TemporalDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const addedDate = CalendarDateAdd(calendar, datePart, dateDuration, options);\n    const dtIntermediate = CreateTemporalDateTime(GetSlot(addedDate, ISO_YEAR), GetSlot(addedDate, ISO_MONTH), GetSlot(addedDate, ISO_DAY), GetSlot(dt, ISO_HOUR), GetSlot(dt, ISO_MINUTE), GetSlot(dt, ISO_SECOND), GetSlot(dt, ISO_MILLISECOND), GetSlot(dt, ISO_MICROSECOND), GetSlot(dt, ISO_NANOSECOND), calendar);\n    // Note that 'compatible' is used below because this disambiguation behavior\n    // is required by RFC 5545.\n    const instantIntermediate = BuiltinTimeZoneGetInstantFor(timeZone, dtIntermediate, 'compatible');\n    return AddInstant(GetSlot(instantIntermediate, EPOCHNANOSECONDS), h, min, s, ms, µs, ns);\n}\nfunction RoundNumberToIncrement(quantity, increment, mode) {\n    if (increment === 1)\n        return quantity;\n    let { quotient, remainder } = quantity.divmod(increment);\n    if (remainder.equals(bigInt.zero))\n        return quantity;\n    const sign = remainder.lt(bigInt.zero) ? -1 : 1;\n    switch (mode) {\n        case 'ceil':\n            if (sign > 0)\n                quotient = quotient.add(sign);\n            break;\n        case 'floor':\n            if (sign < 0)\n                quotient = quotient.add(sign);\n            break;\n        case 'trunc':\n            // no change needed, because divmod is a truncation\n            break;\n        case 'halfExpand':\n            // \"half up away from zero\"\n            if (remainder.multiply(2).abs().toJSNumber() >= increment)\n                quotient = quotient.add(sign);\n            break;\n    }\n    return quotient.multiply(increment);\n}\nexport function RoundInstant(epochNs, increment, unit, roundingMode) {\n    // Note: NonNegativeModulo, but with BigInt\n    let remainder = epochNs.mod(86400e9);\n    if (remainder.lesser(0))\n        remainder = remainder.plus(86400e9);\n    const wholeDays = epochNs.minus(remainder);\n    const roundedRemainder = RoundNumberToIncrement(remainder, nsPerTimeUnit[unit] * increment, roundingMode);\n    return wholeDays.plus(roundedRemainder);\n}\nexport function RoundISODateTime(yearParam, monthParam, dayParam, hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, increment, unit, roundingMode, dayLengthNs = 86400e9) {\n    const { deltaDays, hour, minute, second, millisecond, microsecond, nanosecond } = RoundTime(hourParam, minuteParam, secondParam, millisecondParam, microsecondParam, nanosecondParam, increment, unit, roundingMode, dayLengthNs);\n    const { year, month, day } = BalanceISODate(yearParam, monthParam, dayParam + deltaDays);\n    return { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond };\n}\nexport function RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode, dayLengthNs = 86400e9) {\n    let quantity = bigInt.zero;\n    switch (unit) {\n        case 'day':\n        case 'hour':\n            quantity = bigInt(hour);\n        // fall through\n        case 'minute':\n            quantity = quantity.multiply(60).plus(minute);\n        // fall through\n        case 'second':\n            quantity = quantity.multiply(60).plus(second);\n        // fall through\n        case 'millisecond':\n            quantity = quantity.multiply(1000).plus(millisecond);\n        // fall through\n        case 'microsecond':\n            quantity = quantity.multiply(1000).plus(microsecond);\n        // fall through\n        case 'nanosecond':\n            quantity = quantity.multiply(1000).plus(nanosecond);\n    }\n    const nsPerUnit = unit === 'day' ? dayLengthNs : nsPerTimeUnit[unit];\n    const rounded = RoundNumberToIncrement(quantity, nsPerUnit * increment, roundingMode);\n    const result = rounded.divide(nsPerUnit).toJSNumber();\n    switch (unit) {\n        case 'day':\n            return { deltaDays: result, hour: 0, minute: 0, second: 0, millisecond: 0, microsecond: 0, nanosecond: 0 };\n        case 'hour':\n            return BalanceTime(result, 0, 0, 0, 0, 0);\n        case 'minute':\n            return BalanceTime(hour, result, 0, 0, 0, 0);\n        case 'second':\n            return BalanceTime(hour, minute, result, 0, 0, 0);\n        case 'millisecond':\n            return BalanceTime(hour, minute, second, result, 0, 0);\n        case 'microsecond':\n            return BalanceTime(hour, minute, second, millisecond, result, 0);\n        case 'nanosecond':\n            return BalanceTime(hour, minute, second, millisecond, microsecond, result);\n        default:\n            throw new Error(`Invalid unit ${unit}`);\n    }\n}\nfunction DaysUntil(earlier, later) {\n    return DifferenceISODate(GetSlot(earlier, ISO_YEAR), GetSlot(earlier, ISO_MONTH), GetSlot(earlier, ISO_DAY), GetSlot(later, ISO_YEAR), GetSlot(later, ISO_MONTH), GetSlot(later, ISO_DAY), 'day').days;\n}\nfunction MoveRelativeDate(calendar, relativeToParam, duration) {\n    const options = ObjectCreate(null);\n    const later = CalendarDateAdd(calendar, relativeToParam, duration, options);\n    const days = DaysUntil(relativeToParam, later);\n    return { relativeTo: later, days };\n}\nexport function MoveRelativeZonedDateTime(relativeTo, years, months, weeks, days) {\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    const intermediateNs = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    return CreateTemporalZonedDateTime(intermediateNs, timeZone, calendar);\n}\nexport function AdjustRoundedDurationDays(yearsParam, monthsParam, weeksParam, daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, increment, unit, roundingMode, relativeTo) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    let hours = hoursParam;\n    let minutes = minutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = nanosecondsParam;\n    if (!IsTemporalZonedDateTime(relativeTo) ||\n        unit === 'year' ||\n        unit === 'month' ||\n        unit === 'week' ||\n        unit === 'day' ||\n        (unit === 'nanosecond' && increment === 1)) {\n        return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n    }\n    // There's one more round of rounding possible: if relativeTo is a\n    // ZonedDateTime, the time units could have rounded up into enough hours\n    // to exceed the day length. If this happens, grow the date part by a\n    // single day and re-run exact time rounding on the smaller remainder. DO\n    // NOT RECURSE, because once the extra hours are sucked up into the date\n    // duration, there's no way for another full day to come from the next\n    // round of rounding. And if it were possible (e.g. contrived calendar\n    // with 30-minute-long \"days\") then it'd risk an infinite loop.\n    let timeRemainderNs = TotalDurationNanoseconds(0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 0);\n    const direction = MathSign(timeRemainderNs.toJSNumber());\n    const timeZone = GetSlot(relativeTo, TIME_ZONE);\n    const calendar = GetSlot(relativeTo, CALENDAR);\n    const dayStart = AddZonedDateTime(GetSlot(relativeTo, INSTANT), timeZone, calendar, years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n    const dayEnd = AddZonedDateTime(new TemporalInstant(dayStart), timeZone, calendar, 0, 0, 0, direction, 0, 0, 0, 0, 0, 0);\n    const dayLengthNs = dayEnd.subtract(dayStart);\n    if (timeRemainderNs.subtract(dayLengthNs).multiply(direction).geq(0)) {\n        ({ years, months, weeks, days } = AddDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0, 0, 0, 0, direction, 0, 0, 0, 0, 0, 0, relativeTo));\n        timeRemainderNs = RoundInstant(timeRemainderNs.subtract(dayLengthNs), increment, unit, roundingMode);\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = BalanceDuration(0, 0, 0, 0, 0, 0, timeRemainderNs.toJSNumber(), 'hour'));\n    }\n    return { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds };\n}\nexport function RoundDuration(yearsParam, monthsParam, weeksParam, daysParam, hoursParam, minutesParam, secondsParam, millisecondsParam, microsecondsParam, nanosecondsParam, increment, unit, roundingMode, relativeToParam = undefined) {\n    let years = yearsParam;\n    let months = monthsParam;\n    let weeks = weeksParam;\n    let days = daysParam;\n    let hours = hoursParam;\n    let minutes = minutesParam;\n    let seconds = secondsParam;\n    let milliseconds = millisecondsParam;\n    let microseconds = microsecondsParam;\n    let nanoseconds = bigInt(nanosecondsParam);\n    const TemporalDuration = GetIntrinsic('%Temporal.Duration%');\n    let calendar, zdtRelative;\n    // A cast is used below because relativeTo will be either PlainDate or\n    // undefined for the rest of this long method (after any ZDT=>PlainDate\n    // conversion below), and TS isn't smart enough to know that the type has\n    // changed. See https://github.com/microsoft/TypeScript/issues/27706.\n    let relativeTo = relativeToParam;\n    if (relativeTo) {\n        if (IsTemporalZonedDateTime(relativeTo)) {\n            zdtRelative = relativeTo;\n            relativeTo = ToTemporalDate(relativeTo);\n        }\n        else if (!IsTemporalDate(relativeTo)) {\n            throw new TypeError('starting point must be PlainDate or ZonedDateTime');\n        }\n        calendar = GetSlot(relativeTo, CALENDAR);\n    }\n    // First convert time units up to days, if rounding to days or higher units.\n    // If rounding relative to a ZonedDateTime, then some days may not be 24h.\n    let dayLengthNs;\n    if (unit === 'year' || unit === 'month' || unit === 'week' || unit === 'day') {\n        nanoseconds = TotalDurationNanoseconds(0, hours, minutes, seconds, milliseconds, microseconds, nanosecondsParam, 0);\n        let intermediate;\n        if (zdtRelative) {\n            intermediate = MoveRelativeZonedDateTime(zdtRelative, years, months, weeks, days);\n        }\n        let deltaDays;\n        ({ days: deltaDays, nanoseconds, dayLengthNs } = NanosecondsToDays(nanoseconds, intermediate));\n        days += deltaDays;\n        hours = minutes = seconds = milliseconds = microseconds = 0;\n    }\n    let total;\n    switch (unit) {\n        case 'year': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for years rounding');\n            // convert months and weeks to days by calculating difference(\n            // relativeTo + years, relativeTo + { years, months, weeks })\n            const yearsDuration = new TemporalDuration(years);\n            const dateAdd = calendar.dateAdd;\n            const firstAddOptions = ObjectCreate(null);\n            const yearsLater = CalendarDateAdd(calendar, relativeTo, yearsDuration, firstAddOptions, dateAdd);\n            const yearsMonthsWeeks = new TemporalDuration(years, months, weeks);\n            const secondAddOptions = ObjectCreate(null);\n            const yearsMonthsWeeksLater = CalendarDateAdd(calendar, relativeTo, yearsMonthsWeeks, secondAddOptions, dateAdd);\n            const monthsWeeksInDays = DaysUntil(yearsLater, yearsMonthsWeeksLater);\n            relativeTo = yearsLater;\n            days += monthsWeeksInDays;\n            const thirdAddOptions = ObjectCreate(null);\n            const daysLater = CalendarDateAdd(calendar, relativeTo, { days }, thirdAddOptions, dateAdd);\n            const untilOptions = ObjectCreate(null);\n            untilOptions.largestUnit = 'year';\n            const yearsPassed = CalendarDateUntil(calendar, relativeTo, daysLater, untilOptions).years;\n            years += yearsPassed;\n            const oldRelativeTo = relativeTo;\n            const fourthAddOptions = ObjectCreate(null);\n            relativeTo = CalendarDateAdd(calendar, relativeTo, { years: yearsPassed }, fourthAddOptions, dateAdd);\n            const daysPassed = DaysUntil(oldRelativeTo, relativeTo);\n            days -= daysPassed;\n            const oneYear = new TemporalDuration(days < 0 ? -1 : 1);\n            let { days: oneYearDays } = MoveRelativeDate(calendar, relativeTo, oneYear);\n            // Note that `nanoseconds` below (here and in similar code for months,\n            // weeks, and days further below) isn't actually nanoseconds for the\n            // full date range.  Instead, it's a BigInt representation of total\n            // days multiplied by the number of nanoseconds in the last day of\n            // the duration. This lets us do days-or-larger rounding using BigInt\n            // math which reduces precision loss.\n            oneYearDays = MathAbs(oneYearDays);\n            const divisor = bigInt(oneYearDays).multiply(dayLengthNs);\n            nanoseconds = divisor.multiply(years).plus(bigInt(days).multiply(dayLengthNs)).plus(nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor.multiply(increment).toJSNumber(), roundingMode);\n            total = nanoseconds.toJSNumber() / divisor.toJSNumber();\n            years = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            months = weeks = days = 0;\n            break;\n        }\n        case 'month': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for months rounding');\n            // convert weeks to days by calculating difference(relativeTo +\n            //   { years, months }, relativeTo + { years, months, weeks })\n            const yearsMonths = new TemporalDuration(years, months);\n            const dateAdd = calendar.dateAdd;\n            const firstAddOptions = ObjectCreate(null);\n            const yearsMonthsLater = CalendarDateAdd(calendar, relativeTo, yearsMonths, firstAddOptions, dateAdd);\n            const yearsMonthsWeeks = new TemporalDuration(years, months, weeks);\n            const secondAddOptions = ObjectCreate(null);\n            const yearsMonthsWeeksLater = CalendarDateAdd(calendar, relativeTo, yearsMonthsWeeks, secondAddOptions, dateAdd);\n            const weeksInDays = DaysUntil(yearsMonthsLater, yearsMonthsWeeksLater);\n            relativeTo = yearsMonthsLater;\n            days += weeksInDays;\n            // Months may be different lengths of days depending on the calendar,\n            // convert days to months in a loop as described above under 'years'.\n            const sign = MathSign(days);\n            const oneMonth = new TemporalDuration(0, days < 0 ? -1 : 1);\n            let oneMonthDays;\n            ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            while (MathAbs(days) >= MathAbs(oneMonthDays)) {\n                months += sign;\n                days -= oneMonthDays;\n                ({ relativeTo, days: oneMonthDays } = MoveRelativeDate(calendar, relativeTo, oneMonth));\n            }\n            oneMonthDays = MathAbs(oneMonthDays);\n            const divisor = bigInt(oneMonthDays).multiply(dayLengthNs);\n            nanoseconds = divisor.multiply(months).plus(bigInt(days).multiply(dayLengthNs)).plus(nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor.multiply(increment).toJSNumber(), roundingMode);\n            total = nanoseconds.toJSNumber() / divisor.toJSNumber();\n            months = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            weeks = days = 0;\n            break;\n        }\n        case 'week': {\n            if (!calendar)\n                throw new RangeError('A starting point is required for weeks rounding');\n            // Weeks may be different lengths of days depending on the calendar,\n            // convert days to weeks in a loop as described above under 'years'.\n            const sign = MathSign(days);\n            const oneWeek = new TemporalDuration(0, 0, days < 0 ? -1 : 1);\n            let oneWeekDays;\n            ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            while (MathAbs(days) >= MathAbs(oneWeekDays)) {\n                weeks += sign;\n                days -= oneWeekDays;\n                ({ relativeTo, days: oneWeekDays } = MoveRelativeDate(calendar, relativeTo, oneWeek));\n            }\n            oneWeekDays = MathAbs(oneWeekDays);\n            const divisor = bigInt(oneWeekDays).multiply(dayLengthNs);\n            nanoseconds = divisor.multiply(weeks).plus(bigInt(days).multiply(dayLengthNs)).plus(nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor.multiply(increment).toJSNumber(), roundingMode);\n            total = nanoseconds.toJSNumber() / divisor.toJSNumber();\n            weeks = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            days = 0;\n            break;\n        }\n        case 'day': {\n            const divisor = bigInt(dayLengthNs);\n            nanoseconds = divisor.multiply(days).plus(nanoseconds);\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor.multiply(increment).toJSNumber(), roundingMode);\n            total = nanoseconds.toJSNumber() / divisor.toJSNumber();\n            days = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            break;\n        }\n        case 'hour': {\n            const divisor = 3600e9;\n            nanoseconds = bigInt(hours)\n                .multiply(3600e9)\n                .plus(bigInt(minutes).multiply(60e9))\n                .plus(bigInt(seconds).multiply(1e9))\n                .plus(bigInt(milliseconds).multiply(1e6))\n                .plus(bigInt(microseconds).multiply(1e3))\n                .plus(nanoseconds);\n            total = nanoseconds.toJSNumber() / divisor;\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor * increment, roundingMode);\n            hours = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            minutes = seconds = milliseconds = microseconds = 0;\n            break;\n        }\n        case 'minute': {\n            const divisor = 60e9;\n            nanoseconds = bigInt(minutes)\n                .multiply(60e9)\n                .plus(bigInt(seconds).multiply(1e9))\n                .plus(bigInt(milliseconds).multiply(1e6))\n                .plus(bigInt(microseconds).multiply(1e3))\n                .plus(nanoseconds);\n            total = nanoseconds.toJSNumber() / divisor;\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor * increment, roundingMode);\n            minutes = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            seconds = milliseconds = microseconds = 0;\n            break;\n        }\n        case 'second': {\n            const divisor = 1e9;\n            nanoseconds = bigInt(seconds)\n                .multiply(1e9)\n                .plus(bigInt(milliseconds).multiply(1e6))\n                .plus(bigInt(microseconds).multiply(1e3))\n                .plus(nanoseconds);\n            total = nanoseconds.toJSNumber() / divisor;\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor * increment, roundingMode);\n            seconds = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            milliseconds = microseconds = 0;\n            break;\n        }\n        case 'millisecond': {\n            const divisor = 1e6;\n            nanoseconds = bigInt(milliseconds).multiply(1e6).plus(bigInt(microseconds).multiply(1e3)).plus(nanoseconds);\n            total = nanoseconds.toJSNumber() / divisor;\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor * increment, roundingMode);\n            milliseconds = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            microseconds = 0;\n            break;\n        }\n        case 'microsecond': {\n            const divisor = 1e3;\n            nanoseconds = bigInt(microseconds).multiply(1e3).plus(nanoseconds);\n            total = nanoseconds.toJSNumber() / divisor;\n            const rounded = RoundNumberToIncrement(nanoseconds, divisor * increment, roundingMode);\n            microseconds = rounded.divide(divisor).toJSNumber();\n            nanoseconds = bigInt.zero;\n            break;\n        }\n        case 'nanosecond': {\n            total = nanoseconds.toJSNumber();\n            nanoseconds = RoundNumberToIncrement(bigInt(nanoseconds), increment, roundingMode);\n            break;\n        }\n    }\n    return {\n        years,\n        months,\n        weeks,\n        days,\n        hours,\n        minutes,\n        seconds,\n        milliseconds,\n        microseconds,\n        nanoseconds: nanoseconds.toJSNumber(),\n        total\n    };\n}\nexport function CompareISODate(y1, m1, d1, y2, m2, d2) {\n    for (const [x, y] of [\n        [y1, y2],\n        [m1, m2],\n        [d1, d2]\n    ]) {\n        if (x !== y)\n            return ComparisonResult(x - y);\n    }\n    return 0;\n}\nfunction NonNegativeModulo(x, y) {\n    let result = x % y;\n    if (ObjectIs(result, -0))\n        return 0;\n    if (result < 0)\n        result += y;\n    return result;\n}\nexport function ToBigInt(arg) {\n    if (bigInt.isInstance(arg)) {\n        return arg;\n    }\n    let prim = arg;\n    if (typeof arg === 'object') {\n        const toPrimFn = arg[Symbol.toPrimitive];\n        if (toPrimFn && typeof toPrimFn === 'function') {\n            prim = ReflectApply(toPrimFn, arg, ['number']);\n        }\n    }\n    switch (typeof prim) {\n        case 'undefined':\n        case 'object':\n        case 'number':\n        case 'symbol':\n        default:\n            throw new TypeError(`cannot convert ${typeof arg} to bigint`);\n        case 'string':\n            if (!prim.match(/^\\s*(?:[+-]?\\d+\\s*)?$/)) {\n                throw new SyntaxError('invalid BigInt syntax');\n            }\n        // eslint: no-fallthrough: false\n        case 'bigint':\n            try {\n                return bigInt(prim);\n            }\n            catch (e) {\n                if (e instanceof Error && e.message.startsWith('Invalid integer'))\n                    throw new SyntaxError(e.message);\n                throw e;\n            }\n        case 'boolean':\n            if (prim) {\n                return bigInt(1);\n            }\n            else {\n                return bigInt.zero;\n            }\n    }\n}\n// Note: This method returns values with bogus nanoseconds based on the previous iteration's\n// milliseconds. That way there is a guarantee that the full nanoseconds are always going to be\n// increasing at least and that the microsecond and nanosecond fields are likely to be non-zero.\nexport const SystemUTCEpochNanoSeconds = (() => {\n    let ns = Date.now() % 1e6;\n    return () => {\n        const ms = Date.now();\n        const result = bigInt(ms).multiply(1e6).plus(ns);\n        ns = ms % 1e6;\n        return bigInt.min(NS_MAX, bigInt.max(NS_MIN, result));\n    };\n})();\nexport function SystemTimeZone() {\n    const fmt = new IntlDateTimeFormat('en-us');\n    const TemporalTimeZone = GetIntrinsic('%Temporal.TimeZone%');\n    return new TemporalTimeZone(ParseTemporalTimeZone(fmt.resolvedOptions().timeZone));\n}\nexport function ComparisonResult(value) {\n    return value < 0 ? -1 : value > 0 ? 1 : value;\n}\nexport function GetOptionsObject(options) {\n    if (options === undefined)\n        return ObjectCreate(null);\n    if (IsObject(options) && options !== null)\n        return options;\n    throw new TypeError(`Options parameter must be an object, not ${options === null ? 'null' : `${typeof options}`}`);\n}\nexport function CreateOnePropObject(propName, propValue) {\n    const o = ObjectCreate(null);\n    o[propName] = propValue;\n    return o;\n}\nfunction GetOption(options, property, allowedValues, fallback) {\n    let value = options[property];\n    if (value !== undefined) {\n        value = ToString(value);\n        if (!allowedValues.includes(value)) {\n            throw new RangeError(`${property} must be one of ${allowedValues.join(', ')}, not ${value}`);\n        }\n        return value;\n    }\n    return fallback;\n}\nfunction GetNumberOption(options, property, minimum, maximum, fallback) {\n    let valueRaw = options[property];\n    if (valueRaw === undefined)\n        return fallback;\n    const value = ToNumber(valueRaw);\n    if (NumberIsNaN(value) || value < minimum || value > maximum) {\n        throw new RangeError(`${property} must be between ${minimum} and ${maximum}, not ${value}`);\n    }\n    return MathFloor(value);\n}\nconst OFFSET = new RegExp(`^${PARSE.offset.source}$`);\nfunction bisect(getState, leftParam, rightParam, lstateParam = getState(leftParam), rstateParam = getState(rightParam)) {\n    let left = bigInt(leftParam);\n    let right = bigInt(rightParam);\n    let lstate = lstateParam;\n    let rstate = rstateParam;\n    while (right.minus(left).greater(1)) {\n        const middle = left.plus(right).divide(2);\n        const mstate = getState(middle);\n        if (mstate === lstate) {\n            left = middle;\n            lstate = mstate;\n        }\n        else if (mstate === rstate) {\n            right = middle;\n            rstate = mstate;\n        }\n        else {\n            throw new Error(`invalid state in bisection ${lstate} - ${mstate} - ${rstate}`);\n        }\n    }\n    return right;\n}\nconst nsPerTimeUnit = {\n    hour: 3600e9,\n    minute: 60e9,\n    second: 1e9,\n    millisecond: 1e6,\n    microsecond: 1e3,\n    nanosecond: 1\n};\n//# sourceMappingURL=ecmascript.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic } from './intrinsicclass';\nimport { GetSlot, INSTANT, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, TIME_ZONE } from './slots';\nconst DATE = Symbol('date');\nconst YM = Symbol('ym');\nconst MD = Symbol('md');\nconst TIME = Symbol('time');\nconst DATETIME = Symbol('datetime');\nconst ZONED = Symbol('zoneddatetime');\nconst INST = Symbol('instant');\nconst ORIGINAL = Symbol('original');\nconst TZ_RESOLVED = Symbol('timezone');\nconst TZ_GIVEN = Symbol('timezone-id-given');\nconst CAL_ID = Symbol('calendar-id');\nconst LOCALE = Symbol('locale');\nconst OPTIONS = Symbol('options');\nconst descriptor = (value) => {\n    return {\n        value,\n        enumerable: true,\n        writable: false,\n        configurable: true\n    };\n};\nconst IntlDateTimeFormat = globalThis.Intl.DateTimeFormat;\nconst ObjectAssign = Object.assign;\nconst ObjectHasOwnProperty = Object.prototype.hasOwnProperty;\nconst ReflectApply = Reflect.apply;\n// Construction of built-in Intl.DateTimeFormat objects is sloooooow,\n// so we'll only create those instances when we need them.\n// See https://bugs.chromium.org/p/v8/issues/detail?id=6528\nfunction getPropLazy(obj, prop) {\n    let val = obj[prop];\n    if (typeof val === 'function') {\n        // If we get here, `val` is an \"amender function\". It will take the user's\n        // options and transform them into suitable options to be passed into the\n        // built-in (non-polyfill) Intl.DateTimeFormat constructor. These options\n        // will vary depending on the Temporal type, so that's why we store separate\n        // formatters in separate props on the polyfill's DateTimeFormat instances.\n        // The efficiency happens because we don't create an (expensive) formatter\n        // until the user calls toLocaleString for that Temporal type.\n        val = new IntlDateTimeFormat(obj[LOCALE], val(obj[OPTIONS]));\n        // TODO: can this be typed more cleanly?\n        obj[prop] = val;\n    }\n    return val;\n}\n// Similarly, lazy-init TimeZone instances.\nfunction getResolvedTimeZoneLazy(obj) {\n    let val = obj[TZ_RESOLVED];\n    if (typeof val === 'string') {\n        val = ES.ToTemporalTimeZone(val);\n        obj[TZ_RESOLVED] = val;\n    }\n    return val;\n}\nfunction DateTimeFormatImpl(locale = undefined, optionsParam = {}) {\n    if (!(this instanceof DateTimeFormatImpl)) {\n        return new DateTimeFormatImpl(locale, optionsParam);\n    }\n    const hasOptions = typeof optionsParam !== 'undefined';\n    const options = hasOptions ? ObjectAssign({}, optionsParam) : {};\n    // TODO: remove type assertion after Temporal types land in TS lib types\n    const original = new IntlDateTimeFormat(locale, options);\n    const ro = original.resolvedOptions();\n    // DateTimeFormat instances are very expensive to create. Therefore, they will\n    // be lazily created only when needed, using the locale and options provided.\n    // But it's possible for callers to mutate those inputs before lazy creation\n    // happens. For this reason, we clone the inputs instead of caching the\n    // original objects. To avoid the complexity of deep cloning any inputs that\n    // are themselves objects (e.g. the locales array, or options property values\n    // that will be coerced to strings), we rely on `resolvedOptions()` to do the\n    // coercion and cloning for us. Unfortunately, we can't just use the resolved\n    // options as-is because our options-amending logic adds additional fields if\n    // the user doesn't supply any unit fields like year, month, day, hour, etc.\n    // Therefore, we limit the properties in the clone to properties that were\n    // present in the original input.\n    if (hasOptions) {\n        const clonedResolved = ObjectAssign({}, ro);\n        for (const prop in clonedResolved) {\n            if (!ReflectApply(ObjectHasOwnProperty, options, [prop])) {\n                delete clonedResolved[prop];\n            }\n        }\n        this[OPTIONS] = clonedResolved;\n    }\n    else {\n        this[OPTIONS] = options;\n    }\n    this[TZ_GIVEN] = options.timeZone ? options.timeZone : null;\n    this[LOCALE] = ro.locale;\n    this[ORIGINAL] = original;\n    this[TZ_RESOLVED] = ro.timeZone;\n    this[CAL_ID] = ro.calendar;\n    this[DATE] = dateAmend;\n    this[YM] = yearMonthAmend;\n    this[MD] = monthDayAmend;\n    this[TIME] = timeAmend;\n    this[DATETIME] = datetimeAmend;\n    this[ZONED] = zonedDateTimeAmend;\n    this[INST] = instantAmend;\n    return undefined; // TODO: I couldn't satisfy TS without adding this. Is there another way?\n}\nObject.defineProperty(DateTimeFormatImpl, 'name', {\n    writable: true,\n    value: 'DateTimeFormat'\n});\nexport const DateTimeFormat = DateTimeFormatImpl;\nDateTimeFormatImpl.supportedLocalesOf = function (locales, options) {\n    return IntlDateTimeFormat.supportedLocalesOf(locales, options);\n};\nconst properties = {\n    resolvedOptions: descriptor(resolvedOptions),\n    format: descriptor(format),\n    formatRange: descriptor(formatRange)\n};\nif ('formatToParts' in IntlDateTimeFormat.prototype) {\n    properties.formatToParts = descriptor(formatToParts);\n}\nif ('formatRangeToParts' in IntlDateTimeFormat.prototype) {\n    properties.formatRangeToParts = descriptor(formatRangeToParts);\n}\nDateTimeFormatImpl.prototype = Object.create(IntlDateTimeFormat.prototype, properties);\nfunction resolvedOptions() {\n    return this[ORIGINAL].resolvedOptions();\n}\nfunction adjustFormatterTimeZone(formatter, timeZone) {\n    if (!timeZone)\n        return formatter;\n    const options = formatter.resolvedOptions();\n    if (options.timeZone === timeZone)\n        return formatter;\n    // Existing Intl isn't typed to accept Temporal-specific options, but will not\n    // break at runtime if we pass them. Also, the lib types for resolved options\n    // are less restrictive than the types for options. For example, `weekday` is\n    // `'long' | 'short' | 'narrow'` in options but `string` in resolved options.\n    // TODO: investigate why, and file an issue against TS if it's a bug.\n    return new IntlDateTimeFormat(options.locale, { ...options, timeZone });\n}\n// TODO: investigate why there's a rest parameter here. Does this function really need to accept extra params?\n// And if so, why doesn't formatRange also accept extra params?\nfunction format(datetime, ...rest) {\n    let { instant, formatter, timeZone } = extractOverrides(datetime, this);\n    if (instant && formatter) {\n        formatter = adjustFormatterTimeZone(formatter, timeZone);\n        return formatter.format(instant.epochMilliseconds);\n    }\n    return this[ORIGINAL].format(datetime, ...rest);\n}\nfunction formatToParts(datetime, ...rest) {\n    let { instant, formatter, timeZone } = extractOverrides(datetime, this);\n    if (instant && formatter) {\n        formatter = adjustFormatterTimeZone(formatter, timeZone);\n        return formatter.formatToParts(instant.epochMilliseconds);\n    }\n    return this[ORIGINAL].formatToParts(datetime, ...rest);\n}\nfunction formatRange(a, b) {\n    if (isTemporalObject(a) || isTemporalObject(b)) {\n        if (!sameTemporalType(a, b)) {\n            throw new TypeError('Intl.DateTimeFormat.formatRange accepts two values of the same type');\n        }\n        const { instant: aa, formatter: aformatter, timeZone: atz } = extractOverrides(a, this);\n        const { instant: bb, formatter: bformatter, timeZone: btz } = extractOverrides(b, this);\n        if (atz && btz && atz !== btz) {\n            throw new RangeError('cannot format range between different time zones');\n        }\n        if (aa && bb && aformatter && bformatter && aformatter === bformatter) {\n            const formatter = adjustFormatterTimeZone(aformatter, atz);\n            // TODO: Remove type assertion after this method lands in TS lib types\n            return formatter.formatRange(aa.epochMilliseconds, bb.epochMilliseconds);\n        }\n    }\n    // TODO: Remove type assertion after this method lands in TS lib types\n    return this[ORIGINAL].formatRange(a, b);\n}\nfunction formatRangeToParts(a, b) {\n    if (isTemporalObject(a) || isTemporalObject(b)) {\n        if (!sameTemporalType(a, b)) {\n            throw new TypeError('Intl.DateTimeFormat.formatRangeToParts accepts two values of the same type');\n        }\n        const { instant: aa, formatter: aformatter, timeZone: atz } = extractOverrides(a, this);\n        const { instant: bb, formatter: bformatter, timeZone: btz } = extractOverrides(b, this);\n        if (atz && btz && atz !== btz) {\n            throw new RangeError('cannot format range between different time zones');\n        }\n        if (aa && bb && aformatter && bformatter && aformatter === bformatter) {\n            const formatter = adjustFormatterTimeZone(aformatter, atz);\n            // TODO: Remove type assertion after this method lands in TS lib types\n            return formatter.formatRangeToParts(aa.epochMilliseconds, bb.epochMilliseconds);\n        }\n    }\n    // TODO: Remove type assertion after this method lands in TS lib types\n    return this[ORIGINAL].formatRangeToParts(a, b);\n}\nfunction amend(optionsParam = {}, amended = {}) {\n    const options = ObjectAssign({}, optionsParam);\n    for (const opt of [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'weekday',\n        'dayPeriod',\n        'timeZoneName',\n        'dateStyle',\n        'timeStyle'\n    ]) {\n        options[opt] = opt in amended ? amended[opt] : options[opt];\n        if (options[opt] === false || options[opt] === undefined)\n            delete options[opt];\n    }\n    return options;\n}\nfunction timeAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        year: false,\n        month: false,\n        day: false,\n        weekday: false,\n        timeZoneName: false,\n        dateStyle: false\n    });\n    if (!hasTimeOptions(options)) {\n        options = ObjectAssign({}, options, {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction yearMonthAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        day: false,\n        hour: false,\n        minute: false,\n        second: false,\n        weekday: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        dateStyle: false,\n        timeStyle: false\n    });\n    if (!('year' in options || 'month' in options)) {\n        options = ObjectAssign(options, { year: 'numeric', month: 'numeric' });\n    }\n    return options;\n}\nfunction monthDayAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        year: false,\n        hour: false,\n        minute: false,\n        second: false,\n        weekday: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        dateStyle: false,\n        timeStyle: false\n    });\n    if (!('month' in options || 'day' in options)) {\n        options = ObjectAssign({}, options, { month: 'numeric', day: 'numeric' });\n    }\n    return options;\n}\nfunction dateAmend(optionsParam) {\n    let options = amend(optionsParam, {\n        hour: false,\n        minute: false,\n        second: false,\n        dayPeriod: false,\n        timeZoneName: false,\n        timeStyle: false\n    });\n    if (!hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        });\n    }\n    return options;\n}\nfunction datetimeAmend(optionsParam) {\n    let options = amend(optionsParam, { timeZoneName: false });\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction zonedDateTimeAmend(optionsParam) {\n    let options = optionsParam;\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n        if (options.timeZoneName === undefined)\n            options.timeZoneName = 'short';\n    }\n    return options;\n}\nfunction instantAmend(optionsParam) {\n    let options = optionsParam;\n    if (!hasTimeOptions(options) && !hasDateOptions(options)) {\n        options = ObjectAssign({}, options, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric'\n        });\n    }\n    return options;\n}\nfunction hasDateOptions(options) {\n    return 'year' in options || 'month' in options || 'day' in options || 'weekday' in options || 'dateStyle' in options;\n}\nfunction hasTimeOptions(options) {\n    return ('hour' in options || 'minute' in options || 'second' in options || 'timeStyle' in options || 'dayPeriod' in options);\n}\nfunction isTemporalObject(obj) {\n    return (ES.IsTemporalDate(obj) ||\n        ES.IsTemporalTime(obj) ||\n        ES.IsTemporalDateTime(obj) ||\n        ES.IsTemporalZonedDateTime(obj) ||\n        ES.IsTemporalYearMonth(obj) ||\n        ES.IsTemporalMonthDay(obj) ||\n        ES.IsTemporalInstant(obj));\n}\nfunction sameTemporalType(x, y) {\n    if (!isTemporalObject(x) || !isTemporalObject(y))\n        return false;\n    if (ES.IsTemporalTime(x) && !ES.IsTemporalTime(y))\n        return false;\n    if (ES.IsTemporalDate(x) && !ES.IsTemporalDate(y))\n        return false;\n    if (ES.IsTemporalDateTime(x) && !ES.IsTemporalDateTime(y))\n        return false;\n    if (ES.IsTemporalZonedDateTime(x) && !ES.IsTemporalZonedDateTime(y))\n        return false;\n    if (ES.IsTemporalYearMonth(x) && !ES.IsTemporalYearMonth(y))\n        return false;\n    if (ES.IsTemporalMonthDay(x) && !ES.IsTemporalMonthDay(y))\n        return false;\n    if (ES.IsTemporalInstant(x) && !ES.IsTemporalInstant(y))\n        return false;\n    return true;\n}\nfunction extractOverrides(temporalObj, main) {\n    const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n    if (ES.IsTemporalTime(temporalObj)) {\n        const hour = GetSlot(temporalObj, ISO_HOUR);\n        const minute = GetSlot(temporalObj, ISO_MINUTE);\n        const second = GetSlot(temporalObj, ISO_SECOND);\n        const millisecond = GetSlot(temporalObj, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalObj, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalObj, ISO_NANOSECOND);\n        const datetime = new DateTime(1970, 1, 1, hour, minute, second, millisecond, microsecond, nanosecond, main[CAL_ID]);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, TIME)\n        };\n    }\n    if (ES.IsTemporalYearMonth(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const referenceISODay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainYearMonth with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(isoYear, isoMonth, referenceISODay, 12, 0, 0, 0, 0, 0, calendar);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, YM)\n        };\n    }\n    if (ES.IsTemporalMonthDay(temporalObj)) {\n        const referenceISOYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainMonthDay with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(referenceISOYear, isoMonth, isoDay, 12, 0, 0, 0, 0, 0, calendar);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, MD)\n        };\n    }\n    if (ES.IsTemporalDate(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainDate with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const datetime = new DateTime(isoYear, isoMonth, isoDay, 12, 0, 0, 0, 0, 0, main[CAL_ID]);\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, DATE)\n        };\n    }\n    if (ES.IsTemporalDateTime(temporalObj)) {\n        const isoYear = GetSlot(temporalObj, ISO_YEAR);\n        const isoMonth = GetSlot(temporalObj, ISO_MONTH);\n        const isoDay = GetSlot(temporalObj, ISO_DAY);\n        const hour = GetSlot(temporalObj, ISO_HOUR);\n        const minute = GetSlot(temporalObj, ISO_MINUTE);\n        const second = GetSlot(temporalObj, ISO_SECOND);\n        const millisecond = GetSlot(temporalObj, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalObj, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalObj, ISO_NANOSECOND);\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format PlainDateTime with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        let datetime = temporalObj;\n        if (calendar === 'iso8601') {\n            datetime = new DateTime(isoYear, isoMonth, isoDay, hour, minute, second, millisecond, microsecond, nanosecond, main[CAL_ID]);\n        }\n        return {\n            instant: ES.BuiltinTimeZoneGetInstantFor(getResolvedTimeZoneLazy(main), datetime, 'compatible'),\n            formatter: getPropLazy(main, DATETIME)\n        };\n    }\n    if (ES.IsTemporalZonedDateTime(temporalObj)) {\n        const calendar = ES.ToString(GetSlot(temporalObj, CALENDAR));\n        if (calendar !== 'iso8601' && calendar !== main[CAL_ID]) {\n            throw new RangeError(`cannot format ZonedDateTime with calendar ${calendar} in locale with calendar ${main[CAL_ID]}`);\n        }\n        const timeZone = GetSlot(temporalObj, TIME_ZONE);\n        const objTimeZone = ES.ToString(timeZone);\n        if (main[TZ_GIVEN] && main[TZ_GIVEN] !== objTimeZone) {\n            throw new RangeError(`timeZone option ${main[TZ_GIVEN]} doesn't match actual time zone ${objTimeZone}`);\n        }\n        return {\n            instant: GetSlot(temporalObj, INSTANT),\n            formatter: getPropLazy(main, ZONED),\n            timeZone: objTimeZone\n        };\n    }\n    if (ES.IsTemporalInstant(temporalObj)) {\n        return {\n            instant: temporalObj,\n            formatter: getPropLazy(main, INST)\n        };\n    }\n    return {};\n}\n//# sourceMappingURL=intl.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { EPOCHNANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nimport bigInt from 'big-integer';\nconst DISALLOWED_UNITS = ['year', 'month', 'week', 'day'];\nconst MAX_DIFFERENCE_INCREMENTS = {\n    hour: 24,\n    minute: 60,\n    second: 60,\n    millisecond: 1000,\n    microsecond: 1000,\n    nanosecond: 1000\n};\nexport class Instant {\n    constructor(epochNanoseconds) {\n        // Note: if the argument is not passed, ToBigInt(undefined) will throw. This check exists only\n        //       to improve the error message.\n        if (arguments.length < 1) {\n            throw new TypeError('missing argument: epochNanoseconds is required');\n        }\n        const ns = ES.ToBigInt(epochNanoseconds);\n        ES.ValidateEpochNanoseconds(ns);\n        CreateSlots(this);\n        SetSlot(this, EPOCHNANOSECONDS, ns);\n        if (DEBUG) {\n            const repr = ES.TemporalInstantToString(this, undefined, 'auto');\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${repr}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get epochSeconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return +value.divide(1e9);\n    }\n    get epochMilliseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = bigInt(GetSlot(this, EPOCHNANOSECONDS));\n        return +value.divide(1e6);\n    }\n    get epochMicroseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return bigIntIfAvailable(value.divide(1e3));\n    }\n    get epochNanoseconds() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return bigIntIfAvailable(GetSlot(this, EPOCHNANOSECONDS));\n    }\n    add(temporalDurationLike) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.ToLimitedTemporalDuration(temporalDurationLike, ['years', 'months', 'weeks', 'days']);\n        const ns = ES.AddInstant(GetSlot(this, EPOCHNANOSECONDS), hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n        return new Instant(ns);\n    }\n    subtract(temporalDurationLike) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.ToLimitedTemporalDuration(temporalDurationLike, ['years', 'months', 'weeks', 'days']);\n        const ns = ES.AddInstant(GetSlot(this, EPOCHNANOSECONDS), -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds);\n        return new Instant(ns);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalInstant(otherParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond', DISALLOWED_UNITS);\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('second', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_DIFFERENCE_INCREMENTS[smallestUnit], false);\n        const onens = GetSlot(this, EPOCHNANOSECONDS);\n        const twons = GetSlot(other, EPOCHNANOSECONDS);\n        let { seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceInstant(onens, twons, roundingIncrement, smallestUnit, roundingMode);\n        let hours, minutes;\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalInstant(otherParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond', DISALLOWED_UNITS);\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('second', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_DIFFERENCE_INCREMENTS[smallestUnit], false);\n        const onens = GetSlot(other, EPOCHNANOSECONDS);\n        const twons = GetSlot(this, EPOCHNANOSECONDS);\n        let { seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceInstant(onens, twons, roundingIncrement, smallestUnit, roundingMode);\n        let hours, minutes;\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, undefined, DISALLOWED_UNITS);\n        if (smallestUnit === undefined)\n            throw new RangeError('smallestUnit is required');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            hour: 24,\n            minute: 1440,\n            second: 86400,\n            millisecond: 86400e3,\n            microsecond: 86400e6,\n            nanosecond: 86400e9\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], true);\n        const ns = GetSlot(this, EPOCHNANOSECONDS);\n        const roundedNs = ES.RoundInstant(ns, roundingIncrement, smallestUnit, roundingMode);\n        return new Instant(roundedNs);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalInstant(otherParam);\n        const one = GetSlot(this, EPOCHNANOSECONDS);\n        const two = GetSlot(other, EPOCHNANOSECONDS);\n        return bigInt(one).equals(two);\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        let timeZone = options.timeZone;\n        if (timeZone !== undefined)\n            timeZone = ES.ToTemporalTimeZone(timeZone);\n        // Although TS doesn't acknowledge it, below here `timeZone` is a Temporal.TimeZoneProtocol\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const ns = GetSlot(this, EPOCHNANOSECONDS);\n        const roundedNs = ES.RoundInstant(ns, increment, unit, roundingMode);\n        const roundedInstant = new Instant(roundedNs);\n        return ES.TemporalInstantToString(roundedInstant, timeZone, precision);\n    }\n    toJSON() {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalInstantToString(this, undefined, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.Instant');\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item)) {\n            throw new TypeError('invalid argument in toZonedDateTime');\n        }\n        const calendarLike = item.calendar;\n        if (calendarLike === undefined) {\n            throw new TypeError('missing calendar property in toZonedDateTime');\n        }\n        const calendar = ES.ToTemporalCalendar(calendarLike);\n        const temporalTimeZoneLike = item.timeZone;\n        if (temporalTimeZoneLike === undefined) {\n            throw new TypeError('missing timeZone property in toZonedDateTime');\n        }\n        const timeZone = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toZonedDateTimeISO(itemParam) {\n        let item = itemParam;\n        if (!ES.IsTemporalInstant(this))\n            throw new TypeError('invalid receiver');\n        if (ES.IsObject(item)) {\n            const timeZoneProperty = item.timeZone;\n            if (timeZoneProperty !== undefined) {\n                item = timeZoneProperty;\n            }\n        }\n        const timeZone = ES.ToTemporalTimeZone(item);\n        const calendar = ES.GetISO8601Calendar();\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    static fromEpochSeconds(epochSecondsParam) {\n        const epochSeconds = ES.ToNumber(epochSecondsParam);\n        const epochNanoseconds = bigInt(epochSeconds).multiply(1e9);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochMilliseconds(epochMillisecondsParam) {\n        const epochMilliseconds = ES.ToNumber(epochMillisecondsParam);\n        const epochNanoseconds = bigInt(epochMilliseconds).multiply(1e6);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochMicroseconds(epochMicrosecondsParam) {\n        const epochMicroseconds = ES.ToBigInt(epochMicrosecondsParam);\n        const epochNanoseconds = epochMicroseconds.multiply(1e3);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static fromEpochNanoseconds(epochNanosecondsParam) {\n        const epochNanoseconds = ES.ToBigInt(epochNanosecondsParam);\n        ES.ValidateEpochNanoseconds(epochNanoseconds);\n        return new Instant(epochNanoseconds);\n    }\n    static from(item) {\n        if (ES.IsTemporalInstant(item)) {\n            return new Instant(GetSlot(item, EPOCHNANOSECONDS));\n        }\n        return ES.ToTemporalInstant(item);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalInstant(oneParam);\n        const two = ES.ToTemporalInstant(twoParam);\n        const oneNs = GetSlot(one, EPOCHNANOSECONDS);\n        const twoNs = GetSlot(two, EPOCHNANOSECONDS);\n        if (bigInt(oneNs).lesser(twoNs))\n            return -1;\n        if (bigInt(oneNs).greater(twoNs))\n            return 1;\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Instant, 'Temporal.Instant');\nfunction bigIntIfAvailable(wrapper) {\n    return typeof globalThis.BigInt === 'undefined' ? wrapper : wrapper.value;\n}\n//# sourceMappingURL=instant.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst DISALLOWED_UNITS = ['hour', 'minute', 'second', 'millisecond', 'microsecond', 'nanosecond'];\nexport class PlainDate {\n    constructor(isoYearParam, isoMonthParam, isoDayParam, calendarParam = ES.GetISO8601Calendar()) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalDateSlots. This check\n        //       exists only to improve the error message.\n        if (arguments.length < 3) {\n            throw new RangeError('missing argument: isoYear, isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalDateSlots(this, isoYear, isoMonth, isoDay, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get era() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get year() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalDateLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalDateLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalDateLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const props = ES.ToPartialRecord(temporalDateLike, fieldNames);\n        if (!props) {\n            throw new TypeError('invalid date-like');\n        }\n        let fields = ES.ToTemporalDateFields(this, fieldNames);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.ToTemporalDateFields(fields, fieldNames);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.DateFromFields(calendar, fields, options);\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return new PlainDate(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), calendar);\n    }\n    add(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToTemporalDuration(temporalDurationLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarDateAdd(GetSlot(this, CALENDAR), this, duration, options);\n    }\n    subtract(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.CreateNegatedTemporalDuration(ES.ToTemporalDuration(temporalDurationLike));\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.CalendarDateAdd(GetSlot(this, CALENDAR), this, duration, options);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDate(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'day', DISALLOWED_UNITS);\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('day', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, undefined, false);\n        const untilOptions = { ...options, largestUnit };\n        const result = ES.CalendarDateUntil(calendar, this, other, untilOptions);\n        if (smallestUnit === 'day' && roundingIncrement === 1)\n            return result;\n        let { years, months, weeks, days } = result;\n        ({ years, months, weeks, days } = ES.RoundDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, roundingMode, this));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDate(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'day', DISALLOWED_UNITS);\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('day', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, undefined, false);\n        const untilOptions = { ...options, largestUnit };\n        let { years, months, weeks, days } = ES.CalendarDateUntil(calendar, this, other, untilOptions);\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        if (smallestUnit === 'day' && roundingIncrement === 1) {\n            return new Duration(-years, -months, -weeks, -days, 0, 0, 0, 0, 0, 0);\n        }\n        ({ years, months, weeks, days } = ES.RoundDuration(years, months, weeks, days, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, ES.NegateTemporalRoundingMode(roundingMode), this));\n        return new Duration(-years, -months, -weeks, -days, 0, 0, 0, 0, 0, 0);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDate(otherParam);\n        for (const slot of [ISO_YEAR, ISO_MONTH, ISO_DAY]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalDateToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainDate');\n    }\n    toPlainDateTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        if (temporalTimeParam === undefined)\n            return ES.CreateTemporalDateTime(year, month, day, 0, 0, 0, 0, 0, 0, calendar);\n        const temporalTime = ES.ToTemporalTime(temporalTimeParam);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        let timeZone, temporalTime;\n        if (ES.IsObject(item)) {\n            const timeZoneLike = item.timeZone;\n            if (timeZoneLike === undefined) {\n                // The cast below is needed because it's possible here for\n                // `timeZoneLike` here to be `{ plainTime: Temporal.PlainTimeLike }`,\n                // not a TimeZoneProtocol.\n                // TODO: should we check for that shape to improve on the (bad) error\n                // message that the caller will get from ToTemporalTimeZone?\n                timeZone = ES.ToTemporalTimeZone(item);\n            }\n            else {\n                timeZone = ES.ToTemporalTimeZone(timeZoneLike);\n                temporalTime = item.plainTime;\n            }\n        }\n        else {\n            timeZone = ES.ToTemporalTimeZone(item);\n        }\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        let hour = 0, minute = 0, second = 0, millisecond = 0, microsecond = 0, nanosecond = 0;\n        if (temporalTime !== undefined) {\n            temporalTime = ES.ToTemporalTime(temporalTime);\n            hour = GetSlot(temporalTime, ISO_HOUR);\n            minute = GetSlot(temporalTime, ISO_MINUTE);\n            second = GetSlot(temporalTime, ISO_SECOND);\n            millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n            microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n            nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        }\n        const dt = ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        return ES.YearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.ToTemporalMonthDayFields(this, fieldNames);\n        return ES.MonthDayFromFields(calendar, fields);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalDate(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalDate(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalDate(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalDate(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalDate(oneParam);\n        const two = ES.ToTemporalDate(twoParam);\n        return ES.CompareISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY));\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainDate, 'Temporal.PlainDate');\n//# sourceMappingURL=plaindate.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nexport class PlainDateTime {\n    constructor(isoYearParam, isoMonthParam, isoDayParam, hourParam = 0, minuteParam = 0, secondParam = 0, millisecondParam = 0, microsecondParam = 0, nanosecondParam = 0, calendarParam = ES.GetISO8601Calendar()) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const hour = ES.ToIntegerThrowOnInfinity(hourParam);\n        const minute = ES.ToIntegerThrowOnInfinity(minuteParam);\n        const second = ES.ToIntegerThrowOnInfinity(secondParam);\n        const millisecond = ES.ToIntegerThrowOnInfinity(millisecondParam);\n        const microsecond = ES.ToIntegerThrowOnInfinity(microsecondParam);\n        const nanosecond = ES.ToIntegerThrowOnInfinity(nanosecondParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectDateTime in CreateTemporalDateTimeSlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 3) {\n            throw new RangeError('missing argument: isoYear, isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalDateTimeSlots(this, isoYear, isoMonth, isoDay, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get year() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get hour() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_NANOSECOND);\n    }\n    get era() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), this);\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalDateTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalDateTimeLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalDateTimeLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        const props = ES.ToPartialRecord(temporalDateTimeLike, fieldNames);\n        if (!props) {\n            throw new TypeError('invalid date-time-like');\n        }\n        let fields = ES.ToTemporalDateTimeFields(this, fieldNames);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.ToTemporalDateTimeFields(fields, fieldNames);\n        const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.InterpretTemporalDateTimeFields(calendar, fields, options);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withPlainTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const year = GetSlot(this, ISO_YEAR);\n        const month = GetSlot(this, ISO_MONTH);\n        const day = GetSlot(this, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        if (temporalTimeParam === undefined)\n            return ES.CreateTemporalDateTime(year, month, day, 0, 0, 0, 0, 0, 0, calendar);\n        const temporalTime = ES.ToTemporalTime(temporalTimeParam);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withPlainDate(temporalDateParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        let calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        calendar = ES.ConsolidateCalendars(GetSlot(this, CALENDAR), calendar);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return new PlainDateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), calendar);\n    }\n    add(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.AddDateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), calendar, years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, options);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    subtract(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.AddDateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), calendar, -years, -months, -weeks, -days, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds, options);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDateTime(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond');\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('day', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', [], defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceISODateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), GetSlot(other, ISO_YEAR), GetSlot(other, ISO_MONTH), GetSlot(other, ISO_DAY), GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND), calendar, largestUnit, options);\n        const relativeTo = ES.TemporalDateTimeToDate(this);\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDateTime(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond');\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('day', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', [], defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceISODateTime(GetSlot(this, ISO_YEAR), GetSlot(this, ISO_MONTH), GetSlot(this, ISO_DAY), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), GetSlot(other, ISO_YEAR), GetSlot(other, ISO_MONTH), GetSlot(other, ISO_DAY), GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND), calendar, largestUnit, options);\n        const relativeTo = ES.TemporalDateTimeToDate(this);\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, ES.NegateTemporalRoundingMode(roundingMode), relativeTo));\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(-years, -months, -weeks, -days, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, undefined, ['year', 'month', 'week']);\n        if (smallestUnit === undefined)\n            throw new RangeError('smallestUnit is required');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            day: 1,\n            hour: 24,\n            minute: 60,\n            second: 60,\n            millisecond: 1000,\n            microsecond: 1000,\n            nanosecond: 1000\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n        let year = GetSlot(this, ISO_YEAR);\n        let month = GetSlot(this, ISO_MONTH);\n        let day = GetSlot(this, ISO_DAY);\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode));\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, GetSlot(this, CALENDAR));\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalDateTime(otherParam);\n        for (const slot of [\n            ISO_YEAR,\n            ISO_MONTH,\n            ISO_DAY,\n            ISO_HOUR,\n            ISO_MINUTE,\n            ISO_SECOND,\n            ISO_MILLISECOND,\n            ISO_MICROSECOND,\n            ISO_NANOSECOND\n        ]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return ES.TemporalDateTimeToString(this, precision, showCalendar, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToString(this, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainDateTime');\n    }\n    toZonedDateTime(temporalTimeZoneLike, optionsParam = undefined) {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const timeZone = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, this, disambiguation);\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, GetSlot(this, CALENDAR));\n    }\n    toPlainDate() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToDate(this);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        return ES.YearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.ToTemporalMonthDayFields(this, fieldNames);\n        return ES.MonthDayFromFields(calendar, fields);\n    }\n    toPlainTime() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToTime(this);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalDateTime(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoHour: GetSlot(this, ISO_HOUR),\n            isoMicrosecond: GetSlot(this, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(this, ISO_MILLISECOND),\n            isoMinute: GetSlot(this, ISO_MINUTE),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoNanosecond: GetSlot(this, ISO_NANOSECOND),\n            isoSecond: GetSlot(this, ISO_SECOND),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalDateTime(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalDateTime(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalDateTime(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalDateTime(oneParam);\n        const two = ES.ToTemporalDateTime(twoParam);\n        for (const slot of [\n            ISO_YEAR,\n            ISO_MONTH,\n            ISO_DAY,\n            ISO_HOUR,\n            ISO_MINUTE,\n            ISO_SECOND,\n            ISO_MILLISECOND,\n            ISO_MICROSECOND,\n            ISO_NANOSECOND\n        ]) {\n            const val1 = GetSlot(one, slot);\n            const val2 = GetSlot(two, slot);\n            if (val1 !== val2)\n                return ES.ComparisonResult(val1 - val2);\n        }\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainDateTime, 'Temporal.PlainDateTime');\n//# sourceMappingURL=plaindatetime.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { YEARS, MONTHS, WEEKS, DAYS, HOURS, MINUTES, SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nexport class Duration {\n    constructor(yearsParam = 0, monthsParam = 0, weeksParam = 0, daysParam = 0, hoursParam = 0, minutesParam = 0, secondsParam = 0, millisecondsParam = 0, microsecondsParam = 0, nanosecondsParam = 0) {\n        const years = ES.ToIntegerWithoutRounding(yearsParam);\n        const months = ES.ToIntegerWithoutRounding(monthsParam);\n        const weeks = ES.ToIntegerWithoutRounding(weeksParam);\n        const days = ES.ToIntegerWithoutRounding(daysParam);\n        const hours = ES.ToIntegerWithoutRounding(hoursParam);\n        const minutes = ES.ToIntegerWithoutRounding(minutesParam);\n        const seconds = ES.ToIntegerWithoutRounding(secondsParam);\n        const milliseconds = ES.ToIntegerWithoutRounding(millisecondsParam);\n        const microseconds = ES.ToIntegerWithoutRounding(microsecondsParam);\n        const nanoseconds = ES.ToIntegerWithoutRounding(nanosecondsParam);\n        const sign = ES.DurationSign(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n        for (const prop of [years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds]) {\n            if (!Number.isFinite(prop))\n                throw new RangeError('infinite values not allowed as duration fields');\n            const propSign = Math.sign(prop);\n            if (propSign !== 0 && propSign !== sign)\n                throw new RangeError('mixed-sign values not allowed as duration fields');\n        }\n        CreateSlots(this);\n        SetSlot(this, YEARS, years);\n        SetSlot(this, MONTHS, months);\n        SetSlot(this, WEEKS, weeks);\n        SetSlot(this, DAYS, days);\n        SetSlot(this, HOURS, hours);\n        SetSlot(this, MINUTES, minutes);\n        SetSlot(this, SECONDS, seconds);\n        SetSlot(this, MILLISECONDS, milliseconds);\n        SetSlot(this, MICROSECONDS, microseconds);\n        SetSlot(this, NANOSECONDS, nanoseconds);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${ES.TemporalDurationToString(this)}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get years() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, YEARS);\n    }\n    get months() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MONTHS);\n    }\n    get weeks() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, WEEKS);\n    }\n    get days() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, DAYS);\n    }\n    get hours() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, HOURS);\n    }\n    get minutes() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MINUTES);\n    }\n    get seconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, SECONDS);\n    }\n    get milliseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MILLISECONDS);\n    }\n    get microseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, MICROSECONDS);\n    }\n    get nanoseconds() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, NANOSECONDS);\n    }\n    get sign() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.DurationSign(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS));\n    }\n    get blank() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return (ES.DurationSign(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS)) === 0);\n    }\n    with(durationLike) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        const props = ES.ToPartialRecord(durationLike, [\n            'days',\n            'hours',\n            'microseconds',\n            'milliseconds',\n            'minutes',\n            'months',\n            'nanoseconds',\n            'seconds',\n            'weeks',\n            'years'\n        ]);\n        if (!props) {\n            throw new TypeError('invalid duration-like');\n        }\n        const { years = GetSlot(this, YEARS), months = GetSlot(this, MONTHS), weeks = GetSlot(this, WEEKS), days = GetSlot(this, DAYS), hours = GetSlot(this, HOURS), minutes = GetSlot(this, MINUTES), seconds = GetSlot(this, SECONDS), milliseconds = GetSlot(this, MILLISECONDS), microseconds = GetSlot(this, MICROSECONDS), nanoseconds = GetSlot(this, NANOSECONDS) } = props;\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    negated() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.CreateNegatedTemporalDuration(this);\n    }\n    abs() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return new Duration(Math.abs(GetSlot(this, YEARS)), Math.abs(GetSlot(this, MONTHS)), Math.abs(GetSlot(this, WEEKS)), Math.abs(GetSlot(this, DAYS)), Math.abs(GetSlot(this, HOURS)), Math.abs(GetSlot(this, MINUTES)), Math.abs(GetSlot(this, SECONDS)), Math.abs(GetSlot(this, MILLISECONDS)), Math.abs(GetSlot(this, MICROSECONDS)), Math.abs(GetSlot(this, NANOSECONDS)));\n    }\n    add(other, optionsParam = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.ToLimitedTemporalDuration(other);\n        const options = ES.GetOptionsObject(optionsParam);\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.AddDuration(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS), years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, relativeTo));\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    subtract(other, optionsParam = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.ToLimitedTemporalDuration(other);\n        const options = ES.GetOptionsObject(optionsParam);\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.AddDuration(GetSlot(this, YEARS), GetSlot(this, MONTHS), GetSlot(this, WEEKS), GetSlot(this, DAYS), GetSlot(this, HOURS), GetSlot(this, MINUTES), GetSlot(this, SECONDS), GetSlot(this, MILLISECONDS), GetSlot(this, MICROSECONDS), GetSlot(this, NANOSECONDS), -years, -months, -weeks, -days, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds, relativeTo));\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        let years = GetSlot(this, YEARS);\n        let months = GetSlot(this, MONTHS);\n        let weeks = GetSlot(this, WEEKS);\n        let days = GetSlot(this, DAYS);\n        let hours = GetSlot(this, HOURS);\n        let minutes = GetSlot(this, MINUTES);\n        let seconds = GetSlot(this, SECONDS);\n        let milliseconds = GetSlot(this, MILLISECONDS);\n        let microseconds = GetSlot(this, MICROSECONDS);\n        let nanoseconds = GetSlot(this, NANOSECONDS);\n        let defaultLargestUnit = ES.DefaultTemporalLargestUnit(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        let smallestUnit = ES.ToSmallestTemporalUnit(options, undefined);\n        let smallestUnitPresent = true;\n        if (!smallestUnit) {\n            smallestUnitPresent = false;\n            smallestUnit = 'nanosecond';\n        }\n        defaultLargestUnit = ES.LargerOfTwoTemporalUnits(defaultLargestUnit, smallestUnit);\n        let largestUnit = ES.ToLargestTemporalUnit(options, undefined);\n        let largestUnitPresent = true;\n        if (!largestUnit) {\n            largestUnitPresent = false;\n            largestUnit = defaultLargestUnit;\n        }\n        if (largestUnit === 'auto')\n            largestUnit = defaultLargestUnit;\n        if (!smallestUnitPresent && !largestUnitPresent) {\n            throw new RangeError('at least one of smallestUnit or largestUnit is required');\n        }\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        let relativeTo = ES.ToRelativeTemporalObject(options);\n        ({ years, months, weeks, days } = ES.UnbalanceDurationRelative(years, months, weeks, days, largestUnit, relativeTo));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n        ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n            ES.AdjustRoundedDurationDays(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, relativeTo));\n        ({ years, months, weeks, days } = ES.BalanceDurationRelative(years, months, weeks, days, largestUnit, relativeTo));\n        if (ES.IsTemporalZonedDateTime(relativeTo)) {\n            relativeTo = ES.MoveRelativeZonedDateTime(relativeTo, years, months, weeks, 0);\n        }\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit, relativeTo));\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    total(optionsParam) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        let years = GetSlot(this, YEARS);\n        let months = GetSlot(this, MONTHS);\n        let weeks = GetSlot(this, WEEKS);\n        let days = GetSlot(this, DAYS);\n        let hours = GetSlot(this, HOURS);\n        let minutes = GetSlot(this, MINUTES);\n        let seconds = GetSlot(this, SECONDS);\n        let milliseconds = GetSlot(this, MILLISECONDS);\n        let microseconds = GetSlot(this, MICROSECONDS);\n        let nanoseconds = GetSlot(this, NANOSECONDS);\n        if (optionsParam === undefined)\n            throw new TypeError('options argument is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('unit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const unit = ES.ToTemporalDurationTotalUnit(options);\n        if (unit === undefined)\n            throw new RangeError('unit option is required');\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        // Convert larger units down to days\n        ({ years, months, weeks, days } = ES.UnbalanceDurationRelative(years, months, weeks, days, unit, relativeTo));\n        // If the unit we're totalling is smaller than `days`, convert days down to that unit.\n        let intermediate;\n        if (ES.IsTemporalZonedDateTime(relativeTo)) {\n            intermediate = ES.MoveRelativeZonedDateTime(relativeTo, years, months, weeks, 0);\n        }\n        ({ days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, unit, intermediate));\n        // Finally, truncate to the correct unit and calculate remainder\n        const { total } = ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 1, unit, 'trunc', relativeTo);\n        return total;\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        if (precision === 'minute')\n            throw new RangeError('smallestUnit must not be \"minute\"');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return ES.TemporalDurationToString(this, precision, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDurationToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalDuration(this))\n            throw new TypeError('invalid receiver');\n        if (typeof Intl !== 'undefined' && typeof Intl.DurationFormat !== 'undefined') {\n            return new Intl.DurationFormat(locales, options).format(this);\n        }\n        console.warn('Temporal.Duration.prototype.toLocaleString() requires Intl.DurationFormat.');\n        return ES.TemporalDurationToString(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() to compare Temporal.Duration');\n    }\n    static from(item) {\n        if (ES.IsTemporalDuration(item)) {\n            return new Duration(GetSlot(item, YEARS), GetSlot(item, MONTHS), GetSlot(item, WEEKS), GetSlot(item, DAYS), GetSlot(item, HOURS), GetSlot(item, MINUTES), GetSlot(item, SECONDS), GetSlot(item, MILLISECONDS), GetSlot(item, MICROSECONDS), GetSlot(item, NANOSECONDS));\n        }\n        return ES.ToTemporalDuration(item);\n    }\n    static compare(oneParam, twoParam, optionsParam = undefined) {\n        const one = ES.ToTemporalDuration(oneParam);\n        const two = ES.ToTemporalDuration(twoParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const relativeTo = ES.ToRelativeTemporalObject(options);\n        const y1 = GetSlot(one, YEARS);\n        const mon1 = GetSlot(one, MONTHS);\n        const w1 = GetSlot(one, WEEKS);\n        let d1 = GetSlot(one, DAYS);\n        const h1 = GetSlot(one, HOURS);\n        const min1 = GetSlot(one, MINUTES);\n        const s1 = GetSlot(one, SECONDS);\n        const ms1 = GetSlot(one, MILLISECONDS);\n        const µs1 = GetSlot(one, MICROSECONDS);\n        let ns1 = GetSlot(one, NANOSECONDS);\n        const y2 = GetSlot(two, YEARS);\n        const mon2 = GetSlot(two, MONTHS);\n        const w2 = GetSlot(two, WEEKS);\n        let d2 = GetSlot(two, DAYS);\n        const h2 = GetSlot(two, HOURS);\n        const min2 = GetSlot(two, MINUTES);\n        const s2 = GetSlot(two, SECONDS);\n        const ms2 = GetSlot(two, MILLISECONDS);\n        const µs2 = GetSlot(two, MICROSECONDS);\n        let ns2 = GetSlot(two, NANOSECONDS);\n        const shift1 = ES.CalculateOffsetShift(relativeTo, y1, mon1, w1, d1, h1, min1, s1, ms1, µs1, ns1);\n        const shift2 = ES.CalculateOffsetShift(relativeTo, y2, mon2, w2, d2, h2, min2, s2, ms2, µs2, ns2);\n        if (y1 !== 0 || y2 !== 0 || mon1 !== 0 || mon2 !== 0 || w1 !== 0 || w2 !== 0) {\n            ({ days: d1 } = ES.UnbalanceDurationRelative(y1, mon1, w1, d1, 'day', relativeTo));\n            ({ days: d2 } = ES.UnbalanceDurationRelative(y2, mon2, w2, d2, 'day', relativeTo));\n        }\n        const totalNs1 = ES.TotalDurationNanoseconds(d1, h1, min1, s1, ms1, µs1, ns1, shift1);\n        const totalNs2 = ES.TotalDurationNanoseconds(d2, h2, min2, s2, ms2, µs2, ns2, shift2);\n        return ES.ComparisonResult(totalNs1.minus(totalNs2).toJSNumber());\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(Duration, 'Temporal.Duration');\n//# sourceMappingURL=duration.js.map","import * as ES from './ecmascript';\nimport { MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_MONTH, ISO_DAY, ISO_YEAR, CALENDAR, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectCreate = Object.create;\nexport class PlainMonthDay {\n    constructor(isoMonthParam, isoDayParam, calendarParam = ES.GetISO8601Calendar(), referenceISOYearParam = 1972) {\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const isoDay = ES.ToIntegerThrowOnInfinity(isoDayParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        const referenceISOYear = ES.ToIntegerThrowOnInfinity(referenceISOYearParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalMonthDaySlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 2) {\n            throw new RangeError('missing argument: isoMonth and isoDay are required');\n        }\n        ES.CreateTemporalMonthDaySlots(this, isoMonth, isoDay, calendar, referenceISOYear);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get day() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), this);\n    }\n    get calendar() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    with(temporalMonthDayLike, optionsParam = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalMonthDayLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalMonthDayLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'month', 'monthCode', 'year']);\n        const props = ES.ToPartialRecord(temporalMonthDayLike, fieldNames);\n        if (!props) {\n            throw new TypeError('invalid month-day-like');\n        }\n        let fields = ES.ToTemporalMonthDayFields(this, fieldNames);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.ToTemporalMonthDayFields(fields, fieldNames);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.MonthDayFromFields(calendar, fields, options);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalMonthDay(otherParam);\n        for (const slot of [ISO_MONTH, ISO_DAY, ISO_YEAR]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalMonthDayToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalMonthDayToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use equals() to compare Temporal.PlainMonthDay');\n    }\n    toPlainDate(item) {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item))\n            throw new TypeError('argument should be an object');\n        const calendar = GetSlot(this, CALENDAR);\n        const receiverFieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.ToTemporalMonthDayFields(this, receiverFieldNames);\n        const inputFieldNames = ES.CalendarFields(calendar, ['year']);\n        const inputEntries = [['year', undefined]];\n        // Add extra fields from the calendar at the end\n        inputFieldNames.forEach((fieldName) => {\n            if (!inputEntries.some(([name]) => name === fieldName)) {\n                inputEntries.push([fieldName, undefined]); // Make TS ignore extra fields\n            }\n        });\n        const inputFields = ES.PrepareTemporalFields(item, inputEntries);\n        let mergedFields = ES.CalendarMergeFields(calendar, fields, inputFields);\n        const mergedFieldNames = [...new Set([...receiverFieldNames, ...inputFieldNames])];\n        const mergedEntries = [];\n        mergedFieldNames.forEach((fieldName) => {\n            if (!mergedEntries.some(([name]) => name === fieldName)) {\n                mergedEntries.push([fieldName, undefined]);\n            }\n        });\n        mergedFields = ES.PrepareTemporalFields(mergedFields, mergedEntries);\n        const options = ObjectCreate(null);\n        options.overflow = 'reject';\n        return ES.DateFromFields(calendar, mergedFields, options);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalMonthDay(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalMonthDay(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalMonthDay(GetSlot(item, ISO_MONTH), GetSlot(item, ISO_DAY), GetSlot(item, CALENDAR), GetSlot(item, ISO_YEAR));\n        }\n        return ES.ToTemporalMonthDay(item, options);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainMonthDay, 'Temporal.PlainMonthDay');\n//# sourceMappingURL=plainmonthday.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic } from './intrinsicclass';\nconst instant = () => {\n    const Instant = GetIntrinsic('%Temporal.Instant%');\n    return new Instant(ES.SystemUTCEpochNanoSeconds());\n};\nconst plainDateTime = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.ToTemporalCalendar(calendarLike);\n    const inst = instant();\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(tZ, inst, calendar);\n};\nconst plainDateTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.GetISO8601Calendar();\n    const inst = instant();\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(tZ, inst, calendar);\n};\nconst zonedDateTime = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    const tZ = ES.ToTemporalTimeZone(temporalTimeZoneLike);\n    const calendar = ES.ToTemporalCalendar(calendarLike);\n    return ES.CreateTemporalZonedDateTime(ES.SystemUTCEpochNanoSeconds(), tZ, calendar);\n};\nconst zonedDateTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    return zonedDateTime(ES.GetISO8601Calendar(), temporalTimeZoneLike);\n};\nconst plainDate = (calendarLike, temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToDate(plainDateTime(calendarLike, temporalTimeZoneLike));\n};\nconst plainDateISO = (temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToDate(plainDateTimeISO(temporalTimeZoneLike));\n};\nconst plainTimeISO = (temporalTimeZoneLike = timeZone()) => {\n    return ES.TemporalDateTimeToTime(plainDateTimeISO(temporalTimeZoneLike));\n};\nconst timeZone = () => {\n    return ES.SystemTimeZone();\n};\nexport const Now = {\n    instant,\n    plainDateTime,\n    plainDateTimeISO,\n    plainDate,\n    plainDateISO,\n    plainTimeISO,\n    timeZone,\n    zonedDateTime,\n    zonedDateTimeISO,\n    [Symbol.toStringTag]: 'Temporal.Now'\n};\nObject.defineProperty(Now, Symbol.toStringTag, {\n    value: 'Temporal.Now',\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\n//# sourceMappingURL=now.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CALENDAR, EPOCHNANOSECONDS, CreateSlots, GetSlot, SetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectAssign = Object.assign;\nconst DISALLOWED_UNITS = ['year', 'month', 'week', 'day'];\nconst MAX_INCREMENTS = {\n    hour: 24,\n    minute: 60,\n    second: 60,\n    millisecond: 1000,\n    microsecond: 1000,\n    nanosecond: 1000\n};\nfunction TemporalTimeToString(time, precision, options = undefined) {\n    let hour = GetSlot(time, ISO_HOUR);\n    let minute = GetSlot(time, ISO_MINUTE);\n    let second = GetSlot(time, ISO_SECOND);\n    let millisecond = GetSlot(time, ISO_MILLISECOND);\n    let microsecond = GetSlot(time, ISO_MICROSECOND);\n    let nanosecond = GetSlot(time, ISO_NANOSECOND);\n    if (options) {\n        const { unit, increment, roundingMode } = options;\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, increment, unit, roundingMode));\n    }\n    const hourString = ES.ISODateTimePartString(hour);\n    const minuteString = ES.ISODateTimePartString(minute);\n    const seconds = ES.FormatSecondsStringPart(second, millisecond, microsecond, nanosecond, precision);\n    return `${hourString}:${minuteString}${seconds}`;\n}\nexport class PlainTime {\n    constructor(isoHourParam = 0, isoMinuteParam = 0, isoSecondParam = 0, isoMillisecondParam = 0, isoMicrosecondParam = 0, isoNanosecondParam = 0) {\n        const isoHour = ES.ToIntegerThrowOnInfinity(isoHourParam);\n        const isoMinute = ES.ToIntegerThrowOnInfinity(isoMinuteParam);\n        const isoSecond = ES.ToIntegerThrowOnInfinity(isoSecondParam);\n        const isoMillisecond = ES.ToIntegerThrowOnInfinity(isoMillisecondParam);\n        const isoMicrosecond = ES.ToIntegerThrowOnInfinity(isoMicrosecondParam);\n        const isoNanosecond = ES.ToIntegerThrowOnInfinity(isoNanosecondParam);\n        ES.RejectTime(isoHour, isoMinute, isoSecond, isoMillisecond, isoMicrosecond, isoNanosecond);\n        CreateSlots(this);\n        SetSlot(this, ISO_HOUR, isoHour);\n        SetSlot(this, ISO_MINUTE, isoMinute);\n        SetSlot(this, ISO_SECOND, isoSecond);\n        SetSlot(this, ISO_MILLISECOND, isoMillisecond);\n        SetSlot(this, ISO_MICROSECOND, isoMicrosecond);\n        SetSlot(this, ISO_NANOSECOND, isoNanosecond);\n        SetSlot(this, CALENDAR, ES.GetISO8601Calendar());\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${TemporalTimeToString(this, 'auto')}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get calendar() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        // PlainTime's calendar isn't settable, so can't be a userland calendar\n        return GetSlot(this, CALENDAR);\n    }\n    get hour() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, ISO_NANOSECOND);\n    }\n    with(temporalTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalTimeLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalTimeLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        const props = ES.ToPartialRecord(temporalTimeLike, [\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'nanosecond',\n            'second'\n        ]);\n        if (!props) {\n            throw new TypeError('invalid time-like');\n        }\n        const fields = ES.ToTemporalTimeRecord(this);\n        let { hour, minute, second, millisecond, microsecond, nanosecond } = ObjectAssign(fields, props);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, overflow));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    add(temporalDurationLike) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.AddTime(hour, minute, second, millisecond, microsecond, nanosecond, hours, minutes, seconds, milliseconds, microseconds, nanoseconds));\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, 'reject'));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    subtract(temporalDurationLike) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.AddTime(hour, minute, second, millisecond, microsecond, nanosecond, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds));\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RegulateTime(hour, minute, second, millisecond, microsecond, nanosecond, 'reject'));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalTime(otherParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, 'hour');\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond', DISALLOWED_UNITS);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_INCREMENTS[smallestUnit], false);\n        let { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceTime(GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND), GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.RoundDuration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalTime(otherParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, 'hour');\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond', DISALLOWED_UNITS);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_INCREMENTS[smallestUnit], false);\n        let { hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceTime(GetSlot(other, ISO_HOUR), GetSlot(other, ISO_MINUTE), GetSlot(other, ISO_SECOND), GetSlot(other, ISO_MILLISECOND), GetSlot(other, ISO_MICROSECOND), GetSlot(other, ISO_NANOSECOND), GetSlot(this, ISO_HOUR), GetSlot(this, ISO_MINUTE), GetSlot(this, ISO_SECOND), GetSlot(this, ISO_MILLISECOND), GetSlot(this, ISO_MICROSECOND), GetSlot(this, ISO_NANOSECOND));\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.RoundDuration(0, 0, 0, 0, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds, roundingIncrement, smallestUnit, ES.NegateTemporalRoundingMode(roundingMode)));\n        hours = -hours;\n        minutes = -minutes;\n        seconds = -seconds;\n        milliseconds = -milliseconds;\n        microseconds = -microseconds;\n        nanoseconds = -nanoseconds;\n        ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(0, 0, 0, 0, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, undefined, DISALLOWED_UNITS);\n        if (smallestUnit === undefined)\n            throw new RangeError('smallestUnit is required');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, MAX_INCREMENTS[smallestUnit], false);\n        let hour = GetSlot(this, ISO_HOUR);\n        let minute = GetSlot(this, ISO_MINUTE);\n        let second = GetSlot(this, ISO_SECOND);\n        let millisecond = GetSlot(this, ISO_MILLISECOND);\n        let microsecond = GetSlot(this, ISO_MICROSECOND);\n        let nanosecond = GetSlot(this, ISO_NANOSECOND);\n        ({ hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundTime(hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode));\n        return new PlainTime(hour, minute, second, millisecond, microsecond, nanosecond);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalTime(otherParam);\n        for (const slot of [ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return true;\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        return TemporalTimeToString(this, precision, { unit, increment, roundingMode });\n    }\n    toJSON() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return TemporalTimeToString(this, 'auto');\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainTime');\n    }\n    toPlainDateTime(temporalDateParam) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        const calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        return ES.CreateTemporalDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n    }\n    toZonedDateTime(item) {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item)) {\n            throw new TypeError('invalid argument');\n        }\n        const dateLike = item.plainDate;\n        if (dateLike === undefined) {\n            throw new TypeError('missing date property');\n        }\n        const temporalDate = ES.ToTemporalDate(dateLike);\n        const timeZoneLike = item.timeZone;\n        if (timeZoneLike === undefined) {\n            throw new TypeError('missing timeZone property');\n        }\n        const timeZone = ES.ToTemporalTimeZone(timeZoneLike);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        const calendar = GetSlot(temporalDate, CALENDAR);\n        const hour = GetSlot(this, ISO_HOUR);\n        const minute = GetSlot(this, ISO_MINUTE);\n        const second = GetSlot(this, ISO_SECOND);\n        const millisecond = GetSlot(this, ISO_MILLISECOND);\n        const microsecond = GetSlot(this, ISO_MICROSECOND);\n        const nanosecond = GetSlot(this, ISO_NANOSECOND);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalTime(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoHour: GetSlot(this, ISO_HOUR),\n            isoMicrosecond: GetSlot(this, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(this, ISO_MILLISECOND),\n            isoMinute: GetSlot(this, ISO_MINUTE),\n            isoNanosecond: GetSlot(this, ISO_NANOSECOND),\n            isoSecond: GetSlot(this, ISO_SECOND)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        const overflow = ES.ToTemporalOverflow(options);\n        if (ES.IsTemporalTime(item)) {\n            return new PlainTime(GetSlot(item, ISO_HOUR), GetSlot(item, ISO_MINUTE), GetSlot(item, ISO_SECOND), GetSlot(item, ISO_MILLISECOND), GetSlot(item, ISO_MICROSECOND), GetSlot(item, ISO_NANOSECOND));\n        }\n        return ES.ToTemporalTime(item, overflow);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalTime(oneParam);\n        const two = ES.ToTemporalTime(twoParam);\n        for (const slot of [ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND]) {\n            const val1 = GetSlot(one, slot);\n            const val2 = GetSlot(two, slot);\n            if (val1 !== val2)\n                return ES.ComparisonResult(val1 - val2);\n        }\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainTime, 'Temporal.PlainTime');\n//# sourceMappingURL=plaintime.js.map","import { DEBUG } from './debug';\nimport * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { TIMEZONE_ID, EPOCHNANOSECONDS, ISO_YEAR, ISO_MONTH, ISO_DAY, ISO_HOUR, ISO_MINUTE, ISO_SECOND, ISO_MILLISECOND, ISO_MICROSECOND, ISO_NANOSECOND, CreateSlots, GetSlot, SetSlot } from './slots';\nexport class TimeZone {\n    constructor(timeZoneIdentifierParam) {\n        // Note: if the argument is not passed, GetCanonicalTimeZoneIdentifier(undefined) will throw.\n        //       This check exists only to improve the error message.\n        if (arguments.length < 1) {\n            throw new RangeError('missing argument: identifier is required');\n        }\n        const timeZoneIdentifier = ES.GetCanonicalTimeZoneIdentifier(timeZoneIdentifierParam);\n        CreateSlots(this);\n        SetSlot(this, TIMEZONE_ID, timeZoneIdentifier);\n        if (DEBUG) {\n            Object.defineProperty(this, '_repr_', {\n                value: `${this[Symbol.toStringTag]} <${timeZoneIdentifier}>`,\n                writable: false,\n                enumerable: false,\n                configurable: false\n            });\n        }\n    }\n    get id() {\n        return ES.ToString(this);\n    }\n    getOffsetNanosecondsFor(instantParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const instant = ES.ToTemporalInstant(instantParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        const offsetNs = ES.ParseOffsetString(id);\n        if (offsetNs !== null)\n            return offsetNs;\n        return ES.GetIANATimeZoneOffsetNanoseconds(GetSlot(instant, EPOCHNANOSECONDS), id);\n    }\n    getOffsetStringFor(instantParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const instant = ES.ToTemporalInstant(instantParam);\n        return ES.BuiltinTimeZoneGetOffsetStringFor(this, instant);\n    }\n    getPlainDateTimeFor(instantParam, calendarParam = ES.GetISO8601Calendar()) {\n        const instant = ES.ToTemporalInstant(instantParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return ES.BuiltinTimeZoneGetPlainDateTimeFor(this, instant, calendar);\n    }\n    getInstantFor(dateTimeParam, optionsParam = undefined) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const dateTime = ES.ToTemporalDateTime(dateTimeParam);\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        return ES.BuiltinTimeZoneGetInstantFor(this, dateTime, disambiguation);\n    }\n    getPossibleInstantsFor(dateTimeParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const dateTime = ES.ToTemporalDateTime(dateTimeParam);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        const id = GetSlot(this, TIMEZONE_ID);\n        const offsetNs = ES.ParseOffsetString(id);\n        if (offsetNs !== null) {\n            const epochNs = ES.GetEpochFromISOParts(GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n            if (epochNs === null)\n                throw new RangeError('DateTime outside of supported range');\n            return [new Instant(epochNs.minus(offsetNs))];\n        }\n        const possibleEpochNs = ES.GetIANATimeZoneEpochValue(id, GetSlot(dateTime, ISO_YEAR), GetSlot(dateTime, ISO_MONTH), GetSlot(dateTime, ISO_DAY), GetSlot(dateTime, ISO_HOUR), GetSlot(dateTime, ISO_MINUTE), GetSlot(dateTime, ISO_SECOND), GetSlot(dateTime, ISO_MILLISECOND), GetSlot(dateTime, ISO_MICROSECOND), GetSlot(dateTime, ISO_NANOSECOND));\n        return possibleEpochNs.map((ns) => new Instant(ns));\n    }\n    getNextTransition(startingPointParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const startingPoint = ES.ToTemporalInstant(startingPointParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        // Offset time zones or UTC have no transitions\n        if (ES.ParseOffsetString(id) !== null || id === 'UTC') {\n            return null;\n        }\n        let epochNanoseconds = GetSlot(startingPoint, EPOCHNANOSECONDS);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        epochNanoseconds = ES.GetIANATimeZoneNextTransition(epochNanoseconds, id);\n        return epochNanoseconds === null ? null : new Instant(epochNanoseconds);\n    }\n    getPreviousTransition(startingPointParam) {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        const startingPoint = ES.ToTemporalInstant(startingPointParam);\n        const id = GetSlot(this, TIMEZONE_ID);\n        // Offset time zones or UTC have no transitions\n        if (ES.ParseOffsetString(id) !== null || id === 'UTC') {\n            return null;\n        }\n        let epochNanoseconds = GetSlot(startingPoint, EPOCHNANOSECONDS);\n        const Instant = GetIntrinsic('%Temporal.Instant%');\n        epochNanoseconds = ES.GetIANATimeZonePreviousTransition(epochNanoseconds, id);\n        return epochNanoseconds === null ? null : new Instant(epochNanoseconds);\n    }\n    toString() {\n        if (!ES.IsTemporalTimeZone(this))\n            throw new TypeError('invalid receiver');\n        return ES.ToString(GetSlot(this, TIMEZONE_ID));\n    }\n    toJSON() {\n        return ES.ToString(this);\n    }\n    static from(item) {\n        return ES.ToTemporalTimeZone(item);\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(TimeZone, 'Temporal.TimeZone');\n//# sourceMappingURL=timezone.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { ISO_YEAR, ISO_MONTH, ISO_DAY, CALENDAR, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nconst ObjectCreate = Object.create;\nconst DISALLOWED_UNITS = [\n    'week',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'millisecond',\n    'microsecond',\n    'nanosecond'\n];\nexport class PlainYearMonth {\n    constructor(isoYearParam, isoMonthParam, calendarParam = ES.GetISO8601Calendar(), referenceISODayParam = 1) {\n        const isoYear = ES.ToIntegerThrowOnInfinity(isoYearParam);\n        const isoMonth = ES.ToIntegerThrowOnInfinity(isoMonthParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        const referenceISODay = ES.ToIntegerThrowOnInfinity(referenceISODayParam);\n        // Note: if the arguments are not passed,\n        //       ToIntegerThrowOnInfinity(undefined) will have returned 0, which will\n        //       be rejected by RejectISODate in CreateTemporalYearMonthSlots. This\n        //       check exists only to improve the error message.\n        if (arguments.length < 2) {\n            throw new RangeError('missing argument: isoYear and isoMonth are required');\n        }\n        ES.CreateTemporalYearMonthSlots(this, isoYear, isoMonth, calendar, referenceISODay);\n    }\n    get year() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), this);\n    }\n    get month() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), this);\n    }\n    get monthCode() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), this);\n    }\n    get calendar() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get era() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), this);\n    }\n    get eraYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), this);\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), this);\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), this);\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), this);\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), this);\n    }\n    with(temporalYearMonthLike, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalYearMonthLike)) {\n            throw new TypeError('invalid argument');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalYearMonthLike);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['month', 'monthCode', 'year']);\n        const props = ES.ToPartialRecord(temporalYearMonthLike, fieldNames);\n        if (!props) {\n            throw new TypeError('invalid year-month-like');\n        }\n        let fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.ToTemporalYearMonthFields(fields, fieldNames);\n        const options = ES.GetOptionsObject(optionsParam);\n        return ES.YearMonthFromFields(calendar, fields, options);\n    }\n    add(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        ({ days } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 'day'));\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        const sign = ES.DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n        const day = sign < 0 ? ES.ToPositiveInteger(ES.CalendarDaysInMonth(calendar, this)) : 1;\n        const startDate = ES.DateFromFields(calendar, { ...fields, day });\n        const optionsCopy = { ...options };\n        const addedDate = ES.CalendarDateAdd(calendar, startDate, { ...duration, days }, options);\n        const addedDateFields = ES.ToTemporalYearMonthFields(addedDate, fieldNames);\n        return ES.YearMonthFromFields(calendar, addedDateFields, optionsCopy);\n    }\n    subtract(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        let duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        duration = {\n            years: -duration.years,\n            months: -duration.months,\n            weeks: -duration.weeks,\n            days: -duration.days,\n            hours: -duration.hours,\n            minutes: -duration.minutes,\n            seconds: -duration.seconds,\n            milliseconds: -duration.milliseconds,\n            microseconds: -duration.microseconds,\n            nanoseconds: -duration.nanoseconds\n        };\n        let { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        ({ days } = ES.BalanceDuration(days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, 'day'));\n        const options = ES.GetOptionsObject(optionsParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        const sign = ES.DurationSign(years, months, weeks, days, 0, 0, 0, 0, 0, 0);\n        const day = sign < 0 ? ES.ToPositiveInteger(ES.CalendarDaysInMonth(calendar, this)) : 1;\n        const startDate = ES.DateFromFields(calendar, { ...fields, day });\n        const optionsCopy = { ...options };\n        const addedDate = ES.CalendarDateAdd(calendar, startDate, { ...duration, days }, options);\n        const addedDateFields = ES.ToTemporalYearMonthFields(addedDate, fieldNames);\n        return ES.YearMonthFromFields(calendar, addedDateFields, optionsCopy);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalYearMonth(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarID = ES.ToString(calendar);\n        const otherCalendarID = ES.ToString(otherCalendar);\n        if (calendarID !== otherCalendarID) {\n            throw new RangeError(`cannot compute difference between months of ${calendarID} and ${otherCalendarID} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'month', DISALLOWED_UNITS);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, 'year');\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, undefined, false);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const otherFields = ES.ToTemporalYearMonthFields(other, fieldNames);\n        const thisFields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        const otherDate = ES.DateFromFields(calendar, { ...otherFields, day: 1 });\n        const thisDate = ES.DateFromFields(calendar, { ...thisFields, day: 1 });\n        const untilOptions = { ...options, largestUnit };\n        const result = ES.CalendarDateUntil(calendar, thisDate, otherDate, untilOptions);\n        if (smallestUnit === 'month' && roundingIncrement === 1)\n            return result;\n        let { years, months } = result;\n        ({ years, months } = ES.RoundDuration(years, months, 0, 0, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, roundingMode, thisDate));\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalYearMonth(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarID = ES.ToString(calendar);\n        const otherCalendarID = ES.ToString(otherCalendar);\n        if (calendarID !== otherCalendarID) {\n            throw new RangeError(`cannot compute difference between months of ${calendarID} and ${otherCalendarID} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'month', DISALLOWED_UNITS);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', DISALLOWED_UNITS, 'year');\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, undefined, false);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const otherFields = ES.ToTemporalYearMonthFields(other, fieldNames);\n        const thisFields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        const otherDate = ES.DateFromFields(calendar, { ...otherFields, day: 1 });\n        const thisDate = ES.DateFromFields(calendar, { ...thisFields, day: 1 });\n        const untilOptions = { ...options, largestUnit };\n        let { years, months } = ES.CalendarDateUntil(calendar, thisDate, otherDate, untilOptions);\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        if (smallestUnit === 'month' && roundingIncrement === 1) {\n            return new Duration(-years, -months, 0, 0, 0, 0, 0, 0, 0, 0);\n        }\n        ({ years, months } = ES.RoundDuration(years, months, 0, 0, 0, 0, 0, 0, 0, 0, roundingIncrement, smallestUnit, ES.NegateTemporalRoundingMode(roundingMode), thisDate));\n        return new Duration(-years, -months, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalYearMonth(otherParam);\n        for (const slot of [ISO_YEAR, ISO_MONTH, ISO_DAY]) {\n            const val1 = GetSlot(this, slot);\n            const val2 = GetSlot(other, slot);\n            if (val1 !== val2)\n                return false;\n        }\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const showCalendar = ES.ToShowCalendarOption(options);\n        return ES.TemporalYearMonthToString(this, showCalendar);\n    }\n    toJSON() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalYearMonthToString(this);\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.PlainYearMonth');\n    }\n    toPlainDate(item) {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(item))\n            throw new TypeError('argument should be an object');\n        const calendar = GetSlot(this, CALENDAR);\n        const receiverFieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, receiverFieldNames);\n        const inputFieldNames = ES.CalendarFields(calendar, ['day']);\n        const inputEntries = [['day']];\n        // Add extra fields from the calendar at the end\n        inputFieldNames.forEach((fieldName) => {\n            if (!inputEntries.some(([name]) => name === fieldName)) {\n                inputEntries.push([\n                    fieldName,\n                    undefined\n                ]); // Make TS ignore extra fields\n            }\n        });\n        const inputFields = ES.PrepareTemporalFields(item, inputEntries);\n        let mergedFields = ES.CalendarMergeFields(calendar, fields, inputFields);\n        const mergedFieldNames = [...new Set([...receiverFieldNames, ...inputFieldNames])];\n        const mergedEntries = [];\n        mergedFieldNames.forEach((fieldName) => {\n            if (!mergedEntries.some(([name]) => name === fieldName)) {\n                mergedEntries.push([fieldName, undefined]);\n            }\n        });\n        mergedFields = ES.PrepareTemporalFields(mergedFields, mergedEntries);\n        const options = ObjectCreate(null);\n        options.overflow = 'reject';\n        return ES.DateFromFields(calendar, mergedFields, options);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalYearMonth(this))\n            throw new TypeError('invalid receiver');\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(this, ISO_DAY),\n            isoMonth: GetSlot(this, ISO_MONTH),\n            isoYear: GetSlot(this, ISO_YEAR)\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalYearMonth(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            return ES.CreateTemporalYearMonth(GetSlot(item, ISO_YEAR), GetSlot(item, ISO_MONTH), GetSlot(item, CALENDAR), GetSlot(item, ISO_DAY));\n        }\n        return ES.ToTemporalYearMonth(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalYearMonth(oneParam);\n        const two = ES.ToTemporalYearMonth(twoParam);\n        return ES.CompareISODate(GetSlot(one, ISO_YEAR), GetSlot(one, ISO_MONTH), GetSlot(one, ISO_DAY), GetSlot(two, ISO_YEAR), GetSlot(two, ISO_MONTH), GetSlot(two, ISO_DAY));\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(PlainYearMonth, 'Temporal.PlainYearMonth');\n//# sourceMappingURL=plainyearmonth.js.map","import * as ES from './ecmascript';\nimport { GetIntrinsic, MakeIntrinsicClass } from './intrinsicclass';\nimport { CALENDAR, EPOCHNANOSECONDS, ISO_HOUR, INSTANT, ISO_DAY, ISO_MONTH, ISO_YEAR, ISO_MICROSECOND, ISO_MILLISECOND, ISO_MINUTE, ISO_NANOSECOND, ISO_SECOND, TIME_ZONE, GetSlot } from './slots';\nimport { DateTimeFormat } from './intl';\nimport bigInt from 'big-integer';\nconst ArrayPrototypePush = Array.prototype.push;\nexport class ZonedDateTime {\n    constructor(epochNanosecondsParam, timeZoneParam, calendarParam = ES.GetISO8601Calendar()) {\n        // Note: if the argument is not passed, ToBigInt(undefined) will throw. This check exists only\n        //       to improve the error message.\n        //       ToTemporalTimeZone(undefined) will end up calling TimeZone.from(\"undefined\"), which\n        //       could succeed.\n        if (arguments.length < 1) {\n            throw new TypeError('missing argument: epochNanoseconds is required');\n        }\n        const epochNanoseconds = ES.ToBigInt(epochNanosecondsParam);\n        const timeZone = ES.ToTemporalTimeZone(timeZoneParam);\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        ES.CreateTemporalZonedDateTimeSlots(this, epochNanoseconds, timeZone, calendar);\n    }\n    get calendar() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, CALENDAR);\n    }\n    get timeZone() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(this, TIME_ZONE);\n    }\n    get year() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get month() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonth(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get monthCode() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthCode(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get day() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDay(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get hour() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_HOUR);\n    }\n    get minute() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MINUTE);\n    }\n    get second() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_SECOND);\n    }\n    get millisecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MILLISECOND);\n    }\n    get microsecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_MICROSECOND);\n    }\n    get nanosecond() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return GetSlot(dateTime(this), ISO_NANOSECOND);\n    }\n    get era() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEra(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get eraYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarEraYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get epochSeconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return +value.divide(1e9);\n    }\n    get epochMilliseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return +value.divide(1e6);\n    }\n    get epochMicroseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const value = GetSlot(this, EPOCHNANOSECONDS);\n        return bigIntIfAvailable(value.divide(1e3));\n    }\n    get epochNanoseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return bigIntIfAvailable(GetSlot(this, EPOCHNANOSECONDS));\n    }\n    get dayOfWeek() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfWeek(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get dayOfYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDayOfYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get weekOfYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarWeekOfYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get hoursInDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const year = GetSlot(dt, ISO_YEAR);\n        const month = GetSlot(dt, ISO_MONTH);\n        const day = GetSlot(dt, ISO_DAY);\n        const today = new DateTime(year, month, day, 0, 0, 0, 0, 0, 0);\n        const tomorrowFields = ES.AddISODate(year, month, day, 0, 0, 0, 1, 'reject');\n        const tomorrow = new DateTime(tomorrowFields.year, tomorrowFields.month, tomorrowFields.day, 0, 0, 0, 0, 0, 0);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const todayNs = GetSlot(ES.BuiltinTimeZoneGetInstantFor(timeZone, today, 'compatible'), EPOCHNANOSECONDS);\n        const tomorrowNs = GetSlot(ES.BuiltinTimeZoneGetInstantFor(timeZone, tomorrow, 'compatible'), EPOCHNANOSECONDS);\n        return tomorrowNs.subtract(todayNs).toJSNumber() / 3.6e12;\n    }\n    get daysInWeek() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInWeek(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get daysInMonth() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInMonth(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get daysInYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarDaysInYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get monthsInYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarMonthsInYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get inLeapYear() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.CalendarInLeapYear(GetSlot(this, CALENDAR), dateTime(this));\n    }\n    get offset() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.BuiltinTimeZoneGetOffsetStringFor(GetSlot(this, TIME_ZONE), GetSlot(this, INSTANT));\n    }\n    get offsetNanoseconds() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.GetOffsetNanosecondsFor(GetSlot(this, TIME_ZONE), GetSlot(this, INSTANT));\n    }\n    with(temporalZonedDateTimeLike, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (!ES.IsObject(temporalZonedDateTimeLike)) {\n            throw new TypeError('invalid zoned-date-time-like');\n        }\n        ES.RejectObjectWithCalendarOrTimeZone(temporalZonedDateTimeLike);\n        const options = ES.GetOptionsObject(optionsParam);\n        const disambiguation = ES.ToTemporalDisambiguation(options);\n        const offset = ES.ToTemporalOffset(options, 'prefer');\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, [\n            'day',\n            'hour',\n            'microsecond',\n            'millisecond',\n            'minute',\n            'month',\n            'monthCode',\n            'nanosecond',\n            'second',\n            'year'\n        ]);\n        ArrayPrototypePush.call(fieldNames, 'offset');\n        const props = ES.ToPartialRecord(temporalZonedDateTimeLike, fieldNames);\n        if (!props) {\n            throw new TypeError('invalid zoned-date-time-like');\n        }\n        // Unlike ToTemporalZonedDateTimeFields, the offset property will be required.\n        const entries = [\n            ['day', undefined],\n            ['hour', 0],\n            ['microsecond', 0],\n            ['millisecond', 0],\n            ['minute', 0],\n            ['month', undefined],\n            ['monthCode', undefined],\n            ['nanosecond', 0],\n            ['second', 0],\n            ['year', undefined],\n            ['offset'],\n            ['timeZone']\n        ];\n        // Add extra fields from the calendar at the end\n        fieldNames.forEach((fieldName) => {\n            if (!entries.some(([name]) => name === fieldName)) {\n                entries.push([fieldName, undefined]);\n            }\n        });\n        let fields = ES.PrepareTemporalFields(this, entries);\n        fields = ES.CalendarMergeFields(calendar, fields, props);\n        fields = ES.PrepareTemporalFields(fields, entries);\n        const { year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.InterpretTemporalDateTimeFields(calendar, fields, options);\n        const offsetNs = ES.ParseOffsetString(fields.offset);\n        const epochNanoseconds = ES.InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, 'option', offsetNs, timeZone, disambiguation, offset, \n        /* matchMinute = */ false);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, GetSlot(this, TIME_ZONE), calendar);\n    }\n    withPlainDate(temporalDateParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const temporalDate = ES.ToTemporalDate(temporalDateParam);\n        const year = GetSlot(temporalDate, ISO_YEAR);\n        const month = GetSlot(temporalDate, ISO_MONTH);\n        const day = GetSlot(temporalDate, ISO_DAY);\n        let calendar = GetSlot(temporalDate, CALENDAR);\n        const thisDt = dateTime(this);\n        const hour = GetSlot(thisDt, ISO_HOUR);\n        const minute = GetSlot(thisDt, ISO_MINUTE);\n        const second = GetSlot(thisDt, ISO_SECOND);\n        const millisecond = GetSlot(thisDt, ISO_MILLISECOND);\n        const microsecond = GetSlot(thisDt, ISO_MICROSECOND);\n        const nanosecond = GetSlot(thisDt, ISO_NANOSECOND);\n        calendar = ES.ConsolidateCalendars(GetSlot(this, CALENDAR), calendar);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    withPlainTime(temporalTimeParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const PlainTime = GetIntrinsic('%Temporal.PlainTime%');\n        const temporalTime = temporalTimeParam == undefined ? new PlainTime() : ES.ToTemporalTime(temporalTimeParam);\n        const thisDt = dateTime(this);\n        const year = GetSlot(thisDt, ISO_YEAR);\n        const month = GetSlot(thisDt, ISO_MONTH);\n        const day = GetSlot(thisDt, ISO_DAY);\n        const calendar = GetSlot(this, CALENDAR);\n        const hour = GetSlot(temporalTime, ISO_HOUR);\n        const minute = GetSlot(temporalTime, ISO_MINUTE);\n        const second = GetSlot(temporalTime, ISO_SECOND);\n        const millisecond = GetSlot(temporalTime, ISO_MILLISECOND);\n        const microsecond = GetSlot(temporalTime, ISO_MICROSECOND);\n        const nanosecond = GetSlot(temporalTime, ISO_NANOSECOND);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const PlainDateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const dt = new PlainDateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, calendar);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dt, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    withTimeZone(timeZoneParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const timeZone = ES.ToTemporalTimeZone(timeZoneParam);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), timeZone, GetSlot(this, CALENDAR));\n    }\n    withCalendar(calendarParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = ES.ToTemporalCalendar(calendarParam);\n        return ES.CreateTemporalZonedDateTime(GetSlot(this, EPOCHNANOSECONDS), GetSlot(this, TIME_ZONE), calendar);\n    }\n    add(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        const options = ES.GetOptionsObject(optionsParam);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const epochNanoseconds = ES.AddZonedDateTime(GetSlot(this, INSTANT), timeZone, calendar, years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, options);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n    }\n    subtract(temporalDurationLike, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const duration = ES.ToLimitedTemporalDuration(temporalDurationLike);\n        const { years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = duration;\n        const options = ES.GetOptionsObject(optionsParam);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const epochNanoseconds = ES.AddZonedDateTime(GetSlot(this, INSTANT), timeZone, calendar, -years, -months, -weeks, -days, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds, options);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, timeZone, calendar);\n    }\n    until(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalZonedDateTime(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond');\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('hour', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', [], defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        const ns1 = GetSlot(this, EPOCHNANOSECONDS);\n        const ns2 = GetSlot(other, EPOCHNANOSECONDS);\n        let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n        if (largestUnit !== 'year' && largestUnit !== 'month' && largestUnit !== 'week' && largestUnit !== 'day') {\n            // The user is only asking for a time difference, so return difference of instants.\n            years = 0;\n            months = 0;\n            weeks = 0;\n            days = 0;\n            ({ seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceInstant(ns1, ns2, roundingIncrement, smallestUnit, roundingMode));\n            ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        }\n        else {\n            const timeZone = GetSlot(this, TIME_ZONE);\n            if (!ES.TimeZoneEquals(timeZone, GetSlot(other, TIME_ZONE))) {\n                throw new RangeError(\"When calculating difference between time zones, largestUnit must be 'hours' \" +\n                    'or smaller because day lengths can vary between time zones due to DST or time zone offset changes.');\n            }\n            const untilOptions = { ...options, largestUnit };\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.DifferenceZonedDateTime(ns1, ns2, timeZone, calendar, largestUnit, untilOptions));\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, this));\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.AdjustRoundedDurationDays(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, this));\n        }\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds);\n    }\n    since(otherParam, optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalZonedDateTime(otherParam);\n        const calendar = GetSlot(this, CALENDAR);\n        const otherCalendar = GetSlot(other, CALENDAR);\n        const calendarId = ES.ToString(calendar);\n        const otherCalendarId = ES.ToString(otherCalendar);\n        if (calendarId !== otherCalendarId) {\n            throw new RangeError(`cannot compute difference between dates of ${calendarId} and ${otherCalendarId} calendars`);\n        }\n        const options = ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, 'nanosecond');\n        const defaultLargestUnit = ES.LargerOfTwoTemporalUnits('hour', smallestUnit);\n        const largestUnit = ES.ToLargestTemporalUnit(options, 'auto', [], defaultLargestUnit);\n        ES.ValidateTemporalUnitRange(largestUnit, smallestUnit);\n        let roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        roundingMode = ES.NegateTemporalRoundingMode(roundingMode);\n        const roundingIncrement = ES.ToTemporalDateTimeRoundingIncrement(options, smallestUnit);\n        const ns1 = GetSlot(this, EPOCHNANOSECONDS);\n        const ns2 = GetSlot(other, EPOCHNANOSECONDS);\n        let years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds;\n        if (largestUnit !== 'year' && largestUnit !== 'month' && largestUnit !== 'week' && largestUnit !== 'day') {\n            // The user is only asking for a time difference, so return difference of instants.\n            years = 0;\n            months = 0;\n            weeks = 0;\n            days = 0;\n            ({ seconds, milliseconds, microseconds, nanoseconds } = ES.DifferenceInstant(ns1, ns2, roundingIncrement, smallestUnit, roundingMode));\n            ({ hours, minutes, seconds, milliseconds, microseconds, nanoseconds } = ES.BalanceDuration(0, 0, 0, seconds, milliseconds, microseconds, nanoseconds, largestUnit));\n        }\n        else {\n            const timeZone = GetSlot(this, TIME_ZONE);\n            if (!ES.TimeZoneEquals(timeZone, GetSlot(other, TIME_ZONE))) {\n                throw new RangeError(\"When calculating difference between time zones, largestUnit must be 'hours' \" +\n                    'or smaller because day lengths can vary between time zones due to DST or time zone offset changes.');\n            }\n            const untilOptions = { ...options, largestUnit };\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.DifferenceZonedDateTime(ns1, ns2, timeZone, calendar, largestUnit, untilOptions));\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.RoundDuration(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, this));\n            ({ years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds } =\n                ES.AdjustRoundedDurationDays(years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds, roundingIncrement, smallestUnit, roundingMode, this));\n        }\n        const Duration = GetIntrinsic('%Temporal.Duration%');\n        return new Duration(-years, -months, -weeks, -days, -hours, -minutes, -seconds, -milliseconds, -microseconds, -nanoseconds);\n    }\n    round(optionsParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        if (optionsParam === undefined)\n            throw new TypeError('options parameter is required');\n        const options = typeof optionsParam === 'string'\n            ? ES.CreateOnePropObject('smallestUnit', optionsParam)\n            : ES.GetOptionsObject(optionsParam);\n        const smallestUnit = ES.ToSmallestTemporalUnit(options, undefined, ['year', 'month', 'week']);\n        if (smallestUnit === undefined)\n            throw new RangeError('smallestUnit is required');\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'halfExpand');\n        const maximumIncrements = {\n            day: 1,\n            hour: 24,\n            minute: 60,\n            second: 60,\n            millisecond: 1000,\n            microsecond: 1000,\n            nanosecond: 1000\n        };\n        const roundingIncrement = ES.ToTemporalRoundingIncrement(options, maximumIncrements[smallestUnit], false);\n        // first, round the underlying DateTime fields\n        const dt = dateTime(this);\n        let year = GetSlot(dt, ISO_YEAR);\n        let month = GetSlot(dt, ISO_MONTH);\n        let day = GetSlot(dt, ISO_DAY);\n        let hour = GetSlot(dt, ISO_HOUR);\n        let minute = GetSlot(dt, ISO_MINUTE);\n        let second = GetSlot(dt, ISO_SECOND);\n        let millisecond = GetSlot(dt, ISO_MILLISECOND);\n        let microsecond = GetSlot(dt, ISO_MICROSECOND);\n        let nanosecond = GetSlot(dt, ISO_NANOSECOND);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const calendar = GetSlot(this, CALENDAR);\n        const dtStart = new DateTime(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), 0, 0, 0, 0, 0, 0);\n        const instantStart = ES.BuiltinTimeZoneGetInstantFor(timeZone, dtStart, 'compatible');\n        const endNs = ES.AddZonedDateTime(instantStart, timeZone, calendar, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0);\n        const dayLengthNs = endNs.subtract(GetSlot(instantStart, EPOCHNANOSECONDS));\n        if (dayLengthNs.isZero()) {\n            throw new RangeError('cannot round a ZonedDateTime in a calendar with zero-length days');\n        }\n        ({ year, month, day, hour, minute, second, millisecond, microsecond, nanosecond } = ES.RoundISODateTime(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, roundingIncrement, smallestUnit, roundingMode, \n        // Days are guaranteed to be shorter than Number.MAX_SAFE_INTEGER\n        // (which can hold up to 104 days in nanoseconds)\n        dayLengthNs.toJSNumber()));\n        // Now reset all DateTime fields but leave the TimeZone. The offset will\n        // also be retained if the new date/time values are still OK with the old\n        // offset. Otherwise the offset will be changed to be compatible with the\n        // new date/time values. If DST disambiguation is required, the `compatible`\n        // disambiguation algorithm will be used.\n        const offsetNs = ES.GetOffsetNanosecondsFor(timeZone, GetSlot(this, INSTANT));\n        const epochNanoseconds = ES.InterpretISODateTimeOffset(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond, 'option', offsetNs, timeZone, 'compatible', 'prefer', \n        /* matchMinute = */ false);\n        return ES.CreateTemporalZonedDateTime(epochNanoseconds, timeZone, GetSlot(this, CALENDAR));\n    }\n    equals(otherParam) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const other = ES.ToTemporalZonedDateTime(otherParam);\n        const one = GetSlot(this, EPOCHNANOSECONDS);\n        const two = GetSlot(other, EPOCHNANOSECONDS);\n        if (!bigInt(one).equals(two))\n            return false;\n        if (!ES.TimeZoneEquals(GetSlot(this, TIME_ZONE), GetSlot(other, TIME_ZONE)))\n            return false;\n        return ES.CalendarEquals(GetSlot(this, CALENDAR), GetSlot(other, CALENDAR));\n    }\n    toString(optionsParam = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const options = ES.GetOptionsObject(optionsParam);\n        const { precision, unit, increment } = ES.ToSecondsStringPrecision(options);\n        const roundingMode = ES.ToTemporalRoundingMode(options, 'trunc');\n        const showCalendar = ES.ToShowCalendarOption(options);\n        const showTimeZone = ES.ToShowTimeZoneNameOption(options);\n        const showOffset = ES.ToShowOffsetOption(options);\n        return ES.TemporalZonedDateTimeToString(this, precision, showCalendar, showTimeZone, showOffset, {\n            unit,\n            increment,\n            roundingMode\n        });\n    }\n    toLocaleString(locales = undefined, options = undefined) {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return new DateTimeFormat(locales, options).format(this);\n    }\n    toJSON() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalZonedDateTimeToString(this, 'auto');\n    }\n    valueOf() {\n        throw new TypeError('use compare() or equals() to compare Temporal.ZonedDateTime');\n    }\n    startOfDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const DateTime = GetIntrinsic('%Temporal.PlainDateTime%');\n        const calendar = GetSlot(this, CALENDAR);\n        const dtStart = new DateTime(GetSlot(dt, ISO_YEAR), GetSlot(dt, ISO_MONTH), GetSlot(dt, ISO_DAY), 0, 0, 0, 0, 0, 0, calendar);\n        const timeZone = GetSlot(this, TIME_ZONE);\n        const instant = ES.BuiltinTimeZoneGetInstantFor(timeZone, dtStart, 'compatible');\n        return ES.CreateTemporalZonedDateTime(GetSlot(instant, EPOCHNANOSECONDS), timeZone, calendar);\n    }\n    toInstant() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const TemporalInstant = GetIntrinsic('%Temporal.Instant%');\n        return new TemporalInstant(GetSlot(this, EPOCHNANOSECONDS));\n    }\n    toPlainDate() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToDate(dateTime(this));\n    }\n    toPlainTime() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return ES.TemporalDateTimeToTime(dateTime(this));\n    }\n    toPlainDateTime() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        return dateTime(this);\n    }\n    toPlainYearMonth() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['monthCode', 'year']);\n        const fields = ES.ToTemporalYearMonthFields(this, fieldNames);\n        return ES.YearMonthFromFields(calendar, fields);\n    }\n    toPlainMonthDay() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const calendar = GetSlot(this, CALENDAR);\n        const fieldNames = ES.CalendarFields(calendar, ['day', 'monthCode']);\n        const fields = ES.ToTemporalMonthDayFields(this, fieldNames);\n        return ES.MonthDayFromFields(calendar, fields);\n    }\n    getISOFields() {\n        if (!ES.IsTemporalZonedDateTime(this))\n            throw new TypeError('invalid receiver');\n        const dt = dateTime(this);\n        const tz = GetSlot(this, TIME_ZONE);\n        return {\n            calendar: GetSlot(this, CALENDAR),\n            isoDay: GetSlot(dt, ISO_DAY),\n            isoHour: GetSlot(dt, ISO_HOUR),\n            isoMicrosecond: GetSlot(dt, ISO_MICROSECOND),\n            isoMillisecond: GetSlot(dt, ISO_MILLISECOND),\n            isoMinute: GetSlot(dt, ISO_MINUTE),\n            isoMonth: GetSlot(dt, ISO_MONTH),\n            isoNanosecond: GetSlot(dt, ISO_NANOSECOND),\n            isoSecond: GetSlot(dt, ISO_SECOND),\n            isoYear: GetSlot(dt, ISO_YEAR),\n            offset: ES.BuiltinTimeZoneGetOffsetStringFor(tz, GetSlot(this, INSTANT)),\n            timeZone: tz\n        };\n    }\n    static from(item, optionsParam = undefined) {\n        const options = ES.GetOptionsObject(optionsParam);\n        if (ES.IsTemporalZonedDateTime(item)) {\n            ES.ToTemporalOverflow(options); // validate and ignore\n            ES.ToTemporalDisambiguation(options);\n            ES.ToTemporalOffset(options, 'reject');\n            return ES.CreateTemporalZonedDateTime(GetSlot(item, EPOCHNANOSECONDS), GetSlot(item, TIME_ZONE), GetSlot(item, CALENDAR));\n        }\n        return ES.ToTemporalZonedDateTime(item, options);\n    }\n    static compare(oneParam, twoParam) {\n        const one = ES.ToTemporalZonedDateTime(oneParam);\n        const two = ES.ToTemporalZonedDateTime(twoParam);\n        const ns1 = GetSlot(one, EPOCHNANOSECONDS);\n        const ns2 = GetSlot(two, EPOCHNANOSECONDS);\n        if (bigInt(ns1).lesser(ns2))\n            return -1;\n        if (bigInt(ns1).greater(ns2))\n            return 1;\n        return 0;\n    }\n}\nSymbol.toStringTag;\nMakeIntrinsicClass(ZonedDateTime, 'Temporal.ZonedDateTime');\nfunction bigIntIfAvailable(wrapper) {\n    return typeof globalThis.BigInt === 'undefined' ? wrapper : wrapper.value;\n}\nfunction dateTime(zdt) {\n    return ES.BuiltinTimeZoneGetPlainDateTimeFor(GetSlot(zdt, TIME_ZONE), GetSlot(zdt, INSTANT), GetSlot(zdt, CALENDAR));\n}\n//# sourceMappingURL=zoneddatetime.js.map","import { Instant } from './instant';\nimport bigInt from 'big-integer';\nexport function toTemporalInstant() {\n    // Observable access to valueOf is not correct here, but unavoidable\n    const epochNanoseconds = bigInt(+this).multiply(1e6);\n    return new Instant(bigIntIfAvailable(epochNanoseconds));\n}\nfunction bigIntIfAvailable(wrapper) {\n    return typeof globalThis.BigInt === 'undefined' ? wrapper : wrapper.value;\n}\n//# sourceMappingURL=legacydate.js.map"],"names":["bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","isSmall","prototype","Object","create","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","l_a","l_b","r","carry","base","sum","push","addAny","addSmall","l","subtract","negate","abs","plus","a_l","b_l","borrow","difference","subtractAny","subtractSmall","minus","small","multiplyLong","product","a_i","b_j","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","useKaratsuba","l1","l2","multiply","times","multiplySmallAndArray","_multiplyBySmall","square","a_j","divMod1","result","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","q","divModSmall","divMod2","part","guess","xlen","highx","highy","check","unshift","reverse","quotient","divModAny","self","Error","comparison","qSign","mod","mSign","divmod","divide","over","pow","isEven","toString","_0","_1","_2","isNegative","modPow","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","equals","eq","notEquals","neq","greater","gt","lesser","lt","greaterOrEquals","geq","lesserOrEquals","leq","isUnit","isDivisibleBy","isBasicPrime","millerRabinTest","nPrev","prev","next","isPrime","strict","bits","bitLength","logN","log","toJSNumber","t","isProbablePrime","iterations","rng","randBetween","zero","newT","one","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","p","e","min","gcd","lcm","usedRNG","random","low","high","range","digits","toBase","restricted","top","digit","fromArray","text","toLowerCase","absBase","alphabetValues","start","parseBaseFromArray","val","stringify","apply","map","valueOf","neg","Number","out","left","toBaseString","join","toArray","str","zeros","toJSON","parseInt","parseStringValue","split","decimalPlace","indexOf","isValid","test","parseNumberValue","minusOne","isInstance","module","hasOwnProperty","ArrayPrototypePush","IntlDateTimeFormat","MathAbs","MathFloor","ObjectAssign","ReflectApply","ES.ToString","ES.IsTemporalCalendar","ES.IsObject","ES.GetOptionsObject","ES.ToTemporalDate","ES.ToTemporalDuration","ES.ToTemporalOverflow","ES.BalanceDuration","ES.ToLargestTemporalUnit","ES.IsTemporalYearMonth","ES.IsTemporalMonthDay","ES.ToTemporalCalendar","ES.PrepareTemporalFields","ES.RegulateISODate","ES.CreateTemporalDate","ES.RegulateISOYearMonth","ES.CreateTemporalYearMonth","ES.CreateTemporalMonthDay","ES.AddISODate","ES.DifferenceISODate","ES.DayOfWeek","ES.DayOfYear","ES.WeekOfYear","ES.ISODaysInMonth","ES.LeapYear","ES.RejectToRange","ES.ConstrainToRange","ES.ISOYearString","ES.ISODateTimePartString","ES.ComparisonResult","ES.CompareISODate","instant","ObjectCreate","PARSE.instant","PARSE.datetime","PARSE.time","PARSE.yearmonth","PARSE.monthday","PARSE.duration","PARSE.offset","ES.ToTemporalTimeZone","ES.IsTemporalDate","ES.IsTemporalTime","ES.IsTemporalDateTime","ES.IsTemporalZonedDateTime","ES.IsTemporalInstant","ES.BuiltinTimeZoneGetInstantFor","DISALLOWED_UNITS","ES.ToBigInt","ES.ValidateEpochNanoseconds","ES.TemporalInstantToString","bigIntIfAvailable","ES.ToLimitedTemporalDuration","ES.AddInstant","ES.ToTemporalInstant","ES.ToSmallestTemporalUnit","ES.LargerOfTwoTemporalUnits","ES.ValidateTemporalUnitRange","ES.ToTemporalRoundingMode","ES.ToTemporalRoundingIncrement","ES.DifferenceInstant","ES.CreateOnePropObject","ES.RoundInstant","ES.ToSecondsStringPrecision","ES.CreateTemporalZonedDateTime","ES.GetISO8601Calendar","ES.ToNumber","ES.ToIntegerThrowOnInfinity","ES.CreateTemporalDateSlots","ES.CalendarEra","ES.CalendarEraYear","ES.CalendarYear","ES.CalendarMonth","ES.CalendarMonthCode","ES.CalendarDay","ES.CalendarDayOfWeek","ES.CalendarDayOfYear","ES.CalendarWeekOfYear","ES.CalendarDaysInWeek","ES.CalendarDaysInMonth","ES.CalendarDaysInYear","ES.CalendarMonthsInYear","ES.CalendarInLeapYear","ES.RejectObjectWithCalendarOrTimeZone","ES.CalendarFields","ES.ToPartialRecord","ES.ToTemporalDateFields","ES.CalendarMergeFields","ES.DateFromFields","ES.CalendarDateAdd","ES.CreateNegatedTemporalDuration","ES.CalendarDateUntil","ES.RoundDuration","ES.NegateTemporalRoundingMode","ES.CalendarEquals","ES.ToShowCalendarOption","ES.TemporalDateToString","ES.CreateTemporalDateTime","ES.ToTemporalTime","ES.ToTemporalYearMonthFields","ES.YearMonthFromFields","ES.ToTemporalMonthDayFields","ES.MonthDayFromFields","ES.CreateTemporalDateTimeSlots","ES.ToTemporalDateTimeFields","ES.InterpretTemporalDateTimeFields","ES.ConsolidateCalendars","ES.AddDateTime","ES.ToTemporalDateTime","ES.ToTemporalDateTimeRoundingIncrement","ES.DifferenceISODateTime","ES.TemporalDateTimeToDate","ES.RoundISODateTime","ES.TemporalDateTimeToString","ES.ToTemporalDisambiguation","ES.TemporalDateTimeToTime","ES.ToIntegerWithoutRounding","ES.DurationSign","ES.TemporalDurationToString","ES.IsTemporalDuration","ES.ToRelativeTemporalObject","ES.AddDuration","ES.DefaultTemporalLargestUnit","ES.UnbalanceDurationRelative","ES.AdjustRoundedDurationDays","ES.BalanceDurationRelative","ES.MoveRelativeZonedDateTime","ES.ToTemporalDurationTotalUnit","ES.CalculateOffsetShift","ES.TotalDurationNanoseconds","ES.CreateTemporalMonthDaySlots","ES.ToTemporalMonthDay","ES.TemporalMonthDayToString","ES.SystemUTCEpochNanoSeconds","ES.BuiltinTimeZoneGetPlainDateTimeFor","ES.SystemTimeZone","ES.RoundTime","ES.FormatSecondsStringPart","ES.RejectTime","ES.ToTemporalTimeRecord","ES.RegulateTime","ES.AddTime","ES.DifferenceTime","ES.GetCanonicalTimeZoneIdentifier","ES.IsTemporalTimeZone","ES.ParseOffsetString","ES.GetIANATimeZoneOffsetNanoseconds","ES.BuiltinTimeZoneGetOffsetStringFor","ES.GetEpochFromISOParts","ES.GetIANATimeZoneEpochValue","ES.GetIANATimeZoneNextTransition","ES.GetIANATimeZonePreviousTransition","ES.CreateTemporalYearMonthSlots","ES.ToPositiveInteger","ES.ToTemporalYearMonth","ES.TemporalYearMonthToString","ES.CreateTemporalZonedDateTimeSlots","ES.GetOffsetNanosecondsFor","ES.ToTemporalOffset","ES.InterpretISODateTimeOffset","ES.AddZonedDateTime","ES.ToTemporalZonedDateTime","ES.TimeZoneEquals","ES.DifferenceZonedDateTime","ES.ToShowTimeZoneNameOption","ES.ToShowOffsetOption","ES.TemporalZonedDateTimeToString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,MAAIA,MAAM,GAAI,UAAUC,WAAV,EAAqB;;EAG/B,QAAIC,IAAI,GAAG,GAAX;EAAA,QACIC,QAAQ,GAAG,CADf;EAAA,QAEIC,OAAO,GAAG,gBAFd;EAAA,QAGIC,WAAW,GAAGC,YAAY,CAACF,OAAD,CAH9B;EAAA,QAIIG,gBAAgB,GAAG,sCAJvB;EAMA,QAAIC,oBAAoB,GAAG,OAAOC,MAAP,KAAkB,UAA7C;;EAEA,aAASC,OAAT,CAAiBC,CAAjB,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoD;EAChD,UAAI,OAAOH,CAAP,KAAa,WAAjB,EAA8B,OAAOD,OAAO,CAAC,CAAD,CAAd;EAC9B,UAAI,OAAOE,KAAP,KAAiB,WAArB,EAAkC,OAAO,CAACA,KAAD,KAAW,EAAX,IAAiB,CAACC,QAAlB,GAA6BE,UAAU,CAACJ,CAAD,CAAvC,GAA6CK,SAAS,CAACL,CAAD,EAAIC,KAAJ,EAAWC,QAAX,EAAqBC,aAArB,CAA7D;EAClC,aAAOC,UAAU,CAACJ,CAAD,CAAjB;EACH;;EAED,aAASM,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;EAC7B,WAAKD,KAAL,GAAaA,KAAb;EACA,WAAKC,IAAL,GAAYA,IAAZ;EACA,WAAKC,OAAL,GAAe,KAAf;EACH;;EACDH,IAAAA,UAAU,CAACI,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcb,OAAO,CAACW,SAAtB,CAAvB;;EAEA,aAASG,YAAT,CAAsBN,KAAtB,EAA6B;EACzB,WAAKA,KAAL,GAAaA,KAAb;EACA,WAAKC,IAAL,GAAYD,KAAK,GAAG,CAApB;EACA,WAAKE,OAAL,GAAe,IAAf;EACH;;EACDI,IAAAA,YAAY,CAACH,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcb,OAAO,CAACW,SAAtB,CAAzB;;EAEA,aAASI,YAAT,CAAsBP,KAAtB,EAA6B;EACzB,WAAKA,KAAL,GAAaA,KAAb;EACH;;EACDO,IAAAA,YAAY,CAACJ,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcb,OAAO,CAACW,SAAtB,CAAzB;;EAEA,aAASK,SAAT,CAAmBC,CAAnB,EAAsB;EAClB,aAAO,CAACvB,OAAD,GAAWuB,CAAX,IAAgBA,CAAC,GAAGvB,OAA3B;EACH;;EAED,aAASE,YAAT,CAAsBqB,CAAtB,EAAyB;;EACrB,UAAIA,CAAC,GAAG,GAAR,EACI,OAAO,CAACA,CAAD,CAAP;EACJ,UAAIA,CAAC,GAAG,IAAR,EACI,OAAO,CAACA,CAAC,GAAG,GAAL,EAAUC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,GAAf,CAAV,CAAP;EACJ,aAAO,CAACA,CAAC,GAAG,GAAL,EAAUC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,GAAf,IAAsB,GAAhC,EAAqCC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,IAAf,CAArC,CAAP;EACH;;EAED,aAASG,YAAT,CAAsBC,GAAtB,EAA2B;;EACvBC,MAAAA,IAAI,CAACD,GAAD,CAAJ;EACA,UAAIE,MAAM,GAAGF,GAAG,CAACE,MAAjB;;EACA,UAAIA,MAAM,GAAG,CAAT,IAAcC,UAAU,CAACH,GAAD,EAAM1B,WAAN,CAAV,GAA+B,CAAjD,EAAoD;EAChD,gBAAQ4B,MAAR;EACI,eAAK,CAAL;EAAQ,mBAAO,CAAP;;EACR,eAAK,CAAL;EAAQ,mBAAOF,GAAG,CAAC,CAAD,CAAV;;EACR,eAAK,CAAL;EAAQ,mBAAOA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAS7B,IAAzB;;EACR;EAAS,mBAAO6B,GAAG,CAAC,CAAD,CAAH,GAAS,CAACA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAS7B,IAAnB,IAA2BA,IAA3C;EAJb;EAMH;;EACD,aAAO6B,GAAP;EACH;;EAED,aAASC,IAAT,CAAcrB,CAAd,EAAiB;EACb,UAAIwB,CAAC,GAAGxB,CAAC,CAACsB,MAAV;;EACA,aAAOtB,CAAC,CAAC,EAAEwB,CAAH,CAAD,KAAW,CAAlB;EAAA;;EACAxB,MAAAA,CAAC,CAACsB,MAAF,GAAWE,CAAC,GAAG,CAAf;EACH;;EAED,aAASC,WAAT,CAAqBH,MAArB,EAA6B;;EACzB,UAAII,CAAC,GAAG,IAAIC,KAAJ,CAAUL,MAAV,CAAR;EACA,UAAIE,CAAC,GAAG,CAAC,CAAT;;EACA,aAAO,EAAEA,CAAF,GAAMF,MAAb,EAAqB;EACjBI,QAAAA,CAAC,CAACF,CAAD,CAAD,GAAO,CAAP;EACH;;EACD,aAAOE,CAAP;EACH;;EAED,aAASE,QAAT,CAAkBZ,CAAlB,EAAqB;EACjB,UAAIA,CAAC,GAAG,CAAR,EAAW,OAAOC,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAP;EACX,aAAOC,IAAI,CAACY,IAAL,CAAUb,CAAV,CAAP;EACH;;EAED,aAASc,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;;EACf,UAAIC,GAAG,GAAGF,CAAC,CAACT,MAAZ;EAAA,UACIY,GAAG,GAAGF,CAAC,CAACV,MADZ;EAAA,UAEIa,CAAC,GAAG,IAAIR,KAAJ,CAAUM,GAAV,CAFR;EAAA,UAGIG,KAAK,GAAG,CAHZ;EAAA,UAIIC,IAAI,GAAG9C,IAJX;EAAA,UAKI+C,GALJ;EAAA,UAKSd,CALT;;EAMA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGU,GAAhB,EAAqBV,CAAC,EAAtB,EAA0B;EACtBc,QAAAA,GAAG,GAAGP,CAAC,CAACP,CAAD,CAAD,GAAOQ,CAAC,CAACR,CAAD,CAAR,GAAcY,KAApB;EACAA,QAAAA,KAAK,GAAGE,GAAG,IAAID,IAAP,GAAc,CAAd,GAAkB,CAA1B;EACAF,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAOc,GAAG,GAAGF,KAAK,GAAGC,IAArB;EACH;;EACD,aAAOb,CAAC,GAAGS,GAAX,EAAgB;EACZK,QAAAA,GAAG,GAAGP,CAAC,CAACP,CAAD,CAAD,GAAOY,KAAb;EACAA,QAAAA,KAAK,GAAGE,GAAG,KAAKD,IAAR,GAAe,CAAf,GAAmB,CAA3B;EACAF,QAAAA,CAAC,CAACX,CAAC,EAAF,CAAD,GAASc,GAAG,GAAGF,KAAK,GAAGC,IAAvB;EACH;;EACD,UAAID,KAAK,GAAG,CAAZ,EAAeD,CAAC,CAACI,IAAF,CAAOH,KAAP;EACf,aAAOD,CAAP;EACH;;EAED,aAASK,MAAT,CAAgBT,CAAhB,EAAmBC,CAAnB,EAAsB;EAClB,UAAID,CAAC,CAACT,MAAF,IAAYU,CAAC,CAACV,MAAlB,EAA0B,OAAOQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,CAAV;EAC1B,aAAOF,GAAG,CAACE,CAAD,EAAID,CAAJ,CAAV;EACH;;EAED,aAASU,QAAT,CAAkBV,CAAlB,EAAqBK,KAArB,EAA4B;;EACxB,UAAIM,CAAC,GAAGX,CAAC,CAACT,MAAV;EAAA,UACIa,CAAC,GAAG,IAAIR,KAAJ,CAAUe,CAAV,CADR;EAAA,UAEIL,IAAI,GAAG9C,IAFX;EAAA,UAGI+C,GAHJ;EAAA,UAGSd,CAHT;;EAIA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpBc,QAAAA,GAAG,GAAGP,CAAC,CAACP,CAAD,CAAD,GAAOa,IAAP,GAAcD,KAApB;EACAA,QAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWoB,GAAG,GAAGD,IAAjB,CAAR;EACAF,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAOc,GAAG,GAAGF,KAAK,GAAGC,IAArB;EACAD,QAAAA,KAAK,IAAI,CAAT;EACH;;EACD,aAAOA,KAAK,GAAG,CAAf,EAAkB;EACdD,QAAAA,CAAC,CAACX,CAAC,EAAF,CAAD,GAASY,KAAK,GAAGC,IAAjB;EACAD,QAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWkB,KAAK,GAAGC,IAAnB,CAAR;EACH;;EACD,aAAOF,CAAP;EACH;;EAED7B,IAAAA,UAAU,CAACI,SAAX,CAAqBoB,GAArB,GAA2B,UAAU9B,CAAV,EAAa;EACpC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;;EACA,UAAI,KAAKQ,IAAL,KAAcQ,CAAC,CAACR,IAApB,EAA0B;EACtB,eAAO,KAAKmC,QAAL,CAAc3B,CAAC,CAAC4B,MAAF,EAAd,CAAP;EACH;;EACD,UAAIb,CAAC,GAAG,KAAKxB,KAAb;EAAA,UAAoByB,CAAC,GAAGhB,CAAC,CAACT,KAA1B;;EACA,UAAIS,CAAC,CAACP,OAAN,EAAe;EACX,eAAO,IAAIH,UAAJ,CAAemC,QAAQ,CAACV,CAAD,EAAId,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAJ,CAAvB,EAAyC,KAAKxB,IAA9C,CAAP;EACH;;EACD,aAAO,IAAIF,UAAJ,CAAekC,MAAM,CAACT,CAAD,EAAIC,CAAJ,CAArB,EAA6B,KAAKxB,IAAlC,CAAP;EACH,KAVD;;EAWAF,IAAAA,UAAU,CAACI,SAAX,CAAqBoC,IAArB,GAA4BxC,UAAU,CAACI,SAAX,CAAqBoB,GAAjD;;EAEAjB,IAAAA,YAAY,CAACH,SAAb,CAAuBoB,GAAvB,GAA6B,UAAU9B,CAAV,EAAa;EACtC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EACA,UAAI+B,CAAC,GAAG,KAAKxB,KAAb;;EACA,UAAIwB,CAAC,GAAG,CAAJ,KAAUf,CAAC,CAACR,IAAhB,EAAsB;EAClB,eAAO,KAAKmC,QAAL,CAAc3B,CAAC,CAAC4B,MAAF,EAAd,CAAP;EACH;;EACD,UAAIZ,CAAC,GAAGhB,CAAC,CAACT,KAAV;;EACA,UAAIS,CAAC,CAACP,OAAN,EAAe;EACX,YAAIM,SAAS,CAACgB,CAAC,GAAGC,CAAL,CAAb,EAAsB,OAAO,IAAInB,YAAJ,CAAiBkB,CAAC,GAAGC,CAArB,CAAP;EACtBA,QAAAA,CAAC,GAAGrC,YAAY,CAACsB,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAD,CAAhB;EACH;;EACD,aAAO,IAAI1B,UAAJ,CAAemC,QAAQ,CAACT,CAAD,EAAIf,IAAI,CAAC4B,GAAL,CAASd,CAAT,CAAJ,CAAvB,EAAyCA,CAAC,GAAG,CAA7C,CAAP;EACH,KAZD;;EAaAlB,IAAAA,YAAY,CAACH,SAAb,CAAuBoC,IAAvB,GAA8BjC,YAAY,CAACH,SAAb,CAAuBoB,GAArD;;EAEAhB,IAAAA,YAAY,CAACJ,SAAb,CAAuBoB,GAAvB,GAA6B,UAAU9B,CAAV,EAAa;EACtC,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAaH,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAA5C,CAAP;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBoC,IAAvB,GAA8BhC,YAAY,CAACJ,SAAb,CAAuBoB,GAArD;;EAEA,aAASa,QAAT,CAAkBZ,CAAlB,EAAqBC,CAArB,EAAwB;;EACpB,UAAIe,GAAG,GAAGhB,CAAC,CAACT,MAAZ;EAAA,UACI0B,GAAG,GAAGhB,CAAC,CAACV,MADZ;EAAA,UAEIa,CAAC,GAAG,IAAIR,KAAJ,CAAUoB,GAAV,CAFR;EAAA,UAGIE,MAAM,GAAG,CAHb;EAAA,UAIIZ,IAAI,GAAG9C,IAJX;EAAA,UAKIiC,CALJ;EAAA,UAKO0B,UALP;;EAMA,WAAK1B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwB,GAAhB,EAAqBxB,CAAC,EAAtB,EAA0B;EACtB0B,QAAAA,UAAU,GAAGnB,CAAC,CAACP,CAAD,CAAD,GAAOyB,MAAP,GAAgBjB,CAAC,CAACR,CAAD,CAA9B;;EACA,YAAI0B,UAAU,GAAG,CAAjB,EAAoB;EAChBA,UAAAA,UAAU,IAAIb,IAAd;EACAY,UAAAA,MAAM,GAAG,CAAT;EACH,SAHD,MAGOA,MAAM,GAAG,CAAT;;EACPd,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAO0B,UAAP;EACH;;EACD,WAAK1B,CAAC,GAAGwB,GAAT,EAAcxB,CAAC,GAAGuB,GAAlB,EAAuBvB,CAAC,EAAxB,EAA4B;EACxB0B,QAAAA,UAAU,GAAGnB,CAAC,CAACP,CAAD,CAAD,GAAOyB,MAApB;EACA,YAAIC,UAAU,GAAG,CAAjB,EAAoBA,UAAU,IAAIb,IAAd,CAApB,KACK;EACDF,UAAAA,CAAC,CAACX,CAAC,EAAF,CAAD,GAAS0B,UAAT;EACA;EACH;EACDf,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAO0B,UAAP;EACH;;EACD,aAAO1B,CAAC,GAAGuB,GAAX,EAAgBvB,CAAC,EAAjB,EAAqB;EACjBW,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAOO,CAAC,CAACP,CAAD,CAAR;EACH;;EACDH,MAAAA,IAAI,CAACc,CAAD,CAAJ;EACA,aAAOA,CAAP;EACH;;EAED,aAASgB,WAAT,CAAqBpB,CAArB,EAAwBC,CAAxB,EAA2BxB,IAA3B,EAAiC;EAC7B,UAAID,KAAJ;;EACA,UAAIgB,UAAU,CAACQ,CAAD,EAAIC,CAAJ,CAAV,IAAoB,CAAxB,EAA2B;EACvBzB,QAAAA,KAAK,GAAGoC,QAAQ,CAACZ,CAAD,EAAIC,CAAJ,CAAhB;EACH,OAFD,MAEO;EACHzB,QAAAA,KAAK,GAAGoC,QAAQ,CAACX,CAAD,EAAID,CAAJ,CAAhB;EACAvB,QAAAA,IAAI,GAAG,CAACA,IAAR;EACH;;EACDD,MAAAA,KAAK,GAAGY,YAAY,CAACZ,KAAD,CAApB;;EACA,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC3B,YAAIC,IAAJ,EAAUD,KAAK,GAAG,CAACA,KAAT;EACV,eAAO,IAAIM,YAAJ,CAAiBN,KAAjB,CAAP;EACH;;EACD,aAAO,IAAID,UAAJ,CAAeC,KAAf,EAAsBC,IAAtB,CAAP;EACH;;EAED,aAAS4C,aAAT,CAAuBrB,CAAvB,EAA0BC,CAA1B,EAA6BxB,IAA7B,EAAmC;;EAC/B,UAAIkC,CAAC,GAAGX,CAAC,CAACT,MAAV;EAAA,UACIa,CAAC,GAAG,IAAIR,KAAJ,CAAUe,CAAV,CADR;EAAA,UAEIN,KAAK,GAAG,CAACJ,CAFb;EAAA,UAGIK,IAAI,GAAG9C,IAHX;EAAA,UAIIiC,CAJJ;EAAA,UAIO0B,UAJP;;EAKA,WAAK1B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpB0B,QAAAA,UAAU,GAAGnB,CAAC,CAACP,CAAD,CAAD,GAAOY,KAApB;EACAA,QAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWgC,UAAU,GAAGb,IAAxB,CAAR;EACAa,QAAAA,UAAU,IAAIb,IAAd;EACAF,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAO0B,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAGb,IAA9B,GAAqCa,UAA5C;EACH;;EACDf,MAAAA,CAAC,GAAGhB,YAAY,CAACgB,CAAD,CAAhB;;EACA,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;EACvB,YAAI3B,IAAJ,EAAU2B,CAAC,GAAG,CAACA,CAAL;EACV,eAAO,IAAItB,YAAJ,CAAiBsB,CAAjB,CAAP;EACH;;EAAC,aAAO,IAAI7B,UAAJ,CAAe6B,CAAf,EAAkB3B,IAAlB,CAAP;EACL;;EAEDF,IAAAA,UAAU,CAACI,SAAX,CAAqBiC,QAArB,GAAgC,UAAU3C,CAAV,EAAa;EACzC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;;EACA,UAAI,KAAKQ,IAAL,KAAcQ,CAAC,CAACR,IAApB,EAA0B;EACtB,eAAO,KAAKsB,GAAL,CAASd,CAAC,CAAC4B,MAAF,EAAT,CAAP;EACH;;EACD,UAAIb,CAAC,GAAG,KAAKxB,KAAb;EAAA,UAAoByB,CAAC,GAAGhB,CAAC,CAACT,KAA1B;EACA,UAAIS,CAAC,CAACP,OAAN,EACI,OAAO2C,aAAa,CAACrB,CAAD,EAAId,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAJ,EAAiB,KAAKxB,IAAtB,CAApB;EACJ,aAAO2C,WAAW,CAACpB,CAAD,EAAIC,CAAJ,EAAO,KAAKxB,IAAZ,CAAlB;EACH,KATD;;EAUAF,IAAAA,UAAU,CAACI,SAAX,CAAqB2C,KAArB,GAA6B/C,UAAU,CAACI,SAAX,CAAqBiC,QAAlD;;EAEA9B,IAAAA,YAAY,CAACH,SAAb,CAAuBiC,QAAvB,GAAkC,UAAU3C,CAAV,EAAa;EAC3C,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EACA,UAAI+B,CAAC,GAAG,KAAKxB,KAAb;;EACA,UAAIwB,CAAC,GAAG,CAAJ,KAAUf,CAAC,CAACR,IAAhB,EAAsB;EAClB,eAAO,KAAKsB,GAAL,CAASd,CAAC,CAAC4B,MAAF,EAAT,CAAP;EACH;;EACD,UAAIZ,CAAC,GAAGhB,CAAC,CAACT,KAAV;;EACA,UAAIS,CAAC,CAACP,OAAN,EAAe;EACX,eAAO,IAAII,YAAJ,CAAiBkB,CAAC,GAAGC,CAArB,CAAP;EACH;;EACD,aAAOoB,aAAa,CAACpB,CAAD,EAAIf,IAAI,CAAC4B,GAAL,CAASd,CAAT,CAAJ,EAAiBA,CAAC,IAAI,CAAtB,CAApB;EACH,KAXD;;EAYAlB,IAAAA,YAAY,CAACH,SAAb,CAAuB2C,KAAvB,GAA+BxC,YAAY,CAACH,SAAb,CAAuBiC,QAAtD;;EAEA7B,IAAAA,YAAY,CAACJ,SAAb,CAAuBiC,QAAvB,GAAkC,UAAU3C,CAAV,EAAa;EAC3C,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAaH,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAA5C,CAAP;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuB2C,KAAvB,GAA+BvC,YAAY,CAACJ,SAAb,CAAuBiC,QAAtD;;EAEArC,IAAAA,UAAU,CAACI,SAAX,CAAqBkC,MAArB,GAA8B,YAAY;EACtC,aAAO,IAAItC,UAAJ,CAAe,KAAKC,KAApB,EAA2B,CAAC,KAAKC,IAAjC,CAAP;EACH,KAFD;;EAGAK,IAAAA,YAAY,CAACH,SAAb,CAAuBkC,MAAvB,GAAgC,YAAY;EACxC,UAAIpC,IAAI,GAAG,KAAKA,IAAhB;EACA,UAAI8C,KAAK,GAAG,IAAIzC,YAAJ,CAAiB,CAAC,KAAKN,KAAvB,CAAZ;EACA+C,MAAAA,KAAK,CAAC9C,IAAN,GAAa,CAACA,IAAd;EACA,aAAO8C,KAAP;EACH,KALD;;EAMAxC,IAAAA,YAAY,CAACJ,SAAb,CAAuBkC,MAAvB,GAAgC,YAAY;EACxC,aAAO,IAAI9B,YAAJ,CAAiB,CAAC,KAAKP,KAAvB,CAAP;EACH,KAFD;;EAIAD,IAAAA,UAAU,CAACI,SAAX,CAAqBmC,GAArB,GAA2B,YAAY;EACnC,aAAO,IAAIvC,UAAJ,CAAe,KAAKC,KAApB,EAA2B,KAA3B,CAAP;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuBmC,GAAvB,GAA6B,YAAY;EACrC,aAAO,IAAIhC,YAAJ,CAAiBI,IAAI,CAAC4B,GAAL,CAAS,KAAKtC,KAAd,CAAjB,CAAP;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBmC,GAAvB,GAA6B,YAAY;EACrC,aAAO,IAAI/B,YAAJ,CAAiB,KAAKP,KAAL,IAAc,CAAd,GAAkB,KAAKA,KAAvB,GAA+B,CAAC,KAAKA,KAAtD,CAAP;EACH,KAFD;;EAKA,aAASgD,YAAT,CAAsBxB,CAAtB,EAAyBC,CAAzB,EAA4B;EACxB,UAAIe,GAAG,GAAGhB,CAAC,CAACT,MAAZ;EAAA,UACI0B,GAAG,GAAGhB,CAAC,CAACV,MADZ;EAAA,UAEIoB,CAAC,GAAGK,GAAG,GAAGC,GAFd;EAAA,UAGIb,CAAC,GAAGV,WAAW,CAACiB,CAAD,CAHnB;EAAA,UAIIL,IAAI,GAAG9C,IAJX;EAAA,UAKIiE,OALJ;EAAA,UAKapB,KALb;EAAA,UAKoBZ,CALpB;EAAA,UAKuBiC,GALvB;EAAA,UAK4BC,GAL5B;;EAMA,WAAKlC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuB,GAAhB,EAAqB,EAAEvB,CAAvB,EAA0B;EACtBiC,QAAAA,GAAG,GAAG1B,CAAC,CAACP,CAAD,CAAP;;EACA,aAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,GAApB,EAAyB,EAAEW,CAA3B,EAA8B;EAC1BD,UAAAA,GAAG,GAAG1B,CAAC,CAAC2B,CAAD,CAAP;EACAH,UAAAA,OAAO,GAAGC,GAAG,GAAGC,GAAN,GAAYvB,CAAC,CAACX,CAAC,GAAGmC,CAAL,CAAvB;EACAvB,UAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWsC,OAAO,GAAGnB,IAArB,CAAR;EACAF,UAAAA,CAAC,CAACX,CAAC,GAAGmC,CAAL,CAAD,GAAWH,OAAO,GAAGpB,KAAK,GAAGC,IAA7B;EACAF,UAAAA,CAAC,CAACX,CAAC,GAAGmC,CAAJ,GAAQ,CAAT,CAAD,IAAgBvB,KAAhB;EACH;EACJ;;EACDf,MAAAA,IAAI,CAACc,CAAD,CAAJ;EACA,aAAOA,CAAP;EACH;;EAED,aAASyB,aAAT,CAAuB7B,CAAvB,EAA0BC,CAA1B,EAA6B;;EACzB,UAAIU,CAAC,GAAGX,CAAC,CAACT,MAAV;EAAA,UACIa,CAAC,GAAG,IAAIR,KAAJ,CAAUe,CAAV,CADR;EAAA,UAEIL,IAAI,GAAG9C,IAFX;EAAA,UAGI6C,KAAK,GAAG,CAHZ;EAAA,UAIIoB,OAJJ;EAAA,UAIahC,CAJb;;EAKA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpBgC,QAAAA,OAAO,GAAGzB,CAAC,CAACP,CAAD,CAAD,GAAOQ,CAAP,GAAWI,KAArB;EACAA,QAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWsC,OAAO,GAAGnB,IAArB,CAAR;EACAF,QAAAA,CAAC,CAACX,CAAD,CAAD,GAAOgC,OAAO,GAAGpB,KAAK,GAAGC,IAAzB;EACH;;EACD,aAAOD,KAAK,GAAG,CAAf,EAAkB;EACdD,QAAAA,CAAC,CAACX,CAAC,EAAF,CAAD,GAASY,KAAK,GAAGC,IAAjB;EACAD,QAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWkB,KAAK,GAAGC,IAAnB,CAAR;EACH;;EACD,aAAOF,CAAP;EACH;;EAED,aAAS0B,SAAT,CAAmBnC,CAAnB,EAAsBV,CAAtB,EAAyB;EACrB,UAAImB,CAAC,GAAG,EAAR;;EACA,aAAOnB,CAAC,KAAK,CAAb;EAAgBmB,QAAAA,CAAC,CAACI,IAAF,CAAO,CAAP;EAAhB;;EACA,aAAOJ,CAAC,CAAC2B,MAAF,CAASpC,CAAT,CAAP;EACH;;EAED,aAASqC,iBAAT,CAA2BrC,CAA3B,EAA8BsC,CAA9B,EAAiC;EAC7B,UAAIhD,CAAC,GAAGC,IAAI,CAACgD,GAAL,CAASvC,CAAC,CAACJ,MAAX,EAAmB0C,CAAC,CAAC1C,MAArB,CAAR;EAEA,UAAIN,CAAC,IAAI,EAAT,EAAa,OAAOuC,YAAY,CAAC7B,CAAD,EAAIsC,CAAJ,CAAnB;EACbhD,MAAAA,CAAC,GAAGC,IAAI,CAACY,IAAL,CAAUb,CAAC,GAAG,CAAd,CAAJ;EAEA,UAAIgB,CAAC,GAAGN,CAAC,CAACwC,KAAF,CAAQlD,CAAR,CAAR;EAAA,UACIe,CAAC,GAAGL,CAAC,CAACwC,KAAF,CAAQ,CAAR,EAAWlD,CAAX,CADR;EAAA,UAEImD,CAAC,GAAGH,CAAC,CAACE,KAAF,CAAQlD,CAAR,CAFR;EAAA,UAGIoD,CAAC,GAAGJ,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWlD,CAAX,CAHR;EAKA,UAAIqD,EAAE,GAAGN,iBAAiB,CAAChC,CAAD,EAAIqC,CAAJ,CAA1B;EAAA,UACIE,EAAE,GAAGP,iBAAiB,CAAC/B,CAAD,EAAImC,CAAJ,CAD1B;EAAA,UAEII,IAAI,GAAGR,iBAAiB,CAACvB,MAAM,CAACT,CAAD,EAAIC,CAAJ,CAAP,EAAeQ,MAAM,CAAC4B,CAAD,EAAID,CAAJ,CAArB,CAF5B;EAIA,UAAIX,OAAO,GAAGhB,MAAM,CAACA,MAAM,CAAC6B,EAAD,EAAKR,SAAS,CAAClB,QAAQ,CAACA,QAAQ,CAAC4B,IAAD,EAAOF,EAAP,CAAT,EAAqBC,EAArB,CAAT,EAAmCtD,CAAnC,CAAd,CAAP,EAA6D6C,SAAS,CAACS,EAAD,EAAK,IAAItD,CAAT,CAAtE,CAApB;EACAK,MAAAA,IAAI,CAACmC,OAAD,CAAJ;EACA,aAAOA,OAAP;EACH,KAvV8B;;;;EA2V/B,aAASgB,YAAT,CAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;EAC1B,aAAO,CAAC,KAAD,GAASD,EAAT,GAAc,QAAQC,EAAtB,GAA2B,WAAWD,EAAX,GAAgBC,EAA3C,GAAgD,CAAvD;EACH;;EAEDpE,IAAAA,UAAU,CAACI,SAAX,CAAqBiE,QAArB,GAAgC,UAAU3E,CAAV,EAAa;EACzC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAG,KAAKxB,KADb;EAAA,UACoByB,CAAC,GAAGhB,CAAC,CAACT,KAD1B;EAAA,UAEIC,IAAI,GAAG,KAAKA,IAAL,KAAcQ,CAAC,CAACR,IAF3B;EAAA,UAGIqC,GAHJ;;EAIA,UAAI7B,CAAC,CAACP,OAAN,EAAe;EACX,YAAIuB,CAAC,KAAK,CAAV,EAAa,OAAOjC,OAAO,CAAC,CAAD,CAAd;EACb,YAAIiC,CAAC,KAAK,CAAV,EAAa,OAAO,IAAP;EACb,YAAIA,CAAC,KAAK,CAAC,CAAX,EAAc,OAAO,KAAKY,MAAL,EAAP;EACdC,QAAAA,GAAG,GAAG5B,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAN;;EACA,YAAIa,GAAG,GAAGtD,IAAV,EAAgB;EACZ,iBAAO,IAAIe,UAAJ,CAAesD,aAAa,CAAC7B,CAAD,EAAIc,GAAJ,CAA5B,EAAsCrC,IAAtC,CAAP;EACH;;EACDwB,QAAAA,CAAC,GAAGrC,YAAY,CAACkD,GAAD,CAAhB;EACH;;EACD,UAAI2B,YAAY,CAACzC,CAAC,CAACT,MAAH,EAAWU,CAAC,CAACV,MAAb,CAAhB;EACI,eAAO,IAAIhB,UAAJ,CAAeyD,iBAAiB,CAAChC,CAAD,EAAIC,CAAJ,CAAhC,EAAwCxB,IAAxC,CAAP;EACJ,aAAO,IAAIF,UAAJ,CAAeiD,YAAY,CAACxB,CAAD,EAAIC,CAAJ,CAA3B,EAAmCxB,IAAnC,CAAP;EACH,KAlBD;;EAoBAF,IAAAA,UAAU,CAACI,SAAX,CAAqBkE,KAArB,GAA6BtE,UAAU,CAACI,SAAX,CAAqBiE,QAAlD;;EAEA,aAASE,qBAAT,CAA+B9C,CAA/B,EAAkCC,CAAlC,EAAqCxB,IAArC,EAA2C;;EACvC,UAAIuB,CAAC,GAAGxC,IAAR,EAAc;EACV,eAAO,IAAIe,UAAJ,CAAesD,aAAa,CAAC5B,CAAD,EAAID,CAAJ,CAA5B,EAAoCvB,IAApC,CAAP;EACH;;EACD,aAAO,IAAIF,UAAJ,CAAeiD,YAAY,CAACvB,CAAD,EAAIrC,YAAY,CAACoC,CAAD,CAAhB,CAA3B,EAAiDvB,IAAjD,CAAP;EACH;;EACDK,IAAAA,YAAY,CAACH,SAAb,CAAuBoE,gBAAvB,GAA0C,UAAU/C,CAAV,EAAa;EACnD,UAAIhB,SAAS,CAACgB,CAAC,CAACxB,KAAF,GAAU,KAAKA,KAAhB,CAAb,EAAqC;EACjC,eAAO,IAAIM,YAAJ,CAAiBkB,CAAC,CAACxB,KAAF,GAAU,KAAKA,KAAhC,CAAP;EACH;;EACD,aAAOsE,qBAAqB,CAAC5D,IAAI,CAAC4B,GAAL,CAASd,CAAC,CAACxB,KAAX,CAAD,EAAoBZ,YAAY,CAACsB,IAAI,CAAC4B,GAAL,CAAS,KAAKtC,KAAd,CAAD,CAAhC,EAAwD,KAAKC,IAAL,KAAcuB,CAAC,CAACvB,IAAxE,CAA5B;EACH,KALD;;EAMAF,IAAAA,UAAU,CAACI,SAAX,CAAqBoE,gBAArB,GAAwC,UAAU/C,CAAV,EAAa;EACjD,UAAIA,CAAC,CAACxB,KAAF,KAAY,CAAhB,EAAmB,OAAOR,OAAO,CAAC,CAAD,CAAd;EACnB,UAAIgC,CAAC,CAACxB,KAAF,KAAY,CAAhB,EAAmB,OAAO,IAAP;EACnB,UAAIwB,CAAC,CAACxB,KAAF,KAAY,CAAC,CAAjB,EAAoB,OAAO,KAAKqC,MAAL,EAAP;EACpB,aAAOiC,qBAAqB,CAAC5D,IAAI,CAAC4B,GAAL,CAASd,CAAC,CAACxB,KAAX,CAAD,EAAoB,KAAKA,KAAzB,EAAgC,KAAKC,IAAL,KAAcuB,CAAC,CAACvB,IAAhD,CAA5B;EACH,KALD;;EAMAK,IAAAA,YAAY,CAACH,SAAb,CAAuBiE,QAAvB,GAAkC,UAAU3E,CAAV,EAAa;EAC3C,aAAOI,UAAU,CAACJ,CAAD,CAAV,CAAc8E,gBAAd,CAA+B,IAA/B,CAAP;EACH,KAFD;;EAGAjE,IAAAA,YAAY,CAACH,SAAb,CAAuBkE,KAAvB,GAA+B/D,YAAY,CAACH,SAAb,CAAuBiE,QAAtD;;EAEA7D,IAAAA,YAAY,CAACJ,SAAb,CAAuBiE,QAAvB,GAAkC,UAAU3E,CAAV,EAAa;EAC3C,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAaH,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAA5C,CAAP;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBkE,KAAvB,GAA+B9D,YAAY,CAACJ,SAAb,CAAuBiE,QAAtD;;EAEA,aAASI,MAAT,CAAgBhD,CAAhB,EAAmB;;EAEf,UAAIW,CAAC,GAAGX,CAAC,CAACT,MAAV;EAAA,UACIa,CAAC,GAAGV,WAAW,CAACiB,CAAC,GAAGA,CAAL,CADnB;EAAA,UAEIL,IAAI,GAAG9C,IAFX;EAAA,UAGIiE,OAHJ;EAAA,UAGapB,KAHb;EAAA,UAGoBZ,CAHpB;EAAA,UAGuBiC,GAHvB;EAAA,UAG4BuB,GAH5B;;EAIA,WAAKxD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpBiC,QAAAA,GAAG,GAAG1B,CAAC,CAACP,CAAD,CAAP;EACAY,QAAAA,KAAK,GAAG,IAAIqB,GAAG,GAAGA,GAAlB;;EACA,aAAK,IAAIE,CAAC,GAAGnC,CAAb,EAAgBmC,CAAC,GAAGjB,CAApB,EAAuBiB,CAAC,EAAxB,EAA4B;EACxBqB,UAAAA,GAAG,GAAGjD,CAAC,CAAC4B,CAAD,CAAP;EACAH,UAAAA,OAAO,GAAG,KAAKC,GAAG,GAAGuB,GAAX,IAAkB7C,CAAC,CAACX,CAAC,GAAGmC,CAAL,CAAnB,GAA6BvB,KAAvC;EACAA,UAAAA,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAWsC,OAAO,GAAGnB,IAArB,CAAR;EACAF,UAAAA,CAAC,CAACX,CAAC,GAAGmC,CAAL,CAAD,GAAWH,OAAO,GAAGpB,KAAK,GAAGC,IAA7B;EACH;;EACDF,QAAAA,CAAC,CAACX,CAAC,GAAGkB,CAAL,CAAD,GAAWN,KAAX;EACH;;EACDf,MAAAA,IAAI,CAACc,CAAD,CAAJ;EACA,aAAOA,CAAP;EACH;;EAED7B,IAAAA,UAAU,CAACI,SAAX,CAAqBqE,MAArB,GAA8B,YAAY;EACtC,aAAO,IAAIzE,UAAJ,CAAeyE,MAAM,CAAC,KAAKxE,KAAN,CAArB,EAAmC,KAAnC,CAAP;EACH,KAFD;;EAIAM,IAAAA,YAAY,CAACH,SAAb,CAAuBqE,MAAvB,GAAgC,YAAY;EACxC,UAAIxE,KAAK,GAAG,KAAKA,KAAL,GAAa,KAAKA,KAA9B;EACA,UAAIQ,SAAS,CAACR,KAAD,CAAb,EAAsB,OAAO,IAAIM,YAAJ,CAAiBN,KAAjB,CAAP;EACtB,aAAO,IAAID,UAAJ,CAAeyE,MAAM,CAACpF,YAAY,CAACsB,IAAI,CAAC4B,GAAL,CAAS,KAAKtC,KAAd,CAAD,CAAb,CAArB,EAA2D,KAA3D,CAAP;EACH,KAJD;;EAMAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBqE,MAAvB,GAAgC,UAAU/E,CAAV,EAAa;EACzC,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAa,KAAKA,KAAnC,CAAP;EACH,KAFD;;EAIA,aAAS0E,OAAT,CAAiBlD,CAAjB,EAAoBC,CAApB,EAAuB;;EACnB,UAAIe,GAAG,GAAGhB,CAAC,CAACT,MAAZ;EAAA,UACI0B,GAAG,GAAGhB,CAAC,CAACV,MADZ;EAAA,UAEIe,IAAI,GAAG9C,IAFX;EAAA,UAGI2F,MAAM,GAAGzD,WAAW,CAACO,CAAC,CAACV,MAAH,CAHxB;EAAA,UAII6D,2BAA2B,GAAGnD,CAAC,CAACgB,GAAG,GAAG,CAAP,CAJnC;EAAA;EAMIoC,MAAAA,MAAM,GAAGnE,IAAI,CAACY,IAAL,CAAUQ,IAAI,IAAI,IAAI8C,2BAAR,CAAd,CANb;EAAA,UAOIE,SAAS,GAAGzB,aAAa,CAAC7B,CAAD,EAAIqD,MAAJ,CAP7B;EAAA,UAQIE,OAAO,GAAG1B,aAAa,CAAC5B,CAAD,EAAIoD,MAAJ,CAR3B;EAAA,UASIG,aATJ;EAAA,UASmBC,KATnB;EAAA,UAS0BpD,KAT1B;EAAA,UASiCa,MATjC;EAAA,UASyCzB,CATzC;EAAA,UAS4CkB,CAT5C;EAAA,UAS+C+C,CAT/C;EAUA,UAAIJ,SAAS,CAAC/D,MAAV,IAAoByB,GAAxB,EAA6BsC,SAAS,CAAC9C,IAAV,CAAe,CAAf;EAC7B+C,MAAAA,OAAO,CAAC/C,IAAR,CAAa,CAAb;EACA4C,MAAAA,2BAA2B,GAAGG,OAAO,CAACtC,GAAG,GAAG,CAAP,CAArC;;EACA,WAAKwC,KAAK,GAAGzC,GAAG,GAAGC,GAAnB,EAAwBwC,KAAK,IAAI,CAAjC,EAAoCA,KAAK,EAAzC,EAA6C;EACzCD,QAAAA,aAAa,GAAGlD,IAAI,GAAG,CAAvB;;EACA,YAAIgD,SAAS,CAACG,KAAK,GAAGxC,GAAT,CAAT,KAA2BmC,2BAA/B,EAA4D;EACxDI,UAAAA,aAAa,GAAGtE,IAAI,CAACC,KAAL,CAAW,CAACmE,SAAS,CAACG,KAAK,GAAGxC,GAAT,CAAT,GAAyBX,IAAzB,GAAgCgD,SAAS,CAACG,KAAK,GAAGxC,GAAR,GAAc,CAAf,CAA1C,IAA+DmC,2BAA1E,CAAhB;EACH,SAJwC;;;EAMzC/C,QAAAA,KAAK,GAAG,CAAR;EACAa,QAAAA,MAAM,GAAG,CAAT;EACAP,QAAAA,CAAC,GAAG4C,OAAO,CAAChE,MAAZ;;EACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpBY,UAAAA,KAAK,IAAImD,aAAa,GAAGD,OAAO,CAAC9D,CAAD,CAAhC;EACAiE,UAAAA,CAAC,GAAGxE,IAAI,CAACC,KAAL,CAAWkB,KAAK,GAAGC,IAAnB,CAAJ;EACAY,UAAAA,MAAM,IAAIoC,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,IAAwBY,KAAK,GAAGqD,CAAC,GAAGpD,IAApC,CAAV;EACAD,UAAAA,KAAK,GAAGqD,CAAR;;EACA,cAAIxC,MAAM,GAAG,CAAb,EAAgB;EACZoC,YAAAA,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,GAAuByB,MAAM,GAAGZ,IAAhC;EACAY,YAAAA,MAAM,GAAG,CAAC,CAAV;EACH,WAHD,MAGO;EACHoC,YAAAA,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,GAAuByB,MAAvB;EACAA,YAAAA,MAAM,GAAG,CAAT;EACH;EACJ;;EACD,eAAOA,MAAM,KAAK,CAAlB,EAAqB;EACjBsC,UAAAA,aAAa,IAAI,CAAjB;EACAnD,UAAAA,KAAK,GAAG,CAAR;;EACA,eAAKZ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkB,CAAhB,EAAmBlB,CAAC,EAApB,EAAwB;EACpBY,YAAAA,KAAK,IAAIiD,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,GAAuBa,IAAvB,GAA8BiD,OAAO,CAAC9D,CAAD,CAA9C;;EACA,gBAAIY,KAAK,GAAG,CAAZ,EAAe;EACXiD,cAAAA,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,GAAuBY,KAAK,GAAGC,IAA/B;EACAD,cAAAA,KAAK,GAAG,CAAR;EACH,aAHD,MAGO;EACHiD,cAAAA,SAAS,CAACG,KAAK,GAAGhE,CAAT,CAAT,GAAuBY,KAAvB;EACAA,cAAAA,KAAK,GAAG,CAAR;EACH;EACJ;;EACDa,UAAAA,MAAM,IAAIb,KAAV;EACH;;EACD8C,QAAAA,MAAM,CAACM,KAAD,CAAN,GAAgBD,aAAhB;EACH,OApDkB;;;EAsDnBF,MAAAA,SAAS,GAAGK,WAAW,CAACL,SAAD,EAAYD,MAAZ,CAAX,CAA+B,CAA/B,CAAZ;EACA,aAAO,CAACjE,YAAY,CAAC+D,MAAD,CAAb,EAAuB/D,YAAY,CAACkE,SAAD,CAAnC,CAAP;EACH;;EAED,aAASM,OAAT,CAAiB5D,CAAjB,EAAoBC,CAApB,EAAuB;;;EAEnB,UAAIe,GAAG,GAAGhB,CAAC,CAACT,MAAZ;EAAA,UACI0B,GAAG,GAAGhB,CAAC,CAACV,MADZ;EAAA,UAEI4D,MAAM,GAAG,EAFb;EAAA,UAGIU,IAAI,GAAG,EAHX;EAAA,UAIIvD,IAAI,GAAG9C,IAJX;EAAA,UAKIsG,KALJ;EAAA,UAKWC,IALX;EAAA,UAKiBC,KALjB;EAAA,UAKwBC,KALxB;EAAA,UAK+BC,KAL/B;;EAMA,aAAOlD,GAAP,EAAY;EACR6C,QAAAA,IAAI,CAACM,OAAL,CAAanE,CAAC,CAAC,EAAEgB,GAAH,CAAd;EACA1B,QAAAA,IAAI,CAACuE,IAAD,CAAJ;;EACA,YAAIrE,UAAU,CAACqE,IAAD,EAAO5D,CAAP,CAAV,GAAsB,CAA1B,EAA6B;EACzBkD,UAAAA,MAAM,CAAC3C,IAAP,CAAY,CAAZ;EACA;EACH;;EACDuD,QAAAA,IAAI,GAAGF,IAAI,CAACtE,MAAZ;EACAyE,QAAAA,KAAK,GAAGH,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBzD,IAAjB,GAAwBuD,IAAI,CAACE,IAAI,GAAG,CAAR,CAApC;EACAE,QAAAA,KAAK,GAAGhE,CAAC,CAACgB,GAAG,GAAG,CAAP,CAAD,GAAaX,IAAb,GAAoBL,CAAC,CAACgB,GAAG,GAAG,CAAP,CAA7B;;EACA,YAAI8C,IAAI,GAAG9C,GAAX,EAAgB;EACZ+C,UAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,CAAT,IAAc1D,IAAtB;EACH;;EACDwD,QAAAA,KAAK,GAAG5E,IAAI,CAACY,IAAL,CAAUkE,KAAK,GAAGC,KAAlB,CAAR;;EACA,WAAG;EACCC,UAAAA,KAAK,GAAGrC,aAAa,CAAC5B,CAAD,EAAI6D,KAAJ,CAArB;EACA,cAAItE,UAAU,CAAC0E,KAAD,EAAQL,IAAR,CAAV,IAA2B,CAA/B,EAAkC;EAClCC,UAAAA,KAAK;EACR,SAJD,QAISA,KAJT;;EAKAX,QAAAA,MAAM,CAAC3C,IAAP,CAAYsD,KAAZ;EACAD,QAAAA,IAAI,GAAGjD,QAAQ,CAACiD,IAAD,EAAOK,KAAP,CAAf;EACH;;EACDf,MAAAA,MAAM,CAACiB,OAAP;EACA,aAAO,CAAChF,YAAY,CAAC+D,MAAD,CAAb,EAAuB/D,YAAY,CAACyE,IAAD,CAAnC,CAAP;EACH;;EAED,aAASF,WAAT,CAAqBnF,KAArB,EAA4B6E,MAA5B,EAAoC;EAChC,UAAI9D,MAAM,GAAGf,KAAK,CAACe,MAAnB;EAAA,UACI8E,QAAQ,GAAG3E,WAAW,CAACH,MAAD,CAD1B;EAAA,UAEIe,IAAI,GAAG9C,IAFX;EAAA,UAGIiC,CAHJ;EAAA,UAGOiE,CAHP;EAAA,UAGUJ,SAHV;EAAA,UAGqBC,OAHrB;EAIAD,MAAAA,SAAS,GAAG,CAAZ;;EACA,WAAK7D,CAAC,GAAGF,MAAM,GAAG,CAAlB,EAAqBE,CAAC,IAAI,CAA1B,EAA6B,EAAEA,CAA/B,EAAkC;EAC9B8D,QAAAA,OAAO,GAAGD,SAAS,GAAGhD,IAAZ,GAAmB9B,KAAK,CAACiB,CAAD,CAAlC;EACAiE,QAAAA,CAAC,GAAG7D,QAAQ,CAAC0D,OAAO,GAAGF,MAAX,CAAZ;EACAC,QAAAA,SAAS,GAAGC,OAAO,GAAGG,CAAC,GAAGL,MAA1B;EACAgB,QAAAA,QAAQ,CAAC5E,CAAD,CAAR,GAAciE,CAAC,GAAG,CAAlB;EACH;;EACD,aAAO,CAACW,QAAD,EAAWf,SAAS,GAAG,CAAvB,CAAP;EACH;;EAED,aAASgB,SAAT,CAAmBC,IAAnB,EAAyBtG,CAAzB,EAA4B;EACxB,UAAIO,KAAJ;EAAA,UAAWS,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAzB;;EACA,UAAIH,oBAAJ,EAA0B;EACtB,eAAO,CAAC,IAAIiB,YAAJ,CAAiBwF,IAAI,CAAC/F,KAAL,GAAaS,CAAC,CAACT,KAAhC,CAAD,EAAyC,IAAIO,YAAJ,CAAiBwF,IAAI,CAAC/F,KAAL,GAAaS,CAAC,CAACT,KAAhC,CAAzC,CAAP;EACH;;EACD,UAAIwB,CAAC,GAAGuE,IAAI,CAAC/F,KAAb;EAAA,UAAoByB,CAAC,GAAGhB,CAAC,CAACT,KAA1B;EACA,UAAI6F,QAAJ;EACA,UAAIpE,CAAC,KAAK,CAAV,EAAa,MAAM,IAAIuE,KAAJ,CAAU,uBAAV,CAAN;;EACb,UAAID,IAAI,CAAC7F,OAAT,EAAkB;EACd,YAAIO,CAAC,CAACP,OAAN,EAAe;EACX,iBAAO,CAAC,IAAII,YAAJ,CAAiBe,QAAQ,CAACG,CAAC,GAAGC,CAAL,CAAzB,CAAD,EAAoC,IAAInB,YAAJ,CAAiBkB,CAAC,GAAGC,CAArB,CAApC,CAAP;EACH;;EACD,eAAO,CAACjC,OAAO,CAAC,CAAD,CAAR,EAAauG,IAAb,CAAP;EACH;;EACD,UAAItF,CAAC,CAACP,OAAN,EAAe;EACX,YAAIuB,CAAC,KAAK,CAAV,EAAa,OAAO,CAACsE,IAAD,EAAOvG,OAAO,CAAC,CAAD,CAAd,CAAP;EACb,YAAIiC,CAAC,IAAI,CAAC,CAAV,EAAa,OAAO,CAACsE,IAAI,CAAC1D,MAAL,EAAD,EAAgB7C,OAAO,CAAC,CAAD,CAAvB,CAAP;EACb,YAAI8C,GAAG,GAAG5B,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAV;;EACA,YAAIa,GAAG,GAAGtD,IAAV,EAAgB;EACZgB,UAAAA,KAAK,GAAGmF,WAAW,CAAC3D,CAAD,EAAIc,GAAJ,CAAnB;EACAuD,UAAAA,QAAQ,GAAGjF,YAAY,CAACZ,KAAK,CAAC,CAAD,CAAN,CAAvB;EACA,cAAI8E,SAAS,GAAG9E,KAAK,CAAC,CAAD,CAArB;EACA,cAAI+F,IAAI,CAAC9F,IAAT,EAAe6E,SAAS,GAAG,CAACA,SAAb;;EACf,cAAI,OAAOe,QAAP,KAAoB,QAAxB,EAAkC;EAC9B,gBAAIE,IAAI,CAAC9F,IAAL,KAAcQ,CAAC,CAACR,IAApB,EAA0B4F,QAAQ,GAAG,CAACA,QAAZ;EAC1B,mBAAO,CAAC,IAAIvF,YAAJ,CAAiBuF,QAAjB,CAAD,EAA6B,IAAIvF,YAAJ,CAAiBwE,SAAjB,CAA7B,CAAP;EACH;;EACD,iBAAO,CAAC,IAAI/E,UAAJ,CAAe8F,QAAf,EAAyBE,IAAI,CAAC9F,IAAL,KAAcQ,CAAC,CAACR,IAAzC,CAAD,EAAiD,IAAIK,YAAJ,CAAiBwE,SAAjB,CAAjD,CAAP;EACH;;EACDrD,QAAAA,CAAC,GAAGrC,YAAY,CAACkD,GAAD,CAAhB;EACH;;EACD,UAAI2D,UAAU,GAAGjF,UAAU,CAACQ,CAAD,EAAIC,CAAJ,CAA3B;EACA,UAAIwE,UAAU,KAAK,CAAC,CAApB,EAAuB,OAAO,CAACzG,OAAO,CAAC,CAAD,CAAR,EAAauG,IAAb,CAAP;EACvB,UAAIE,UAAU,KAAK,CAAnB,EAAsB,OAAO,CAACzG,OAAO,CAACuG,IAAI,CAAC9F,IAAL,KAAcQ,CAAC,CAACR,IAAhB,GAAuB,CAAvB,GAA2B,CAAC,CAA7B,CAAR,EAAyCT,OAAO,CAAC,CAAD,CAAhD,CAAP,CAjCE;;EAoCxB,UAAIgC,CAAC,CAACT,MAAF,GAAWU,CAAC,CAACV,MAAb,IAAuB,GAA3B,EACIf,KAAK,GAAG0E,OAAO,CAAClD,CAAD,EAAIC,CAAJ,CAAf,CADJ,KAEKzB,KAAK,GAAGoF,OAAO,CAAC5D,CAAD,EAAIC,CAAJ,CAAf;EAELoE,MAAAA,QAAQ,GAAG7F,KAAK,CAAC,CAAD,CAAhB;EACA,UAAIkG,KAAK,GAAGH,IAAI,CAAC9F,IAAL,KAAcQ,CAAC,CAACR,IAA5B;EAAA,UACIkG,GAAG,GAAGnG,KAAK,CAAC,CAAD,CADf;EAAA,UAEIoG,KAAK,GAAGL,IAAI,CAAC9F,IAFjB;;EAGA,UAAI,OAAO4F,QAAP,KAAoB,QAAxB,EAAkC;EAC9B,YAAIK,KAAJ,EAAWL,QAAQ,GAAG,CAACA,QAAZ;EACXA,QAAAA,QAAQ,GAAG,IAAIvF,YAAJ,CAAiBuF,QAAjB,CAAX;EACH,OAHD,MAGOA,QAAQ,GAAG,IAAI9F,UAAJ,CAAe8F,QAAf,EAAyBK,KAAzB,CAAX;;EACP,UAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;EACzB,YAAIC,KAAJ,EAAWD,GAAG,GAAG,CAACA,GAAP;EACXA,QAAAA,GAAG,GAAG,IAAI7F,YAAJ,CAAiB6F,GAAjB,CAAN;EACH,OAHD,MAGOA,GAAG,GAAG,IAAIpG,UAAJ,CAAeoG,GAAf,EAAoBC,KAApB,CAAN;;EACP,aAAO,CAACP,QAAD,EAAWM,GAAX,CAAP;EACH;;EAEDpG,IAAAA,UAAU,CAACI,SAAX,CAAqBkG,MAArB,GAA8B,UAAU5G,CAAV,EAAa;EACvC,UAAIkF,MAAM,GAAGmB,SAAS,CAAC,IAAD,EAAOrG,CAAP,CAAtB;EACA,aAAO;EACHoG,QAAAA,QAAQ,EAAElB,MAAM,CAAC,CAAD,CADb;EAEHG,QAAAA,SAAS,EAAEH,MAAM,CAAC,CAAD;EAFd,OAAP;EAIH,KAND;;EAOApE,IAAAA,YAAY,CAACJ,SAAb,CAAuBkG,MAAvB,GAAgC/F,YAAY,CAACH,SAAb,CAAuBkG,MAAvB,GAAgCtG,UAAU,CAACI,SAAX,CAAqBkG,MAArF;;EAGAtG,IAAAA,UAAU,CAACI,SAAX,CAAqBmG,MAArB,GAA8B,UAAU7G,CAAV,EAAa;EACvC,aAAOqG,SAAS,CAAC,IAAD,EAAOrG,CAAP,CAAT,CAAmB,CAAnB,CAAP;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuBoG,IAAvB,GAA8BhG,YAAY,CAACJ,SAAb,CAAuBmG,MAAvB,GAAgC,UAAU7G,CAAV,EAAa;EACvE,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAaH,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAA5C,CAAP;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuBoG,IAAvB,GAA8BjG,YAAY,CAACH,SAAb,CAAuBmG,MAAvB,GAAgCvG,UAAU,CAACI,SAAX,CAAqBoG,IAArB,GAA4BxG,UAAU,CAACI,SAAX,CAAqBmG,MAA/G;;EAEAvG,IAAAA,UAAU,CAACI,SAAX,CAAqBgG,GAArB,GAA2B,UAAU1G,CAAV,EAAa;EACpC,aAAOqG,SAAS,CAAC,IAAD,EAAOrG,CAAP,CAAT,CAAmB,CAAnB,CAAP;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuBgG,GAAvB,GAA6B5F,YAAY,CAACJ,SAAb,CAAuB2E,SAAvB,GAAmC,UAAUrF,CAAV,EAAa;EACzE,aAAO,IAAIc,YAAJ,CAAiB,KAAKP,KAAL,GAAaH,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAA5C,CAAP;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuB2E,SAAvB,GAAmCxE,YAAY,CAACH,SAAb,CAAuBgG,GAAvB,GAA6BpG,UAAU,CAACI,SAAX,CAAqB2E,SAArB,GAAiC/E,UAAU,CAACI,SAAX,CAAqBgG,GAAtH;;EAEApG,IAAAA,UAAU,CAACI,SAAX,CAAqBqG,GAArB,GAA2B,UAAU/G,CAAV,EAAa;EACpC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAG,KAAKxB,KADb;EAAA,UAEIyB,CAAC,GAAGhB,CAAC,CAACT,KAFV;EAAA,UAGIA,KAHJ;EAAA,UAGWmB,CAHX;EAAA,UAGcsC,CAHd;EAIA,UAAIhC,CAAC,KAAK,CAAV,EAAa,OAAOjC,OAAO,CAAC,CAAD,CAAd;EACb,UAAIgC,CAAC,KAAK,CAAV,EAAa,OAAOhC,OAAO,CAAC,CAAD,CAAd;EACb,UAAIgC,CAAC,KAAK,CAAV,EAAa,OAAOhC,OAAO,CAAC,CAAD,CAAd;EACb,UAAIgC,CAAC,KAAK,CAAC,CAAX,EAAc,OAAOf,CAAC,CAACgG,MAAF,KAAajH,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAC,CAAF,CAAxC;;EACd,UAAIiB,CAAC,CAACR,IAAN,EAAY;EACR,eAAOT,OAAO,CAAC,CAAD,CAAd;EACH;;EACD,UAAI,CAACiB,CAAC,CAACP,OAAP,EAAgB,MAAM,IAAI8F,KAAJ,CAAU,kBAAkBvF,CAAC,CAACiG,QAAF,EAAlB,GAAiC,gBAA3C,CAAN;;EAChB,UAAI,KAAKxG,OAAT,EAAkB;EACd,YAAIM,SAAS,CAACR,KAAK,GAAGU,IAAI,CAAC8F,GAAL,CAAShF,CAAT,EAAYC,CAAZ,CAAT,CAAb,EACI,OAAO,IAAInB,YAAJ,CAAiBe,QAAQ,CAACrB,KAAD,CAAzB,CAAP;EACP;;EACDmB,MAAAA,CAAC,GAAG,IAAJ;EACAsC,MAAAA,CAAC,GAAGjE,OAAO,CAAC,CAAD,CAAX;;EACA,aAAO,IAAP,EAAa;EACT,YAAIiC,CAAC,GAAG,MAAM,CAAd,EAAiB;EACbgC,UAAAA,CAAC,GAAGA,CAAC,CAACY,KAAF,CAAQlD,CAAR,CAAJ;EACA,YAAEM,CAAF;EACH;;EACD,YAAIA,CAAC,KAAK,CAAV,EAAa;EACbA,QAAAA,CAAC,IAAI,CAAL;EACAN,QAAAA,CAAC,GAAGA,CAAC,CAACqD,MAAF,EAAJ;EACH;;EACD,aAAOf,CAAP;EACH,KA7BD;;EA8BAnD,IAAAA,YAAY,CAACH,SAAb,CAAuBqG,GAAvB,GAA6BzG,UAAU,CAACI,SAAX,CAAqBqG,GAAlD;;EAEAjG,IAAAA,YAAY,CAACJ,SAAb,CAAuBqG,GAAvB,GAA6B,UAAU/G,CAAV,EAAa;EACtC,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EACA,UAAI+B,CAAC,GAAG,KAAKxB,KAAb;EAAA,UAAoByB,CAAC,GAAGhB,CAAC,CAACT,KAA1B;;EACA,UAAI2G,EAAE,GAAGpH,MAAM,CAAC,CAAD,CAAf;EAAA,UAAoBqH,EAAE,GAAGrH,MAAM,CAAC,CAAD,CAA/B;EAAA,UAAoCsH,EAAE,GAAGtH,MAAM,CAAC,CAAD,CAA/C;;EACA,UAAIkC,CAAC,KAAKkF,EAAV,EAAc,OAAOnH,OAAO,CAAC,CAAD,CAAd;EACd,UAAIgC,CAAC,KAAKmF,EAAV,EAAc,OAAOnH,OAAO,CAAC,CAAD,CAAd;EACd,UAAIgC,CAAC,KAAKoF,EAAV,EAAc,OAAOpH,OAAO,CAAC,CAAD,CAAd;EACd,UAAIgC,CAAC,KAAKjC,MAAM,CAAC,CAAC,CAAF,CAAhB,EAAsB,OAAOkB,CAAC,CAACgG,MAAF,KAAajH,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAC,CAAF,CAAxC;EACtB,UAAIiB,CAAC,CAACqG,UAAF,EAAJ,EAAoB,OAAO,IAAIvG,YAAJ,CAAiBoG,EAAjB,CAAP;EACpB,UAAIxF,CAAC,GAAG,IAAR;EACA,UAAIsC,CAAC,GAAGjE,OAAO,CAAC,CAAD,CAAf;;EACA,aAAO,IAAP,EAAa;EACT,YAAI,CAACiC,CAAC,GAAGmF,EAAL,MAAaA,EAAjB,EAAqB;EACjBnD,UAAAA,CAAC,GAAGA,CAAC,CAACY,KAAF,CAAQlD,CAAR,CAAJ;EACA,YAAEM,CAAF;EACH;;EACD,YAAIA,CAAC,KAAKkF,EAAV,EAAc;EACdlF,QAAAA,CAAC,IAAIoF,EAAL;EACA1F,QAAAA,CAAC,GAAGA,CAAC,CAACqD,MAAF,EAAJ;EACH;;EACD,aAAOf,CAAP;EACH,KArBD;;EAuBA1D,IAAAA,UAAU,CAACI,SAAX,CAAqB4G,MAArB,GAA8B,UAAUC,GAAV,EAAeb,GAAf,EAAoB;EAC9Ca,MAAAA,GAAG,GAAGnH,UAAU,CAACmH,GAAD,CAAhB;EACAb,MAAAA,GAAG,GAAGtG,UAAU,CAACsG,GAAD,CAAhB;EACA,UAAIA,GAAG,CAACc,MAAJ,EAAJ,EAAkB,MAAM,IAAIjB,KAAJ,CAAU,mCAAV,CAAN;EAClB,UAAIpE,CAAC,GAAGpC,OAAO,CAAC,CAAD,CAAf;EAAA,UACIsC,IAAI,GAAG,KAAKqE,GAAL,CAASA,GAAT,CADX;;EAEA,UAAIa,GAAG,CAACF,UAAJ,EAAJ,EAAsB;EAClBE,QAAAA,GAAG,GAAGA,GAAG,CAAC5C,QAAJ,CAAa5E,OAAO,CAAC,CAAC,CAAF,CAApB,CAAN;EACAsC,QAAAA,IAAI,GAAGA,IAAI,CAACoF,MAAL,CAAYf,GAAZ,CAAP;EACH;;EACD,aAAOa,GAAG,CAACG,UAAJ,EAAP,EAAyB;EACrB,YAAIrF,IAAI,CAACmF,MAAL,EAAJ,EAAmB,OAAOzH,OAAO,CAAC,CAAD,CAAd;EACnB,YAAIwH,GAAG,CAACI,KAAJ,EAAJ,EAAiBxF,CAAC,GAAGA,CAAC,CAACwC,QAAF,CAAWtC,IAAX,EAAiBqE,GAAjB,CAAqBA,GAArB,CAAJ;EACjBa,QAAAA,GAAG,GAAGA,GAAG,CAACV,MAAJ,CAAW,CAAX,CAAN;EACAxE,QAAAA,IAAI,GAAGA,IAAI,CAAC0C,MAAL,GAAc2B,GAAd,CAAkBA,GAAlB,CAAP;EACH;;EACD,aAAOvE,CAAP;EACH,KAjBD;;EAkBArB,IAAAA,YAAY,CAACJ,SAAb,CAAuB4G,MAAvB,GAAgCzG,YAAY,CAACH,SAAb,CAAuB4G,MAAvB,GAAgChH,UAAU,CAACI,SAAX,CAAqB4G,MAArF;;EAEA,aAAS/F,UAAT,CAAoBQ,CAApB,EAAuBC,CAAvB,EAA0B;EACtB,UAAID,CAAC,CAACT,MAAF,KAAaU,CAAC,CAACV,MAAnB,EAA2B;EACvB,eAAOS,CAAC,CAACT,MAAF,GAAWU,CAAC,CAACV,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAlC;EACH;;EACD,WAAK,IAAIE,CAAC,GAAGO,CAAC,CAACT,MAAF,GAAW,CAAxB,EAA2BE,CAAC,IAAI,CAAhC,EAAmCA,CAAC,EAApC,EAAwC;EACpC,YAAIO,CAAC,CAACP,CAAD,CAAD,KAASQ,CAAC,CAACR,CAAD,CAAd,EAAmB,OAAOO,CAAC,CAACP,CAAD,CAAD,GAAOQ,CAAC,CAACR,CAAD,CAAR,GAAc,CAAd,GAAkB,CAAC,CAA1B;EACtB;;EACD,aAAO,CAAP;EACH;;EAEDlB,IAAAA,UAAU,CAACI,SAAX,CAAqBa,UAArB,GAAkC,UAAUvB,CAAV,EAAa;EAC3C,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAG,KAAKxB,KADb;EAAA,UAEIyB,CAAC,GAAGhB,CAAC,CAACT,KAFV;EAGA,UAAIS,CAAC,CAACP,OAAN,EAAe,OAAO,CAAP;EACf,aAAOc,UAAU,CAACQ,CAAD,EAAIC,CAAJ,CAAjB;EACH,KAND;;EAOAnB,IAAAA,YAAY,CAACH,SAAb,CAAuBa,UAAvB,GAAoC,UAAUvB,CAAV,EAAa;EAC7C,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAGd,IAAI,CAAC4B,GAAL,CAAS,KAAKtC,KAAd,CADR;EAAA,UAEIyB,CAAC,GAAGhB,CAAC,CAACT,KAFV;;EAGA,UAAIS,CAAC,CAACP,OAAN,EAAe;EACXuB,QAAAA,CAAC,GAAGf,IAAI,CAAC4B,GAAL,CAASb,CAAT,CAAJ;EACA,eAAOD,CAAC,KAAKC,CAAN,GAAU,CAAV,GAAcD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;EACH;;EACD,aAAO,CAAC,CAAR;EACH,KATD;;EAUAlB,IAAAA,YAAY,CAACJ,SAAb,CAAuBa,UAAvB,GAAoC,UAAUvB,CAAV,EAAa;EAC7C,UAAI+B,CAAC,GAAG,KAAKxB,KAAb;EACA,UAAIyB,CAAC,GAAG5B,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAAtB;EACAwB,MAAAA,CAAC,GAAGA,CAAC,IAAI,CAAL,GAASA,CAAT,GAAa,CAACA,CAAlB;EACAC,MAAAA,CAAC,GAAGA,CAAC,IAAI,CAAL,GAASA,CAAT,GAAa,CAACA,CAAlB;EACA,aAAOD,CAAC,KAAKC,CAAN,GAAU,CAAV,GAAcD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;EACH,KAND;;EAQA1B,IAAAA,UAAU,CAACI,SAAX,CAAqBkH,OAArB,GAA+B,UAAU5H,CAAV,EAAa;;;EAGxC,UAAIA,CAAC,KAAK6H,QAAV,EAAoB;EAChB,eAAO,CAAC,CAAR;EACH;;EACD,UAAI7H,CAAC,KAAK,CAAC6H,QAAX,EAAqB;EACjB,eAAO,CAAP;EACH;;EAED,UAAI7G,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAG,KAAKxB,KADb;EAAA,UAEIyB,CAAC,GAAGhB,CAAC,CAACT,KAFV;;EAGA,UAAI,KAAKC,IAAL,KAAcQ,CAAC,CAACR,IAApB,EAA0B;EACtB,eAAOQ,CAAC,CAACR,IAAF,GAAS,CAAT,GAAa,CAAC,CAArB;EACH;;EACD,UAAIQ,CAAC,CAACP,OAAN,EAAe;EACX,eAAO,KAAKD,IAAL,GAAY,CAAC,CAAb,GAAiB,CAAxB;EACH;;EACD,aAAOe,UAAU,CAACQ,CAAD,EAAIC,CAAJ,CAAV,IAAoB,KAAKxB,IAAL,GAAY,CAAC,CAAb,GAAiB,CAArC,CAAP;EACH,KApBD;;EAqBAF,IAAAA,UAAU,CAACI,SAAX,CAAqBoH,SAArB,GAAiCxH,UAAU,CAACI,SAAX,CAAqBkH,OAAtD;;EAEA/G,IAAAA,YAAY,CAACH,SAAb,CAAuBkH,OAAvB,GAAiC,UAAU5H,CAAV,EAAa;EAC1C,UAAIA,CAAC,KAAK6H,QAAV,EAAoB;EAChB,eAAO,CAAC,CAAR;EACH;;EACD,UAAI7H,CAAC,KAAK,CAAC6H,QAAX,EAAqB;EACjB,eAAO,CAAP;EACH;;EAED,UAAI7G,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EAAA,UACI+B,CAAC,GAAG,KAAKxB,KADb;EAAA,UAEIyB,CAAC,GAAGhB,CAAC,CAACT,KAFV;;EAGA,UAAIS,CAAC,CAACP,OAAN,EAAe;EACX,eAAOsB,CAAC,IAAIC,CAAL,GAAS,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAjC;EACH;;EACD,UAAID,CAAC,GAAG,CAAJ,KAAUf,CAAC,CAACR,IAAhB,EAAsB;EAClB,eAAOuB,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;EACH;;EACD,aAAOA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApB;EACH,KAlBD;;EAmBAlB,IAAAA,YAAY,CAACH,SAAb,CAAuBoH,SAAvB,GAAmCjH,YAAY,CAACH,SAAb,CAAuBkH,OAA1D;;EAEA9G,IAAAA,YAAY,CAACJ,SAAb,CAAuBkH,OAAvB,GAAiC,UAAU5H,CAAV,EAAa;EAC1C,UAAIA,CAAC,KAAK6H,QAAV,EAAoB;EAChB,eAAO,CAAC,CAAR;EACH;;EACD,UAAI7H,CAAC,KAAK,CAAC6H,QAAX,EAAqB;EACjB,eAAO,CAAP;EACH;;EACD,UAAI9F,CAAC,GAAG,KAAKxB,KAAb;EACA,UAAIyB,CAAC,GAAG5B,UAAU,CAACJ,CAAD,CAAV,CAAcO,KAAtB;EACA,aAAOwB,CAAC,KAAKC,CAAN,GAAU,CAAV,GAAcD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;EACH,KAVD;;EAWAlB,IAAAA,YAAY,CAACJ,SAAb,CAAuBoH,SAAvB,GAAmChH,YAAY,CAACJ,SAAb,CAAuBkH,OAA1D;;EAEAtH,IAAAA,UAAU,CAACI,SAAX,CAAqBqH,MAArB,GAA8B,UAAU/H,CAAV,EAAa;EACvC,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,MAAoB,CAA3B;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuBsH,EAAvB,GAA4BlH,YAAY,CAACJ,SAAb,CAAuBqH,MAAvB,GAAgClH,YAAY,CAACH,SAAb,CAAuBsH,EAAvB,GAA4BnH,YAAY,CAACH,SAAb,CAAuBqH,MAAvB,GAAgCzH,UAAU,CAACI,SAAX,CAAqBsH,EAArB,GAA0B1H,UAAU,CAACI,SAAX,CAAqBqH,MAAvK;;EAEAzH,IAAAA,UAAU,CAACI,SAAX,CAAqBuH,SAArB,GAAiC,UAAUjI,CAAV,EAAa;EAC1C,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,MAAoB,CAA3B;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuBwH,GAAvB,GAA6BpH,YAAY,CAACJ,SAAb,CAAuBuH,SAAvB,GAAmCpH,YAAY,CAACH,SAAb,CAAuBwH,GAAvB,GAA6BrH,YAAY,CAACH,SAAb,CAAuBuH,SAAvB,GAAmC3H,UAAU,CAACI,SAAX,CAAqBwH,GAArB,GAA2B5H,UAAU,CAACI,SAAX,CAAqBuH,SAAhL;;EAEA3H,IAAAA,UAAU,CAACI,SAAX,CAAqByH,OAArB,GAA+B,UAAUnI,CAAV,EAAa;EACxC,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,IAAkB,CAAzB;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuB0H,EAAvB,GAA4BtH,YAAY,CAACJ,SAAb,CAAuByH,OAAvB,GAAiCtH,YAAY,CAACH,SAAb,CAAuB0H,EAAvB,GAA4BvH,YAAY,CAACH,SAAb,CAAuByH,OAAvB,GAAiC7H,UAAU,CAACI,SAAX,CAAqB0H,EAArB,GAA0B9H,UAAU,CAACI,SAAX,CAAqByH,OAAzK;;EAEA7H,IAAAA,UAAU,CAACI,SAAX,CAAqB2H,MAArB,GAA8B,UAAUrI,CAAV,EAAa;EACvC,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,IAAkB,CAAzB;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuB4H,EAAvB,GAA4BxH,YAAY,CAACJ,SAAb,CAAuB2H,MAAvB,GAAgCxH,YAAY,CAACH,SAAb,CAAuB4H,EAAvB,GAA4BzH,YAAY,CAACH,SAAb,CAAuB2H,MAAvB,GAAgC/H,UAAU,CAACI,SAAX,CAAqB4H,EAArB,GAA0BhI,UAAU,CAACI,SAAX,CAAqB2H,MAAvK;;EAEA/H,IAAAA,UAAU,CAACI,SAAX,CAAqB6H,eAArB,GAAuC,UAAUvI,CAAV,EAAa;EAChD,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,KAAmB,CAA1B;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuB8H,GAAvB,GAA6B1H,YAAY,CAACJ,SAAb,CAAuB6H,eAAvB,GAAyC1H,YAAY,CAACH,SAAb,CAAuB8H,GAAvB,GAA6B3H,YAAY,CAACH,SAAb,CAAuB6H,eAAvB,GAAyCjI,UAAU,CAACI,SAAX,CAAqB8H,GAArB,GAA2BlI,UAAU,CAACI,SAAX,CAAqB6H,eAA5L;;EAEAjI,IAAAA,UAAU,CAACI,SAAX,CAAqB+H,cAArB,GAAsC,UAAUzI,CAAV,EAAa;EAC/C,aAAO,KAAK4H,OAAL,CAAa5H,CAAb,KAAmB,CAA1B;EACH,KAFD;;EAGAc,IAAAA,YAAY,CAACJ,SAAb,CAAuBgI,GAAvB,GAA6B5H,YAAY,CAACJ,SAAb,CAAuB+H,cAAvB,GAAwC5H,YAAY,CAACH,SAAb,CAAuBgI,GAAvB,GAA6B7H,YAAY,CAACH,SAAb,CAAuB+H,cAAvB,GAAwCnI,UAAU,CAACI,SAAX,CAAqBgI,GAArB,GAA2BpI,UAAU,CAACI,SAAX,CAAqB+H,cAA1L;;EAEAnI,IAAAA,UAAU,CAACI,SAAX,CAAqBsG,MAArB,GAA8B,YAAY;EACtC,aAAO,CAAC,KAAKzG,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuBsG,MAAvB,GAAgC,YAAY;EACxC,aAAO,CAAC,KAAKzG,KAAL,GAAa,CAAd,MAAqB,CAA5B;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBsG,MAAvB,GAAgC,YAAY;EACxC,aAAO,CAAC,KAAKzG,KAAL,GAAaT,MAAM,CAAC,CAAD,CAApB,MAA6BA,MAAM,CAAC,CAAD,CAA1C;EACH,KAFD;;EAIAQ,IAAAA,UAAU,CAACI,SAAX,CAAqBiH,KAArB,GAA6B,YAAY;EACrC,aAAO,CAAC,KAAKpH,KAAL,CAAW,CAAX,IAAgB,CAAjB,MAAwB,CAA/B;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuBiH,KAAvB,GAA+B,YAAY;EACvC,aAAO,CAAC,KAAKpH,KAAL,GAAa,CAAd,MAAqB,CAA5B;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBiH,KAAvB,GAA+B,YAAY;EACvC,aAAO,CAAC,KAAKpH,KAAL,GAAaT,MAAM,CAAC,CAAD,CAApB,MAA6BA,MAAM,CAAC,CAAD,CAA1C;EACH,KAFD;;EAIAQ,IAAAA,UAAU,CAACI,SAAX,CAAqBgH,UAArB,GAAkC,YAAY;EAC1C,aAAO,CAAC,KAAKlH,IAAb;EACH,KAFD;;EAGAK,IAAAA,YAAY,CAACH,SAAb,CAAuBgH,UAAvB,GAAoC,YAAY;EAC5C,aAAO,KAAKnH,KAAL,GAAa,CAApB;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBgH,UAAvB,GAAoC7G,YAAY,CAACH,SAAb,CAAuBgH,UAA3D;;EAEApH,IAAAA,UAAU,CAACI,SAAX,CAAqB2G,UAArB,GAAkC,YAAY;EAC1C,aAAO,KAAK7G,IAAZ;EACH,KAFD;;EAGAK,IAAAA,YAAY,CAACH,SAAb,CAAuB2G,UAAvB,GAAoC,YAAY;EAC5C,aAAO,KAAK9G,KAAL,GAAa,CAApB;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuB2G,UAAvB,GAAoCxG,YAAY,CAACH,SAAb,CAAuB2G,UAA3D;;EAEA/G,IAAAA,UAAU,CAACI,SAAX,CAAqBiI,MAArB,GAA8B,YAAY;EACtC,aAAO,KAAP;EACH,KAFD;;EAGA9H,IAAAA,YAAY,CAACH,SAAb,CAAuBiI,MAAvB,GAAgC,YAAY;EACxC,aAAO1H,IAAI,CAAC4B,GAAL,CAAS,KAAKtC,KAAd,MAAyB,CAAhC;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBiI,MAAvB,GAAgC,YAAY;EACxC,aAAO,KAAK9F,GAAL,GAAWtC,KAAX,KAAqBT,MAAM,CAAC,CAAD,CAAlC;EACH,KAFD;;EAIAQ,IAAAA,UAAU,CAACI,SAAX,CAAqB8G,MAArB,GAA8B,YAAY;EACtC,aAAO,KAAP;EACH,KAFD;;EAGA3G,IAAAA,YAAY,CAACH,SAAb,CAAuB8G,MAAvB,GAAgC,YAAY;EACxC,aAAO,KAAKjH,KAAL,KAAe,CAAtB;EACH,KAFD;;EAGAO,IAAAA,YAAY,CAACJ,SAAb,CAAuB8G,MAAvB,GAAgC,YAAY;EACxC,aAAO,KAAKjH,KAAL,KAAeT,MAAM,CAAC,CAAD,CAA5B;EACH,KAFD;;EAIAQ,IAAAA,UAAU,CAACI,SAAX,CAAqBkI,aAArB,GAAqC,UAAU5I,CAAV,EAAa;EAC9C,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAlB;EACA,UAAIgB,CAAC,CAACwG,MAAF,EAAJ,EAAgB,OAAO,KAAP;EAChB,UAAIxG,CAAC,CAAC2H,MAAF,EAAJ,EAAgB,OAAO,IAAP;EAChB,UAAI3H,CAAC,CAACO,UAAF,CAAa,CAAb,MAAoB,CAAxB,EAA2B,OAAO,KAAKyF,MAAL,EAAP;EAC3B,aAAO,KAAKN,GAAL,CAAS1F,CAAT,EAAYwG,MAAZ,EAAP;EACH,KAND;;EAOA1G,IAAAA,YAAY,CAACJ,SAAb,CAAuBkI,aAAvB,GAAuC/H,YAAY,CAACH,SAAb,CAAuBkI,aAAvB,GAAuCtI,UAAU,CAACI,SAAX,CAAqBkI,aAAnG;;EAEA,aAASC,YAAT,CAAsB7I,CAAtB,EAAyB;EACrB,UAAIgB,CAAC,GAAGhB,CAAC,CAAC6C,GAAF,EAAR;EACA,UAAI7B,CAAC,CAAC2H,MAAF,EAAJ,EAAgB,OAAO,KAAP;EAChB,UAAI3H,CAAC,CAAC+G,MAAF,CAAS,CAAT,KAAe/G,CAAC,CAAC+G,MAAF,CAAS,CAAT,CAAf,IAA8B/G,CAAC,CAAC+G,MAAF,CAAS,CAAT,CAAlC,EAA+C,OAAO,IAAP;EAC/C,UAAI/G,CAAC,CAACgG,MAAF,MAAchG,CAAC,CAAC4H,aAAF,CAAgB,CAAhB,CAAd,IAAoC5H,CAAC,CAAC4H,aAAF,CAAgB,CAAhB,CAAxC,EAA4D,OAAO,KAAP;EAC5D,UAAI5H,CAAC,CAACqH,MAAF,CAAS,EAAT,CAAJ,EAAkB,OAAO,IAAP,CALG;EAOxB;;EAED,aAASS,eAAT,CAAyB9H,CAAzB,EAA4Be,CAA5B,EAA+B;EAC3B,UAAIgH,KAAK,GAAG/H,CAAC,CAACgI,IAAF,EAAZ;EAAA,UACIhH,CAAC,GAAG+G,KADR;EAAA,UAEI5G,CAAC,GAAG,CAFR;EAAA,UAGIgC,CAHJ;EAAA,UAGU3C,CAHV;EAAA,UAGaE;;EACb,aAAOM,CAAC,CAACgF,MAAF,EAAP;EAAmBhF,QAAAA,CAAC,GAAGA,CAAC,CAAC6E,MAAF,CAAS,CAAT,CAAJ,EAAiB1E,CAAC,EAAlB;EAAnB;;EACA8G,MAAAA,IAAI,EAAE,KAAKzH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGO,CAAC,CAACT,MAAlB,EAA0BE,CAAC,EAA3B,EAA+B;EACjC,YAAIR,CAAC,CAACqH,MAAF,CAAStG,CAAC,CAACP,CAAD,CAAV,CAAJ,EAAoB;EACpBE,QAAAA,CAAC,GAAGrC,MAAM,CAAC0C,CAAC,CAACP,CAAD,CAAF,CAAN,CAAa8F,MAAb,CAAoBtF,CAApB,EAAuBhB,CAAvB,CAAJ;EACA,YAAIU,CAAC,CAACiH,MAAF,MAAcjH,CAAC,CAACqG,MAAF,CAASgB,KAAT,CAAlB,EAAmC;;EACnC,aAAK5E,CAAC,GAAGhC,CAAC,GAAG,CAAb,EAAgBgC,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;EACzBzC,UAAAA,CAAC,GAAGA,CAAC,CAACqD,MAAF,GAAW2B,GAAX,CAAe1F,CAAf,CAAJ;EACA,cAAIU,CAAC,CAACiH,MAAF,EAAJ,EAAgB,OAAO,KAAP;EAChB,cAAIjH,CAAC,CAACqG,MAAF,CAASgB,KAAT,CAAJ,EAAqB,SAASE,IAAT;EACxB;;EACD,eAAO,KAAP;EACH;;EACD,aAAO,IAAP;EACH,KAj5B8B;;;EAo5B/B3I,IAAAA,UAAU,CAACI,SAAX,CAAqBwI,OAArB,GAA+B,UAAUC,MAAV,EAAkB;EAC7C,UAAID,OAAO,GAAGL,YAAY,CAAC,IAAD,CAA1B;EACA,UAAIK,OAAO,KAAK5J,WAAhB,EAA2B,OAAO4J,OAAP;EAC3B,UAAIlI,CAAC,GAAG,KAAK6B,GAAL,EAAR;EACA,UAAIuG,IAAI,GAAGpI,CAAC,CAACqI,SAAF,EAAX;EACA,UAAID,IAAI,IAAI,EAAZ,EACI,OAAON,eAAe,CAAC9H,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,CAAJ,CAAtB;EACJ,UAAIsI,IAAI,GAAGrI,IAAI,CAACsI,GAAL,CAAS,CAAT,IAAcH,IAAI,CAACI,UAAL,EAAzB;EACA,UAAIC,CAAC,GAAGxI,IAAI,CAACY,IAAL,CAAWsH,MAAM,KAAK,IAAZ,GAAqB,IAAIlI,IAAI,CAAC8F,GAAL,CAASuC,IAAT,EAAe,CAAf,CAAzB,GAA8CA,IAAxD,CAAR;;EACA,WAAK,IAAIvH,CAAC,GAAG,EAAR,EAAYP,CAAC,GAAG,CAArB,EAAwBA,CAAC,GAAGiI,CAA5B,EAA+BjI,CAAC,EAAhC,EAAoC;EAChCO,QAAAA,CAAC,CAACQ,IAAF,CAAOlD,MAAM,CAACmC,CAAC,GAAG,CAAL,CAAb;EACH;;EACD,aAAOsH,eAAe,CAAC9H,CAAD,EAAIe,CAAJ,CAAtB;EACH,KAbD;;EAcAjB,IAAAA,YAAY,CAACJ,SAAb,CAAuBwI,OAAvB,GAAiCrI,YAAY,CAACH,SAAb,CAAuBwI,OAAvB,GAAiC5I,UAAU,CAACI,SAAX,CAAqBwI,OAAvF;;EAEA5I,IAAAA,UAAU,CAACI,SAAX,CAAqBgJ,eAArB,GAAuC,UAAUC,UAAV,EAAsBC,GAAtB,EAA2B;EAC9D,UAAIV,OAAO,GAAGL,YAAY,CAAC,IAAD,CAA1B;EACA,UAAIK,OAAO,KAAK5J,WAAhB,EAA2B,OAAO4J,OAAP;EAC3B,UAAIlI,CAAC,GAAG,KAAK6B,GAAL,EAAR;EACA,UAAI4G,CAAC,GAAGE,UAAU,KAAKrK,WAAf,GAA2B,CAA3B,GAA+BqK,UAAvC;;EACA,WAAK,IAAI5H,CAAC,GAAG,EAAR,EAAYP,CAAC,GAAG,CAArB,EAAwBA,CAAC,GAAGiI,CAA5B,EAA+BjI,CAAC,EAAhC,EAAoC;EAChCO,QAAAA,CAAC,CAACQ,IAAF,CAAOlD,MAAM,CAACwK,WAAP,CAAmB,CAAnB,EAAsB7I,CAAC,CAACqC,KAAF,CAAQ,CAAR,CAAtB,EAAkCuG,GAAlC,CAAP;EACH;;EACD,aAAOd,eAAe,CAAC9H,CAAD,EAAIe,CAAJ,CAAtB;EACH,KATD;;EAUAjB,IAAAA,YAAY,CAACJ,SAAb,CAAuBgJ,eAAvB,GAAyC7I,YAAY,CAACH,SAAb,CAAuBgJ,eAAvB,GAAyCpJ,UAAU,CAACI,SAAX,CAAqBgJ,eAAvG;;EAEApJ,IAAAA,UAAU,CAACI,SAAX,CAAqB+G,MAArB,GAA8B,UAAUzG,CAAV,EAAa;EACvC,UAAIyI,CAAC,GAAGpK,MAAM,CAACyK,IAAf;EAAA,UAAqBC,IAAI,GAAG1K,MAAM,CAAC2K,GAAnC;EAAA,UAAwC7H,CAAC,GAAG/B,UAAU,CAACY,CAAD,CAAtD;EAAA,UAA2DiJ,IAAI,GAAG,KAAKpH,GAAL,EAAlE;EAAA,UAA8E4C,CAA9E;EAAA,UAAiFyE,KAAjF;EAAA,UAAwFC,KAAxF;;EACA,aAAO,CAACF,IAAI,CAACzC,MAAL,EAAR,EAAuB;EACnB/B,QAAAA,CAAC,GAAGtD,CAAC,CAAC0E,MAAF,CAASoD,IAAT,CAAJ;EACAC,QAAAA,KAAK,GAAGT,CAAR;EACAU,QAAAA,KAAK,GAAGhI,CAAR;EACAsH,QAAAA,CAAC,GAAGM,IAAJ;EACA5H,QAAAA,CAAC,GAAG8H,IAAJ;EACAF,QAAAA,IAAI,GAAGG,KAAK,CAACvH,QAAN,CAAe8C,CAAC,CAACd,QAAF,CAAWoF,IAAX,CAAf,CAAP;EACAE,QAAAA,IAAI,GAAGE,KAAK,CAACxH,QAAN,CAAe8C,CAAC,CAACd,QAAF,CAAWsF,IAAX,CAAf,CAAP;EACH;;EACD,UAAI,CAAC9H,CAAC,CAACwG,MAAF,EAAL,EAAiB,MAAM,IAAIpC,KAAJ,CAAU,KAAKU,QAAL,KAAkB,OAAlB,GAA4BjG,CAAC,CAACiG,QAAF,EAA5B,GAA2C,mBAArD,CAAN;;EACjB,UAAIwC,CAAC,CAAC7B,OAAF,CAAU,CAAV,MAAiB,CAAC,CAAtB,EAAyB;EACrB6B,QAAAA,CAAC,GAAGA,CAAC,CAAC3H,GAAF,CAAMd,CAAN,CAAJ;EACH;;EACD,UAAI,KAAKqG,UAAL,EAAJ,EAAuB;EACnB,eAAOoC,CAAC,CAAC7G,MAAF,EAAP;EACH;;EACD,aAAO6G,CAAP;EACH,KAnBD;;EAqBA3I,IAAAA,YAAY,CAACJ,SAAb,CAAuB+G,MAAvB,GAAgC5G,YAAY,CAACH,SAAb,CAAuB+G,MAAvB,GAAgCnH,UAAU,CAACI,SAAX,CAAqB+G,MAArF;;EAEAnH,IAAAA,UAAU,CAACI,SAAX,CAAqBuI,IAArB,GAA4B,YAAY;EACpC,UAAI1I,KAAK,GAAG,KAAKA,KAAjB;;EACA,UAAI,KAAKC,IAAT,EAAe;EACX,eAAO4C,aAAa,CAAC7C,KAAD,EAAQ,CAAR,EAAW,KAAKC,IAAhB,CAApB;EACH;;EACD,aAAO,IAAIF,UAAJ,CAAemC,QAAQ,CAAClC,KAAD,EAAQ,CAAR,CAAvB,EAAmC,KAAKC,IAAxC,CAAP;EACH,KAND;;EAOAK,IAAAA,YAAY,CAACH,SAAb,CAAuBuI,IAAvB,GAA8B,YAAY;EACtC,UAAI1I,KAAK,GAAG,KAAKA,KAAjB;EACA,UAAIA,KAAK,GAAG,CAAR,GAAYd,OAAhB,EAAyB,OAAO,IAAIoB,YAAJ,CAAiBN,KAAK,GAAG,CAAzB,CAAP;EACzB,aAAO,IAAID,UAAJ,CAAeZ,WAAf,EAA4B,KAA5B,CAAP;EACH,KAJD;;EAKAoB,IAAAA,YAAY,CAACJ,SAAb,CAAuBuI,IAAvB,GAA8B,YAAY;EACtC,aAAO,IAAInI,YAAJ,CAAiB,KAAKP,KAAL,GAAaT,MAAM,CAAC,CAAD,CAApC,CAAP;EACH,KAFD;;EAIAQ,IAAAA,UAAU,CAACI,SAAX,CAAqBsI,IAArB,GAA4B,YAAY;EACpC,UAAIzI,KAAK,GAAG,KAAKA,KAAjB;;EACA,UAAI,KAAKC,IAAT,EAAe;EACX,eAAO,IAAIF,UAAJ,CAAemC,QAAQ,CAAClC,KAAD,EAAQ,CAAR,CAAvB,EAAmC,IAAnC,CAAP;EACH;;EACD,aAAO6C,aAAa,CAAC7C,KAAD,EAAQ,CAAR,EAAW,KAAKC,IAAhB,CAApB;EACH,KAND;;EAOAK,IAAAA,YAAY,CAACH,SAAb,CAAuBsI,IAAvB,GAA8B,YAAY;EACtC,UAAIzI,KAAK,GAAG,KAAKA,KAAjB;EACA,UAAIA,KAAK,GAAG,CAAR,GAAY,CAACd,OAAjB,EAA0B,OAAO,IAAIoB,YAAJ,CAAiBN,KAAK,GAAG,CAAzB,CAAP;EAC1B,aAAO,IAAID,UAAJ,CAAeZ,WAAf,EAA4B,IAA5B,CAAP;EACH,KAJD;;EAKAoB,IAAAA,YAAY,CAACJ,SAAb,CAAuBsI,IAAvB,GAA8B,YAAY;EACtC,aAAO,IAAIlI,YAAJ,CAAiB,KAAKP,KAAL,GAAaT,MAAM,CAAC,CAAD,CAApC,CAAP;EACH,KAFD;;EAIA,QAAIsK,WAAW,GAAG,CAAC,CAAD,CAAlB;;EACA,WAAO,IAAIA,WAAW,CAACA,WAAW,CAAC9I,MAAZ,GAAqB,CAAtB,CAAf,IAA2C/B,IAAlD;EAAwD6K,MAAAA,WAAW,CAAC7H,IAAZ,CAAiB,IAAI6H,WAAW,CAACA,WAAW,CAAC9I,MAAZ,GAAqB,CAAtB,CAAhC;EAAxD;;EACA,QAAI+I,aAAa,GAAGD,WAAW,CAAC9I,MAAhC;EAAA,QAAwCgJ,aAAa,GAAGF,WAAW,CAACC,aAAa,GAAG,CAAjB,CAAnE;;EAEA,aAASE,aAAT,CAAuBvJ,CAAvB,EAA0B;EACtB,aAAOC,IAAI,CAAC4B,GAAL,CAAS7B,CAAT,KAAezB,IAAtB;EACH;;EAEDe,IAAAA,UAAU,CAACI,SAAX,CAAqBmD,SAArB,GAAiC,UAAU7D,CAAV,EAAa;EAC1C,UAAIgB,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAV,CAAcwJ,UAAd,EAAR;;EACA,UAAI,CAACe,aAAa,CAACvJ,CAAD,CAAlB,EAAuB;EACnB,cAAM,IAAIuF,KAAJ,CAAUiE,MAAM,CAACxJ,CAAD,CAAN,GAAY,6BAAtB,CAAN;EACH;;EACD,UAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,KAAKyJ,UAAL,CAAgB,CAACzJ,CAAjB,CAAP;EACX,UAAIkE,MAAM,GAAG,IAAb;EACA,UAAIA,MAAM,CAACsC,MAAP,EAAJ,EAAqB,OAAOtC,MAAP;;EACrB,aAAOlE,CAAC,IAAIqJ,aAAZ,EAA2B;EACvBnF,QAAAA,MAAM,GAAGA,MAAM,CAACP,QAAP,CAAgB2F,aAAhB,CAAT;EACAtJ,QAAAA,CAAC,IAAIqJ,aAAa,GAAG,CAArB;EACH;;EACD,aAAOnF,MAAM,CAACP,QAAP,CAAgByF,WAAW,CAACpJ,CAAD,CAA3B,CAAP;EACH,KAbD;;EAcAF,IAAAA,YAAY,CAACJ,SAAb,CAAuBmD,SAAvB,GAAmChD,YAAY,CAACH,SAAb,CAAuBmD,SAAvB,GAAmCvD,UAAU,CAACI,SAAX,CAAqBmD,SAA3F;;EAEAvD,IAAAA,UAAU,CAACI,SAAX,CAAqB+J,UAArB,GAAkC,UAAUzK,CAAV,EAAa;EAC3C,UAAI0K,MAAJ;EACA,UAAI1J,CAAC,GAAGZ,UAAU,CAACJ,CAAD,CAAV,CAAcwJ,UAAd,EAAR;;EACA,UAAI,CAACe,aAAa,CAACvJ,CAAD,CAAlB,EAAuB;EACnB,cAAM,IAAIuF,KAAJ,CAAUiE,MAAM,CAACxJ,CAAD,CAAN,GAAY,6BAAtB,CAAN;EACH;;EACD,UAAIA,CAAC,GAAG,CAAR,EAAW,OAAO,KAAK6C,SAAL,CAAe,CAAC7C,CAAhB,CAAP;EACX,UAAIkE,MAAM,GAAG,IAAb;;EACA,aAAOlE,CAAC,IAAIqJ,aAAZ,EAA2B;EACvB,YAAInF,MAAM,CAACsC,MAAP,MAAoBtC,MAAM,CAACmC,UAAP,MAAuBnC,MAAM,CAACyD,MAAP,EAA/C,EAAiE,OAAOzD,MAAP;EACjEwF,QAAAA,MAAM,GAAGrE,SAAS,CAACnB,MAAD,EAASoF,aAAT,CAAlB;EACApF,QAAAA,MAAM,GAAGwF,MAAM,CAAC,CAAD,CAAN,CAAUrD,UAAV,KAAyBqD,MAAM,CAAC,CAAD,CAAN,CAAU1B,IAAV,EAAzB,GAA4C0B,MAAM,CAAC,CAAD,CAA3D;EACA1J,QAAAA,CAAC,IAAIqJ,aAAa,GAAG,CAArB;EACH;;EACDK,MAAAA,MAAM,GAAGrE,SAAS,CAACnB,MAAD,EAASkF,WAAW,CAACpJ,CAAD,CAApB,CAAlB;EACA,aAAO0J,MAAM,CAAC,CAAD,CAAN,CAAUrD,UAAV,KAAyBqD,MAAM,CAAC,CAAD,CAAN,CAAU1B,IAAV,EAAzB,GAA4C0B,MAAM,CAAC,CAAD,CAAzD;EACH,KAhBD;;EAiBA5J,IAAAA,YAAY,CAACJ,SAAb,CAAuB+J,UAAvB,GAAoC5J,YAAY,CAACH,SAAb,CAAuB+J,UAAvB,GAAoCnK,UAAU,CAACI,SAAX,CAAqB+J,UAA7F;;EAEA,aAASE,OAAT,CAAiBjJ,CAAjB,EAAoBsC,CAApB,EAAuB4G,EAAvB,EAA2B;EACvB5G,MAAAA,CAAC,GAAG5D,UAAU,CAAC4D,CAAD,CAAd;EACA,UAAI6G,KAAK,GAAGnJ,CAAC,CAAC2F,UAAF,EAAZ;EAAA,UAA4ByD,KAAK,GAAG9G,CAAC,CAACqD,UAAF,EAApC;EACA,UAAI0D,IAAI,GAAGF,KAAK,GAAGnJ,CAAC,CAACsJ,GAAF,EAAH,GAAatJ,CAA7B;EAAA,UACIuJ,IAAI,GAAGH,KAAK,GAAG9G,CAAC,CAACgH,GAAF,EAAH,GAAahH,CAD7B;EAEA,UAAIkH,MAAM,GAAG,CAAb;EAAA,UAAgBC,MAAM,GAAG,CAAzB;EACA,UAAIC,OAAO,GAAG,IAAd;EAAA,UAAoBC,OAAO,GAAG,IAA9B;EACA,UAAInG,MAAM,GAAG,EAAb;;EACA,aAAO,CAAC6F,IAAI,CAACvD,MAAL,EAAD,IAAkB,CAACyD,IAAI,CAACzD,MAAL,EAA1B,EAAyC;EACrC4D,QAAAA,OAAO,GAAG/E,SAAS,CAAC0E,IAAD,EAAOT,aAAP,CAAnB;EACAY,QAAAA,MAAM,GAAGE,OAAO,CAAC,CAAD,CAAP,CAAW5B,UAAX,EAAT;;EACA,YAAIqB,KAAJ,EAAW;EACPK,UAAAA,MAAM,GAAGZ,aAAa,GAAG,CAAhB,GAAoBY,MAA7B,CADO;EAEV;;EAEDG,QAAAA,OAAO,GAAGhF,SAAS,CAAC4E,IAAD,EAAOX,aAAP,CAAnB;EACAa,QAAAA,MAAM,GAAGE,OAAO,CAAC,CAAD,CAAP,CAAW7B,UAAX,EAAT;;EACA,YAAIsB,KAAJ,EAAW;EACPK,UAAAA,MAAM,GAAGb,aAAa,GAAG,CAAhB,GAAoBa,MAA7B,CADO;EAEV;;EAEDJ,QAAAA,IAAI,GAAGK,OAAO,CAAC,CAAD,CAAd;EACAH,QAAAA,IAAI,GAAGI,OAAO,CAAC,CAAD,CAAd;EACAnG,QAAAA,MAAM,CAAC3C,IAAP,CAAYqI,EAAE,CAACM,MAAD,EAASC,MAAT,CAAd;EACH;;EACD,UAAI7I,GAAG,GAAGsI,EAAE,CAACC,KAAK,GAAG,CAAH,GAAO,CAAb,EAAgBC,KAAK,GAAG,CAAH,GAAO,CAA5B,CAAF,KAAqC,CAArC,GAAyCzL,MAAM,CAAC,CAAC,CAAF,CAA/C,GAAsDA,MAAM,CAAC,CAAD,CAAtE;;EACA,WAAK,IAAImC,CAAC,GAAG0D,MAAM,CAAC5D,MAAP,GAAgB,CAA7B,EAAgCE,CAAC,IAAI,CAArC,EAAwCA,CAAC,IAAI,CAA7C,EAAgD;EAC5Cc,QAAAA,GAAG,GAAGA,GAAG,CAACqC,QAAJ,CAAa2F,aAAb,EAA4BxI,GAA5B,CAAgCzC,MAAM,CAAC6F,MAAM,CAAC1D,CAAD,CAAP,CAAtC,CAAN;EACH;;EACD,aAAOc,GAAP;EACH;;EAEDhC,IAAAA,UAAU,CAACI,SAAX,CAAqBsK,GAArB,GAA2B,YAAY;EACnC,aAAO,KAAKpI,MAAL,GAAcoG,IAAd,EAAP;EACH,KAFD;;EAGAlI,IAAAA,YAAY,CAACJ,SAAb,CAAuBsK,GAAvB,GAA6BnK,YAAY,CAACH,SAAb,CAAuBsK,GAAvB,GAA6B1K,UAAU,CAACI,SAAX,CAAqBsK,GAA/E;;EAEA1K,IAAAA,UAAU,CAACI,SAAX,CAAqB4K,GAArB,GAA2B,UAAUtK,CAAV,EAAa;EACpC,aAAO2J,OAAO,CAAC,IAAD,EAAO3J,CAAP,EAAU,UAAUe,CAAV,EAAaC,CAAb,EAAgB;EAAE,eAAOD,CAAC,GAAGC,CAAX;EAAe,OAA3C,CAAd;EACH,KAFD;;EAGAlB,IAAAA,YAAY,CAACJ,SAAb,CAAuB4K,GAAvB,GAA6BzK,YAAY,CAACH,SAAb,CAAuB4K,GAAvB,GAA6BhL,UAAU,CAACI,SAAX,CAAqB4K,GAA/E;;EAEAhL,IAAAA,UAAU,CAACI,SAAX,CAAqB6K,EAArB,GAA0B,UAAUvK,CAAV,EAAa;EACnC,aAAO2J,OAAO,CAAC,IAAD,EAAO3J,CAAP,EAAU,UAAUe,CAAV,EAAaC,CAAb,EAAgB;EAAE,eAAOD,CAAC,GAAGC,CAAX;EAAe,OAA3C,CAAd;EACH,KAFD;;EAGAlB,IAAAA,YAAY,CAACJ,SAAb,CAAuB6K,EAAvB,GAA4B1K,YAAY,CAACH,SAAb,CAAuB6K,EAAvB,GAA4BjL,UAAU,CAACI,SAAX,CAAqB6K,EAA7E;;EAEAjL,IAAAA,UAAU,CAACI,SAAX,CAAqB8K,GAArB,GAA2B,UAAUxK,CAAV,EAAa;EACpC,aAAO2J,OAAO,CAAC,IAAD,EAAO3J,CAAP,EAAU,UAAUe,CAAV,EAAaC,CAAb,EAAgB;EAAE,eAAOD,CAAC,GAAGC,CAAX;EAAe,OAA3C,CAAd;EACH,KAFD;;EAGAlB,IAAAA,YAAY,CAACJ,SAAb,CAAuB8K,GAAvB,GAA6B3K,YAAY,CAACH,SAAb,CAAuB8K,GAAvB,GAA6BlL,UAAU,CAACI,SAAX,CAAqB8K,GAA/E;EAEA,QAAIC,SAAS,GAAG,KAAK,EAArB;EAAA,QAAyBC,UAAU,GAAG,CAACnM,IAAI,GAAG,CAACA,IAAT,KAAkBA,IAAI,GAAG,CAACA,IAA1B,IAAkCkM,SAAxE;;EACA,aAASE,QAAT,CAAkB3K,CAAlB,EAAqB;;;;EAGjB,UAAIhB,CAAC,GAAGgB,CAAC,CAACT,KAAV;EAAA,UACImB,CAAC,GAAG,OAAO1B,CAAP,KAAa,QAAb,GAAwBA,CAAC,GAAGyL,SAA5B,GACA,OAAOzL,CAAP,KAAa,QAAb,GAAwBA,CAAC,GAAGF,MAAM,CAAC2L,SAAD,CAAlC,GACIzL,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAOT,IAAd,GAAqBmM,UAHjC;EAIA,aAAOhK,CAAC,GAAG,CAACA,CAAZ;EACH;;EAED,aAASkK,gBAAT,CAA0BrL,KAA1B,EAAiC8B,IAAjC,EAAuC;EACnC,UAAIA,IAAI,CAACyF,SAAL,CAAevH,KAAf,KAAyB,CAA7B,EAAgC;EAC5B,YAAIsL,GAAG,GAAGD,gBAAgB,CAACrL,KAAD,EAAQ8B,IAAI,CAAC0C,MAAL,CAAY1C,IAAZ,CAAR,CAA1B;EACA,YAAIyJ,CAAC,GAAGD,GAAG,CAACC,CAAZ;EACA,YAAIC,CAAC,GAAGF,GAAG,CAACE,CAAZ;EACA,YAAItC,CAAC,GAAGqC,CAAC,CAACnH,QAAF,CAAWtC,IAAX,CAAR;EACA,eAAOoH,CAAC,CAAC3B,SAAF,CAAYvH,KAAZ,KAAsB,CAAtB,GAA0B;EAAEuL,UAAAA,CAAC,EAAErC,CAAL;EAAQsC,UAAAA,CAAC,EAAEA,CAAC,GAAG,CAAJ,GAAQ;EAAnB,SAA1B,GAAmD;EAAED,UAAAA,CAAC,EAAEA,CAAL;EAAQC,UAAAA,CAAC,EAAEA,CAAC,GAAG;EAAf,SAA1D;EACH;;EACD,aAAO;EAAED,QAAAA,CAAC,EAAEzM,MAAM,CAAC,CAAD,CAAX;EAAgB0M,QAAAA,CAAC,EAAE;EAAnB,OAAP;EACH;;EAEDzL,IAAAA,UAAU,CAACI,SAAX,CAAqB2I,SAArB,GAAiC,YAAY;EACzC,UAAIrI,CAAC,GAAG,IAAR;;EACA,UAAIA,CAAC,CAAC8G,SAAF,CAAYzI,MAAM,CAAC,CAAD,CAAlB,IAAyB,CAA7B,EAAgC;EAC5B2B,QAAAA,CAAC,GAAGA,CAAC,CAAC4B,MAAF,GAAWD,QAAX,CAAoBtD,MAAM,CAAC,CAAD,CAA1B,CAAJ;EACH;;EACD,UAAI2B,CAAC,CAAC8G,SAAF,CAAYzI,MAAM,CAAC,CAAD,CAAlB,MAA2B,CAA/B,EAAkC;EAC9B,eAAOA,MAAM,CAAC,CAAD,CAAb;EACH;;EACD,aAAOA,MAAM,CAACuM,gBAAgB,CAAC5K,CAAD,EAAI3B,MAAM,CAAC,CAAD,CAAV,CAAhB,CAA+B0M,CAAhC,CAAN,CAAyCjK,GAAzC,CAA6CzC,MAAM,CAAC,CAAD,CAAnD,CAAP;EACH,KATD;;EAUAyB,IAAAA,YAAY,CAACJ,SAAb,CAAuB2I,SAAvB,GAAmCxI,YAAY,CAACH,SAAb,CAAuB2I,SAAvB,GAAmC/I,UAAU,CAACI,SAAX,CAAqB2I,SAA3F;;EAEA,aAASpF,GAAT,CAAalC,CAAb,EAAgBC,CAAhB,EAAmB;EACfD,MAAAA,CAAC,GAAG3B,UAAU,CAAC2B,CAAD,CAAd;EACAC,MAAAA,CAAC,GAAG5B,UAAU,CAAC4B,CAAD,CAAd;EACA,aAAOD,CAAC,CAACoG,OAAF,CAAUnG,CAAV,IAAeD,CAAf,GAAmBC,CAA1B;EACH;;EACD,aAASgK,GAAT,CAAajK,CAAb,EAAgBC,CAAhB,EAAmB;EACfD,MAAAA,CAAC,GAAG3B,UAAU,CAAC2B,CAAD,CAAd;EACAC,MAAAA,CAAC,GAAG5B,UAAU,CAAC4B,CAAD,CAAd;EACA,aAAOD,CAAC,CAACsG,MAAF,CAASrG,CAAT,IAAcD,CAAd,GAAkBC,CAAzB;EACH;;EACD,aAASiK,GAAT,CAAalK,CAAb,EAAgBC,CAAhB,EAAmB;EACfD,MAAAA,CAAC,GAAG3B,UAAU,CAAC2B,CAAD,CAAV,CAAcc,GAAd,EAAJ;EACAb,MAAAA,CAAC,GAAG5B,UAAU,CAAC4B,CAAD,CAAV,CAAca,GAAd,EAAJ;EACA,UAAId,CAAC,CAACgG,MAAF,CAAS/F,CAAT,CAAJ,EAAiB,OAAOD,CAAP;EACjB,UAAIA,CAAC,CAACyF,MAAF,EAAJ,EAAgB,OAAOxF,CAAP;EAChB,UAAIA,CAAC,CAACwF,MAAF,EAAJ,EAAgB,OAAOzF,CAAP;EAChB,UAAIqC,CAAC,GAAGrE,OAAO,CAAC,CAAD,CAAf;EAAA,UAAoBoE,CAApB;EAAA,UAAuBsF,CAAvB;;EACA,aAAO1H,CAAC,CAACiF,MAAF,MAAchF,CAAC,CAACgF,MAAF,EAArB,EAAiC;EAC7B7C,QAAAA,CAAC,GAAG6H,GAAG,CAACL,QAAQ,CAAC5J,CAAD,CAAT,EAAc4J,QAAQ,CAAC3J,CAAD,CAAtB,CAAP;EACAD,QAAAA,CAAC,GAAGA,CAAC,CAAC8E,MAAF,CAAS1C,CAAT,CAAJ;EACAnC,QAAAA,CAAC,GAAGA,CAAC,CAAC6E,MAAF,CAAS1C,CAAT,CAAJ;EACAC,QAAAA,CAAC,GAAGA,CAAC,CAACO,QAAF,CAAWR,CAAX,CAAJ;EACH;;EACD,aAAOpC,CAAC,CAACiF,MAAF,EAAP,EAAmB;EACfjF,QAAAA,CAAC,GAAGA,CAAC,CAAC8E,MAAF,CAAS8E,QAAQ,CAAC5J,CAAD,CAAjB,CAAJ;EACH;;EACD,SAAG;EACC,eAAOC,CAAC,CAACgF,MAAF,EAAP,EAAmB;EACfhF,UAAAA,CAAC,GAAGA,CAAC,CAAC6E,MAAF,CAAS8E,QAAQ,CAAC3J,CAAD,CAAjB,CAAJ;EACH;;EACD,YAAID,CAAC,CAACoG,OAAF,CAAUnG,CAAV,CAAJ,EAAkB;EACdyH,UAAAA,CAAC,GAAGzH,CAAJ;EAAOA,UAAAA,CAAC,GAAGD,CAAJ;EAAOA,UAAAA,CAAC,GAAG0H,CAAJ;EACjB;;EACDzH,QAAAA,CAAC,GAAGA,CAAC,CAACW,QAAF,CAAWZ,CAAX,CAAJ;EACH,OARD,QAQS,CAACC,CAAC,CAACwF,MAAF,EARV;;EASA,aAAOpD,CAAC,CAACuE,MAAF,KAAa5G,CAAb,GAAiBA,CAAC,CAAC4C,QAAF,CAAWP,CAAX,CAAxB;EACH;;EACD,aAAS8H,GAAT,CAAanK,CAAb,EAAgBC,CAAhB,EAAmB;EACfD,MAAAA,CAAC,GAAG3B,UAAU,CAAC2B,CAAD,CAAV,CAAcc,GAAd,EAAJ;EACAb,MAAAA,CAAC,GAAG5B,UAAU,CAAC4B,CAAD,CAAV,CAAca,GAAd,EAAJ;EACA,aAAOd,CAAC,CAAC8E,MAAF,CAASoF,GAAG,CAAClK,CAAD,EAAIC,CAAJ,CAAZ,EAAoB2C,QAApB,CAA6B3C,CAA7B,CAAP;EACH;;EACD,aAAS6H,WAAT,CAAqB9H,CAArB,EAAwBC,CAAxB,EAA2B4H,GAA3B,EAAgC;EAC5B7H,MAAAA,CAAC,GAAG3B,UAAU,CAAC2B,CAAD,CAAd;EACAC,MAAAA,CAAC,GAAG5B,UAAU,CAAC4B,CAAD,CAAd;EACA,UAAImK,OAAO,GAAGvC,GAAG,IAAI3I,IAAI,CAACmL,MAA1B;EACA,UAAIC,GAAG,GAAGL,GAAG,CAACjK,CAAD,EAAIC,CAAJ,CAAb;EAAA,UAAqBsK,IAAI,GAAGrI,GAAG,CAAClC,CAAD,EAAIC,CAAJ,CAA/B;EACA,UAAIuK,KAAK,GAAGD,IAAI,CAAC3J,QAAL,CAAc0J,GAAd,EAAmBvK,GAAnB,CAAuB,CAAvB,CAAZ;EACA,UAAIyK,KAAK,CAAC9L,OAAV,EAAmB,OAAO4L,GAAG,CAACvK,GAAJ,CAAQb,IAAI,CAACC,KAAL,CAAWiL,OAAO,KAAKI,KAAvB,CAAR,CAAP;EACnB,UAAIC,MAAM,GAAGC,MAAM,CAACF,KAAD,EAAQhN,IAAR,CAAN,CAAoBgB,KAAjC;EACA,UAAI2E,MAAM,GAAG,EAAb;EAAA,UAAiBwH,UAAU,GAAG,IAA9B;;EACA,WAAK,IAAIlL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgL,MAAM,CAAClL,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;EACpC,YAAImL,GAAG,GAAGD,UAAU,GAAGF,MAAM,CAAChL,CAAD,CAAN,IAAaA,CAAC,GAAG,CAAJ,GAAQgL,MAAM,CAAClL,MAAf,GAAwBkL,MAAM,CAAChL,CAAC,GAAG,CAAL,CAAN,GAAgBjC,IAAxC,GAA+C,CAA5D,CAAH,GAAoEA,IAAxF;EACA,YAAIqN,KAAK,GAAGhL,QAAQ,CAACuK,OAAO,KAAKQ,GAAb,CAApB;EACAzH,QAAAA,MAAM,CAAC3C,IAAP,CAAYqK,KAAZ;EACA,YAAIA,KAAK,GAAGJ,MAAM,CAAChL,CAAD,CAAlB,EAAuBkL,UAAU,GAAG,KAAb;EAC1B;;EACD,aAAOL,GAAG,CAACvK,GAAJ,CAAQ/B,OAAO,CAAC8M,SAAR,CAAkB3H,MAAlB,EAA0B3F,IAA1B,EAAgC,KAAhC,CAAR,CAAP;EACH;;EAED,QAAIc,SAAS,GAAG,SAAZA,SAAY,CAAUyM,IAAV,EAAgBzK,IAAhB,EAAsBnC,QAAtB,EAAgCC,aAAhC,EAA+C;EAC3DD,MAAAA,QAAQ,GAAGA,QAAQ,IAAIN,gBAAvB;EACAkN,MAAAA,IAAI,GAAGtC,MAAM,CAACsC,IAAD,CAAb;;EACA,UAAI,CAAC3M,aAAL,EAAoB;EAChB2M,QAAAA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;EACA7M,QAAAA,QAAQ,GAAGA,QAAQ,CAAC6M,WAAT,EAAX;EACH;;EACD,UAAIzL,MAAM,GAAGwL,IAAI,CAACxL,MAAlB;EACA,UAAIE,CAAJ;EACA,UAAIwL,OAAO,GAAG/L,IAAI,CAAC4B,GAAL,CAASR,IAAT,CAAd;EACA,UAAI4K,cAAc,GAAG,EAArB;;EACA,WAAKzL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGtB,QAAQ,CAACoB,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;EAClCyL,QAAAA,cAAc,CAAC/M,QAAQ,CAACsB,CAAD,CAAT,CAAd,GAA8BA,CAA9B;EACH;;EACD,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,MAAhB,EAAwBE,CAAC,EAAzB,EAA6B;EACzB,YAAI4C,CAAC,GAAG0I,IAAI,CAACtL,CAAD,CAAZ;EACA,YAAI4C,CAAC,KAAK,GAAV,EAAe;;EACf,YAAIA,CAAC,IAAI6I,cAAT,EAAyB;EACrB,cAAIA,cAAc,CAAC7I,CAAD,CAAd,IAAqB4I,OAAzB,EAAkC;EAC9B,gBAAI5I,CAAC,KAAK,GAAN,IAAa4I,OAAO,KAAK,CAA7B,EAAgC;EAChC,kBAAM,IAAIzG,KAAJ,CAAUnC,CAAC,GAAG,gCAAJ,GAAuC/B,IAAvC,GAA8C,GAAxD,CAAN;EACH;EACJ;EACJ;;EACDA,MAAAA,IAAI,GAAGjC,UAAU,CAACiC,IAAD,CAAjB;EACA,UAAImK,MAAM,GAAG,EAAb;EACA,UAAInF,UAAU,GAAGyF,IAAI,CAAC,CAAD,CAAJ,KAAY,GAA7B;;EACA,WAAKtL,CAAC,GAAG6F,UAAU,GAAG,CAAH,GAAO,CAA1B,EAA6B7F,CAAC,GAAGsL,IAAI,CAACxL,MAAtC,EAA8CE,CAAC,EAA/C,EAAmD;EAC/C,YAAI4C,CAAC,GAAG0I,IAAI,CAACtL,CAAD,CAAZ;EACA,YAAI4C,CAAC,IAAI6I,cAAT,EAAyBT,MAAM,CAACjK,IAAP,CAAYnC,UAAU,CAAC6M,cAAc,CAAC7I,CAAD,CAAf,CAAtB,EAAzB,KACK,IAAIA,CAAC,KAAK,GAAV,EAAe;EAChB,cAAI8I,KAAK,GAAG1L,CAAZ;;EACA,aAAG;EAAEA,YAAAA,CAAC;EAAK,WAAX,QAAmBsL,IAAI,CAACtL,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,CAAC,GAAGsL,IAAI,CAACxL,MAA/C;;EACAkL,UAAAA,MAAM,CAACjK,IAAP,CAAYnC,UAAU,CAAC0M,IAAI,CAAC5I,KAAL,CAAWgJ,KAAK,GAAG,CAAnB,EAAsB1L,CAAtB,CAAD,CAAtB;EACH,SAJI,MAKA,MAAM,IAAI+E,KAAJ,CAAUnC,CAAC,GAAG,2BAAd,CAAN;EACR;;EACD,aAAO+I,kBAAkB,CAACX,MAAD,EAASnK,IAAT,EAAegF,UAAf,CAAzB;EACH,KAtCD;;EAwCA,aAAS8F,kBAAT,CAA4BX,MAA5B,EAAoCnK,IAApC,EAA0CgF,UAA1C,EAAsD;EAClD,UAAI+F,GAAG,GAAGrN,OAAO,CAAC,CAAD,CAAjB;EAAA,UAAsBgH,GAAG,GAAGhH,OAAO,CAAC,CAAD,CAAnC;EAAA,UAAwCyB,CAAxC;;EACA,WAAKA,CAAC,GAAGgL,MAAM,CAAClL,MAAP,GAAgB,CAAzB,EAA4BE,CAAC,IAAI,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;EACrC4L,QAAAA,GAAG,GAAGA,GAAG,CAACtL,GAAJ,CAAQ0K,MAAM,CAAChL,CAAD,CAAN,CAAUoD,KAAV,CAAgBmC,GAAhB,CAAR,CAAN;EACAA,QAAAA,GAAG,GAAGA,GAAG,CAACnC,KAAJ,CAAUvC,IAAV,CAAN;EACH;;EACD,aAAOgF,UAAU,GAAG+F,GAAG,CAACxK,MAAJ,EAAH,GAAkBwK,GAAnC;EACH;;EAED,aAASC,SAAT,CAAmBT,KAAnB,EAA0B1M,QAA1B,EAAoC;EAChCA,MAAAA,QAAQ,GAAGA,QAAQ,IAAIN,gBAAvB;;EACA,UAAIgN,KAAK,GAAG1M,QAAQ,CAACoB,MAArB,EAA6B;EACzB,eAAOpB,QAAQ,CAAC0M,KAAD,CAAf;EACH;;EACD,aAAO,MAAMA,KAAN,GAAc,GAArB;EACH;;EAED,aAASH,MAAT,CAAgBzL,CAAhB,EAAmBqB,IAAnB,EAAyB;EACrBA,MAAAA,IAAI,GAAGhD,MAAM,CAACgD,IAAD,CAAb;;EACA,UAAIA,IAAI,CAACmF,MAAL,EAAJ,EAAmB;EACf,YAAIxG,CAAC,CAACwG,MAAF,EAAJ,EAAgB,OAAO;EAAEjH,UAAAA,KAAK,EAAE,CAAC,CAAD,CAAT;EAAc8G,UAAAA,UAAU,EAAE;EAA1B,SAAP;EAChB,cAAM,IAAId,KAAJ,CAAU,2CAAV,CAAN;EACH;;EACD,UAAIlE,IAAI,CAAC0F,MAAL,CAAY,CAAC,CAAb,CAAJ,EAAqB;EACjB,YAAI/G,CAAC,CAACwG,MAAF,EAAJ,EAAgB,OAAO;EAAEjH,UAAAA,KAAK,EAAE,CAAC,CAAD,CAAT;EAAc8G,UAAAA,UAAU,EAAE;EAA1B,SAAP;EAChB,YAAIrG,CAAC,CAACqG,UAAF,EAAJ,EACI,OAAO;EACH9G,UAAAA,KAAK,EAAE,GAAGuD,MAAH,CAAUwJ,KAAV,CAAgB,EAAhB,EAAoB3L,KAAK,CAAC2L,KAAN,CAAY,IAAZ,EAAkB3L,KAAK,CAAC,CAACX,CAAC,CAACwI,UAAF,EAAF,CAAvB,EACtB+D,GADsB,CAClB5L,KAAK,CAACjB,SAAN,CAAgB8M,OADE,EACO,CAAC,CAAD,EAAI,CAAJ,CADP,CAApB,CADJ;EAIHnG,UAAAA,UAAU,EAAE;EAJT,SAAP;EAOJ,YAAIjG,GAAG,GAAGO,KAAK,CAAC2L,KAAN,CAAY,IAAZ,EAAkB3L,KAAK,CAACX,CAAC,CAACwI,UAAF,KAAiB,CAAlB,CAAvB,EACL+D,GADK,CACD5L,KAAK,CAACjB,SAAN,CAAgB8M,OADf,EACwB,CAAC,CAAD,EAAI,CAAJ,CADxB,CAAV;EAEApM,QAAAA,GAAG,CAAC8E,OAAJ,CAAY,CAAC,CAAD,CAAZ;EACA,eAAO;EACH3F,UAAAA,KAAK,EAAE,GAAGuD,MAAH,CAAUwJ,KAAV,CAAgB,EAAhB,EAAoBlM,GAApB,CADJ;EAEHiG,UAAAA,UAAU,EAAE;EAFT,SAAP;EAIH;;EAED,UAAIoG,GAAG,GAAG,KAAV;;EACA,UAAIzM,CAAC,CAACqG,UAAF,MAAkBhF,IAAI,CAACqF,UAAL,EAAtB,EAAyC;EACrC+F,QAAAA,GAAG,GAAG,IAAN;EACAzM,QAAAA,CAAC,GAAGA,CAAC,CAAC6B,GAAF,EAAJ;EACH;;EACD,UAAIR,IAAI,CAACsG,MAAL,EAAJ,EAAmB;EACf,YAAI3H,CAAC,CAACwG,MAAF,EAAJ,EAAgB,OAAO;EAAEjH,UAAAA,KAAK,EAAE,CAAC,CAAD,CAAT;EAAc8G,UAAAA,UAAU,EAAE;EAA1B,SAAP;EAEhB,eAAO;EACH9G,UAAAA,KAAK,EAAEoB,KAAK,CAAC2L,KAAN,CAAY,IAAZ,EAAkB3L,KAAK,CAACX,CAAC,CAACwI,UAAF,EAAD,CAAvB,EACF+D,GADE,CACEG,MAAM,CAAChN,SAAP,CAAiB8M,OADnB,EAC4B,CAD5B,CADJ;EAGHnG,UAAAA,UAAU,EAAEoG;EAHT,SAAP;EAKH;;EACD,UAAIE,GAAG,GAAG,EAAV;EACA,UAAIC,IAAI,GAAG5M,CAAX;EAAA,UAAc4F,MAAd;;EACA,aAAOgH,IAAI,CAACvG,UAAL,MAAqBuG,IAAI,CAACrM,UAAL,CAAgBc,IAAhB,KAAyB,CAArD,EAAwD;EACpDuE,QAAAA,MAAM,GAAGgH,IAAI,CAAChH,MAAL,CAAYvE,IAAZ,CAAT;EACAuL,QAAAA,IAAI,GAAGhH,MAAM,CAACR,QAAd;EACA,YAAIwG,KAAK,GAAGhG,MAAM,CAACvB,SAAnB;;EACA,YAAIuH,KAAK,CAACvF,UAAN,EAAJ,EAAwB;EACpBuF,UAAAA,KAAK,GAAGvK,IAAI,CAACgB,KAAL,CAAWuJ,KAAX,EAAkB/J,GAAlB,EAAR;EACA+K,UAAAA,IAAI,GAAGA,IAAI,CAAC3E,IAAL,EAAP;EACH;;EACD0E,QAAAA,GAAG,CAACpL,IAAJ,CAASqK,KAAK,CAACpD,UAAN,EAAT;EACH;;EACDmE,MAAAA,GAAG,CAACpL,IAAJ,CAASqL,IAAI,CAACpE,UAAL,EAAT;EACA,aAAO;EAAEjJ,QAAAA,KAAK,EAAEoN,GAAG,CAACxH,OAAJ,EAAT;EAAwBkB,QAAAA,UAAU,EAAEoG;EAApC,OAAP;EACH;;EAED,aAASI,YAAT,CAAsB7M,CAAtB,EAAyBqB,IAAzB,EAA+BnC,QAA/B,EAAyC;EACrC,UAAIkB,GAAG,GAAGqL,MAAM,CAACzL,CAAD,EAAIqB,IAAJ,CAAhB;EACA,aAAO,CAACjB,GAAG,CAACiG,UAAJ,GAAiB,GAAjB,GAAuB,EAAxB,IAA8BjG,GAAG,CAACb,KAAJ,CAAUgN,GAAV,CAAc,UAAU7L,CAAV,EAAa;EAC5D,eAAO2L,SAAS,CAAC3L,CAAD,EAAIxB,QAAJ,CAAhB;EACH,OAFoC,EAElC4N,IAFkC,CAE7B,EAF6B,CAArC;EAGH;;EAEDxN,IAAAA,UAAU,CAACI,SAAX,CAAqBqN,OAArB,GAA+B,UAAU9N,KAAV,EAAiB;EAC5C,aAAOwM,MAAM,CAAC,IAAD,EAAOxM,KAAP,CAAb;EACH,KAFD;;EAIAY,IAAAA,YAAY,CAACH,SAAb,CAAuBqN,OAAvB,GAAiC,UAAU9N,KAAV,EAAiB;EAC9C,aAAOwM,MAAM,CAAC,IAAD,EAAOxM,KAAP,CAAb;EACH,KAFD;;EAIAa,IAAAA,YAAY,CAACJ,SAAb,CAAuBqN,OAAvB,GAAiC,UAAU9N,KAAV,EAAiB;EAC9C,aAAOwM,MAAM,CAAC,IAAD,EAAOxM,KAAP,CAAb;EACH,KAFD;;EAIAK,IAAAA,UAAU,CAACI,SAAX,CAAqBuG,QAArB,GAAgC,UAAUhH,KAAV,EAAiBC,QAAjB,EAA2B;EACvD,UAAID,KAAK,KAAKX,WAAd,EAAyBW,KAAK,GAAG,EAAR;EACzB,UAAIA,KAAK,KAAK,EAAd,EAAkB,OAAO4N,YAAY,CAAC,IAAD,EAAO5N,KAAP,EAAcC,QAAd,CAAnB;EAClB,UAAIF,CAAC,GAAG,KAAKO,KAAb;EAAA,UAAoBmC,CAAC,GAAG1C,CAAC,CAACsB,MAA1B;EAAA,UAAkC0M,GAAG,GAAGxD,MAAM,CAACxK,CAAC,CAAC,EAAE0C,CAAH,CAAF,CAA9C;EAAA,UAAwDuL,KAAK,GAAG,SAAhE;EAAA,UAA2ErB,KAA3E;;EACA,aAAO,EAAElK,CAAF,IAAO,CAAd,EAAiB;EACbkK,QAAAA,KAAK,GAAGpC,MAAM,CAACxK,CAAC,CAAC0C,CAAD,CAAF,CAAd;EACAsL,QAAAA,GAAG,IAAIC,KAAK,CAAC/J,KAAN,CAAY0I,KAAK,CAACtL,MAAlB,IAA4BsL,KAAnC;EACH;;EACD,UAAIpM,IAAI,GAAG,KAAKA,IAAL,GAAY,GAAZ,GAAkB,EAA7B;EACA,aAAOA,IAAI,GAAGwN,GAAd;EACH,KAVD;;EAYAnN,IAAAA,YAAY,CAACH,SAAb,CAAuBuG,QAAvB,GAAkC,UAAUhH,KAAV,EAAiBC,QAAjB,EAA2B;EACzD,UAAID,KAAK,KAAKX,WAAd,EAAyBW,KAAK,GAAG,EAAR;EACzB,UAAIA,KAAK,IAAI,EAAb,EAAiB,OAAO4N,YAAY,CAAC,IAAD,EAAO5N,KAAP,EAAcC,QAAd,CAAnB;EACjB,aAAOsK,MAAM,CAAC,KAAKjK,KAAN,CAAb;EACH,KAJD;;EAMAO,IAAAA,YAAY,CAACJ,SAAb,CAAuBuG,QAAvB,GAAkCpG,YAAY,CAACH,SAAb,CAAuBuG,QAAzD;;EAEAnG,IAAAA,YAAY,CAACJ,SAAb,CAAuBwN,MAAvB,GAAgC5N,UAAU,CAACI,SAAX,CAAqBwN,MAArB,GAA8BrN,YAAY,CAACH,SAAb,CAAuBwN,MAAvB,GAAgC,YAAY;EAAE,aAAO,KAAKjH,QAAL,EAAP;EAAyB,KAArI;;EAEA3G,IAAAA,UAAU,CAACI,SAAX,CAAqB8M,OAArB,GAA+B,YAAY;EACvC,aAAOW,QAAQ,CAAC,KAAKlH,QAAL,EAAD,EAAkB,EAAlB,CAAf;EACH,KAFD;;EAGA3G,IAAAA,UAAU,CAACI,SAAX,CAAqB8I,UAArB,GAAkClJ,UAAU,CAACI,SAAX,CAAqB8M,OAAvD;;EAEA3M,IAAAA,YAAY,CAACH,SAAb,CAAuB8M,OAAvB,GAAiC,YAAY;EACzC,aAAO,KAAKjN,KAAZ;EACH,KAFD;;EAGAM,IAAAA,YAAY,CAACH,SAAb,CAAuB8I,UAAvB,GAAoC3I,YAAY,CAACH,SAAb,CAAuB8M,OAA3D;;EACA1M,IAAAA,YAAY,CAACJ,SAAb,CAAuB8M,OAAvB,GAAiC1M,YAAY,CAACJ,SAAb,CAAuB8I,UAAvB,GAAoC,YAAY;EAC7E,aAAO2E,QAAQ,CAAC,KAAKlH,QAAL,EAAD,EAAkB,EAAlB,CAAf;EACH,KAFD;;EAIA,aAASmH,gBAAT,CAA0BpO,CAA1B,EAA6B;EACzB,UAAIe,SAAS,CAAC,CAACf,CAAF,CAAb,EAAmB;EACf,YAAI0B,CAAC,GAAG,CAAC1B,CAAT;EACA,YAAI0B,CAAC,KAAKE,QAAQ,CAACF,CAAD,CAAlB,EACI,OAAO7B,oBAAoB,GAAG,IAAIiB,YAAJ,CAAiBhB,MAAM,CAAC4B,CAAD,CAAvB,CAAH,GAAiC,IAAIb,YAAJ,CAAiBa,CAAjB,CAA5D;EACJ,cAAM,IAAI6E,KAAJ,CAAU,sBAAsBvG,CAAhC,CAAN;EACH;;EACD,UAAIQ,IAAI,GAAGR,CAAC,CAAC,CAAD,CAAD,KAAS,GAApB;EACA,UAAIQ,IAAJ,EAAUR,CAAC,GAAGA,CAAC,CAACkE,KAAF,CAAQ,CAAR,CAAJ;EACV,UAAImK,KAAK,GAAGrO,CAAC,CAACqO,KAAF,CAAQ,IAAR,CAAZ;EACA,UAAIA,KAAK,CAAC/M,MAAN,GAAe,CAAnB,EAAsB,MAAM,IAAIiF,KAAJ,CAAU,sBAAsB8H,KAAK,CAACP,IAAN,CAAW,GAAX,CAAhC,CAAN;;EACtB,UAAIO,KAAK,CAAC/M,MAAN,KAAiB,CAArB,EAAwB;EACpB,YAAIiG,GAAG,GAAG8G,KAAK,CAAC,CAAD,CAAf;EACA,YAAI9G,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoBA,GAAG,GAAGA,GAAG,CAACrD,KAAJ,CAAU,CAAV,CAAN;EACpBqD,QAAAA,GAAG,GAAG,CAACA,GAAP;EACA,YAAIA,GAAG,KAAK3F,QAAQ,CAAC2F,GAAD,CAAhB,IAAyB,CAACxG,SAAS,CAACwG,GAAD,CAAvC,EAA8C,MAAM,IAAIhB,KAAJ,CAAU,sBAAsBgB,GAAtB,GAA4B,2BAAtC,CAAN;EAC9C,YAAIuF,IAAI,GAAGuB,KAAK,CAAC,CAAD,CAAhB;EACA,YAAIC,YAAY,GAAGxB,IAAI,CAACyB,OAAL,CAAa,GAAb,CAAnB;;EACA,YAAID,YAAY,IAAI,CAApB,EAAuB;EACnB/G,UAAAA,GAAG,IAAIuF,IAAI,CAACxL,MAAL,GAAcgN,YAAd,GAA6B,CAApC;EACAxB,UAAAA,IAAI,GAAGA,IAAI,CAAC5I,KAAL,CAAW,CAAX,EAAcoK,YAAd,IAA8BxB,IAAI,CAAC5I,KAAL,CAAWoK,YAAY,GAAG,CAA1B,CAArC;EACH;;EACD,YAAI/G,GAAG,GAAG,CAAV,EAAa,MAAM,IAAIhB,KAAJ,CAAU,oDAAV,CAAN;EACbuG,QAAAA,IAAI,IAAK,IAAInL,KAAJ,CAAU4F,GAAG,GAAG,CAAhB,CAAD,CAAqBuG,IAArB,CAA0B,GAA1B,CAAR;EACA9N,QAAAA,CAAC,GAAG8M,IAAJ;EACH;;EACD,UAAI0B,OAAO,GAAG,kBAAkBC,IAAlB,CAAuBzO,CAAvB,CAAd;EACA,UAAI,CAACwO,OAAL,EAAc,MAAM,IAAIjI,KAAJ,CAAU,sBAAsBvG,CAAhC,CAAN;;EACd,UAAIH,oBAAJ,EAA0B;EACtB,eAAO,IAAIiB,YAAJ,CAAiBhB,MAAM,CAACU,IAAI,GAAG,MAAMR,CAAT,GAAaA,CAAlB,CAAvB,CAAP;EACH;;EACD,UAAImC,CAAC,GAAG,EAAR;EAAA,UAAY8B,GAAG,GAAGjE,CAAC,CAACsB,MAApB;EAAA,UAA4BoB,CAAC,GAAGlD,QAAhC;EAAA,UAA0CwM,GAAG,GAAG/H,GAAG,GAAGvB,CAAtD;;EACA,aAAOuB,GAAG,GAAG,CAAb,EAAgB;EACZ9B,QAAAA,CAAC,CAACI,IAAF,CAAO,CAACvC,CAAC,CAACkE,KAAF,CAAQ8H,GAAR,EAAa/H,GAAb,CAAR;EACA+H,QAAAA,GAAG,IAAItJ,CAAP;EACA,YAAIsJ,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,CAAN;EACb/H,QAAAA,GAAG,IAAIvB,CAAP;EACH;;EACDrB,MAAAA,IAAI,CAACc,CAAD,CAAJ;EACA,aAAO,IAAI7B,UAAJ,CAAe6B,CAAf,EAAkB3B,IAAlB,CAAP;EACH;;EAED,aAASkO,gBAAT,CAA0B1O,CAA1B,EAA6B;EACzB,UAAIH,oBAAJ,EAA0B;EACtB,eAAO,IAAIiB,YAAJ,CAAiBhB,MAAM,CAACE,CAAD,CAAvB,CAAP;EACH;;EACD,UAAIe,SAAS,CAACf,CAAD,CAAb,EAAkB;EACd,YAAIA,CAAC,KAAK4B,QAAQ,CAAC5B,CAAD,CAAlB,EAAuB,MAAM,IAAIuG,KAAJ,CAAUvG,CAAC,GAAG,qBAAd,CAAN;EACvB,eAAO,IAAIa,YAAJ,CAAiBb,CAAjB,CAAP;EACH;;EACD,aAAOoO,gBAAgB,CAACpO,CAAC,CAACiH,QAAF,EAAD,CAAvB;EACH;;EAED,aAAS7G,UAAT,CAAoBJ,CAApB,EAAuB;EACnB,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;EACvB,eAAO0O,gBAAgB,CAAC1O,CAAD,CAAvB;EACH;;EACD,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;EACvB,eAAOoO,gBAAgB,CAACpO,CAAD,CAAvB;EACH;;EACD,UAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;EACvB,eAAO,IAAIc,YAAJ,CAAiBd,CAAjB,CAAP;EACH;;EACD,aAAOA,CAAP;EACH,KA14C8B;;;EA44C/B,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAApB,EAA0BA,CAAC,EAA3B,EAA+B;EAC3BzB,MAAAA,OAAO,CAACyB,CAAD,CAAP,GAAapB,UAAU,CAACoB,CAAD,CAAvB;EACA,UAAIA,CAAC,GAAG,CAAR,EAAWzB,OAAO,CAAC,CAACyB,CAAF,CAAP,GAAcpB,UAAU,CAAC,CAACoB,CAAF,CAAxB;EACd,KA/4C8B;;;EAi5C/BzB,IAAAA,OAAO,CAACiK,GAAR,GAAcjK,OAAO,CAAC,CAAD,CAArB;EACAA,IAAAA,OAAO,CAAC+J,IAAR,GAAe/J,OAAO,CAAC,CAAD,CAAtB;EACAA,IAAAA,OAAO,CAAC4O,QAAR,GAAmB5O,OAAO,CAAC,CAAC,CAAF,CAA1B;EACAA,IAAAA,OAAO,CAACkE,GAAR,GAAcA,GAAd;EACAlE,IAAAA,OAAO,CAACiM,GAAR,GAAcA,GAAd;EACAjM,IAAAA,OAAO,CAACkM,GAAR,GAAcA,GAAd;EACAlM,IAAAA,OAAO,CAACmM,GAAR,GAAcA,GAAd;;EACAnM,IAAAA,OAAO,CAAC6O,UAAR,GAAqB,UAAUlN,CAAV,EAAa;EAAE,aAAOA,CAAC,YAAYpB,UAAb,IAA2BoB,CAAC,YAAYb,YAAxC,IAAwDa,CAAC,YAAYZ,YAA5E;EAA2F,KAA/H;;EACAf,IAAAA,OAAO,CAAC8J,WAAR,GAAsBA,WAAtB;;EAEA9J,IAAAA,OAAO,CAAC8M,SAAR,GAAoB,UAAUL,MAAV,EAAkBnK,IAAlB,EAAwBgF,UAAxB,EAAoC;EACpD,aAAO8F,kBAAkB,CAACX,MAAM,CAACe,GAAP,CAAWnN,UAAX,CAAD,EAAyBA,UAAU,CAACiC,IAAI,IAAI,EAAT,CAAnC,EAAiDgF,UAAjD,CAAzB;EACH,KAFD;;EAIA,WAAOtH,OAAP;EACH,GAh6CY,EAAb;;;EAm6CA,MAAqC8O,MAAM,CAACC,cAAP,CAAsB,SAAtB,CAArC,EAAuE;EACnED,IAAAA,cAAA,GAAiBxP,MAAjB;EACH;;;;;EC/3CD,IAAM,UAAU,GAE4B,EAF5C;;EASA,IAAM,2BAA2B,uBAK9B,mBAL8B,4BAKT,KALS,EAKF,OALE,EAKK;EAClC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAR,WAAmB,KAAK,MAAM,CAAC,WAAZ,CAAnB,eAAgD,IAAhD,QAAyD,SAAzD,CAAd;EACA,MAAI,KAAK,GAAG,CAAZ,EAAe,OAAO,KAAP;EACf,MAAM,OAAO,GAAG,EAAhB;;EACA,0BAAmB,CACjB,OADiB,EAEjB,QAFiB,EAGjB,OAHiB,EAIjB,MAJiB,EAKjB,OALiB,EAMjB,SANiB,EAOjB,SAPiB,EAQjB,cARiB,EASjB,cATiB,EAUjB,aAViB,CAAnB,0BAWY;EAXP,QAAM,IAAI,WAAV;EAYH,QAAI,KAAK,IAAL,MAAe,CAAnB,EAAsB,OAAO,CAAC,IAAR,aAAkB,IAAlB,eAA2B,OAAO,CAAC,OAAR,CAAgB,KAAK,IAAL,CAAhB,EAA4B,QAA5B,CAA3B;EACvB;;EACD,SAAO,KAAK,GAAG,MAAR,GAAiB,OAAO,CAAC,IAAR,CAAa,KAAb,CAAjB,GAAuC,KAA9C;EACD,CAxB8B,CAAjC;;EA4BA,SAAS,2BAAT,CAAgD,KAAhD,EAA+D,OAA/D,EAA+F;EAC7F,SAAO,OAAO,CAAC,OAAR,WAAmB,KAAK,MAAM,CAAC,WAAZ,CAAnB,eAAgD,IAAhD,QAAyD,SAAzD,CAAP;EACD;;EAEK,SAAU,kBAAV,CACJ,KADI,EAEJ,IAFI,EAEsC;EAE1C,EAAA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,MAAM,CAAC,WAA9C,EAA2D;EACzD,IAAA,KAAK,EAAE,IADkD;EAEzD,IAAA,QAAQ,EAAE,KAF+C;EAGzD,IAAA,UAAU,EAAE,KAH6C;EAIzD,IAAA,YAAY,EAAE;EAJ2C,GAA3D;;EAMA,EAAW;EACT,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,MAAM,CAAC,GAAP,CAAW,4BAAX,CAAvC,EAAiF;EAC/E,MAAA,KAAK,EAAE,2BAA2B,CAAC,IAAD,CAA3B,IAAqC,2BADmC;EAE/E,MAAA,QAAQ,EAAE,KAFqE;EAG/E,MAAA,UAAU,EAAE,KAHmE;EAI/E,MAAA,YAAY,EAAE;EAJiE,KAAjF;EAMD;;EAfyC,6CAgBvB,MAAM,CAAC,mBAAP,CAA2B,KAA3B,CAhBuB;EAAA;;EAAA;EAgB1C,wDAAsD;EAAA,UAA3C,IAA2C;EACpD,UAAM,IAAI,GAAG,MAAM,CAAC,wBAAP,CAAgC,KAAhC,EAAuC,IAAvC,CAAb;EACA,UAAI,CAAC,IAAI,CAAC,YAAN,IAAsB,CAAC,IAAI,CAAC,UAAhC,EAA4C;EAC5C,MAAA,IAAI,CAAC,UAAL,GAAkB,KAAlB;EACA,MAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC,IAAnC;EACD;EArByC;EAAA;EAAA;EAAA;EAAA;;EAAA,8CAsBvB,MAAM,CAAC,mBAAP,CAA2B,KAAK,CAAC,SAAjC,CAtBuB;EAAA;;EAAA;EAsB1C,2DAAgE;EAAA,UAArD,KAAqD;;EAC9D,UAAM,KAAI,GAAG,MAAM,CAAC,wBAAP,CAAgC,KAAK,CAAC,SAAtC,EAAiD,KAAjD,CAAb;;EACA,UAAI,CAAC,KAAI,CAAC,YAAN,IAAsB,CAAC,KAAI,CAAC,UAAhC,EAA4C;EAC5C,MAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;EACA,MAAA,MAAM,CAAC,cAAP,CAAsB,KAAK,CAAC,SAA5B,EAAuC,KAAvC,EAA6C,KAA7C;EACD;EA3ByC;EAAA;EAAA;EAAA;EAAA;;EA6B1C,EAAA,eAAe,CAAC,IAAD,EAAO,KAAP,CAAf;EACA,EAAA,eAAe,WAAI,IAAJ,iBAAsB,KAAK,CAAC,SAA5B,CAAf;EACD;EAmBK,SAAU,eAAV,CAAgE,IAAhE,EAA4E,KAA5E,EAA0F;EAC9F,MAAM,GAAG,cAAuC,IAAvC,MAAT;EACA,MAAI,UAAU,CAAC,GAAD,CAAV,KAAoB,SAAxB,EAAmC,MAAM,IAAI,KAAJ,qBAAuB,IAAvB,qBAAN;EACnC,EAAA,UAAU,CAAC,GAAD,CAAV,GAAkB,KAAlB;EACD;EACK,SAAU,YAAV,CAA6D,SAA7D,EAA4E;EAChF,SAAO,UAAU,CAAC,SAAD,CAAjB;EACD;;ECtID;EACO,IAAM,gBAAgB,GAAG,uBAAzB;;EAGA,IAAM,WAAW,GAAG,0BAApB;;EAGA,IAAM,QAAQ,GAAG,WAAjB;EACA,IAAM,SAAS,GAAG,YAAlB;EACA,IAAM,OAAO,GAAG,UAAhB;EACA,IAAM,QAAQ,GAAG,WAAjB;EACA,IAAM,UAAU,GAAG,aAAnB;EACA,IAAM,UAAU,GAAG,aAAnB;EACA,IAAM,eAAe,GAAG,kBAAxB;EACA,IAAM,eAAe,GAAG,kBAAxB;EACA,IAAM,cAAc,GAAG,iBAAvB;EACA,IAAM,QAAQ,GAAG,eAAjB;;EAEA,IAAM,UAAU,GAAG,iBAAnB;EACA,IAAM,gBAAgB,GAAG,uBAAzB;EACA,IAAM,eAAe,GAAG,sBAAxB;;EAGA,IAAM,OAAO,GAAG,qBAAhB;EACA,IAAM,SAAS,GAAG,gBAAlB;;EAGA,IAAM,KAAK,GAAG,YAAd;EACA,IAAM,MAAM,GAAG,aAAf;EACA,IAAM,KAAK,GAAG,YAAd;EACA,IAAM,IAAI,GAAG,WAAb;EACA,IAAM,KAAK,GAAG,YAAd;EACA,IAAM,OAAO,GAAG,cAAhB;EACA,IAAM,OAAO,GAAG,cAAhB;EACA,IAAM,YAAY,GAAG,mBAArB;EACA,IAAM,YAAY,GAAG,mBAArB;EACA,IAAM,WAAW,GAAG,kBAApB;;EAGA,IAAM,WAAW,GAAG,0BAApB;EA6GP,IAAM,KAAK,GAAG,IAAI,OAAJ,EAAd;EACM,SAAU,WAAV,CAAsB,SAAtB,EAAgD;EACpD,EAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,MAAM,CAAC,MAAP,CAAc,IAAd,CAArB;EACD;;EAED,SAAS,QAAT,CAA6C,SAA7C,EAAyD;EACvD,SAAO,KAAK,CAAC,GAAN,CAAU,SAAV,CAAP;EACD;;EAgHK,SAAU,OAAV,CAAkB,SAAlB,EAA6D;EACjE,MAAI,CAAC,SAAD,IAAc,qBAAoB,SAApB,CAAlB,EAAiD,OAAO,KAAP;EACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAD,CAAxB;;EAFiE,oCAApB,GAAoB;EAApB,IAAA,GAAoB;EAAA;;EAGjE,SAAO,CAAC,CAAC,OAAF,IAAa,GAAG,CAAC,MAAJ,CAAW,UAAC,GAAD,EAAe,EAAf;EAAA,WAAsB,GAAG,IAAI,EAAE,IAAI,OAAnC;EAAA,GAAX,EAAuD,IAAvD,CAApB;EACD;EACK,SAAU,OAAV,CACJ,SADI,EAEJ,EAFI,EAEI;EAER,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,CAAd;EACA,MAAI,KAAK,KAAK,SAAd,EAAyB,MAAM,IAAI,SAAJ,iCAAuC,EAAvC,EAAN;EACzB,SAAO,KAAP;EACD;EACK,SAAU,OAAV,CACJ,SADI,EAEJ,EAFI,EAGJ,KAHI,EAGuB;EAE3B,EAAA,QAAQ,CAAC,SAAD,CAAR,CAAoB,EAApB,IAA0B,KAA1B;EACD;;;ECnQD,IAAM,aAAa,GAAG,KAAK,CAAC,SAAN,CAAgB,QAAtC;EACA,IAAM0P,oBAAkB,GAAG,KAAK,CAAC,SAAN,CAAgB,IAA3C;EACA,IAAMC,oBAAkB,GAAG,UAAU,CAAC,IAAX,CAAgB,cAA3C;EACA,IAAMC,SAAO,GAAG,IAAI,CAAC,GAArB;EACA,IAAMC,WAAS,GAAG,IAAI,CAAC,KAAvB;EACA,IAAMC,cAAY,GAAG,MAAM,CAAC,MAA5B;EACA,IAAM,aAAa,GAAG,MAAM,CAAC,OAA7B;EACA,IAAM,UAAU,GAAG,MAAM,CAAC,IAA1B;EACA,IAAMC,cAAY,GAAG,OAAO,CAAC,KAA7B;EAoDA,IAAM,IAAI,GAAG,EAAb;MAEa,QAAb;EACE,oBAAY,OAAZ,EAA6C;EAAA;;EAC3C;EACA;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,kCAAf,CAAN;EACD;;EAED,QAAM,EAAE,GAAGC,QAAA,CAAY,OAAZ,CAAX;EACA,QAAI,CAAC,iBAAiB,CAAC,EAAD,CAAtB,EAA4B,MAAM,IAAI,UAAJ,uCAA8C,EAA9C,EAAN;EAC5B,IAAA,WAAW,CAAC,IAAD,CAAX;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,WAAP,EAAoB,EAApB,CAAP;;EAEA,IAAW;EACT,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpC,QAAA,KAAK,YAAK,KAAK,MAAM,CAAC,WAAZ,CAAL,eAAkC,EAAlC,MAD+B;EAEpC,QAAA,QAAQ,EAAE,KAF0B;EAGpC,QAAA,UAAU,EAAE,KAHwB;EAIpC,QAAA,YAAY,EAAE;EAJsB,OAAtC;EAMD;EACF;;EArBH;EAAA;EAAA,SAsBE,eAAM;EACJ,aAAOA,QAAA,CAAY,IAAZ,CAAP;EACD;EAxBH;EAAA;EAAA,WAyBE,wBACE,MADF,EAEuD;EAAA,UAArD,YAAqD,uEAAT,SAAS;EAErD,UAAI,CAACC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACC,QAAA,CAAY,MAAZ,CAAL,EAA0B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC1B,UAAM,OAAO,GAAGC,gBAAA,CAAoB,YAApB,CAAhB;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,cAAjC,CAAgD,MAAhD,EAAwD,OAAxD,EAAiE,IAAjE,CAAP;EACD;EAjCH;EAAA;EAAA,WAkCE,6BACE,MADF,EAE4D;EAAA,UAA1D,YAA0D,uEAAT,SAAS;EAE1D,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACC,QAAA,CAAY,MAAZ,CAAL,EAA0B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC1B,UAAM,OAAO,GAAGC,gBAAA,CAAoB,YAApB,CAAhB;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,mBAAjC,CAAqD,MAArD,EAA6D,OAA7D,EAAsE,IAAtE,CAAP;EACD;EA1CH;EAAA;EAAA,WA2CE,4BACE,MADF,EAE2D;EAAA,UAAzD,YAAyD,uEAAT,SAAS;EAEzD,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACC,QAAA,CAAY,MAAZ,CAAL,EAA0B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC1B,UAAM,OAAO,GAAGC,gBAAA,CAAoB,YAApB,CAAhB;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,kBAAjC,CAAoD,MAApD,EAA4D,OAA5D,EAAqE,IAArE,CAAP;EACD;EAnDH;EAAA;EAAA,WAoDE,gBAAO,OAAP,EAAkC;EAChC,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,WAAW,GAAG,EAApB;EACA,UAAM,OAAO,GAAG,IAAI,GAAJ,CAAQ,CACtB,MADsB,EAEtB,OAFsB,EAGtB,WAHsB,EAItB,KAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,aARsB,EAStB,aATsB,EAUtB,YAVsB,CAAR,CAAhB;;EAHgC,iDAeb,OAfa;EAAA;;EAAA;EAehC,4DAA2B;EAAA,cAAhB,IAAgB;EACzB,cAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC9B,cAAI,CAAC,OAAO,CAAC,GAAR,CAAY,IAAZ,CAAL,EAAwB,MAAM,IAAI,UAAJ,8BAAqC,IAArC,EAAN;EACxB,UAAA,OAAO,CAAC,MAAR,CAAe,IAAf;EACA,UAAAP,oBAAkB,CAAC,IAAnB,CAAwB,WAAxB,EAAqC,IAArC;EACD;EApB+B;EAAA;EAAA;EAAA;EAAA;;EAqBhC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,MAAjC,CAAwC,WAAxC,CAAP;EACD;EA1EH;EAAA;EAAA,WA2EE,qBAAY,MAAZ,EAA8C,gBAA9C,EAAwF;EACtF,UAAI,CAACO,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,WAAjC,CAA6C,MAA7C,EAAqD,gBAArD,CAAP;EACD;EA9EH;EAAA;EAAA,WA+EE,iBACE,SADF,EAEE,aAFF,EAGgD;EAAA,UAA9C,YAA8C,uEAAT,SAAS;EAE9C,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAGG,cAAA,CAAkB,SAAlB,CAAb;EACA,UAAM,QAAQ,GAAGC,kBAAA,CAAsB,aAAtB,CAAjB;EACA,UAAM,OAAO,GAAGF,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAGG,kBAAA,CAAsB,OAAtB,CAAjB;;EACA,gCAAiBC,eAAA,CACf,OAAO,CAAC,QAAD,EAAW,IAAX,CADQ,EAEf,OAAO,CAAC,QAAD,EAAW,KAAX,CAFQ,EAGf,OAAO,CAAC,QAAD,EAAW,OAAX,CAHQ,EAIf,OAAO,CAAC,QAAD,EAAW,OAAX,CAJQ,EAKf,OAAO,CAAC,QAAD,EAAW,YAAX,CALQ,EAMf,OAAO,CAAC,QAAD,EAAW,YAAX,CANQ,EAOf,OAAO,CAAC,QAAD,EAAW,WAAX,CAPQ,EAQf,KARe,CAAjB;EAAA,UAAQ,IAAR,uBAAQ,IAAR;;EAUA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,OAAjC,CACL,IADK,EAEL,OAAO,CAAC,QAAD,EAAW,KAAX,CAFF,EAGL,OAAO,CAAC,QAAD,EAAW,MAAX,CAHF,EAIL,OAAO,CAAC,QAAD,EAAW,KAAX,CAJF,EAKL,IALK,EAML,QANK,EAOL,IAPK,CAAP;EASD;EA5GH;EAAA;EAAA,WA6GE,mBACE,QADF,EAEE,QAFF,EAGkD;EAAA,UAAhD,YAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACN,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,GAAG,GAAGG,cAAA,CAAkB,QAAlB,CAAZ;EACA,UAAM,GAAG,GAAGA,cAAA,CAAkB,QAAlB,CAAZ;EACA,UAAM,OAAO,GAAGD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,WAAW,GAAGK,qBAAA,CAClB,OADkB,EAElB,MAFkB,EAGlB,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,aAA7B,EAA4C,aAA5C,EAA2D,YAA3D,CAHkB,EAIlB,KAJkB,CAApB;;EAMA,kCAAuC,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,SAAjC,CAA2C,GAA3C,EAAgD,GAAhD,EAAqD,WAArD,CAAvC;EAAA,UAAQ,KAAR,yBAAQ,KAAR;EAAA,UAAe,MAAf,yBAAe,MAAf;EAAA,UAAuB,KAAvB,yBAAuB,KAAvB;EAAA,UAA8B,IAA9B,yBAA8B,IAA9B;;EACA,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,CAAP;EACD;EA/HH;EAAA;EAAA,WAgIE,cAAK,SAAL,EAAiC;EAC/B,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACP,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP;EACnC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,IAAjC,CAAsC,IAAtC,CAAP;EACD;EArIH;EAAA;EAAA,WAsIE,eAAM,SAAN,EAAmC;EACjC,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAIS,kBAAA,CAAsB,IAAtB,CAAJ,EAAiC,MAAM,IAAI,SAAJ,CAAc,wCAAd,CAAN;EACjC,UAAI,CAACD,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP;EACnC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,KAAjC,CAAuC,IAAvC,CAAP;EACD;EA5IH;EAAA;EAAA,WA6IE,mBAAU,SAAV,EAA2C;EACzC,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAD,IAAiC,CAACC,kBAAA,CAAsB,IAAtB,CAAtC,EAAmE,IAAI,GAAGN,cAAA,CAAkB,IAAlB,CAAP;EACnE,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,SAAjC,CAA2C,IAA3C,CAAP;EACD;EAlJH;EAAA;EAAA,WAmJE,aAAI,SAAJ,EAA+B;EAC7B,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACS,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,IAAI,GAAGN,cAAA,CAAkB,IAAlB,CAAP;EAClC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,GAAjC,CAAqC,IAArC,CAAP;EACD;EAxJH;EAAA;EAAA,WAyJE,aAAI,SAAJ,EAA+B;EAC7B,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP;EACnC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,GAAjC,CAAqC,IAArC,CAAP;EACD;EA9JH;EAAA;EAAA,WA+JE,iBAAQ,SAAR,EAAuC;EACrC,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP;EACnC,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,OAAjC,CAAyC,IAAzC,CAAP;EACD;EApKH;EAAA;EAAA,WAqKE,mBAAU,SAAV,EAA2C;EACzC,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAGG,cAAA,CAAkB,SAAlB,CAAb;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,SAAjC,CAA2C,IAA3C,CAAP;EACD;EAzKH;EAAA;EAAA,WA0KE,mBAAU,SAAV,EAA2C;EACzC,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAGG,cAAA,CAAkB,SAAlB,CAAb;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,SAAjC,CAA2C,IAA3C,CAAP;EACD;EA9KH;EAAA;EAAA,WA+KE,oBAAW,SAAX,EAA6C;EAC3C,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAGG,cAAA,CAAkB,SAAlB,CAAb;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,UAAjC,CAA4C,IAA5C,CAAP;EACD;EAnLH;EAAA;EAAA,WAoLE,oBAAW,SAAX,EAA6C;EAC3C,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAGG,cAAA,CAAkB,SAAlB,CAAb;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,UAAjC,CAA4C,IAA5C,CAAP;EACD;EAxLH;EAAA;EAAA,WAyLE,qBAAY,SAAZ,EAA+C;EAC7C,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP,CAHU;EAK7C;;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,WAAjC,CAA6C,IAA7C,CAAP;EACD;EAhMH;EAAA;EAAA,WAiME,oBAAW,SAAX,EAA6C;EAC3C,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP,CAHQ;EAK3C;;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,UAAjC,CAA4C,IAA5C,CAAP;EACD;EAxMH;EAAA;EAAA,WAyME,sBAAa,SAAb,EAAiD;EAC/C,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP,CAHY;EAK/C;;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,YAAjC,CAA8C,IAA9C,CAAP;EACD;EAhNH;EAAA;EAAA,WAiNE,oBAAW,SAAX,EAA6C;EAC3C,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACQ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,IAAI,GAAGL,cAAA,CAAkB,IAAlB,CAAP,CAHQ;EAK3C;;EACA,aAAO,IAAI,CAAC,OAAO,CAAC,IAAD,EAAO,WAAP,CAAR,CAAJ,CAAiC,UAAjC,CAA4C,IAA5C,CAAP;EACD;EAxNH;EAAA;EAAA,WAyNE,oBAAQ;EACN,UAAI,CAACH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,WAAP,CAAd;EACD;EA5NH;EAAA;EAAA,WA6NE,kBAAM;EACJ,aAAOD,QAAA,CAAY,IAAZ,CAAP;EACD;EA/NH;EAAA;EAAA,WAgOE,cAAY,IAAZ,EAAmC;EACjC,aAAOW,kBAAA,CAAsB,IAAtB,CAAP;EACD;EAlOH;;EAAA;EAAA;EAsOA,kBAAkB,CAAC,QAAD,EAAW,mBAAX,CAAlB;EACA,eAAe,CAAC,wBAAD,EAA2B,QAAQ,CAAC,IAApC,CAAf;EAEA,IAAI,CAAC,SAAD,CAAJ,GAAkB;EAChB,EAAA,cADgB,0BACD,WADC,EACY,OADZ,EACqB,QADrB,EAC6B;EAC3C,QAAM,QAAQ,GAAGL,kBAAA,CAAsB,OAAtB,CAAjB;EACA,QAAI,MAAM,GAAGM,qBAAA,CAAyB,WAAzB,EAAkF,CAC7F,CAAC,KAAD,CAD6F,EAE7F,CAAC,OAAD,EAAU,SAAV,CAF6F,EAG7F,CAAC,WAAD,EAAc,SAAd,CAH6F,EAI7F,CAAC,MAAD,CAJ6F,CAAlF,CAAb;EAMA,IAAA,MAAM,GAAG,wBAAwB,CAAC,MAAD,CAAjC;EACA,mBAA2B,MAA3B;EAAA,QAAM,IAAN,YAAM,IAAN;EAAA,QAAY,KAAZ,YAAY,KAAZ;EAAA,QAAmB,GAAnB,YAAmB,GAAnB;;EAT2C,8BAUnBC,eAAA,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,GAAhC,EAAqC,QAArC,CAVmB;;EAUxC,IAAA,IAVwC,uBAUxC,IAVwC;EAUlC,IAAA,KAVkC,uBAUlC,KAVkC;EAU3B,IAAA,GAV2B,uBAU3B,GAV2B;EAW3C,WAAOC,kBAAA,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,QAAxC,CAAP;EACD,GAbe;EAchB,EAAA,mBAdgB,+BAcI,WAdJ,EAciB,OAdjB,EAc0B,QAd1B,EAckC;EAChD,QAAM,QAAQ,GAAGR,kBAAA,CAAsB,OAAtB,CAAjB;EACA,QAAI,MAAM,GAAGM,qBAAA,CAAyB,WAAzB,EAAuF,CAClG,CAAC,OAAD,EAAU,SAAV,CADkG,EAElG,CAAC,WAAD,EAAc,SAAd,CAFkG,EAGlG,CAAC,MAAD,CAHkG,CAAvF,CAAb;EAKA,IAAA,MAAM,GAAG,wBAAwB,CAAC,MAAD,CAAjC;EACA,mBAAsB,MAAtB;EAAA,QAAM,IAAN,YAAM,IAAN;EAAA,QAAY,KAAZ,YAAY,KAAZ;;EARgD,gCAS7BG,oBAAA,CAAwB,IAAxB,EAA8B,KAA9B,EAAqC,QAArC,CAT6B;;EAS7C,IAAA,IAT6C,yBAS7C,IAT6C;EASvC,IAAA,KATuC,yBASvC,KATuC;EAUhD,WAAOC,uBAAA,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,QAAxC;EAAkD;EAAwB,KAA1E,CAAP;EACD,GAzBe;EA0BhB,EAAA,kBA1BgB,8BA0BG,WA1BH,EA0BgB,OA1BhB,EA0ByB,QA1BzB,EA0BiC;EAC/C,QAAM,QAAQ,GAAGV,kBAAA,CAAsB,OAAtB,CAAjB;EACA,QAAI,MAAM,GAAGM,qBAAA,CAAyB,WAAzB,EAAsF,CACjG,CAAC,KAAD,CADiG,EAEjG,CAAC,OAAD,EAAU,SAAV,CAFiG,EAGjG,CAAC,WAAD,EAAc,SAAd,CAHiG,EAIjG,CAAC,MAAD,EAAS,SAAT,CAJiG,CAAtF,CAAb;;EAMA,QAAI,MAAM,CAAC,KAAP,KAAiB,SAAjB,IAA8B,MAAM,CAAC,IAAP,KAAgB,SAA9C,IAA2D,MAAM,CAAC,SAAP,KAAqB,SAApF,EAA+F;EAC7F,YAAM,IAAI,SAAJ,CAAc,8CAAd,CAAN;EACD;;EACD,QAAM,OAAO,GAAG,MAAM,CAAC,SAAP,KAAqB,SAArC;EACA,QAAM,gBAAgB,GAAG,IAAzB;EACA,IAAA,MAAM,GAAG,wBAAwB,CAAC,MAAD,CAAjC;EACA,mBAA2B,MAA3B;EAAA,QAAM,KAAN,YAAM,KAAN;EAAA,QAAa,GAAb,YAAa,GAAb;EAAA,QAAkB,IAAlB,YAAkB,IAAlB;;EAd+C,+BAe7BC,eAAA,CAAmB,OAAO,GAAG,IAAH,GAAU,gBAApC,EAAsD,KAAtD,EAA6D,GAA7D,EAAkE,QAAlE,CAf6B;;EAe5C,IAAA,KAf4C,wBAe5C,KAf4C;EAerC,IAAA,GAfqC,wBAerC,GAfqC;EAgB/C,WAAOI,sBAAA,CAA0B,KAA1B,EAAiC,GAAjC,EAAsC,QAAtC,EAAgD,gBAAhD,CAAP;EACD,GA3Ce;EA4ChB,EAAA,MA5CgB,kBA4CT,QA5CS,EA4CH;EACX,WAAO,QAAP;EACD,GA9Ce;EA+ChB,EAAA,WA/CgB,uBA+CJ,MA/CI,EA+CI,gBA/CJ,EA+CoB;EAClC,QAAM,MAAM,GAAkB,EAA9B;;EADkC,gDAEZ,UAAU,CAAC,MAAD,CAFE;EAAA;;EAAA;EAElC,6DAA0C;EAAA,YAA/B,OAA+B;EACxC,YAAI,OAAO,KAAK,OAAZ,IAAuB,OAAO,KAAK,WAAvC,EAAoD;EACpD,QAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,MAAM,CAAC,OAAD,CAAxB;EACD;EALiC;EAAA;EAAA;EAAA;EAAA;;EAMlC,QAAM,OAAO,GAAG,UAAU,CAAC,gBAAD,CAA1B;;EANkC,gDAOZ,OAPY;EAAA;;EAAA;EAOlC,6DAA+B;EAAA,YAApB,QAAoB;EAC7B,QAAA,MAAM,CAAC,QAAD,CAAN,GAAkB,gBAAgB,CAAC,QAAD,CAAlC;EACD;EATiC;EAAA;EAAA;EAAA;EAAA;;EAUlC,QAAI,CAAC,aAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,OAA5B,CAAD,IAAyC,CAAC,aAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,WAA5B,CAA9C,EAAwF;EACtF,UAAQ,KAAR,GAA6B,MAA7B,CAAQ,KAAR;EAAA,UAAe,SAAf,GAA6B,MAA7B,CAAe,SAAf;EACA,UAAI,KAAK,KAAK,SAAd,EAAyB,MAAM,CAAC,KAAP,GAAe,KAAf;EACzB,UAAI,SAAS,KAAK,SAAlB,EAA6B,MAAM,CAAC,SAAP,GAAmB,SAAnB;EAC9B;;EACD,WAAO,MAAP;EACD,GA/De;EAgEhB,EAAA,OAhEgB,mBAgER,IAhEQ,EAgEF,KAhEE,EAgEK,MAhEL,EAgEa,KAhEb,EAgEoB,IAhEpB,EAgE0B,QAhE1B,EAgEoC,QAhEpC,EAgE4C;EAC1D,QAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,QAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAnB;EACA,QAAI,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAjB;;EAH0D,yBAIlCC,UAAA,CAAc,IAAd,EAAoB,KAApB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,MAAvC,EAA+C,KAA/C,EAAsD,IAAtD,EAA4D,QAA5D,CAJkC;;EAIvD,IAAA,IAJuD,kBAIvD,IAJuD;EAIjD,IAAA,KAJiD,kBAIjD,KAJiD;EAI1C,IAAA,GAJ0C,kBAI1C,GAJ0C;EAK1D,WAAOJ,kBAAA,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,QAAxC,CAAP;EACD,GAtEe;EAuEhB,EAAA,SAvEgB,qBAuEN,GAvEM,EAuED,GAvEC,EAuEI,WAvEJ,EAuEe;EAC7B,WAAOK,iBAAA,CACL,OAAO,CAAC,GAAD,EAAM,QAAN,CADF,EAEL,OAAO,CAAC,GAAD,EAAM,SAAN,CAFF,EAGL,OAAO,CAAC,GAAD,EAAM,OAAN,CAHF,EAIL,OAAO,CAAC,GAAD,EAAM,QAAN,CAJF,EAKL,OAAO,CAAC,GAAD,EAAM,SAAN,CALF,EAML,OAAO,CAAC,GAAD,EAAM,OAAN,CANF,EAOL,WAPK,CAAP;EASD,GAjFe;EAkFhB,EAAA,IAlFgB,gBAkFX,IAlFW,EAkFP;EACP,WAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD,GApFe;EAqFhB,EAAA,GArFgB,iBAqFb;EACD,WAAO,SAAP;EACD,GAvFe;EAwFhB,EAAA,OAxFgB,qBAwFT;EACL,WAAO,SAAP;EACD,GA1Fe;EA2FhB,EAAA,KA3FgB,iBA2FV,IA3FU,EA2FN;EACR,WAAO,OAAO,CAAC,IAAD,EAAO,SAAP,CAAd;EACD,GA7Fe;EA8FhB,EAAA,SA9FgB,qBA8FN,IA9FM,EA8FF;EACZ,WAAO,cAAc,CAAC,OAAO,CAAC,IAAD,EAAO,SAAP,CAAR,CAArB;EACD,GAhGe;EAiGhB,EAAA,GAjGgB,eAiGZ,IAjGY,EAiGR;EACN,WAAO,OAAO,CAAC,IAAD,EAAO,OAAP,CAAd;EACD,GAnGe;EAoGhB,EAAA,SApGgB,qBAoGN,IApGM,EAoGF;EACZ,WAAOC,SAAA,CAAa,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB,EAAsC,OAAO,CAAC,IAAD,EAAO,SAAP,CAA7C,EAAgE,OAAO,CAAC,IAAD,EAAO,OAAP,CAAvE,CAAP;EACD,GAtGe;EAuGhB,EAAA,SAvGgB,qBAuGN,IAvGM,EAuGF;EACZ,WAAOC,SAAA,CAAa,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB,EAAsC,OAAO,CAAC,IAAD,EAAO,SAAP,CAA7C,EAAgE,OAAO,CAAC,IAAD,EAAO,OAAP,CAAvE,CAAP;EACD,GAzGe;EA0GhB,EAAA,UA1GgB,sBA0GL,IA1GK,EA0GD;EACb,WAAOC,UAAA,CAAc,OAAO,CAAC,IAAD,EAAO,QAAP,CAArB,EAAuC,OAAO,CAAC,IAAD,EAAO,SAAP,CAA9C,EAAiE,OAAO,CAAC,IAAD,EAAO,OAAP,CAAxE,CAAP;EACD,GA5Ge;EA6GhB,EAAA,UA7GgB,wBA6GN;EACR,WAAO,CAAP;EACD,GA/Ge;EAgHhB,EAAA,WAhHgB,uBAgHJ,IAhHI,EAgHA;EACd,WAAOC,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,IAAD,EAAO,SAAP,CAAlD,CAAP;EACD,GAlHe;EAmHhB,EAAA,UAnHgB,sBAmHL,SAnHK,EAmHI;EAClB,QAAI,IAAI,GAAG,SAAX;EACA,QAAI,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAZ,EAA8B,IAAI,GAAGnB,cAAA,CAAkB,IAAlB,CAAP;EAC9B,WAAOoB,QAAA,CAAY,OAAO,CAAC,IAAD,EAAO,QAAP,CAAnB,IAAuC,GAAvC,GAA6C,GAApD;EACD,GAvHe;EAwHhB,EAAA,YAxHgB,0BAwHJ;EACV,WAAO,EAAP;EACD,GA1He;EA2HhB,EAAA,UA3HgB,sBA2HL,SA3HK,EA2HI;EAClB,QAAI,IAAI,GAAG,SAAX;EACA,QAAI,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAZ,EAA8B,IAAI,GAAGpB,cAAA,CAAkB,IAAlB,CAAP;EAC9B,WAAOoB,QAAA,CAAY,OAAO,CAAC,IAAD,EAAO,QAAP,CAAnB,CAAP;EACD;EA/He,CAAlB;EAmIA;EACA;;EAEA,SAAS,mBAAT,CAA6B,SAA7B,EAA8C;EAC5C,MAAI,CAAC,SAAS,CAAC,UAAV,CAAqB,GAArB,CAAL,EAAgC;EAC9B,UAAM,IAAI,UAAJ,+BAAsC,SAAtC,uCAAN;EACD;;EACD,MAAM,KAAK,GAAG,CAAC,SAAS,CAAC,KAAV,CAAgB,CAAhB,CAAf;EACA,MAAI,KAAK,CAAC,KAAD,CAAT,EAAkB,MAAM,IAAI,UAAJ,+BAAsC,SAAtC,EAAN;EAClB,SAAO,KAAP;EACD;;EAED,SAAS,cAAT,CAAwB,KAAxB,EAA4D;EAAA,MAAZ,IAAY,uEAAL,KAAK;EAC1D,oBAAW,KAAK,CAAC,QAAN,GAAiB,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAX,SAA+C,IAAI,GAAG,GAAH,GAAS,EAA5D;EACD;EAED;;;;EAIK;;;EACL,SAAS,wBAAT,CACE,YADF,EAGoB;EAAA,MADlB,QACkB,uEADiC,SACjC;EAAA,MAAlB,aAAkB,uEAAF,EAAE;EAElB,MAAM,KAAN,GAA2B,YAA3B,CAAM,KAAN;EAAA,MAAa,SAAb,GAA2B,YAA3B,CAAa,SAAb;;EACA,MAAI,SAAS,KAAK,SAAlB,EAA6B;EAC3B,QAAI,KAAK,KAAK,SAAd,EAAyB,MAAM,IAAI,SAAJ,CAAc,wCAAd,CAAN,CADE;EAG3B;EACA;;EACA,QAAI,QAAQ,KAAK,QAAjB,EAA2BC,aAAA,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,aAA3B;EAC3B,QAAI,QAAQ,KAAK,WAAjB,EAA8B,KAAK,GAAGC,gBAAA,CAAoB,KAApB,EAA2B,CAA3B,EAA8B,aAA9B,CAAR;EAC9B,IAAA,SAAS,GAAG,cAAc,CAAC,KAAD,CAA1B;EACD,GARD,MAQO;EACL,QAAM,UAAU,GAAG,mBAAmB,CAAC,SAAD,CAAtC;;EACA,QAAI,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,UAArC,EAAiD;EAC/C,YAAM,IAAI,UAAJ,qBAA4B,SAA5B,wBAAmD,KAAnD,qCAAN;EACD;;EACD,QAAI,SAAS,KAAK,cAAc,CAAC,UAAD,CAAhC,EAA8C;EAC5C,YAAM,IAAI,UAAJ,+BAAsC,SAAtC,EAAN;EACD;;EACD,IAAA,KAAK,GAAG,UAAR;EACA,QAAI,KAAK,GAAG,CAAR,IAAa,KAAK,GAAG,aAAzB,EAAwC,MAAM,IAAI,UAAJ,8BAAqC,SAArC,EAAN;EACzC;;EACD,2CAAY,YAAZ;EAA0B,IAAA,KAAK,EAAL,KAA1B;EAAiC,IAAA,SAAS,EAAT;EAAjC;EACD;EAUD;;;;;;;EAOG;;;MACG;EAMJ,4BAAoD;EAAA,QAAxC,YAAwC,uEAAT,SAAS;;EAAA;;EALpD,SAAA,GAAA,GAAM,IAAI,GAAJ,EAAN;EACA,SAAA,KAAA,GAAQ,CAAR;EAEA,SAAA,IAAA,GAAO,CAAP;EACA,SAAA,MAAA,GAAS,CAAT;EAEE,SAAK,GAAL,GAAW,UAAU,CAAC,WAAX,GAAyB,UAAU,CAAC,WAAX,CAAuB,GAAvB,EAAzB,GAAwD,IAAI,CAAC,GAAL,EAAnE;;EACA,QAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B,UAAI,CAAC,GAAG,CAAR,CAD8B;;EAAA,kDAEV,YAAY,CAAC,GAAb,CAAiB,OAAjB,EAFU;EAAA;;EAAA;EAE9B,+DAAgD;EAAA;;EAAA,cAArC,KAAqC;EAC9C,cAAI,EAAE,CAAF,GAAM,cAAc,CAAC,iBAAzB,EAA4C;;EAC5C,4BAAK,GAAL,EAAS,GAAT,qCAAgB,KAAhB;EACD;EAL6B;EAAA;EAAA;EAAA;EAAA;EAM/B;EACF;;;;aACD,aAAI,GAAJ,EAAe;EACb,UAAM,MAAM,GAAG,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAf;;EACA,UAAI,MAAJ,EAAY;EACV,aAAK,IAAL;EACA,aAAK,MAAL;EACD;;EACD,WAAK,KAAL;EACA,aAAO,MAAP;EACD;;;aACD,aAAI,GAAJ,EAAiB,KAAjB,EAA+B;EAC7B,WAAK,GAAL,CAAS,GAAT,CAAa,GAAb,EAAkB,KAAlB;EACA,WAAK,MAAL;EACA,WAAK,MAAL;EACD;;;aACD,kBAAM;EACJ;;;;;EAKE;EACH;;;aACD,mBAAU,GAAV,EAA0B;EACxB,UAAI,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,GAA7B,CAAJ,EAAuC,MAAM,IAAI,UAAJ,CAAe,uBAAf,CAAN;EACvC,MAAA,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,GAA7B,EAAkC,IAAlC;EACA,WAAK,MAAL;EACD;EAKD;;;;;EAKG;;;;aACH,2BAAyB,GAAzB,EAAyC;EACvC,UAAI,KAAK,GAAG,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,GAA7B,CAAZ;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,QAAA,KAAK,GAAG,IAAI,cAAJ,EAAR;EACA,QAAA,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,GAA7B,EAAkC,KAAlC;EACD;;EACD,aAAO,KAAP;EACD;;;;;;EAhBM,cAAA,CAAA,SAAA,GAAY,IAAI,OAAJ,EAAZ;EACA,cAAA,CAAA,iBAAA,GAAoB,IAApB;;EA2BT,SAAS,kBAAT,OAAgH;EAAA,MAAlF,OAAkF,QAAlF,OAAkF;EAAA,MAAzE,QAAyE,QAAzE,QAAyE;EAAA,MAA/D,MAA+D,QAA/D,MAA+D;EAC9G,MAAM,UAAU,GAAGC,aAAA,CAAiB,OAAjB,CAAnB;EACA,MAAM,WAAW,GAAGC,qBAAA,CAAyB,QAAzB,CAApB;EACA,MAAM,SAAS,GAAGA,qBAAA,CAAyB,MAAzB,CAAlB;EACA,mBAAU,UAAV,cAAwB,WAAxB,cAAuC,SAAvC;EACD;;EAED,SAAS,cAAT,CAAwB,GAAxB,EAAqD,GAArD,EAAgF;EAC9E,SAAO;EACL,IAAA,KAAK,EAAE,GAAG,CAAC,IAAJ,GAAW,GAAG,CAAC,IADjB;EAEL,IAAA,MAAM,EAAE,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,KAFnB;EAGL,IAAA,IAAI,EAAE,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC;EAHf,GAAP;EAKD;EAiED;;EAEG;;;EACH,IAAM,gBAAgB,GAAqB;EACzC;EACA,EAAA,YAFyC,0BAE7B;EACV;EACA;EACA;EACA;EACA;EACA;EACA,QAAI,OAAO,KAAK,SAAZ,KAA0B,WAA9B,EAA2C;EACzC,WAAK,SAAL,GAAiB,IAAIjC,oBAAJ,sBAAqC,KAAK,EAA1C,GAAgD;EAC/D,QAAA,GAAG,EAAE,SAD0D;EAE/D,QAAA,KAAK,EAAE,SAFwD;EAG/D,QAAA,IAAI,EAAE,SAHyD;EAI/D,QAAA,GAAG,EAAE,KAAK,SAJqD;EAK/D,QAAA,QAAQ,EAAE;EALqD,OAAhD,CAAjB;EAOD;;EACD,WAAO,KAAK,SAAZ;EACD,GAnBwC;EAoBzC,EAAA,iBApByC,6BAoBvB,OApBuB,EAoBd,KApBc,EAoBT;EAAA;;EAC9B,QAAc,OAAd,GAAwD,OAAxD,CAAQ,IAAR;EAAA,QAA8B,QAA9B,GAAwD,OAAxD,CAAuB,KAAvB;EAAA,QAA6C,MAA7C,GAAwD,OAAxD,CAAwC,GAAxC;EACA,QAAM,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe;EAAE,MAAA,IAAI,EAAE,mBAAR;EAA6B,MAAA,OAAO,EAAP,OAA7B;EAAsC,MAAA,QAAQ,EAAR,QAAtC;EAAgD,MAAA,MAAM,EAAN,MAAhD;EAAwD,MAAA,EAAE,EAAE,KAAK;EAAjE,KAAf,CAAZ;EACA,QAAM,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,GAAV,CAAf;EACA,QAAI,MAAJ,EAAY,OAAO,MAAP;EAEZ,QAAM,cAAc,GAAG,KAAK,YAAL,EAAvB;EACA,QAAI,KAAJ,EAAW,SAAX;;EACA,QAAI;EACF,MAAA,SAAS,GAAG,kBAAkB,CAAC;EAAE,QAAA,OAAO,EAAP,OAAF;EAAW,QAAA,QAAQ,EAAR,QAAX;EAAqB,QAAA,MAAM,EAAN;EAArB,OAAD,CAA9B;EACA,MAAA,KAAK,GAAG,cAAc,CAAC,aAAf,CAA6B,IAAI,IAAJ,CAAS,SAAT,CAA7B,CAAR;EACD,KAHD,CAGE,OAAO,CAAP,EAAU;EACV,YAAM,IAAI,UAAJ,6BAAoC,IAAI,CAAC,SAAL,CAAe;EAAE,QAAA,OAAO,EAAP,OAAF;EAAW,QAAA,QAAQ,EAAR,QAAX;EAAqB,QAAA,MAAM,EAAN;EAArB,OAAf,CAApC,EAAN;EACD;;EACD,QAAM,MAAM,GAAQ,EAApB;;EAd8B,gDAeF,KAfE;EAAA;;EAAA;EAe9B,6DAAmC;EAAA;EAAA,YAAxB,IAAwB,gBAAxB,IAAwB;EAAA,YAAlB,KAAkB,gBAAlB,KAAkB;EACjC,YAAI,IAAI,KAAK,MAAb,EAAqB,MAAM,CAAC,OAAP,GAAiB,CAAC,KAAlB,CADY;;EAGjC,YAAK,IAAY,KAAK,aAAtB,EAAqC,MAAM,CAAC,OAAP,GAAiB,CAAC,KAAlB;;EACrC,YAAI,IAAI,KAAK,OAAb,EAAsB;EACpB,cAAM,OAAO,GAAG,oBAAoB,IAApB,CAAyB,KAAzB,CAAhB;EACA,cAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,IAAkB,CAAlC,EAAqC,MAAM,IAAI,UAAJ,6BAAoC,KAApC,EAAN;EACrC,UAAA,MAAM,CAAC,KAAP,GAAe,CAAC,OAAO,CAAC,CAAD,CAAvB;;EACA,cAAI,MAAM,CAAC,KAAP,GAAe,CAAnB,EAAsB;EACpB,kBAAM,IAAI,UAAJ,CACJ,wBAAiB,KAAjB,mBAA+B,SAA/B,mBAAiD,KAAK,EAAtD,SACE,0EAFE,CAAN;EAID;;EACD,cAAI,MAAM,CAAC,KAAP,GAAe,EAAnB,EAAuB;EACrB,kBAAM,IAAI,UAAJ,CACJ,wBAAiB,KAAjB,mBAA+B,SAA/B,mBAAiD,KAAK,EAAtD,SACE,0EAFE,CAAN;EAID;;EACD,cAAI,OAAO,CAAC,CAAD,CAAX,EAAgB,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,CAAD,CAA3B;EACjB;;EACD,YAAI,IAAI,KAAK,KAAb,EAAoB,MAAM,CAAC,GAAP,GAAa,CAAC,KAAd;;EACpB,YAAI,KAAK,MAAL,IAAe,IAAI,KAAK,KAAxB,IAAiC,KAAK,IAAI,IAA1C,IAAkD,KAAK,KAAK,EAAhE,EAAoE;EAClE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,IAAZ,EAAkB,CAAlB,CAAR;EACA,UAAA,MAAM,CAAC,GAAP,GAAa,KAAK,CACf,SADU,CACA,KADA,EAEV,OAFU,CAEF,gsPAFE,EAEiB,EAFjB,EAGV,OAHU,CAGF,GAHE,EAGG,GAHH,EAIV,WAJU,EAAb;EAKD;EACF;EArD6B;EAAA;EAAA;EAAA;EAAA;;EAsD9B,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAvB,EAAkC;EAChC;EACA;EACA,YAAM,IAAI,UAAJ,kEACsD,KAAK,EAD3D,iDAAN;EAGD,KA5D6B;EA8D9B;;;EACA,QAAI,KAAK,aAAT,EAAwB;EACtB,gCAAyB,KAAK,aAAL,CAAmB,MAAnB,EAA2B,OAA3B,CAAzB;EAAA,UAAQ,GAAR,uBAAQ,GAAR;EAAA,UAAa,OAAb,uBAAa,OAAb;;EACA,MAAA,MAAM,CAAC,GAAP,GAAa,GAAb;EACA,MAAA,MAAM,CAAC,OAAP,GAAiB,OAAjB;EACD;;EACD,QAAI,KAAK,YAAT,EAAuB,KAAK,YAAL,CAAkB,MAAlB,EAA0B,OAA1B;EAEvB,QAAM,YAAY,GAAG,KAAK,kBAAL,CAAwB,MAAxB,EAAgC,KAAhC,EAAuC,WAAvC,EAAoD,IAApD,CAArB;EACA,QAAI,YAAY,CAAC,IAAb,KAAsB,SAA1B,EAAqC,MAAM,IAAI,UAAJ,mCAA0C,IAAI,CAAC,SAAL,CAAe,OAAf,CAA1C,EAAN;EACrC,QAAI,YAAY,CAAC,KAAb,KAAuB,SAA3B,EAAsC,MAAM,IAAI,UAAJ,oCAA2C,IAAI,CAAC,SAAL,CAAe,OAAf,CAA3C,EAAN;EACtC,QAAI,YAAY,CAAC,GAAb,KAAqB,SAAzB,EAAoC,MAAM,IAAI,UAAJ,kCAAyC,IAAI,CAAC,SAAL,CAAe,OAAf,CAAzC,EAAN;EACpC,IAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,YAAf,EA1E8B;;EA4E9B,KAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,CAAgC,UAAC,QAAD,EAAa;EAC3C,UAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe;EAChC,QAAA,IAAI,EAAE,mBAD0B;EAEhC,QAAA,IAAI,EAAE,YAAY,CAAC,IAFa;EAGhC,QAAA,KAAK,EAAE,YAAY,CAAC,KAHY;EAIhC,QAAA,GAAG,EAAE,YAAY,CAAC,GAJc;EAKhC,QAAA,QAAQ,EAAR,QALgC;EAMhC,QAAA,EAAE,EAAE,KAAI,CAAC;EANuB,OAAf,CAAnB;EAQA,MAAA,KAAK,CAAC,GAAN,CAAU,UAAV,EAAsB,OAAtB;EACD,KAVD;EAWA,WAAO,YAAP;EACD,GA5GwC;EA6GzC,EAAA,oBA7GyC,gCA6GpB,YA7GoB,EA6GR;EAC/B,QAAQ,GAAR,GAAkE,YAAlE,CAAQ,GAAR;EAAA,QAAa,KAAb,GAAkE,YAAlE,CAAa,KAAb;EAAA,QAAoB,IAApB,GAAkE,YAAlE,CAAoB,IAApB;EAAA,QAA0B,GAA1B,GAAkE,YAAlE,CAA0B,GAA1B;EAAA,QAA+B,OAA/B,GAAkE,YAAlE,CAA+B,OAA/B;EAAA,QAAwC,SAAxC,GAAkE,YAAlE,CAAwC,SAAxC;EAAA,QAAmD,UAAnD,GAAkE,YAAlE,CAAmD,UAAnD,CAD+B;EAG/B;;EACA,QAAI,UAAU,KAAK,SAAnB,EAA8B,MAAM,IAAI,UAAJ,CAAe,+BAAf,CAAN;EAC9B,QAAI,IAAI,KAAK,SAAT,IAAsB,OAAO,KAAK,SAAtC,EAAiD,MAAM,IAAI,SAAJ,CAAc,6BAAd,CAAN;EACjD,QAAI,KAAK,KAAK,SAAV,IAAuB,SAAS,KAAK,SAAzC,EAAoD,MAAM,IAAI,SAAJ,CAAc,gCAAd,CAAN;EACpD,QAAI,GAAG,KAAK,SAAZ,EAAuB,MAAM,IAAI,UAAJ,CAAe,aAAf,CAAN;;EACvB,QAAI,SAAS,KAAK,SAAlB,EAA6B;EAC3B,UAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC;EACjC,cAAM,IAAI,UAAJ,mDAAyD,SAAzD,GAAN;EACD;;EACD,UAAI,CAAC,mBAAmB,IAAnB,CAAwB,SAAxB,CAAL,EAAyC,MAAM,IAAI,UAAJ,8BAAqC,SAArC,EAAN;EAC1C;;EACD,QAAI,KAAK,WAAT,EAAsB;EACpB,UAAI,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,KAAK,WAAtC,EAAmD;EACjD,cAAM,IAAI,UAAJ,uBAA8B,KAAK,WAAnC,mBAAuD,GAAvD,EAAN;EACD;;EACD,UAAI,OAAO,KAAK,SAAZ,IAAyB,IAAI,KAAK,SAAlC,IAA+C,OAAO,KAAK,IAA/D,EAAqE;EACnE,cAAM,IAAI,UAAJ,mBAA0B,OAA1B,kCAAyD,IAAzD,EAAN;EACD;EACF;EACF,GAnIwC;;EAoIzC;;;;;;;;;;EAUK;EACL,EAAA,kBA/IyC,8BA+ItB,iBA/IsB,EA+IH,KA/IG,EA+II;EAAS;EA/Ib,IA+I0C;EACjF,QAAI,KAAK,YAAL,KAAsB,WAA1B,EAAuC,MAAM,IAAI,UAAJ,CAAe,2CAAf,CAAN;EACvC,QAAI,YAAY,GAAG,iBAAnB;EACA,SAAK,oBAAL,CAA0B,YAA1B;EACA,QAAM,YAAY,GAAG,KAAK,YAAL,CAAkB,YAAlB,EAAgC,KAAhC,CAArB;EACA,wBAA0C,YAA1C;EAAA,QAAM,KAAN,iBAAM,KAAN;EAAA,QAAa,IAAb,iBAAa,IAAb;EAAA,QAAmB,OAAnB,iBAAmB,OAAnB;EAAA,QAA4B,SAA5B,iBAA4B,SAA5B,CALiF;EAQjF;;EACA,QAAI,KAAK,WAAT,EAAsB;EACpB;EACA,UAAI,IAAI,KAAK,SAAb,EAAwB,IAAI,GAAG,OAAP;EACxB,UAAI,OAAO,KAAK,SAAhB,EAA2B,OAAO,GAAG,IAAV;EAC3B,MAAA,YAAY,qCAAQ,YAAR;EAAsB,QAAA,GAAG,EAAE,KAAK,WAAhC;EAA6C,QAAA,IAAI,EAAJ,IAA7C;EAAmD,QAAA,OAAO,EAAP;EAAnD,QAAZ;EACD;;EAdgF,gCAgBzD,wBAAwB,CAAC,YAAD,EAAe,QAAf,EAAyB,YAAzB,CAhBiC;;EAgB9E,IAAA,KAhB8E,yBAgB9E,KAhB8E;EAgBvE,IAAA,SAhBuE,yBAgBvE,SAhBuE;EAiBjF,6CAAY,YAAZ;EAA0B,MAAA,KAAK,EAAL,KAA1B;EAAiC,MAAA,SAAS,EAAT;EAAjC;EACD,GAjKwC;EAkKzC,EAAA,qBAlKyC,iCAkKnB,YAlKmB,EAkKL,QAlKK,EAkKK,KAlKL,EAkKU;EACjD,QAAM,YAAY,GAAG,KAAK,YAAL,CAAkB,YAAlB,EAAgC,KAAhC,CAArB;EACA,QAAM,KAAN,GAAqB,YAArB,CAAM,KAAN;EAAA,QAAa,GAAb,GAAqB,YAArB,CAAa,GAAb;;EACA,QAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,MAAA8B,aAAA,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,YAA3B;EACA,MAAAA,aAAA,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,KAAK,kBAAL,CAAwB,YAAxB,CAAzB;EACD,KAHD,MAGO;EACL,MAAA,KAAK,GAAGC,gBAAA,CAAoB,KAApB,EAA2B,CAA3B,EAA8B,YAA9B,CAAR;EACA,MAAA,GAAG,GAAGA,gBAAA,CAAoB,GAApB,EAAyB,CAAzB,EAA4B,KAAK,kBAAL,mCAA6B,YAA7B;EAA2C,QAAA,KAAK,EAAL;EAA3C,SAA5B,CAAN;EACD;;EACD,6CAAY,YAAZ;EAA0B,MAAA,KAAK,EAAL,KAA1B;EAAiC,MAAA,GAAG,EAAH;EAAjC;EACD,GA7KwC;EA8KzC,EAAA,iBA9KyC,6BA8KvB,SA9KuB,EA8KiB;EAAA;;EAAA,QAA7B,QAA6B,uEAAlB,WAAkB;EAAA,QAAL,KAAK;EACxD,QAAM,YAAY,GAAG,SAArB,CADwD;EAGxD;;EACA,QAAI,IAAI,GAAG,KAAK,kBAAL,CAAwB,SAAxB,EAAmC,KAAnC,EAA0C,QAA1C,EAAoD,KAApD,CAAX,CAJwD;EAOxD;EACA;;EACA,IAAA,IAAI,GAAG,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,QAAjC,EAA2C,KAA3C,CAAP;EAEA,gBAA6B,IAA7B;EAAA,QAAQ,IAAR,SAAQ,IAAR;EAAA,QAAc,KAAd,SAAc,KAAd;EAAA,QAAqB,GAArB,SAAqB,GAArB;EACA,QAAM,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe;EAAE,MAAA,IAAI,EAAE,mBAAR;EAA6B,MAAA,IAAI,EAAJ,IAA7B;EAAmC,MAAA,KAAK,EAAL,KAAnC;EAA0C,MAAA,GAAG,EAAH,GAA1C;EAA+C,MAAA,QAAQ,EAAR,QAA/C;EAAyD,MAAA,EAAE,EAAE,KAAK;EAAlE,KAAf,CAAZ;EACA,QAAI,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,GAAV,CAAb;EACA,QAAI,MAAJ,EAAY,OAAO,MAAP,CAd4C;EAgBxD;;EACA,QAAI,WAAJ;;EACA,QACE,YAAY,CAAC,IAAb,KAAsB,SAAtB,IACA,YAAY,CAAC,KAAb,KAAuB,SADvB,IAEA,YAAY,CAAC,GAAb,KAAqB,SAFrB,KAGC,YAAY,CAAC,IAAb,KAAsB,IAAI,CAAC,IAA3B,IAAmC,YAAY,CAAC,KAAb,KAAuB,IAAI,CAAC,KAA/D,IAAwE,YAAY,CAAC,GAAb,KAAqB,IAAI,CAAC,GAHnG,CADF,EAKE;EACA,MAAA,WAAW,GAAG,IAAI,CAAC,SAAL,CAAe;EAC3B,QAAA,IAAI,EAAE,mBADqB;EAE3B,QAAA,IAAI,EAAE,YAAY,CAAC,IAFQ;EAG3B,QAAA,KAAK,EAAE,YAAY,CAAC,KAHO;EAI3B,QAAA,GAAG,EAAE,YAAY,CAAC,GAJS;EAK3B,QAAA,QAAQ,EAAR,QAL2B;EAM3B,QAAA,EAAE,EAAE,KAAK;EANkB,OAAf,CAAd;EAQA,MAAA,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,WAAV,CAAT;EACA,UAAI,MAAJ,EAAY,OAAO,MAAP;EACb,KAlCuD;;;EAqCxD,QAAI,WAAW,GAAG,KAAK,eAAL,CAAqB;EAAE,MAAA,IAAI,EAAJ,IAAF;EAAQ,MAAA,KAAK,EAAL,KAAR;EAAe,MAAA,GAAG,EAAH;EAAf,KAArB,CAAlB;;EACA,QAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,QAAD,EAAqB;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAI,eAAe,GAAG,MAAI,CAAC,UAAL,CAAgB,WAAhB,EAA6B,QAA7B,CAAtB;;EACA,UAAI,IAAI,CAAC,GAAL,GAAW,MAAI,CAAC,kBAAL,CAAwB,IAAxB,CAAf,EAA8C;EAC5C;EACA;EACA,YAAI,gBAAgB,GAAG,MAAI,CAAC,iBAAL,CAAuB,eAAvB,EAAwC,KAAxC,CAAvB;;EACA,eAAO,gBAAgB,CAAC,KAAjB,KAA2B,KAA3B,IAAoC,gBAAgB,CAAC,IAAjB,KAA0B,IAArE,EAA2E;EACzE,cAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,kBAAM,IAAI,UAAJ,eAAsB,GAAtB,sCAAqD,KAArD,sBAAsE,IAAtE,EAAN;EACD,WAHwE;;;EAKzE,UAAA,eAAe,GAAG,MAAI,CAAC,UAAL,CAAgB,eAAhB,EAAiC,CAAC,CAAlC,CAAlB;EACA,UAAA,gBAAgB,GAAG,MAAI,CAAC,iBAAL,CAAuB,eAAvB,EAAwC,KAAxC,CAAnB;EACD;EACF;;EACD,aAAO,eAAP;EACD,KAxBD;;EAyBA,QAAI,IAAI,GAAG,CAAX;EACA,QAAI,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,KAApC,CAAxB;EACA,QAAI,IAAI,GAAG,cAAc,CAAC,IAAD,EAAO,iBAAP,CAAzB;;EACA,QAAI,IAAI,CAAC,KAAL,KAAe,CAAf,IAAoB,IAAI,CAAC,MAAL,KAAgB,CAApC,IAAyC,IAAI,CAAC,IAAL,KAAc,CAA3D,EAA8D;EAC5D,UAAM,qBAAqB,GAAG,IAAI,CAAC,KAAL,GAAa,GAAb,GAAmB,IAAI,CAAC,MAAL,GAAc,EAAjC,GAAsC,IAAI,CAAC,IAAzE;EACA,MAAA,WAAW,GAAG,KAAK,UAAL,CAAgB,WAAhB,EAA6B,qBAA7B,CAAd;EACA,MAAA,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,KAApC,CAApB;EACA,MAAA,IAAI,GAAG,cAAc,CAAC,IAAD,EAAO,iBAAP,CAArB;;EACA,UAAI,IAAI,CAAC,KAAL,KAAe,CAAf,IAAoB,IAAI,CAAC,MAAL,KAAgB,CAAxC,EAA2C;EACzC,QAAA,WAAW,GAAG,wBAAwB,CAAC,IAAI,CAAC,IAAN,CAAtC;EACD,OAFD,MAEO;EACL,QAAA,IAAI,GAAG,KAAK,oBAAL,CAA0B,IAA1B,EAAgC,iBAAhC,CAAP;EACD;EACF,KA5EuD;EA8ExD;;;EACA,QAAI,SAAS,GAAG,CAAhB;EACA,QAAI,gBAAgB,GAAG,KAAvB;;EACA,WAAO,IAAP,EAAa;EACX,MAAA,WAAW,GAAG,KAAK,UAAL,CAAgB,WAAhB,EAA6B,IAAI,GAAG,SAApC,CAAd;EACA,UAAM,oBAAoB,GAAG,iBAA7B;EACA,MAAA,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,KAApC,CAApB;EACA,UAAM,OAAO,GAAG,IAAhB;EACA,MAAA,IAAI,GAAG,KAAK,oBAAL,CAA0B,IAA1B,EAAgC,iBAAhC,CAAP;;EACA,UAAI,IAAJ,EAAU;EACR,QAAA,IAAI,GAAG,cAAc,CAAC,IAAD,EAAO,iBAAP,CAArB;;EACA,YAAI,IAAI,CAAC,KAAL,KAAe,CAAf,IAAoB,IAAI,CAAC,MAAL,KAAgB,CAAxC,EAA2C;EACzC,UAAA,WAAW,GAAG,wBAAwB,CAAC,IAAI,CAAC,IAAN,CAAtC,CADyC;;EAGzC,UAAA,IAAI,GAAG,CAAP,CAHyC;EAKzC;EACA;EACA;;EACA,UAAA,gBAAgB,GAAG,IAAI,CAAC,GAAL,GAAW,KAAK,kBAAL,CAAwB,IAAxB,CAA9B;EACD,SATD,MASO,IAAI,OAAO,IAAI,IAAI,KAAK,OAAxB,EAAiC;EACtC,cAAI,SAAS,GAAG,CAAhB,EAAmB;EACjB;EACA;EACA,YAAA,SAAS,IAAI,CAAb;EACD,WAJD,MAIO;EACL;EACA;EACA;EACA;EACA,gBAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,oBAAM,IAAI,UAAJ,mDAA0D,IAAI,CAAC,SAAL,oBAAoB,YAApB,EAA1D,EAAN;EACD,aAFD,MAEO;EACL;EACA,kBAAM,KAAK,GAAG,KAAK,oBAAL,CAA0B,iBAA1B,EAA6C,oBAA7C,CAAd,CAFK;;EAIL,kBAAI,KAAK,GAAG,CAAZ,EAAe,WAAW,GAAG,KAAK,UAAL,CAAgB,WAAhB,EAA6B,CAAC,CAA9B,CAAd;EACf,cAAA,gBAAgB,GAAG,IAAnB;EACA,cAAA,IAAI,GAAG,CAAP;EACD;EACF;EACF;EACF;EACF;;EACD,IAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,WAAf;EACA,QAAI,WAAJ,EAAiB,KAAK,CAAC,GAAN,CAAU,WAAV,EAAuB,WAAvB;;EACjB,QACE,IAAI,CAAC,IAAL,KAAc,SAAd,IACA,IAAI,CAAC,KAAL,KAAe,SADf,IAEA,IAAI,CAAC,GAAL,KAAa,SAFb,IAGA,IAAI,CAAC,SAAL,KAAmB,SAHnB,IAIC,KAAK,MAAL,KAAgB,IAAI,CAAC,GAAL,KAAa,SAAb,IAA0B,IAAI,CAAC,OAAL,KAAiB,SAA3D,CALH,EAME;EACA,YAAM,IAAI,UAAJ,CAAe,6BAAf,CAAN;EACD;;EACD,QAAI,CAAC,gBAAL,EAAuB;EACrB;EACA,UAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe;EAChC,QAAA,IAAI,EAAE,mBAD0B;EAEhC,QAAA,OAAO,EAAE,WAAW,CAAC,IAFW;EAGhC,QAAA,QAAQ,EAAE,WAAW,CAAC,KAHU;EAIhC,QAAA,MAAM,EAAE,WAAW,CAAC,GAJY;EAKhC,QAAA,EAAE,EAAE,KAAK;EALuB,OAAf,CAAnB;EAOA,MAAA,KAAK,CAAC,GAAN,CAAU,UAAV,EAAsB,IAAtB;EACD;;EACD,WAAO,WAAP;EACD,GA/TwC;EAgUzC,EAAA,sBAhUyC,kCAgUlB,IAhUkB,EAgUZ,KAhUY,EAgUP;EAChC,QAAM,OAAO,GAAG;EAAE,MAAA,IAAI,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CAAf;EAAiC,MAAA,KAAK,EAAE,OAAO,CAAC,IAAD,EAAO,SAAP,CAA/C;EAAkE,MAAA,GAAG,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP;EAA9E,KAAhB;EACA,QAAM,MAAM,GAAG,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,KAAhC,CAAf;EACA,WAAO,MAAP;EACD,GApUwC;EAqUzC,EAAA,oBArUyC,gCAqUpB,UArUoB,EAqUR,UArUQ,EAqUE;EACzC;EACA;EACA,QAAM,KAAK,GAAGd,qBAAA,CAAyB,UAAzB,EAAqC,CAAC,CAAC,KAAD,CAAD,EAAU,CAAC,OAAD,CAAV,EAAqB,CAAC,MAAD,CAArB,CAArC,CAAd;EACA,QAAM,KAAK,GAAGA,qBAAA,CAAyB,UAAzB,EAAqC,CAAC,CAAC,KAAD,CAAD,EAAU,CAAC,OAAD,CAAV,EAAqB,CAAC,MAAD,CAArB,CAArC,CAAd;EACA,QAAI,KAAK,CAAC,IAAN,KAAe,KAAK,CAAC,IAAzB,EAA+B,OAAOiB,gBAAA,CAAoB,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAvC,CAAP;EAC/B,QAAI,KAAK,CAAC,KAAN,KAAgB,KAAK,CAAC,KAA1B,EAAiC,OAAOA,gBAAA,CAAoB,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,KAAxC,CAAP;EACjC,QAAI,KAAK,CAAC,GAAN,KAAc,KAAK,CAAC,GAAxB,EAA6B,OAAOA,gBAAA,CAAoB,KAAK,CAAC,GAAN,GAAY,KAAK,CAAC,GAAtC,CAAP;EAC7B,WAAO,CAAP;EACD,GA9UwC;;EA+UzC;EACA,EAAA,YAhVyC,wBAgV5B,YAhV4B,EAgVe;EAAA,QAA7B,QAA6B,uEAAlB,WAAkB;EAAA,QAAL,KAAK;EACtD,QAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,QAArC,EAA+C,KAA/C,CAAhB;EACA,WAAO,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,KAAhC,CAAP;EACD,GAnVwC;EAoVzC,EAAA,UApVyC,sBAoV9B,OApV8B,EAoVrB,IApVqB,EAoVjB;EACtB,QAAM,KAAK,GAAGX,UAAA,CAAc,OAAO,CAAC,IAAtB,EAA4B,OAAO,CAAC,KAApC,EAA2C,OAAO,CAAC,GAAnD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,IAAjE,EAAuE,WAAvE,CAAd;EACA,WAAO,KAAP;EACD,GAvVwC;EAwVzC,EAAA,eAxVyC,2BAwVzB,YAxVyB,EAwVX,IAxVW,EAwVL,KAxVK,EAwVA;EACvC,QAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,WAArC,EAAkD,KAAlD,CAAhB;EACA,QAAM,QAAQ,GAAG,KAAK,UAAL,CAAgB,OAAhB,EAAyB,IAAzB,CAAjB;EACA,QAAM,aAAa,GAAG,KAAK,iBAAL,CAAuB,QAAvB,EAAiC,KAAjC,CAAtB;EACA,WAAO,aAAP;EACD,GA7VwC;EA8VzC,EAAA,iBA9VyC,6BA8VvB,iBA9VuB,EA8VJ,MA9VI,EA8VI,QA9VJ,EA8Vc,KA9Vd,EA8VmB;EAC1D,QAAI,YAAY,GAAG,iBAAnB;EACA,yBAAgB,YAAhB;EAAA,QAAQ,GAAR,kBAAQ,GAAR;;EACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,SAAS,GAAGtB,SAAO,CAAC,MAAD,CAAnC,EAA6C,CAAC,GAAG,SAAjD,EAA4D,CAAC,EAA7D,EAAiE;EAC/D,2BAAkB,YAAlB;EAAA,UAAQ,KAAR,kBAAQ,KAAR;EACA,UAAM,eAAe,GAAG,YAAxB;EACA,UAAM,IAAI,GACR,MAAM,GAAG,CAAT,GACI,CAAC,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,KAAK,mBAAL,CAAyB,YAAzB,EAAuC,KAAvC,CAAd,CADL,GAEI,KAAK,WAAL,CAAiB,YAAjB,EAA+B,KAA/B,CAHN;EAIA,UAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,WAArC,EAAkD,KAAlD,CAAhB;EACA,UAAI,QAAQ,GAAG,KAAK,UAAL,CAAgB,OAAhB,EAAyB,IAAzB,EAA+B,KAA/B,CAAf;EACA,MAAA,YAAY,GAAG,KAAK,iBAAL,CAAuB,QAAvB,EAAiC,KAAjC,CAAf,CAT+D;EAY/D;EACA;EACA;EACA;;EACA,UAAI,MAAM,GAAG,CAAb,EAAgB;EACd,YAAM,eAAe,GAAG,KAAK,YAAL,CAAkB,eAAlB,EAAmC,KAAnC,CAAxB;;EACA,eAAO,YAAY,CAAC,KAAb,GAAqB,CAArB,KAA2B,KAAK,GAAG,eAA1C,EAA2D;EACzD,UAAA,QAAQ,GAAG,KAAK,UAAL,CAAgB,QAAhB,EAA0B,CAAC,CAA3B,EAA8B,KAA9B,CAAX;EACA,UAAA,YAAY,GAAG,KAAK,iBAAL,CAAuB,QAAvB,EAAiC,KAAjC,CAAf;EACD;EACF;;EAED,UAAI,YAAY,CAAC,GAAb,KAAqB,GAAzB,EAA8B;EAC5B;EACA,QAAA,YAAY,GAAG,KAAK,YAAL,mCAAuB,YAAvB;EAAqC,UAAA,GAAG,EAAH;EAArC,YAA4C,WAA5C,EAAyD,KAAzD,CAAf;EACD;EACF;;EACD,QAAI,QAAQ,KAAK,QAAb,IAAyB,YAAY,CAAC,GAAb,KAAqB,GAAlD,EAAuD;EACrD,YAAM,IAAI,UAAJ,eAAsB,GAAtB,iDAAN;EACD;;EACD,WAAO,YAAP;EACD,GAlYwC;EAmYzC,EAAA,WAnYyC,uBAmY7B,YAnY6B,SAmYiC,QAnYjC,EAmY2C,KAnY3C,EAmYgD;EAAA,4BAA7D,KAA6D;EAAA,QAA7D,KAA6D,4BAArD,CAAqD;EAAA,6BAAlD,MAAkD;EAAA,QAAlD,MAAkD,6BAAzC,CAAyC;EAAA,4BAAtC,KAAsC;EAAA,QAAtC,KAAsC,4BAA9B,CAA8B;EAAA,2BAA3B,IAA2B;EAAA,QAA3B,IAA2B,2BAApB,CAAoB;EACvF,QAAQ,IAAR,GAA6B,YAA7B,CAAQ,IAAR;EAAA,QAAc,KAAd,GAA6B,YAA7B,CAAc,KAAd;EAAA,QAAqB,GAArB,GAA6B,YAA7B,CAAqB,GAArB;EACA,QAAM,WAAW,GAAG,KAAK,iBAAL,CAAuB;EAAE,MAAA,IAAI,EAAE,IAAI,GAAG,KAAf;EAAsB,MAAA,KAAK,EAAL,KAAtB;EAA6B,MAAA,GAAG,EAAH;EAA7B,KAAvB,EAA2D,MAA3D,EAAmE,QAAnE,EAA6E,KAA7E,CAApB;EACA,QAAM,WAAW,GAAG,IAAI,GAAG,KAAK,GAAG,CAAnC;EACA,QAAM,SAAS,GAAG,KAAK,eAAL,CAAqB,WAArB,EAAkC,WAAlC,EAA+C,KAA/C,CAAlB;EACA,WAAO,SAAP;EACD,GAzYwC;EA0YzC,EAAA,aA1YyC,yBA0Y3B,WA1Y2B,EA0Yd,WA1Yc,EA0YD,WA1YC,EA0YY,KA1YZ,EA0YiB;EACxD,QAAI,IAAI,GAAG,CAAX;EACA,QAAI,KAAK,GAAG,CAAZ;EACA,QAAI,MAAM,GAAG,CAAb;EACA,QAAI,KAAK,GAAG,CAAZ;;EACA,YAAQ,WAAR;EACE,WAAK,KAAL;EACE,QAAA,IAAI,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,WAApC,EAAiD,KAAjD,CAAP;EACA;;EACF,WAAK,MAAL;EAAa;EACX,cAAM,SAAS,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,WAApC,EAAiD,KAAjD,CAAlB;EACA,UAAA,IAAI,GAAG,SAAS,GAAG,CAAnB;EACA,UAAA,KAAK,GAAG,CAAC,SAAS,GAAG,IAAb,IAAqB,CAA7B;EACA;EACD;;EACD,WAAK,OAAL;EACA,WAAK,MAAL;EAAa;EACX,cAAM,SAAS,GAAG,WAAW,CAAC,IAAZ,GAAmB,WAAW,CAAC,IAAjD;EACA,cAAM,UAAU,GAAG,WAAW,CAAC,KAAZ,GAAoB,WAAW,CAAC,KAAnD;EACA,cAAM,QAAQ,GAAG,WAAW,CAAC,GAAZ,GAAkB,WAAW,CAAC,GAA/C;EACA,cAAM,IAAI,GAAG,KAAK,oBAAL,CAA0B,WAA1B,EAAuC,WAAvC,CAAb;;EACA,cAAI,WAAW,KAAK,MAAhB,IAA0B,SAA9B,EAAyC;EACvC,gBAAM,kBAAkB,GAAG,UAAU,GAAG,IAAb,GAAoB,CAApB,IAA0B,UAAU,KAAK,CAAf,IAAoB,QAAQ,GAAG,IAAX,GAAkB,CAA3F;EACA,YAAA,KAAK,GAAG,kBAAkB,GAAG,SAAS,GAAG,IAAf,GAAsB,SAAhD;EACD;;EACD,cAAM,UAAU,GAAG,KAAK,GAAG,KAAK,WAAL,CAAiB,WAAjB,EAA8B;EAAE,YAAA,KAAK,EAAL;EAAF,WAA9B,EAAyC,WAAzC,EAAsD,KAAtD,CAAH,GAAkE,WAA1F,CATW;EAWX;EACA;;EACA,cAAI,OAAJ;EACA,cAAI,IAAI,GAAG,UAAX;;EACA,aAAG;EACD,YAAA,MAAM,IAAI,IAAV;EACA,YAAA,OAAO,GAAG,IAAV;EACA,YAAA,IAAI,GAAG,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,WAAtC,EAAmD,KAAnD,CAAP;;EACA,gBAAI,IAAI,CAAC,GAAL,KAAa,WAAW,CAAC,GAA7B,EAAkC;EAChC;EACA,cAAA,IAAI,GAAG,KAAK,YAAL,mCAAuB,IAAvB;EAA6B,gBAAA,GAAG,EAAE,WAAW,CAAC;EAA9C,kBAAqD,WAArD,EAAkE,KAAlE,CAAP;EACD;EACF,WARD,QAQS,KAAK,oBAAL,CAA0B,WAA1B,EAAuC,IAAvC,IAA+C,IAA/C,IAAuD,CARhE;;EASA,UAAA,MAAM,IAAI,IAAV,CAxBW;;EAyBX,cAAM,aAAa,GAAG,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,WAAhC,EAA6C,KAA7C,CAAtB;EACA,UAAA,IAAI,GAAG,aAAP;EACA;EACD;EAvCH;;EAyCA,WAAO;EAAE,MAAA,KAAK,EAAL,KAAF;EAAS,MAAA,MAAM,EAAN,MAAT;EAAiB,MAAA,KAAK,EAAL,KAAjB;EAAwB,MAAA,IAAI,EAAJ;EAAxB,KAAP;EACD,GAzbwC;EA0bzC,EAAA,WA1byC,uBA0b7B,YA1b6B,EA0bf,KA1be,EA0bV;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,QAAQ,GAAR,GAAgB,YAAhB,CAAQ,GAAR;EACA,QAAM,GAAG,GAAG,KAAK,kBAAL,CAAwB,YAAxB,CAAZ;EACA,QAAM,GAAG,GAAG,KAAK,kBAAL,CAAwB,YAAxB,CAAZ,CAX6B;;EAa7B,QAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,GAAP,CAbY;;EAgB7B,QAAM,SAAS,GAAG,GAAG,IAAI,GAAG,GAAG,GAAb,GAAmB,GAAnB,GAAyB,GAA3C;EACA,QAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,WAArC,EAAkD,KAAlD,CAAhB;EACA,QAAM,YAAY,GAAG,KAAK,UAAL,CAAgB,OAAhB,EAAyB,SAAzB,CAArB;EACA,QAAM,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,KAArC,CAA1B,CAnB6B;;EAsB7B,QAAM,aAAa,GAAG,KAAK,UAAL,CAAgB,YAAhB,EAA8B,CAAC,iBAAiB,CAAC,GAAjD,CAAtB;EACA,QAAM,kBAAkB,GAAG,KAAK,iBAAL,CAAuB,aAAvB,EAAsC,KAAtC,CAA3B;EACA,WAAO,kBAAkB,CAAC,GAA1B;EACD,GAndwC;EAodzC,EAAA,mBApdyC,+BAodrB,YApdqB,EAodP,KApdO,EAodF;EACrC,QAAQ,GAAR,GAA6B,YAA7B,CAAQ,GAAR;EAAA,QAAa,KAAb,GAA6B,YAA7B,CAAa,KAAb;EAAA,QAAoB,IAApB,GAA6B,YAA7B,CAAoB,IAApB,CADqC;;EAIrC,QAAM,iBAAiB,GAAG,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,IAAI,GAAG,CAApD;EACA,QAAI,iBAAiB,GAAG;EAAE,MAAA,IAAI,EAAE,iBAAR;EAA2B,MAAA,KAAK,EAAL,KAA3B;EAAkC,MAAA,GAAG,EAAE;EAAvC,KAAxB;EACA,QAAM,aAAa,GAAG,KAAK,GAAG,CAAR,GAAY,KAAK,GAAG,CAApB,GAAwB,KAAK,YAAL,CAAkB,iBAAlB,EAAqC,KAArC,CAA9C;EACA,IAAA,iBAAiB,qCAAQ,iBAAR;EAA2B,MAAA,KAAK,EAAE;EAAlC,MAAjB;EACA,QAAM,GAAG,GAAG,KAAK,kBAAL,CAAwB,iBAAxB,CAAZ;EACA,QAAM,GAAG,GAAG,KAAK,kBAAL,CAAwB,iBAAxB,CAAZ;EACA,QAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,GAAP;EAEjB,QAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,WAArC,EAAkD,KAAlD,CAAhB;EACA,QAAM,yBAAyB,GAAG,KAAK,UAAL,CAAgB,OAAhB,EAAyB,CAAC,GAA1B,CAAlC;EACA,QAAM,8BAA8B,GAAG,KAAK,iBAAL,CAAuB,yBAAvB,EAAkD,KAAlD,CAAvC;EACA,WAAO,8BAA8B,CAAC,GAAtC;EACD,GApewC;EAqezC,EAAA,mBAreyC,+BAqerB,YAreqB,EAqeT;EAC9B,WAAO;EAAE,MAAA,IAAI,EAAE,YAAY,CAAC,IAArB;EAA2B,MAAA,KAAK,EAAE,CAAlC;EAAqC,MAAA,GAAG,EAAE;EAA1C,KAAP;EACD,GAvewC;EAwezC,EAAA,oBAxeyC,gCAwepB,YAxeoB,EAweR;EAC/B,WAAO;EAAE,MAAA,IAAI,EAAE,YAAY,CAAC,IAArB;EAA2B,MAAA,KAAK,EAAE,YAAY,CAAC,KAA/C;EAAsD,MAAA,GAAG,EAAE;EAA3D,KAAP;EACD,GA1ewC;EA2ezC,EAAA,iBA3eyC,6BA2evB,WA3euB,EA2eV,WA3eU,EA2eG,KA3eH,EA2eQ;EAC/C,QAAM,MAAM,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,WAApC,EAAiD,KAAjD,CAAf;EACA,QAAM,MAAM,GAAG,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,WAApC,EAAiD,KAAjD,CAAf;EACA,WAAO,KAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B,CAAP;EACD,GA/ewC;EAgfzC,EAAA,YAhfyC,wBAgf5B,MAhf4B,EAgfpB,MAhfoB,EAgfd;EACzB,QAAM,QAAQ,GAAGuB,iBAAA,CACf,MAAM,CAAC,IADQ,EAEf,MAAM,CAAC,KAFQ,EAGf,MAAM,CAAC,GAHQ,EAIf,MAAM,CAAC,IAJQ,EAKf,MAAM,CAAC,KALQ,EAMf,MAAM,CAAC,GANQ,EAOf,KAPe,CAAjB;EASA,WAAO,QAAQ,CAAC,IAAhB;EACD,GA3fwC;EA4fzC;EACA;EACA,EAAA,SAAS,EAAE,OA9f8B;EA+fzC;EACA,EAAA,MAAM,EAAE,IAhgBiC;EAigBzC,EAAA,kBAjgByC,8BAigBtB,MAjgBsB,EAigBd,QAjgBc,EAigBJ,KAjgBI,EAigBC;EACxC,QAAM,IAAN,GAAoD,MAApD,CAAM,IAAN;EAAA,QAAY,KAAZ,GAAoD,MAApD,CAAY,KAAZ;EAAA,QAAmB,SAAnB,GAAoD,MAApD,CAAmB,SAAnB;EAAA,QAA8B,GAA9B,GAAoD,MAApD,CAA8B,GAA9B;EAAA,QAAmC,GAAnC,GAAoD,MAApD,CAAmC,GAAnC;EAAA,QAAwC,OAAxC,GAAoD,MAApD,CAAwC,OAAxC;;EACA,QAAI,SAAS,KAAK,SAAlB,EAA6B;EAC3B,UAAI,IAAI,KAAK,SAAT,KAAuB,GAAG,KAAK,SAAR,IAAqB,OAAO,KAAK,SAAxD,CAAJ,EAAwE;EACtE,cAAM,IAAI,SAAJ,CAAc,yDAAd,CAAN;EACD;;EAH0B,kCAIJ,KAAK,kBAAL,CAAwB;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,KAAK,EAAL,KAAR;EAAe,QAAA,SAAS,EAAT,SAAf;EAA0B,QAAA,GAAG,EAAH,GAA1B;EAA+B,QAAA,GAAG,EAAH,GAA/B;EAAoC,QAAA,OAAO,EAAP;EAApC,OAAxB,EAAuE,KAAvE,EAA8E,QAA9E,CAJI;;EAIxB,MAAA,SAJwB,yBAIxB,SAJwB;EAIb,MAAA,IAJa,yBAIb,IAJa;EAK5B;;EAED,QAAI,OAAJ,EAAa,QAAb,EAAuB,MAAvB;EACA,QAAI,eAAJ,EAAqB,UAArB,CAVwC;EAYxC;EACA;EACA;;EACA,QAAM,YAAY,GAAG;EAAE,MAAA,IAAI,EAAE,IAAR;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KAArB;;EACA,gCAA+B,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,KAArC,CAA/B;EAAA,QAAc,YAAd,yBAAQ,IAAR;;EACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;EAC5B,UAAM,gBAAgB,GAAG,KAAK,kBAAL,CAAwB;EAAE,QAAA,GAAG,EAAH,GAAF;EAAO,QAAA,SAAS,EAAT,SAAP;EAAkB,QAAA,IAAI,EAAE,YAAY,GAAG;EAAvC,OAAxB,EAAoE,KAApE,CAAzB;EACA,UAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,gBAAvB,EAAyC,WAAzC,EAAsD,KAAtD,CAAhB;EACA,UAAM,qBAAqB,GAAG,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,KAAhC,CAA9B;EACS,MAAA,OAJmB,GAIuB,OAJvB,CAIzB,IAJyB;EAIH,MAAA,QAJG,GAIuB,OAJvB,CAIV,KAJU;EAIY,MAAA,MAJZ,GAIuB,OAJvB,CAIO,GAJP;;EAK5B,UAAI,qBAAqB,CAAC,SAAtB,KAAoC,SAApC,IAAiD,qBAAqB,CAAC,GAAtB,KAA8B,GAAnF,EAAwF;EACtF,eAAO;EAAE,UAAA,KAAK,EAAE,QAAT;EAAmB,UAAA,GAAG,EAAE,MAAxB;EAAgC,UAAA,IAAI,EAAE;EAAtC,SAAP;EACD,OAFD,MAEO,IAAI,QAAQ,KAAK,WAAjB,EAA8B;EACnC;EACA,YACE,eAAe,KAAK,SAApB,IACC,qBAAqB,CAAC,SAAtB,KAAoC,eAAe,CAAC,SAApD,IACC,qBAAqB,CAAC,GAAtB,GAA4B,eAAe,CAAC,GAHhD,EAIE;EACA,UAAA,eAAe,GAAG,qBAAlB;EACA,UAAA,UAAU,GAAG,OAAb;EACD;EACF;EACF;;EACD,QAAI,QAAQ,KAAK,WAAb,IAA4B,UAAU,KAAK,SAA/C,EAA0D,OAAO,UAAP;EAC1D,UAAM,IAAI,UAAJ,qBAA4B,KAAK,EAAjC,kCAA2D,SAA3D,sBAAgF,GAAhF,EAAN;EACD;EAviBwC,CAA3C;EA0iBA,IAAM,YAAY,GAAqBrB,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EACxE,EAAA,EAAE,EAAE,QADoE;EAExE,EAAA,YAAY,EAAE,WAF0D;EAGxE,EAAA,UAHwE,sBAG7D;EAAa;EAHgD,IAGpC;EAClC,QAAQ,IAAR,GAAiB,YAAjB,CAAQ,IAAR,CADkC;EAGlC;EACA;EACA;EACA;;EACA,WAAO,CAAC,IAAI,IAAJ,GAAW,CAAZ,IAAiB,EAAjB,GAAsB,CAA7B;EACD,GAXuE;EAYxE,EAAA,YAZwE,wBAY3D,YAZ2D,EAY/C;EACvB,WAAO,KAAK,UAAL,CAAgB,YAAhB,IAAgC,EAAhC,GAAqC,EAA5C;EACD,GAduE;EAexE,EAAA,kBAfwE,8BAerD,YAfqD,EAezC;EAC7B,WAAO,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,KAArC,CAAP;EACD,GAjBuE;EAkBxE,EAAA,kBAlBwE,8BAkBrD,YAlBqD,EAkBzC;EAC7B,WAAO,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,KAArC,CAAP;EACD,GApBuE;EAqBxE,EAAA,iBArBwE,6BAqBtD,YArBsD,EAqBxC,QArBwC,EAqBhC;EACtC,QAAQ,KAAR,GAAwB,YAAxB,CAAQ,KAAR;EAAA,QAAe,IAAf,GAAwB,YAAxB,CAAe,IAAf;EACA,QAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAxB,CAAlB;EASA,QAAM,SAAS,GAAG,aAAa,CAAC,KAAK,MAAN,CAAb,CAA2C,IAA3C,CAAgD,UAAC,CAAD;EAAA,aAAO,CAAC,CAAC,CAAD,CAAD,CAAK,SAAL,KAAmB,SAA1B;EAAA,KAAhD,CAAlB;EACA,QAAI,SAAS,KAAK,SAAlB,EAA6B,MAAM,IAAI,UAAJ,mCAA0C,KAA1C,EAAN;EAC7B,QAAM,WAAW,GAAG,SAAS,CAAC,CAAD,CAAT,CAAa,IAAjC;EACA,WAAO,OAAO,WAAP,KAAuB,QAAvB,GAAkC,WAAlC,GAAgD,WAAW,CAAC,QAAD,CAAlE;EACD,GApCuE;;EAqCxE;EACA,EAAA,eAtCwE,2BAsCxD,YAtCwD,EAsC5C;EAC1B,QAAQ,IAAR,GAAiB,YAAjB,CAAQ,IAAR;EACA,WAAO;EAAE,MAAA,IAAI,EAAE,IAAI,GAAG,IAAf;EAAqB,MAAA,KAAK,EAAE,CAA5B;EAA+B,MAAA,GAAG,EAAE;EAApC,KAAP;EACD,GAzCuE;EA0CxE,EAAA,MAAM,EAAE;EACN,IAAA,MAAM,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAA/C,KADF;EAEN,IAAA,OAAO,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAAE,QAAA,GAAG,EAAE,EAAP;EAAW,QAAA,GAAG,EAAE;EAAhB;EAA/C,KAFH;EAGN,IAAA,MAAM,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAAE,QAAA,GAAG,EAAE,EAAP;EAAW,QAAA,GAAG,EAAE;EAAhB;EAA/C,KAHF;EAIN,IAAA,KAAK,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAA/C,KAJD;EAKN,IAAA,MAAM,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAA/C,KALF;EAMN,IAAA,IAAI,EAAE;EAAE,MAAA,IAAI,EAAE,SAAR;EAAmB,MAAA,OAAO,EAAE,CAA5B;EAA+B,MAAA,SAAS,EAAE,KAA1C;EAAiD,MAAA,IAAI,EAAE;EAAvD,KANA;EAON,cAAU;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,SAApB;EAA+B,MAAA,SAAS,EAAE,MAA1C;EAAkD,MAAA,IAAI,EAAE;EAAxD,KAPJ;EAQN,eAAW;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,SAApB;EAA+B,MAAA,SAAS,EAAE,KAA1C;EAAiD,MAAA,IAAI,EAAE;EAAvD,KARL;EASN,IAAA,KAAK,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAA/C,KATD;EAUN,IAAA,IAAI,EAAE;EAAE,MAAA,IAAI,EAAE,CAAR;EAAW,MAAA,OAAO,EAAE,CAApB;EAAuB,MAAA,SAAS,EAAE,KAAlC;EAAyC,MAAA,IAAI,EAAE;EAA/C,KAVA;EAWN,IAAA,KAAK,EAAE;EAAE,MAAA,IAAI,EAAE,EAAR;EAAY,MAAA,OAAO,EAAE,CAArB;EAAwB,MAAA,SAAS,EAAE,KAAnC;EAA0C,MAAA,IAAI,EAAE;EAAhD,KAXD;EAYN,IAAA,KAAK,EAAE;EAAE,MAAA,IAAI,EAAE,EAAR;EAAY,MAAA,OAAO,EAAE,EAArB;EAAyB,MAAA,SAAS,EAAE,KAApC;EAA2C,MAAA,IAAI,EAAE;EAAjD,KAZD;EAaN,IAAA,EAAE,EAAE;EAAE,MAAA,IAAI,EAAE,EAAR;EAAY,MAAA,OAAO,EAAE,EAArB;EAAyB,MAAA,SAAS,EAAE,KAApC;EAA2C,MAAA,IAAI,EAAE;EAAjD,KAbE;EAcN,IAAA,IAAI,EAAE;EAAE,MAAA,IAAI,EAAE,EAAR;EAAY,MAAA,OAAO,EAAE,EAArB;EAAyB,MAAA,SAAS,EAAE,KAApC;EAA2C,MAAA,IAAI,EAAE;EAAjD;EAdA,GA1CgE;EA0DxE,EAAA,YA1DwE,wBA0D3D,IA1D2D,EA0DrD,KA1DqD,EA0DhD;EACtB,QAAI,KAAK,UAAL,CAAgB;EAAE,MAAA,IAAI,EAAJ;EAAF,KAAhB,CAAJ,EAA+B;EAC7B,aAAO,KAAK,KAAK,CAAV,GAAc,cAAc,CAAC,CAAD,EAAI,IAAJ,CAA5B,GAAwC,cAAc,CAAC,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB,KAAK,GAAG,CAA7B,CAA7D;EACD,KAFD,MAEO;EACL,aAAO,cAAc,CAAC,KAAD,CAArB;EACD;EACF,GAhEuE;EAiExE,EAAA,kBAjEwE,8BAmEtE,YAnEsE,EAoEtE,KApEsE,EAsEhD;EAAA,QADtB,QACsB,uEADX,WACW;EAAA,QAAtB,cAAsB,uEAAL,KAAK;EAEtB,QAAM,IAAN,GAA2D,YAA3D,CAAM,IAAN;EAAA,QAAY,OAAZ,GAA2D,YAA3D,CAAY,OAAZ;EAAA,QAAqB,KAArB,GAA2D,YAA3D,CAAqB,KAArB;EAAA,QAA4B,SAA5B,GAA2D,YAA3D,CAA4B,SAA5B;EAAA,QAAuC,GAAvC,GAA2D,YAA3D,CAAuC,GAAvC;EAAA,QAA4C,UAA5C,GAA2D,YAA3D,CAA4C,UAA5C;EACA,QAAI,IAAI,KAAK,SAAb,EAAwB,IAAI,GAAG,OAAP;EACxB,QAAI,OAAO,KAAK,SAAhB,EAA2B,OAAO,GAAG,IAAV;;EAC3B,QAAI,cAAJ,EAAoB;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAI,UAAJ,EAAgB;EACd,YAAM,SAAS,GAAG,KAAK,MAAL,CAAY,UAAZ,CAAlB;EACA,YAAI,CAAC,SAAL,EAAgB,MAAM,IAAI,UAAJ,kDAAyD,UAAzD,EAAN;EAChB,QAAA,KAAK,GAAG,KAAK,UAAL,CAAgB;EAAE,UAAA,IAAI,EAAJ;EAAF,SAAhB,IAA4B,SAAS,CAAC,IAAtC,GAA6C,SAAS,CAAC,OAA/D;EACD;;EACD,MAAA,SAAS,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAxB,CAAZ;EACA,UAAM,MAAM,GAAG;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,KAAK,EAAL,KAAR;EAAe,QAAA,GAAG,EAAH,GAAf;EAAoB,QAAA,GAAG,EAAE,SAAzB;EAA0D,QAAA,OAAO,EAAP,OAA1D;EAAmE,QAAA,SAAS,EAAT;EAAnE,OAAf;EACA,aAAO,MAAP;EACD,KAhBD,MAgBO;EACL;EACA;EACA,WAAK,oBAAL,CAA0B,YAA1B;;EACA,UAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,YAAI,SAAS,CAAC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;EAC3B,cAAI,SAAS,KAAK,MAAlB,EAA0B;EACxB,kBAAM,IAAI,UAAJ,2DAAkE,SAAlE,EAAN;EACD;;EACD,UAAA,KAAK,GAAG,CAAR;;EACA,cAAI,CAAC,KAAK,UAAL,CAAgB;EAAE,YAAA,IAAI,EAAJ;EAAF,WAAhB,CAAL,EAAgC;EAC9B,gBAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,oBAAM,IAAI,UAAJ,oDAA2D,IAA3D,+BAAN;EACD,aAFD,MAEO;EACL;EACA,cAAA,KAAK,GAAG,CAAR;EACA,cAAA,GAAG,GAAG,EAAN;EACA,cAAA,SAAS,GAAG,KAAZ;EACD;EACF;EACF,SAfD,MAeO;EACL,UAAA,KAAK,GAAG,mBAAmB,CAAC,SAAD,CAA3B,CADK;;EAGL,cAAI,KAAK,UAAL,CAAgB;EAAE,YAAA,IAAI,EAAJ;EAAF,WAAhB,KAA6B,KAAK,GAAG,CAAzC,EAA4C,KAAK;EACjD,cAAM,YAAY,GAAG,KAAK,YAAL,CAAkB;EAAE,YAAA,IAAI,EAAJ;EAAF,WAAlB,CAArB;EACA,cAAI,KAAK,GAAG,CAAR,IAAa,KAAK,GAAG,YAAzB,EAAuC,MAAM,IAAI,UAAJ,8BAAqC,SAArC,EAAN;EACxC;EACF,OAvBD,MAuBO;EACL,YAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,UAAA2B,aAAA,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,KAAK,YAAL,CAAkB;EAAE,YAAA,IAAI,EAAJ;EAAF,WAAlB,CAA3B;EACA,UAAAA,aAAA,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,KAAK,kBAAL,CAAwB,YAAxB,CAAzB;EACD,SAHD,MAGO;EACL,UAAA,KAAK,GAAGC,gBAAA,CAAoB,KAApB,EAA2B,CAA3B,EAA8B,KAAK,YAAL,CAAkB;EAAE,YAAA,IAAI,EAAJ;EAAF,WAAlB,CAA9B,CAAR;EACA,UAAA,GAAG,GAAGA,gBAAA,CAAoB,GAApB,EAAyB,CAAzB,EAA4B,KAAK,kBAAL,mCAA6B,YAA7B;EAA2C,YAAA,KAAK,EAAL;EAA3C,aAA5B,CAAN;EACD;;EACD,YAAI,SAAS,KAAK,SAAlB,EAA6B;EAC3B,UAAA,SAAS,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAxB,CAAZ;EACD,SAFD,MAEO;EACL,cAAM,mBAAmB,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,KAAxB,CAA5B;;EACA,cAAI,mBAAmB,KAAK,SAA5B,EAAuC;EACrC,kBAAM,IAAI,UAAJ,qBAA4B,SAA5B,0CAAqE,KAArE,6BAA6F,IAA7F,EAAN;EACD;EACF;EACF;;EACD,+CAAY,YAAZ;EAA0B,QAAA,GAAG,EAAH,GAA1B;EAA+B,QAAA,KAAK,EAAL,KAA/B;EAAsC,QAAA,SAAS,EAAT,SAAtC;EAAiD,QAAA,IAAI,EAAJ,IAAjD;EAAuD,QAAA,OAAO,EAAP;EAAvD;EACD;EACF,GAzIuE;EA0IxE;EACA,EAAA,MAAM,EAAE;EA3IgE,CAAvB,CAAnD;EA8IA;;;EAGG;;EACH,IAAM,aAAa,GAAqB5B,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EACzE,EAAA,EAAE,EAAE,SADqE;EAEzE,EAAA,YAAY,EAAE,OAF2D;EAGzE,EAAA,UAHyE,sBAGf,YAHe,EAGD,KAHC,EAGI;EAC3E;EACA,QAAM,IAAI,GAAG,KAAK,WAAL,CAAiB;EAAE,MAAA,IAAI,EAAE,YAAY,CAAC,IAArB;EAA2B,MAAA,KAAK,EAAE,EAAlC;EAAsC,MAAA,GAAG,EAAE;EAA3C,KAAjB,EAAiE,KAAjE,CAAb;EACA,WAAO,IAAI,KAAK,EAAhB;EACD,GAPwE;EAQzE,EAAA,YARyE,0BAQnC;EACpC,WAAO,EAAP;EACD,GAVwE;EAWzE,EAAA,kBAAkB,EAAE;EAAC;EAAD;EAAA,WAAwB,EAAxB;EAAA,GAXqD;EAYzE,EAAA,kBAAkB,EAAE;EAAC;EAAD;EAAA,WAAwB,EAAxB;EAAA,GAZqD;EAazE,EAAA,qBAAqB,EAAE,MAAM,KAAK,EAbuC;EAczE,EAAA,iBAAiB,EAAE,QAdsD;EAezE,EAAA,WAAW,EAAE,IAf4D;EAgBzE,EAAA,eAhByE,2BAgBV,YAhBU,EAgBE;EACzE,iCAAiB,KAAK,kBAAL,CAAwB,YAAxB,CAAjB;EAAA,QAAQ,IAAR,0BAAQ,IAAR;;EACA,WAAO;EAAE,MAAA,IAAI,EAAED,WAAS,CAAE,IAAI,GAAG,KAAK,qBAAb,GAAsC,KAAK,iBAA5C,CAAT,GAA0E,GAAlF;EAAuF,MAAA,KAAK,EAAE,CAA9F;EAAiG,MAAA,GAAG,EAAE;EAAtG,KAAP;EACD;EAnBwE,CAAvB,CAApD;EAsBA,IAAM,aAAa,GAAqBC,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EACzE,EAAA,EAAE,EAAE,SADqE;EAEzE,EAAA,YAAY,EAAE,OAF2D;EAGzE,EAAA,UAHyE,sBAG9D,YAH8D,EAGhD,KAHgD,EAG3C;EAC5B;EACA;EACA,WAAO,aAAa,CAAC,UAAd,CAAyB,YAAzB,EAAuC,KAAvC,CAAP;EACD,GAPwE;EAQzE,EAAA,YARyE,0BAQnC;EACpC,WAAO,EAAP;EACD,GAVwE;EAWzE,EAAA,kBAXyE,8BAWtD,YAXsD,EAW1C;EAC7B,QAAQ,KAAR,GAAkB,YAAlB,CAAQ,KAAR;EACA,QAAI,KAAK,KAAK,EAAd,EAAkB,OAAO,EAAP;EAClB,WAAO,KAAK,IAAI,CAAT,GAAa,EAAb,GAAkB,EAAzB;EACD,GAfwE;EAgBzE,EAAA,kBAhByE,8BAgBtD,YAhBsD,EAgB1C;EAC7B,QAAQ,KAAR,GAAkB,YAAlB,CAAQ,KAAR;EACA,QAAI,KAAK,KAAK,EAAd,EAAkB,OAAO,EAAP;EAClB,WAAO,KAAK,IAAI,CAAT,GAAa,EAAb,GAAkB,EAAzB;EACD,GApBwE;EAqBzE,EAAA,WAAW,EAAE,IArB4D;EAsBzE,EAAA,eAtByE,2BAsBV,YAtBU,EAsBE;EACzE,iCAAiB,KAAK,kBAAL,CAAwB,YAAxB,CAAjB;EAAA,QAAQ,IAAR,0BAAQ,IAAR;;EACA,WAAO;EAAE,MAAA,IAAI,EAAE,IAAI,GAAG,GAAf;EAAoB,MAAA,KAAK,EAAE,CAA3B;EAA8B,MAAA,GAAG,EAAE;EAAnC,KAAP;EACD;EAzBwE,CAAvB,CAApD;EA4BA,IAAM,YAAY,GAAqBA,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EACxE,EAAA,EAAE,EAAE,QADoE;EAExE,EAAA,YAAY,EAAE,OAF0D;EAGxE,EAAA,UAHwE,sBAG7D;EAAa;EAHgD,IAGrC;EACjC;EACA;EACA;EACA;EACA;EACA,WAAO,mBAAmB,CAAC,YAAY,CAAC,IAAb,GAAoB,EAArB,CAA1B;EACD,GAVuE;EAWxE,EAAA,YAXwE,0BAWlC;EACpC,WAAO,EAAP;EACD,GAbuE;EAcxE,EAAA,kBAdwE,8BAcrD,YAdqD,EAczC;EAC7B,WAAO,KAAK,YAAL,CAAkB,YAAlB,EAAgC,MAAvC;EACD,GAhBuE;EAiBxE,EAAA,kBAjBwE,8BAiBrD,YAjBqD,EAiBzC;EAC7B,WAAO,KAAK,YAAL,CAAkB,YAAlB,EAAgC,MAAvC;EACD,GAnBuE;EAoBxE,EAAA,WAAW,EAAE,MApB2D;EAqBxE;EACA;EACA;EACA,EAAA,MAAM,EAAE;EACN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE,EAA7B;EAAiC,MAAA,IAAI,EAAE;EAAE,QAAA,MAAM,EAAE,EAAV;EAAc,QAAA,KAAK,EAAE,CAArB;EAAwB,QAAA,GAAG,EAAE;EAA7B;EAAvC,KADG;EAEN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KAFG;EAGN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KAHG;EAIN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KAJG;EAKN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KALG;EAMN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KANG;EAON,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,GAAG,EAAE;EAA7B,KAPG;EAQN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,EAArB;EAAyB,MAAA,GAAG,EAAE;EAA9B,KARG;EASN,OAAG;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,EAArB;EAAyB,MAAA,GAAG,EAAE;EAA9B,KATG;EAUN,QAAI;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,EAArB;EAAyB,MAAA,GAAG,EAAE;EAA9B,KAVE;EAWN,QAAI;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,QAAQ,EAAE,IAAlC;EAAwC,MAAA,GAAG,EAAE;EAA7C,KAXE;EAYN,QAAI;EAAE,MAAA,MAAM,EAAE,EAAV;EAAc,MAAA,KAAK,EAAE,CAArB;EAAwB,MAAA,QAAQ,EAAE,IAAlC;EAAwC,MAAA,GAAG,EAAE;EAA7C;EAZE,GAxBgE;EAsCxE,EAAA,YAtCwE,wBAsC3D,YAtC2D,EAsC/C;EACvB,QAAQ,KAAR,GAAkB,YAAlB,CAAQ,KAAR;EACA,QAAI,SAAS,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAhB;EACA,QAAI,SAAS,KAAK,SAAlB,EAA6B,MAAM,IAAI,UAAJ,0BAAiC,KAAjC,EAAN;EAC7B,QAAI,KAAK,UAAL,CAAgB,YAAhB,KAAiC,SAAS,CAAC,IAA/C,EAAqD,SAAS,GAAG,SAAS,CAAC,IAAtB;EACrD,WAAO,SAAP;EACD,GA5CuE;EA6CxE,EAAA,eA7CwE,2BA6CV,iBA7CU,EA6CO;EAC7E;EACA;EACA,QAAM,YAAY,GAAG,KAAK,kBAAL,CAAwB,iBAAxB,CAArB;EACA,QAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,YAAlB,CAAlB;EACA,QAAM,OAAO,GAAG,YAAY,CAAC,IAAb,GAAoB,EAApB,IAA0B,SAAS,CAAC,QAAV,GAAqB,CAArB,GAAyB,CAAnD,CAAhB;EACA,QAAM,QAAQ,GAAG,SAAS,CAAC,KAA3B;EACA,QAAM,MAAM,GAAG,SAAS,CAAC,GAAzB;EACA,QAAM,OAAO,GAAGoB,UAAA,CAAc,OAAd,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,YAAY,CAAC,GAAb,GAAmB,CAArE,EAAwE,WAAxE,CAAhB;EACA,WAAO,OAAP;EACD,GAvDuE;EAwDxE;EACA;EACA;EACA;EACA,EAAA,kBAAkB,EAChB,IAAI,IAAJ,CAAS,mBAAT,EAA8B,kBAA9B,CAAiD,mBAAjD,EAAsE;EAAE,IAAA,QAAQ,EAAE;EAAZ,GAAtE,MAA+F,gBA7DzB;EA8DxE,EAAA,YA9DwE,wBA8D3D,YA9D2D,EA8D7C,OA9D6C,EA8DtC;EAChC,QAAI,KAAK,kBAAL,IAA2B,OAAO,CAAC,IAAR,GAAe,CAA9C,EAAiD;EAC/C,YAAM,IAAI,UAAJ,CACJ,oBAAa,KAAK,EAAlB,mDACE,8DAFE,CAAN;EAID;EACF;EArEuE,CAAvB,CAAnD;EAiKA;;;;;;EAMK;;EACL,SAAS,UAAT,CAAoB,SAApB,EAAyC;EACvC,MAAI,IAAI,GAAuB,SAA/B;;EACA,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;EACrB,UAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACD;;EACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAAhB,IAAqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAAjC,EAA4C;EAC1C,UAAM,IAAI,UAAJ,CAAe,2DAAf,CAAN;EACD;;EACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAAhB,IAAqB,CAAC,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAlC,EAAwC;EACtC,UAAM,IAAI,UAAJ,CAAe,sDAAf,CAAN;EACD;;EACD,MAAI,IAAI,CAAC,MAAL,CAAY,UAAC,CAAD;EAAA,WAAO,CAAC,CAAC,SAAF,IAAe,IAAtB;EAAA,GAAZ,EAAwC,MAAxC,GAAiD,CAArD,EAAwD;EACtD,UAAM,IAAI,UAAJ,CAAe,0DAAf,CAAN;EACD,GAbsC;EAgBvC;EACA;;;EACA,MAAI,SAAJ;EACA,EAAA,IAAI,CAAC,OAAL,CAAa,UAAC,CAAD,EAAM;EACjB,QAAI,CAAC,CAAC,QAAF,IAAe,CAAC,CAAC,CAAC,WAAH,IAAkB,CAAC,CAAC,CAAC,SAAxC,EAAoD;EAClD,UAAI,SAAJ,EAAe,MAAM,IAAI,UAAJ,CAAe,oDAAf,CAAN;EACf,MAAA,SAAS,GAAG,CAAZ;EACA,MAAA,CAAC,CAAC,WAAF,GAAgB;EAAE,QAAA,IAAI,EAAE,CAAC,CAAC,WAAF,GAAgB,CAAhB,GAAoB;EAA5B,OAAhB;EACD,KAJD,MAIO,IAAI,CAAC,CAAC,CAAC,IAAP,EAAa;EAClB,YAAM,IAAI,UAAJ,CAAe,iDAAf,CAAN;EACD;EACF,GARD,EAnBuC;EA8BvC;EACA;EACA;;EACA,EAAA,IAAI,GAAG,IAAI,CAAC,MAAL,CAAY,UAAC,CAAD;EAAA,WAAO,CAAC,CAAC,IAAT;EAAA,GAAZ,CAAP;EAEA,EAAA,IAAI,CAAC,OAAL,CAAa,UAAC,CAAD,EAAM;EACjB;EACA;EACA;EACA,QAAQ,SAAR,GAAsB,CAAtB,CAAQ,SAAR;;EACA,QAAI,SAAJ,EAAe;EACb,UAAM,WAAW,GAAG,IAAI,CAAC,IAAL,CAAU,UAAC,GAAD;EAAA,eAAS,GAAG,CAAC,IAAJ,KAAa,SAAtB;EAAA,OAAV,CAApB;EACA,UAAI,WAAW,KAAK,SAApB,EAA+B,MAAM,IAAI,UAAJ,sDAA6D,SAA7D,EAAN;EAC/B,MAAA,CAAC,CAAC,SAAF,GAAc,WAAd;EACA,MAAA,CAAC,CAAC,WAAF,GAAgB,WAAW,CAAC,WAA5B;EACA,MAAA,CAAC,CAAC,QAAF,GAAa,WAAW,CAAC,QAAzB;EACD;;EAMD,QAAK,CAAC,CAAC,WAAF,CAAsB,KAAtB,KAAgC,SAArC,EAAiD,CAAC,CAAC,WAAF,CAAsB,KAAtB,GAA8B,CAA9B;EACjD,QAAK,CAAC,CAAC,WAAF,CAAsB,GAAtB,KAA8B,SAAnC,EAA+C,CAAC,CAAC,WAAF,CAAsB,GAAtB,GAA4B,CAA5B;EAChD,GAnBD,EAnCuC;EAyDvC;EACA;;EACA,EAAA,IAAI,CAAC,IAAL,CAAU,UAAC,EAAD,EAAK,EAAL,EAAW;EACnB,QAAI,EAAE,CAAC,SAAP,EAAkB,OAAO,CAAP;EAClB,QAAI,EAAE,CAAC,SAAP,EAAkB,OAAO,CAAC,CAAR;EAClB,WAAO,EAAE,CAAC,QAAH,CAAY,IAAZ,GAAmB,EAAE,CAAC,QAAH,CAAY,IAAtC;EACD,GAJD,EA3DuC;EAkEvC;;EACA,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,MAAL,GAAc,CAAf,CAAJ,CAAsB,SAA9C;;EACA,MAAI,eAAJ,EAAqB;EACnB,QAAI,eAAe,KAAK,IAAI,CAAC,IAAI,CAAC,MAAL,GAAc,CAAf,CAA5B,EAA+C,MAAM,IAAI,UAAJ,CAAe,4CAAf,CAAN;EAChD,GAtEsC;EAyEvC;EACA;;;EACA,EAAA,IAAI,CAAC,OAAL,CAAa,UAAC,CAAD,EAAI,CAAJ,EAAS;EACnB,IAAA,CAAS,CAAC,WAAV,gBAA8B,IAAI,CAAC,MAAL,GAAc,CAAd,GAAkB,CAAhD;EACF,GAFD;EAIA,SAAO;EAAE,IAAA,IAAI,EAAE,IAAR;EAAuB,IAAA,SAAS,EAAG,SAAS,IAAI,IAAI,CAAC,CAAD;EAApD,GAAP;EACD;;EAED,SAAS,mBAAT,CAA6B,IAA7B,EAAyC;EACvC,SAAO,IAAI,GAAG,CAAP,KAAa,CAAb,KAAmB,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoB,IAAI,GAAG,GAAP,KAAe,CAAtD,CAAP;EACD;EAED;;;EACA,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,EAAD,EAAwB,YAAxB,EAAoD;EAC9E,oBAA4B,UAAU,CAAC,YAAD,CAAtC;EAAA,MAAQ,IAAR,eAAQ,IAAR;EAAA,MAAc,SAAd,eAAc,SAAd;;EACA,MAAM,eAAe,GAAqBpB,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EAC3E,IAAA,EAAE,EAAF,EAD2E;EAE3E,IAAA,IAAI,EAAJ,IAF2E;EAG3E,IAAA,SAAS,EAAT,SAH2E;EAI3E,IAAA,YAAY,EAAE,OAJ6D;EAK3E,IAAA,UAL2E,sBAKhE;EAAa;EALmD,MAKvC;EAClC,kCAAiB,KAAK,eAAL,CAAqB,YAArB,CAAjB;EAAA,UAAQ,IAAR,yBAAQ,IAAR;;EACA,aAAO,mBAAmB,CAAC,IAAD,CAA1B;EACD,KAR0E;EAS3E,IAAA,YAT2E,0BAS5C;EAC7B,aAAO,EAAP;EACD,KAX0E;EAY3E,IAAA,kBAZ2E,8BAYxD,YAZwD,EAY5C;EAC7B,UAAQ,KAAR,GAAkB,YAAlB,CAAQ,KAAR;EACA,UAAI,KAAK,KAAK,CAAd,EAAiB,OAAO,KAAK,UAAL,CAAgB,YAAhB,IAAgC,EAAhC,GAAqC,EAA5C;EACjB,aAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,OAAd,CAAsB,KAAtB,KAAgC,CAAhC,GAAoC,EAApC,GAAyC,EAAhD;EACD,KAhB0E;EAiB3E,IAAA,kBAjB2E,8BAiBxD,YAjBwD,EAiB5C;EAC7B,aAAO,KAAK,kBAAL,CAAwB,YAAxB,CAAP;EACD,KAnB0E;;EAoB3E;EACA,IAAA,eArB2E,2BAqB3D,YArB2D,EAqB/C;EAAA;;EAC1B,UAAM,UAAU,GAAG,SAAb,UAAa,CAAC,IAAD,EAAe,KAAf,EAAyC;EAC1D,YAAM,YAAY,GAAG,YAAY,CAAC,IAAD,CAAjC;;EACA,YAAI,YAAY,IAAI,IAAhB,IAAwB,YAAY,IAAI,KAA5C,EAAmD;EACjD,gBAAM,IAAI,UAAJ,iBAAwB,IAAxB,cAAgC,YAAhC,6CAA+E,KAA/E,EAAN;EACD;EACF,OALD;;EAMA,UAAM,WAAW,GAAG,SAAd,WAAc,CAAC,IAAD,EAAiB;EACnC,YAAI,OAAJ;;EACA,YAAM,oBAAoB,qCAAQ,YAAR;EAAsB,UAAA,IAAI,EAAJ;EAAtB,UAA1B;;EACA,YAAM,WAAW,GAAG,MAAI,CAAC,IAAL,CAAU,IAAV,CAAe,UAAC,CAAD,EAAI,CAAJ,EAAS;EAC1C,cAAI,CAAC,KAAK,MAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,CAA7B,EAAgC;EAC9B,gBAAI,CAAC,CAAC,SAAN,EAAiB;EACf;EACA;EACA,kBAAI,IAAI,GAAG,CAAX,EAAc,MAAM,IAAI,UAAJ,uBAA8B,IAA9B,iCAAyD,CAAC,CAAC,IAA3D,EAAN;EACd,cAAA,OAAO,GAAG,CAAC,CAAC,WAAF,CAAc,IAAd,GAAqB,IAA/B;EACA,qBAAO,IAAP;EACD,aAP6B;EAS9B;;;EACA,YAAA,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,WAAF,CAAc,IAArB,IAA6B,CAAC,CAAC,WAAF,GAAgB,CAAhB,GAAoB,CAAjD,CAAV;EACA,mBAAO,IAAP;EACD;;EACD,cAAM,UAAU,GAAG,gBAAgB,CAAC,oBAAjB,CAAsC,oBAAtC,EAA4D,CAAC,CAAC,WAA9D,CAAnB;;EACA,cAAI,UAAU,IAAI,CAAlB,EAAqB;EACnB,YAAA,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,WAAF,CAAc,IAArB,IAA6B,CAAC,CAAC,WAAF,GAAgB,CAAhB,GAAoB,CAAjD,CAAV;EACA,mBAAO,IAAP;EACD;;EACD,iBAAO,KAAP;EACD,SApBmB,CAApB;;EAqBA,YAAI,CAAC,WAAL,EAAkB,MAAM,IAAI,UAAJ,gBAAuB,IAAvB,iCAAN;EAClB,eAAO;EAAE,UAAA,OAAO,EAAP,OAAF;EAAW,UAAA,GAAG,EAAE,WAAW,CAAC;EAA5B,SAAP;EACD,OA1BD;;EA4BA,UAAM,IAAN,GAA6B,YAA7B,CAAM,IAAN;EAAA,UAAY,OAAZ,GAA6B,YAA7B,CAAY,OAAZ;EAAA,UAAqB,GAArB,GAA6B,YAA7B,CAAqB,GAArB;;EACA,UAAI,IAAI,IAAI,IAAZ,EAAkB;EAAA,2BACI,WAAW,CAAC,IAAD,CADf;;EACb,QAAA,OADa,gBACb,OADa;EACJ,QAAA,GADI,gBACJ,GADI;EAEhB,QAAA,UAAU,CAAC,KAAD,EAAQ,GAAR,CAAV;EACA,QAAA,UAAU,CAAC,SAAD,EAAY,OAAZ,CAAV;EACD,OAJD,MAIO,IAAI,OAAO,IAAI,IAAf,EAAqB;EAC1B,YAAM,WAAW,GACf,GAAG,KAAK,SAAR,GAAoB,SAApB,GAAgC,KAAK,IAAL,CAAU,IAAV,CAAe,UAAC,CAAD;EAAA,iBAAO,CAAC,CAAC,IAAF,KAAW,GAAX,IAAkB,CAAC,CAAC,WAAF,KAAkB,GAA3C;EAAA,SAAf,CADlC;EAEA,YAAI,CAAC,WAAL,EAAkB,MAAM,IAAI,UAAJ,eAAsB,GAAtB,wBAAuC,OAAvC,kCAAN;;EAClB,YAAI,OAAO,GAAG,CAAV,IAAe,WAAW,CAAC,SAA/B,EAA0C;EACxC,gBAAM,IAAI,UAAJ,oBAA2B,GAA3B,wCAA4D,IAA5D,EAAN;EACD;;EACD,YAAI,WAAW,CAAC,SAAhB,EAA2B;EACzB,UAAA,IAAI,GAAG,WAAW,CAAC,WAAZ,CAAwB,IAAxB,GAA+B,OAAtC;EACD,SAFD,MAEO;EACL,UAAA,IAAI,GAAG,OAAO,GAAG,WAAW,CAAC,WAAZ,CAAwB,IAAlC,IAA0C,WAAW,CAAC,WAAZ,GAA0B,CAA1B,GAA8B,CAAxE,CAAP;EACD;;EACD,QAAA,UAAU,CAAC,MAAD,EAAS,IAAT,CAAV,CAZ0B;EAc1B;EACA;EACA;;EAhB0B,4BAiBN,WAAW,CAAC,IAAD,CAjBL;;EAiBvB,QAAA,OAjBuB,iBAiBvB,OAjBuB;EAiBd,QAAA,GAjBc,iBAiBd,GAjBc;EAkB3B,OAlBM,MAkBA;EACL,cAAM,IAAI,UAAJ,CAAe,mDAAf,CAAN;EACD;;EACD,+CAAY,YAAZ;EAA0B,QAAA,IAAI,EAAJ,IAA1B;EAAgC,QAAA,OAAO,EAAP,OAAhC;EAAyC,QAAA,GAAG,EAAH;EAAzC;EACD,KAnF0E;EAoF3E,IAAA,kBApF2E,8BAsFzE,iBAtFyE,EAuFzE,KAvFyE,EAwFzE;EAAS;EAxFgE,MAwFnC;EAEtC,UAAI,YAAY,GAAG,iBAAnB,CAFsC;;EAItC,2BAA6B,YAA7B;EAAA,UAAQ,KAAR,kBAAQ,KAAR;EAAA,UAAe,SAAf,kBAAe,SAAf;EACA,UAAI,KAAK,KAAK,SAAd,EAAyB,YAAY,qCAAQ,YAAR;EAAsB,QAAA,KAAK,EAAE,mBAAmB,CAAC,SAAD;EAAhD,QAAZ;EACzB,WAAK,oBAAL,CAA0B,YAA1B;EACA,MAAA,YAAY,GAAG,KAAK,eAAL,CAAqB,YAArB,CAAf,CAPsC;;EAStC,MAAA,YAAY,GAAGC,cAAY,CAAC,gBAAgB,CAAC,kBAAlB,EAAsC,IAAtC,EAA4C,CAAC,YAAD,EAAe,KAAf,EAAsB,QAAtB,CAA5C,CAA3B;EACA,aAAO,YAAP;EACD,KAnG0E;EAoG3E,IAAA,eApG2E,2BAoGV,iBApGU,EAoGO;EAChF,UAAM,YAAY,GAAG,KAAK,kBAAL,CAAwB,iBAAxB,CAArB;EACA,UAAQ,IAAR,GAA6B,YAA7B,CAAQ,IAAR;EAAA,UAAc,KAAd,GAA6B,YAA7B,CAAc,KAAd;EAAA,UAAqB,GAArB,GAA6B,YAA7B,CAAqB,GAArB;EACA,UAAQ,SAAR,GAAsB,IAAtB,CAAQ,SAAR;EACA,UAAM,eAAe,GAAG,IAAI,GAAG,SAAS,CAAC,QAAV,CAAmB,IAA1B,IAAkC,SAAS,CAAC,WAAV,GAAwB,CAAxB,GAA4B,CAA9D,CAAxB;EACA,aAAOc,eAAA,CAAmB,eAAnB,EAAoC,KAApC,EAA2C,GAA3C,EAAgD,WAAhD,CAAP;EACD,KA1G0E;EA2G3E;EACA;EACA;EACA,IAAA,yBAAyB,EAAE,IAAI,IAAJ,CAAS,sBAAT,EACxB,kBADwB,CACL,qBADK,EACkB;EAAE,MAAA,QAAQ,EAAE;EAAZ,KADlB,EAExB,UAFwB,CAEb,IAFa,CA9GgD;EAiH3E,IAAA,+BAA+B,EAAE,KAjH0C;EAkH3E,IAAA,YAlH2E,wBAkH9D,YAlH8D,EAkHhD,OAlHgD,EAkHzC;EAChC,UAAI,KAAK,+BAAL,IAAwC,KAAK,yBAAjD,EAA4E;EAC1E,YAAM,kBAAkB,GAAGiB,cAAA,CAAkB,OAAO,CAAC,IAA1B,EAAgC,OAAO,CAAC,KAAxC,EAA+C,OAAO,CAAC,GAAvD,EAA4D,IAA5D,EAAkE,EAAlE,EAAsE,EAAtE,IAA4E,CAAvG;;EACA,YAAI,kBAAJ,EAAwB;EACtB,gBAAM,IAAI,UAAJ,CACJ,oBAAa,KAAK,EAAlB,mDACE,sEAFE,CAAN;EAID;EACF;EACF;EA5H0E,GAAvB,CAAtD;EA8HA,SAAO,eAAP;EACD,CAjID;;EAmIA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,EAAD,EAAwB,YAAxB,EAAoD;EAC7E,MAAM,IAAI,GAAqB,mBAAmB,CAAC,EAAD,EAAK,YAAL,CAAlD;EACA,SAAOhC,cAAY,CAAC,IAAD,EAAO;EACxB,IAAA,UADwB,sBACb;EAAa;EADA,MACY;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAQ,IAAR,GAAiB,YAAjB,CAAQ,IAAR;EACA,aAAO,CAAC,IAAI,GAAG,CAAR,IAAa,CAAb,KAAmB,CAA1B;EACD,KAZuB;EAaxB,IAAA,YAbwB,0BAaO;EAC7B,aAAO,EAAP;EACD,KAfuB;EAgBxB,IAAA,kBAhBwB,8BAgBL,YAhBK,EAgBO;EAC7B,UAAQ,KAAR,GAAkB,YAAlB,CAAQ,KAAR,CAD6B;;EAG7B,UAAI,KAAK,KAAK,EAAd,EAAkB,OAAO,KAAK,UAAL,CAAgB,YAAhB,IAAgC,CAAhC,GAAoC,CAA3C;EAClB,aAAO,EAAP;EACD,KArBuB;EAsBxB,IAAA,kBAtBwB,8BAsBL,YAtBK,EAsBO;EAC7B,aAAO,KAAK,kBAAL,CAAwB,YAAxB,CAAP;EACD;EAxBuB,GAAP,CAAnB;EA0BD,CA5BD;EA+BA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAM,aAAa,GAAG,kBAAkB,CAAC,SAAD,EAAY,CAAC;EAAE,EAAA,IAAI,EAAE,MAAR;EAAgB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAC,IAAT;EAAe,IAAA,KAAK,EAAE,CAAtB;EAAyB,IAAA,GAAG,EAAE;EAA9B;EAA1B,CAAD,CAAZ,CAAxC;EACA,IAAM,YAAY,GAAG,kBAAkB,CAAC,QAAD,EAAW,CAChD;EAAE,EAAA,IAAI,EAAE,MAAR;EAAgB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,GAAR;EAAa,IAAA,KAAK,EAAE,CAApB;EAAuB,IAAA,GAAG,EAAE;EAA5B;EAA1B,CADgD,EAEhD;EAAE,EAAA,IAAI,EAAE,MAAR;EAAgB,EAAA,SAAS,EAAE;EAA3B,CAFgD,CAAX,CAAvC;EAKA;;EACA,IAAM,cAAc,GAAG,kBAAkB,CAAC,UAAD,EAAa,CACpD;EAAE,EAAA,IAAI,EAAE,MAAR;EAAgB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAC,IAAT;EAAe,IAAA,KAAK,EAAE,CAAtB;EAAyB,IAAA,GAAG,EAAE;EAA9B;EAA1B,CADoD,EAEpD;EAAE,EAAA,IAAI,EAAE,MAAR;EAAgB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAR;EAAW,IAAA,KAAK,EAAE,CAAlB;EAAqB,IAAA,GAAG,EAAE;EAA1B,GAA1B;EAA0D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE;EAAR;EAAvE,CAFoD,CAAb,CAAzC;EAKA,IAAM,SAAS,GAAGA,cAAY,CAC5B,EAD4B,EAE5B,mBAAmB,CAAC,KAAD,EAAQ,CACzB;EAAE,EAAA,IAAI,EAAE,QAAR;EAAkB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA5B,CADyB,EAEzB;EAAE,EAAA,IAAI,EAAE,YAAR;EAAsB,EAAA,SAAS,EAAE;EAAjC,CAFyB,CAAR,CAFS,EAM5B;EACE,EAAA,+BAA+B,EAAE;EADnC,CAN4B,CAA9B;EAWA,IAAM,cAAc,GAAGA,cAAY,CACjC,EADiC,EAEjC,mBAAmB,CAAC,UAAD,EAAa,CAAC;EAAE,EAAA,IAAI,EAAE,IAAR;EAAc,EAAA,WAAW,EAAE,IAA3B;EAAiC,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAC,GAAT;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA3C,CAAD,CAAb,CAFc,EAGjC;EACE,EAAA,+BAA+B,EAAE;EADnC,CAHiC,CAAnC;EAQA,IAAM,aAAa,GAAGA,cAAY,CAChC,EADgC,EAEhC,mBAAmB,CAAC,SAAD,EAAY,CAC7B;EAAE,EAAA,IAAI,EAAE,IAAR;EAAc,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAR;EAAW,IAAA,KAAK,EAAE,CAAlB;EAAqB,IAAA,GAAG,EAAE;EAA1B;EAAxB,CAD6B,EAE7B;EAAE,EAAA,IAAI,EAAE,KAAR;EAAe,EAAA,SAAS,EAAE;EAA1B,CAF6B,CAAZ,CAFa,EAMhC;EACE,EAAA,aADF,yBACgB;EAAiD;EADjE,IAC8E;EAC1E,QAAM,GAAN,GAAuB,YAAvB,CAAM,GAAN;EAAA,QAAW,OAAX,GAAuB,YAAvB,CAAW,OAAX;EACA,QAAI,GAAG,KAAK,IAAZ,EAAkB,GAAG,GAAG,KAAN;EAClB,QAAI,GAAG,KAAK,IAAZ,EAAkB,GAAG,GAAG,IAAN;EAClB,WAAO;EAAE,MAAA,GAAG,EAAH,GAAF;EAAO,MAAA,OAAO,EAAP;EAAP,KAAP;EACD;EANH,CANgC,CAAlC;EAgBA,IAAM,cAAc,GAAqBA,cAAY,CACnD,EADmD;EAGnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,mBAAmB,CAAC,UAAD,EAAa;EAE9B;EACA;EAAE,EAAA,IAAI,EAAE,OAAR;EAAiB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B,GAA3B;EAA6D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA1E,CAH8B,EAI9B;EAAE,EAAA,IAAI,EAAE,QAAR;EAAkB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B,GAA5B;EAA8D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA3E,CAJ8B,EAK9B;EAAE,EAAA,IAAI,EAAE,OAAR;EAAiB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,EAArB;EAAyB,IAAA,GAAG,EAAE;EAA9B,GAA3B;EAA+D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,EAArB;EAAyB,IAAA,GAAG,EAAE;EAA9B;EAA5E,CAL8B,EAM9B;EAAE,EAAA,IAAI,EAAE,QAAR;EAAkB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B,GAA5B;EAA+D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA5E,CAN8B,EAO9B;EAAE,EAAA,IAAI,EAAE,OAAR;EAAiB,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B,GAA3B;EAA6D,EAAA,WAAW,EAAE;EAAE,IAAA,IAAI,EAAE,IAAR;EAAc,IAAA,KAAK,EAAE,CAArB;EAAwB,IAAA,GAAG,EAAE;EAA7B;EAA1E,CAP8B,EAQ9B;EAAE,EAAA,IAAI,EAAE,IAAR;EAAc,EAAA,QAAQ,EAAE;EAAE,IAAA,IAAI,EAAE,CAAR;EAAW,IAAA,KAAK,EAAE,CAAlB;EAAqB,IAAA,GAAG,EAAE;EAA1B;EAAxB,CAR8B,EAS9B;EAAE,EAAA,IAAI,EAAE,KAAR;EAAe,EAAA,SAAS,EAAE;EAA1B,CAT8B,CAAb,CA/BgC,EA0CnD;EACE;EACA;EACA,EAAA,SAAS,EAAE,MAHb;EAIE,EAAA,+BAA+B,EAAE,IAJnC;EAKE,EAAA,aALF,yBAK6C,YAL7C,EAK2D,OAL3D,EAKkE;EAC9D,QAAQ,GAAR,GAAyB,YAAzB,CAAQ,GAAR;EAAA,QAAa,OAAb,GAAyB,YAAzB,CAAa,OAAb;EACA,QAAc,OAAd,GAA0B,OAA1B,CAAQ,IAAR;EACA,QAAI,KAAK,IAAL,CAAU,IAAV,CAAe,UAAC,CAAD;EAAA,aAAO,CAAC,CAAC,IAAF,KAAW,GAAlB;EAAA,KAAf,CAAJ,EAA2C,OAAO;EAAE,MAAA,GAAG,EAAH,GAAF;EAAO,MAAA,OAAO,EAAP;EAAP,KAAP;EAC3C,WAAO,OAAO,GAAG,CAAV,GAAc;EAAE,MAAA,GAAG,EAAE,KAAP;EAAc,MAAA,OAAO,EAAE,IAAI;EAA3B,KAAd,GAAqD;EAAE,MAAA,GAAG,EAAE,IAAP;EAAa,MAAA,OAAO,EAAE;EAAtB,KAA5D;EACD;EAVH,CA1CmD,CAArD;EAwDA,IAAM,aAAa,GAAqBA,cAAY,CAAC,EAAD,EAAK,gBAAL,EAAuB;EACzE,EAAA,EAAE,EAAE,SADqE;EAEzE,EAAA,YAAY,EAAE,WAF2D;EAGzE,EAAA,UAHyE,sBAG9D,YAH8D,EAGhD,KAHgD,EAG3C;EAC5B,QAAM,MAAM,GAAI,KAA8B,YAA9B,CAA2C,YAAY,CAAC,IAAxD,EAA8D,KAA9D,CAAhB;EACA,WAAO,aAAa,CAAC,MAAD,CAAb,CAAsB,MAAtB,KAAiC,EAAxC;EACD,GANwE;EAOzE,EAAA,YAPyE,wBAO5D,YAP4D,EAO9C,KAP8C,EAOzC;EAC9B,WAAQ,KAA8B,UAA9B,CAAyC,YAAzC,EAAuD,KAAvD,IAAgE,EAAhE,GAAqE,EAA7E;EACD,GATwE;EAUzE,EAAA,kBAAkB,EAAE;EAAC;EAAD;EAAA,WAAwB,EAAxB;EAAA,GAVqD;EAWzE,EAAA,kBAAkB,EAAE;EAAC;EAAD;EAAA,WAAwB,EAAxB;EAAA,GAXqD;EAYzE,EAAA,YAZyE,wBAcvE,YAduE,EAevE,KAfuE,EAelE;EAAA;;EAEL,QAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B,YAAM,IAAI,SAAJ,CAAc,cAAd,CAAN;EACD;;EACD,QAAM,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe;EAAE,MAAA,IAAI,EAAE,cAAR;EAAwB,MAAA,YAAY,EAAZ,YAAxB;EAAsC,MAAA,EAAE,EAAE,KAAK;EAA/C,KAAf,CAAZ;EACA,QAAM,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,GAAV,CAAf;EACA,QAAI,MAAJ,EAAY,OAAO,MAAP;EACZ,QAAM,cAAc,GAAG,KAAK,YAAL,EAAvB;;EACA,QAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,OAAD,EAAkB,YAAlB,EAA0C;EAChE,UAAM,aAAa,GAAG,kBAAkB,CAAC;EAAE,QAAA,OAAO,EAAP,OAAF;EAAW,QAAA,QAAQ,EAAE,CAArB;EAAwB,QAAA,MAAM,EAAE;EAAhC,OAAD,CAAxC;EACA,UAAM,UAAU,GAAG,IAAI,IAAJ,CAAS,aAAT,CAAnB,CAFgE;;EAIhE,MAAA,UAAU,CAAC,UAAX,CAAsB,YAAY,GAAG,CAArC;EACA,UAAM,YAAY,GAAG,cAAc,CAAC,aAAf,CAA6B,UAA7B,CAArB;EACA,UAAM,mBAAmB,GAAG,YAAY,CAAC,IAAb,CAAkB,UAAC,EAAD;EAAA,eAAQ,EAAE,CAAC,IAAH,KAAY,OAApB;EAAA,OAAlB,EAA+C,KAA3E;EACA,UAAM,WAAW,GAAG,CAAC,YAAY,CAAC,IAAb,CAAkB,UAAC,EAAD;EAAA,eAAQ,EAAE,CAAC,IAAH,KAAY,KAApB;EAAA,OAAlB,EAA6C,KAAlE;EACA,UAAI,oBAAoB,GAA4D,YAAY,CAAC,IAAb,CAClF,UAAC,EAAD;EAAA,eAAS,EAAE,CAAC,IAAH,KAAuB,aAAhC;EAAA,OADkF,CAApF;;EAGA,UAAI,oBAAoB,KAAK,SAA7B,EAAwC;EACtC,QAAA,oBAAoB,GAAG,CAAC,oBAAoB,CAAC,KAA7C;EACD,OAFD,MAEO;EACL;EACA;EACA,cAAM,IAAI,UAAJ,kEACsD,MAAI,CAAC,EAD3D,iDAAN;EAGD;;EACD,aAAO;EAAE,QAAA,mBAAmB,EAAnB,mBAAF;EAAuB,QAAA,WAAW,EAAX,WAAvB;EAAoC,QAAA,oBAAoB,EAApB;EAApC,OAAP;EACD,KArBD,CATK;EAiCL;;;EACA,QAAI,YAAY,GAAG,EAAnB;;EACA,2BAAiE,eAAe,CAAC,YAAD,EAAe,YAAf,CAAhF;EAAA,QAAM,mBAAN,oBAAM,mBAAN;EAAA,QAA2B,WAA3B,oBAA2B,WAA3B;EAAA,QAAwC,oBAAxC,oBAAwC,oBAAxC,CAnCK;EAsCL;;;EACA,QAAI,mBAAmB,KAAK,GAA5B,EAAiC;EAC/B,MAAA,YAAY,IAAI,EAAhB;;EAD+B,8BAES,eAAe,CAAC,YAAD,EAAe,YAAf,CAFxB;;EAE5B,MAAA,mBAF4B,qBAE5B,mBAF4B;EAEP,MAAA,WAFO,qBAEP,WAFO;EAGhC,KA1CI;EA6CL;;;EACA,IAAA,YAAY,IAAI,WAAW,GAAG,CAA9B;EACA,QAAM,MAAM,GAAG,EAAf,CA/CK;;EAgDL,QAAI,UAAU,GAAG,CAAjB;EACA,QAAI,cAAJ;EACA,QAAI,cAAJ;EACA,QAAI,IAAI,GAAG,KAAX;;EACA,OAAG;EAAA,8BAC6D,eAAe,CAAC,YAAD,EAAe,YAAf,CAD5E;;EACE,MAAA,mBADF,qBACE,mBADF;EACuB,MAAA,WADvB,qBACuB,WADvB;EACoC,MAAA,oBADpC,qBACoC,oBADpC;;EAED,UAAI,cAAJ,EAAoB;EAClB,QAAA,MAAM,CAAC,cAAD,CAAN,CAAuB,WAAvB,GAAqC,cAAc,GAAG,EAAjB,GAAsB,WAA3D;EACD;;EACD,UAAI,oBAAoB,KAAK,YAA7B,EAA2C;EACzC,QAAA,IAAI,GAAG,IAAP;EACD,OAFD,MAEO;EACL,QAAA,MAAM,CAAC,mBAAD,CAAN,GAA8B;EAAE,UAAA,UAAU,EAAE,UAAU;EAAxB,SAA9B,CADK;EAGL;EACA;;EACA,QAAA,YAAY,IAAI,EAAhB;EACD;;EACD,MAAA,cAAc,GAAG,WAAjB;EACA,MAAA,cAAc,GAAG,mBAAjB;EACD,KAhBD,QAgBS,CAAC,IAhBV;;EAiBA,IAAA,MAAM,CAAC,cAAD,CAAN,CAAuB,WAAvB,GAAqC,cAAc,GAAG,EAAjB,GAAsB,WAA3D;EAEA,IAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,MAAf;EACA,WAAO,MAAP;EACD,GAxFwE;EAyFzE,EAAA,eAzFyE,2BAyFzD,YAzFyD,EAyF7C;EAC1B,QAAQ,IAAR,GAAwB,YAAxB,CAAQ,IAAR;EAAA,QAAc,KAAd,GAAwB,YAAxB,CAAc,KAAd;EACA,WAAO;EAAE,MAAA,IAAI,EAAJ,IAAF;EAAQ,MAAA,KAAK,EAAE,KAAK,IAAI,EAAT,GAAc,EAAd,GAAmB,KAAK,GAAG,CAA1C;EAA6C,MAAA,GAAG,EAAE;EAAlD,KAAP;EACD,GA5FwE;EA6FzE,EAAA,kBA7FyE,8BA+FvE,YA/FuE,EAgGvE,KAhGuE,EAkGjD;EAAA,QADtB,QACsB,uEADX,WACW;EAAA,QAAtB,cAAsB,uEAAL,KAAK;EAEtB,QAAM,IAAN,GAA2D,YAA3D,CAAM,IAAN;EAAA,QAAY,KAAZ,GAA2D,YAA3D,CAAY,KAAZ;EAAA,QAAmB,UAAnB,GAA2D,YAA3D,CAAmB,UAAnB;EAAA,QAA+B,GAA/B,GAA2D,YAA3D,CAA+B,GAA/B;EAAA,QAAoC,SAApC,GAA2D,YAA3D,CAAoC,SAApC;EAAA,QAA+C,OAA/C,GAA2D,YAA3D,CAA+C,OAA/C;;EACA,QAAI,cAAJ,EAAoB;EAClB;EACA;EACA;EACA,MAAA,IAAI,GAAG,OAAP;EACA,UAAI,UAAU,IAAI,UAAU,KAAK,KAAjC,EAAwC,MAAM,IAAI,UAAJ,yCAAgD,UAAhD,EAAN;;EACxC,UAAM,UAAS,GAAG,cAAc,CAAC,KAAD,EAAQ,UAAU,KAAK,SAAvB,CAAhC;;EACA,UAAM,WAAW,aAAM,KAAN,SAAc,UAAU,IAAI,EAA5B,CAAjB;EACA,UAAM,MAAM,GAAI,KAA8B,YAA9B,CAA2C,IAA3C,EAAiD,KAAjD,CAAhB;EACA,UAAM,SAAS,GAAG,MAAM,CAAC,WAAD,CAAxB;EACA,UAAI,SAAS,KAAK,SAAlB,EAA6B,MAAM,IAAI,UAAJ,2BAAkC,WAAlC,8BAAiE,IAAjE,EAAN;EAC7B,MAAA,KAAK,GAAG,SAAS,CAAC,UAAlB;EACA,aAAO;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,KAAK,EAAL,KAAR;EAAe,QAAA,GAAG,EAAH,GAAf;EAAoB,QAAA,GAAG,EAAE,SAAzB;EAAoC,QAAA,OAAO,EAAP,OAApC;EAA6C,QAAA,SAAS,EAAT;EAA7C,OAAP;EACD,KAbD,MAaO;EACL;EACA;EACA,WAAK,oBAAL,CAA0B,YAA1B;EACA,UAAI,IAAI,KAAK,SAAb,EAAwB,IAAI,GAAG,OAAP;EACxB,UAAI,OAAO,KAAK,SAAhB,EAA2B,OAAO,GAAG,IAAV;;EAC3B,UAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,YAAM,OAAM,GAAI,KAA8B,YAA9B,CAA2C,IAA3C,EAAiD,KAAjD,CAAhB;;EACA,YAAI,UAAU,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B,KAA9B,CAAoC,CAApC,CAAjB;EACA,YAAI,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAtB,EAA2B,UAAU,GAAG,UAAU,CAAC,KAAX,CAAiB,CAAjB,CAAb;EAC3B,YAAI,UAAS,GAAG,OAAM,CAAC,UAAD,CAAtB;EACA,QAAA,KAAK,GAAG,UAAS,IAAI,UAAS,CAAC,UAA/B,CALuB;;EAOvB,YACE,KAAK,KAAK,SAAV,IACA,SAAS,CAAC,QAAV,CAAmB,GAAnB,CADA,IAEA,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,QAAzB,CAAkC,SAAlC,CAFD,IAGA,QAAQ,KAAK,WAJf,EAKE;EACA,cAAI,SAAS,GAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAhB;EACA,cAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B,SAAS,GAAG,SAAS,CAAC,KAAV,CAAgB,CAAhB,CAAZ;EAC1B,UAAA,UAAS,GAAG,OAAM,CAAC,SAAD,CAAlB;;EACA,cAAI,UAAJ,EAAe;EAAA,8BAC8B,UAD9B;EACG,YAAA,GADH,eACV,WADU;EACoB,YAAA,KADpB,eACQ,UADR;EAEb,YAAA,SAAS,GAAG,cAAc,CAAC,SAAD,CAA1B;EACD;EACF;;EACD,YAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,gBAAM,IAAI,UAAJ,2BAAkC,SAAlC,8BAA+D,IAA/D,EAAN;EACD;EACF,OAxBD,MAwBO,IAAI,SAAS,KAAK,SAAlB,EAA6B;EAClC,YAAM,QAAM,GAAI,KAA8B,YAA9B,CAA2C,IAA3C,EAAiD,KAAjD,CAAhB;;EACA,YAAM,YAAY,GAAG,aAAa,CAAC,QAAD,CAAlC;EACA,YAAM,YAAY,GAAG,YAAY,CAAC,MAAlC;;EACA,YAAI,QAAQ,KAAK,QAAjB,EAA2B;EACzB,UAAA2B,aAAA,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,YAA3B;EACA,UAAAA,aAAA,CAAiB,GAAjB,EAAsB,CAAtB,EAAyB,KAAK,kBAAL,EAAzB;EACD,SAHD,MAGO;EACL,UAAA,KAAK,GAAGC,gBAAA,CAAoB,KAApB,EAA2B,CAA3B,EAA8B,YAA9B,CAAR;EACA,UAAA,GAAG,GAAGA,gBAAA,CAAoB,GAApB,EAAyB,CAAzB,EAA4B,KAAK,kBAAL,EAA5B,CAAN;EACD;;EACD,YAAM,kBAAkB,GAAG,YAAY,CAAC,IAAb,CAAkB;EAAA;EAAA,cAAI,CAAJ;;EAAA,iBAAY,CAA4B,CAAC,UAA7B,KAA4C,KAAxD;EAAA,SAAlB,CAA3B;;EACA,YAAI,kBAAkB,KAAK,SAA3B,EAAsC;EACpC,gBAAM,IAAI,UAAJ,yBAAgC,KAAhC,8BAAyD,IAAzD,EAAN;EACD;;EACD,QAAA,SAAS,GAAG,cAAc,CACxB,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,OAAtB,CAA8B,KAA9B,EAAqC,EAArC,CADwB,EAExB,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,OAAtB,CAA8B,KAA9B,MAAyC,CAAC,CAFlB,CAA1B;EAID,OAnBM,MAmBA;EACL;EACA,YAAM,QAAM,GAAI,KAA8B,YAA9B,CAA2C,IAA3C,EAAiD,KAAjD,CAAhB;;EACA,YAAI,WAAU,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B,KAA9B,CAAoC,CAApC,CAAjB;;EACA,YAAI,WAAU,CAAC,CAAD,CAAV,KAAkB,GAAtB,EAA2B,WAAU,GAAG,WAAU,CAAC,KAAX,CAAiB,CAAjB,CAAb;EAC3B,YAAM,WAAS,GAAG,QAAM,CAAC,WAAD,CAAxB;EACA,YAAI,CAAC,WAAL,EAAgB,MAAM,IAAI,UAAJ,+BAAsC,SAAtC,8BAAmE,IAAnE,EAAN;;EAChB,YAAI,KAAK,KAAK,WAAS,CAAC,UAAxB,EAAoC;EAClC,gBAAM,IAAI,UAAJ,qBAA4B,SAA5B,0CAAqE,KAArE,8BAA8F,IAA9F,EAAN;EACD;EACF;;EACD,+CAAY,YAAZ;EAA0B,QAAA,IAAI,EAAJ,IAA1B;EAAgC,QAAA,OAAO,EAAP,OAAhC;EAAyC,QAAA,KAAK,EAAL,KAAzC;EAAgD,QAAA,SAAS,EAAT,SAAhD;EAA2D,QAAA,GAAG,EAAH;EAA3D;EACD;EACF,GAhLwE;EAiLzE;EACA,EAAA,MAAM,EAAE;EAlLiE,CAAvB,CAApD;;EAsLA,IAAM,WAAW,GAAG5B,cAAY,CAAC,EAAD,oCAAU,aAAV;EAAyB,EAAA,EAAE,EAAE;EAA7B,GAAhC;EA4DA;;;;;EAKG;;EACH,IAAM,iBAAiB,GAAsB;EAC3C,EAAA,cAD2C,0BACmC,WADnC,EACgD,OADhD,EACyD,QADzD,EACiE;EAC1G,QAAM,QAAQ,GAAGQ,kBAAA,CAAsB,OAAtB,CAAjB;EACA,QAAM,KAAK,GAAG,IAAI,cAAJ,EAAd,CAF0G;;EAI1G,QAAM,MAAM,GAAGM,qBAAA,CAAyB,WAAzB,EAAsC,CACnD,CAAC,KAAD,CADmD,EAEnD,CAAC,KAAD,EAAQ,SAAR,CAFmD,EAGnD,CAAC,SAAD,EAAY,SAAZ,CAHmD,EAInD,CAAC,OAAD,EAAU,SAAV,CAJmD,EAKnD,CAAC,WAAD,EAAc,SAAd,CALmD,EAMnD,CAAC,MAAD,EAAS,SAAT,CANmD,CAAtC,CAAf;;EAQA,gCAA6B,KAAK,MAAL,CAAY,iBAAZ,CAA8B,MAA9B,EAAsC,QAAtC,EAAgD,KAAhD,CAA7B;EAAA,QAAQ,IAAR,yBAAQ,IAAR;EAAA,QAAc,KAAd,yBAAc,KAAd;EAAA,QAAqB,GAArB,yBAAqB,GAArB;;EACA,QAAM,MAAM,GAAGE,kBAAA,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,QAAxC,CAAf;EACA,IAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB;EACA,WAAO,MAAP;EACD,GAjB0C;EAkB3C,EAAA,mBAlB2C,+BAkBwC,WAlBxC,EAkBqD,OAlBrD,EAkB8D,QAlB9D,EAkBsE;EAC/G,QAAM,QAAQ,GAAGR,kBAAA,CAAsB,OAAtB,CAAjB;EACA,QAAM,KAAK,GAAG,IAAI,cAAJ,EAAd,CAF+G;;EAI/G,QAAM,MAAM,GAAGM,qBAAA,CAAyB,WAAzB,EAAsC,CACnD,CAAC,KAAD,EAAQ,SAAR,CADmD,EAEnD,CAAC,SAAD,EAAY,SAAZ,CAFmD,EAGnD,CAAC,OAAD,EAAU,SAAV,CAHmD,EAInD,CAAC,WAAD,EAAc,SAAd,CAJmD,EAKnD,CAAC,MAAD,EAAS,SAAT,CALmD,CAAtC,CAAf;;EAOA,iCAA6B,KAAK,MAAL,CAAY,iBAAZ,mCAAmC,MAAnC;EAA2C,MAAA,GAAG,EAAE;EAAhD,QAAqD,QAArD,EAA+D,KAA/D,CAA7B;EAAA,QAAQ,IAAR,0BAAQ,IAAR;EAAA,QAAc,KAAd,0BAAc,KAAd;EAAA,QAAqB,GAArB,0BAAqB,GAArB;;EACA,QAAM,MAAM,GAAGI,uBAAA,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,QAAxC;EAAkD;EAAwB,IAAA,GAA1E,CAAf;EACA,IAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB;EACA,WAAO,MAAP;EACD,GAjC0C;EAkC3C,EAAA,kBAlC2C,8BAoCzC,WApCyC,EAqCzC,OArCyC,EAsCzC,QAtCyC,EAsCN;EAEnC,QAAM,QAAQ,GAAGV,kBAAA,CAAsB,OAAtB,CAAjB,CAFmC;EAInC;EACA;EACA;;EACA,QAAM,KAAK,GAAG,IAAI,cAAJ,EAAd;EACA,QAAM,MAAM,GAAGM,qBAAA,CACb,WADa,EAEb,CACE,CAAC,KAAD,CADF,EAEE,CAAC,KAAD,EAAQ,SAAR,CAFF,EAGE,CAAC,SAAD,EAAY,SAAZ,CAHF,EAIE,CAAC,OAAD,EAAU,SAAV,CAJF,EAKE,CAAC,WAAD,EAAc,SAAd,CALF,EAME,CAAC,MAAD,EAAS,SAAT,CANF,CAFa,CAAf;;EAWA,gCAA6B,KAAK,MAAL,CAAY,kBAAZ,CAA+B,MAA/B,EAAuC,QAAvC,EAAiD,KAAjD,CAA7B;EAAA,QAAQ,IAAR,yBAAQ,IAAR;EAAA,QAAc,KAAd,yBAAc,KAAd;EAAA,QAAqB,GAArB,yBAAqB,GAArB,CAnBmC;;;EAqBnC,QAAM,MAAM,GAAGK,sBAAA,CAA0B,KAA1B,EAAiC,GAAjC,EAAsC,QAAtC;EAAgD;EAAyB,IAAA,IAAzE,CAAf;EACA,IAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB;EACA,WAAO,MAAP;EACD,GA9D0C;EA+D3C,EAAA,MA/D2C,kBA+DpC,WA/DoC,EA+DzB;EAChB,QAAI,MAAM,GAAG,WAAb;EACA,QAAI,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAJ,EAA6B,MAAM,gCAAO,MAAP,IAAe,KAAf,EAAsB,SAAtB,EAAN;EAC7B,WAAO,MAAP;EACD,GAnE0C;EAoE3C,EAAA,WApE2C,uBAoE/B,MApE+B,EAoEvB,gBApEuB,EAoEP;EAClC,QAAM,UAAU,sBAAQ,MAAR,CAAhB;;EACA,QAAM,oBAAoB,sBAAQ,gBAAR,CAA1B,CAFkC;EAIlC;;;EACA,QAAQ,KAAR,GAA8D,UAA9D,CAAQ,KAAR;EAAA,QAAe,SAAf,GAA8D,UAA9D,CAAe,SAAf;EAAA,QAA0B,IAA1B,GAA8D,UAA9D,CAA0B,IAA1B;EAAA,QAA8D,UAA9D,CAAgC,GAAhC;EAAA,QAA8D,UAA9D,CAAqC,OAArC;EAAA,YAAiD,QAAjD,4BAA8D,UAA9D;;EACA,QACS,QADT,GAMI,oBANJ,CACE,KADF;EAAA,QAEa,YAFb,GAMI,oBANJ,CAEE,SAFF;EAAA,QAGQ,OAHR,GAMI,oBANJ,CAGE,IAHF;EAAA,QAIO,MAJP,GAMI,oBANJ,CAIE,GAJF;EAAA,QAKW,UALX,GAMI,oBANJ,CAKE,OALF;;EAOA,QAAI,QAAQ,KAAK,SAAb,IAA0B,YAAY,KAAK,SAA/C,EAA0D;EACxD,MAAA,QAAQ,CAAC,KAAT,GAAiB,KAAjB;EACA,MAAA,QAAQ,CAAC,SAAT,GAAqB,SAArB;EACD;;EACD,QAAI,OAAO,KAAK,SAAZ,IAAyB,MAAM,KAAK,SAApC,IAAiD,UAAU,KAAK,SAApE,EAA+E;EAC7E;EACA;EACA;EACA,MAAA,QAAQ,CAAC,IAAT,GAAgB,IAAhB;EACD;;EACD,6CAAY,QAAZ,GAAyB,oBAAzB;EACD,GA5F0C;EA6F3C,EAAA,OA7F2C,mBA+FzC,IA/FyC,EAgGzC,KAhGyC,EAiGzC,MAjGyC,EAkGzC,KAlGyC,EAmGzC,IAnGyC,EAoGzC,QApGyC,EAqGzC,QArGyC,EAqGd;EAE3B,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,QAAM,KAAK,GAAG,KAAK,MAAL,CAAY,WAAZ,CAAwB,YAAxB,EAAsC;EAAE,MAAA,KAAK,EAAL,KAAF;EAAS,MAAA,MAAM,EAAN,MAAT;EAAiB,MAAA,KAAK,EAAL,KAAjB;EAAwB,MAAA,IAAI,EAAJ;EAAxB,KAAtC,EAAsE,QAAtE,EAAgF,KAAhF,CAAd;EACA,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,KAA9B,EAAqC,WAArC,EAAkD,KAAlD,CAAjB;EACA,QAAQ,IAAR,GAA6B,QAA7B,CAAQ,IAAR;EAAA,QAAc,KAAd,GAA6B,QAA7B,CAAc,KAAd;EAAA,QAAqB,GAArB,GAA6B,QAA7B,CAAqB,GAArB;EACA,QAAM,iBAAiB,GAAGH,kBAAA,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,QAAxC,CAA1B,CAP2B;;EAS3B,QAAM,QAAQ,GAAG,IAAI,cAAJ,CAAmB,KAAnB,CAAjB;EACA,IAAA,QAAQ,CAAC,SAAT,CAAmB,iBAAnB;EACA,WAAO,iBAAP;EACD,GAjH0C;EAkH3C,EAAA,SAlH2C,qBAoHzC,GApHyC,EAqHzC,GArHyC,EAsHzC,WAtHyC,EAsHX;EAE9B,QAAM,QAAQ,GAAG,cAAc,CAAC,iBAAf,CAAiC,GAAjC,CAAjB;EACA,QAAM,QAAQ,GAAG,cAAc,CAAC,iBAAf,CAAiC,GAAjC,CAAjB;EACA,QAAM,WAAW,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,GAAnC,EAAwC,QAAxC,CAApB;EACA,QAAM,WAAW,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,GAAnC,EAAwC,QAAxC,CAApB;EACA,QAAM,MAAM,GAAG,KAAK,MAAL,CAAY,aAAZ,CAA0B,WAA1B,EAAuC,WAAvC,EAAoD,WAApD,EAAiE,QAAjE,CAAf;EACA,WAAO,MAAP;EACD,GA9H0C;EA+H3C,EAAA,IA/H2C,gBA+HyB,IA/HzB,EA+HiD;EAC1F,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,IAApB;EACD,GAnI0C;EAoI3C,EAAA,KApI2C,iBAoI0B,IApI1B,EAoIkD;EAC3F,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,KAApB;EACD,GAxI0C;EAyI3C,EAAA,GAzI2C,eAyIwB,IAzIxB,EAyIgD;EACzF,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,GAApB;EACD,GA7I0C;EA8I3C,EAAA,GA9I2C,eA8IwB,IA9IxB,EA8IgD;EACzF,QAAI,CAAC,KAAK,MAAL,CAAY,MAAjB,EAAyB,OAAO,SAAP;EACzB,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,GAApB;EACD,GAnJ0C;EAoJ3C,EAAA,OApJ2C,mBAoJ4B,IApJ5B,EAoJoD;EAC7F,QAAI,CAAC,KAAK,MAAL,CAAY,MAAjB,EAAyB,OAAO,SAAP;EACzB,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,OAApB;EACD,GAzJ0C;EA0J3C,EAAA,SA1J2C,qBA0J8B,IA1J9B,EA0JsD;EAC/F,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,WAAO,YAAY,CAAC,SAApB;EACD,GA9J0C;EA+J3C,EAAA,SA/J2C,qBA+JjC,IA/JiC,EA+JT;EAChC,WAAO,IAAI,CAAC,SAAD,CAAJ,CAAgB,SAAhB,CAA0B,IAA1B,CAAP;EACD,GAjK0C;EAkK3C,EAAA,SAlK2C,qBAkK8B,IAlK9B,EAkKsD;EAC/F,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,IAA9B,EAAoC,KAApC,CAArB;EACA,QAAM,WAAW,GAAG,KAAK,MAAL,CAAY,mBAAZ,CAAgC,YAAhC,CAApB;EACA,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,WAA9B,EAA2C,YAA3C,EAAyD,KAAzD,CAAjB;EACA,WAAO,QAAQ,GAAG,CAAlB;EACD,GAxK0C;EAyK3C,EAAA,UAzK2C,sBAyKhC,IAzKgC,EAyKR;EACjC,WAAO,IAAI,CAAC,SAAD,CAAJ,CAAgB,UAAhB,CAA2B,IAA3B,CAAP;EACD,GA3K0C;EA4K3C,EAAA,UA5K2C,sBA4KhC,IA5KgC,EA4KR;EACjC,WAAO,IAAI,CAAC,SAAD,CAAJ,CAAgB,UAAhB,CAA2B,IAA3B,CAAP;EACD,GA9K0C;EA+K3C,EAAA,WA/K2C,uBA+KgC,IA/KhC,EA+KyC;EAClF,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB,CAFkF;;EAKlF,QAAM,GAAG,GAAG,KAAK,MAAL,CAAY,kBAAZ,CAA+B,YAA/B,CAAZ;EACA,QAAM,GAAG,GAAG,KAAK,MAAL,CAAY,kBAAZ,CAA+B,YAA/B,CAAZ;EACA,QAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,GAAP,CAPiE;EAUlF;EACA;;EACA,QAAM,oBAAoB,GAAG,KAAK,MAAL,CAAY,oBAAZ,CAAiC,YAAjC,CAA7B;EACA,QAAM,wBAAwB,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,oBAA9B,EAAoD,CAApD,EAAuD,WAAvD,EAAoE,KAApE,CAAjC;EACA,QAAM,MAAM,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,oBAA9B,EAAoD,wBAApD,EAA8E,KAA9E,CAAf;EACA,WAAO,MAAP;EACD,GA/L0C;EAgM3C,EAAA,UAhM2C,sBAgM+B,SAhM/B,EAgMwC;EACjF,QAAI,IAAI,GAAG,SAAX;EACA,QAAI,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAZ,EAA8B,IAAI,GAAGV,cAAA,CAAkB,IAAlB,CAAP;EAC9B,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,QAAM,mBAAmB,GAAG,KAAK,MAAL,CAAY,mBAAZ,CAAgC,YAAhC,CAA5B;EACA,QAAM,uBAAuB,GAAG,KAAK,MAAL,CAAY,WAAZ,CAAwB,mBAAxB,EAA6C;EAAE,MAAA,KAAK,EAAE;EAAT,KAA7C,EAA2D,WAA3D,EAAwE,KAAxE,CAAhC;EACA,QAAM,MAAM,GAAG,KAAK,MAAL,CAAY,iBAAZ,CAA8B,mBAA9B,EAAmD,uBAAnD,EAA4E,KAA5E,CAAf;EACA,WAAO,MAAP;EACD,GAzM0C;EA0M3C,EAAA,YA1M2C,wBA0MiC,IA1MjC,EA0MqC;EAC9E,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,QAAM,MAAM,GAAG,KAAK,MAAL,CAAY,YAAZ,CAAyB,YAAzB,EAAuC,KAAvC,CAAf;EACA,WAAO,MAAP;EACD,GA/M0C;EAgN3C,EAAA,UAhN2C,sBAgN+B,SAhN/B,EAgNwC;EACjF,QAAI,IAAI,GAAG,SAAX;EACA,QAAI,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAZ,EAA8B,IAAI,GAAGA,cAAA,CAAkB,IAAlB,CAAP;EAC9B,QAAM,KAAK,GAAG,cAAc,CAAC,iBAAf,CAAiC,IAAjC,CAAd;EACA,QAAM,YAAY,GAAG,KAAK,MAAL,CAAY,sBAAZ,CAAmC,IAAnC,EAAyC,KAAzC,CAArB;EACA,QAAM,MAAM,GAAG,KAAK,MAAL,CAAY,UAAZ,CAAuB,YAAvB,EAAqC,KAArC,CAAf;EACA,WAAO,MAAP;EACD;EAvN0C,CAA7C;EA0NA,IAAI,CAAC,QAAD,CAAJ,GAAiBN,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA7B;EACA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA9B;EACC,CAAC,kBAAD,EAAqB,cAArB,EAAqC,eAArC,EAAsD,cAAtD,EAAsE,UAAtE,EAA4F,OAA5F,CAAoG,UAAC,EAAD,EAAO;EAC1G,EAAA,IAAI,CAAC,EAAD,CAAJ,GAAWA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,IAAA,MAAM,oCAAO,aAAP;EAAsB,MAAA,EAAE,EAAF;EAAtB;EAAR,GAAxB,CAAvB;EACD,CAFA;EAGD,IAAI,CAAC,SAAD,CAAJ,GAAkBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA9B;EACA,IAAI,CAAC,UAAD,CAAJ,GAAmBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA/B;EACA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA9B;EACA,IAAI,CAAC,QAAD,CAAJ,GAAiBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA7B;EACA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA9B;EACA,IAAI,CAAC,OAAD,CAAJ,GAAgBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA5B;EACA,IAAI,CAAC,KAAD,CAAJ,GAAcA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA1B;EACA,IAAI,CAAC,QAAD,CAAJ,GAAiBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA7B;EACA,IAAI,CAAC,UAAD,CAAJ,GAAmBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA/B;EACA,IAAI,CAAC,UAAD,CAAJ,GAAmBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA/B;EACA,IAAI,CAAC,SAAD,CAAJ,GAAkBA,cAAY,CAAC,EAAD,EAAK,iBAAL,EAAwB;EAAE,EAAA,MAAM,EAAE;EAAV,CAAxB,CAA9B;EAEA,IAAM,oBAAoB,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,CAA7B;EAEM,SAAU,iBAAV,CAA4B,EAA5B,EAAsC;EAC1C,SAAO,aAAa,CAAC,IAAd,CAAmB,oBAAnB,EAAyC,EAAzC,CAAP;EACD;;ECt4ED,IAAM,WAAW,GAAG,6FAApB;EACA,IAAM,eAAe,GAAG,4EAAxB;EACA,IAAM,UAAU,GAAG,IAAI,MAAJ,iBACR,WAAW,CAAC,MADJ,uBACuB,WAAW,CAAC,MADnC,qCACoE,eAAe,CAAC,MADpF,OAAnB;EAIA,IAAM,YAAY,GAAG,kBAArB;EACA,IAAM,UAAU,GAAG,IAAI,MAAJ,cAAiB,YAAY,CAAC,MAA9B,iBAA2C,YAAY,CAAC,MAAxD,SAAnB;EAEA,IAAM,QAAQ,GAAG,2BAAjB;EACA,IAAM,SAAS,GAAG,mBAAlB;EACA,IAAM,OAAO,GAAG,yBAAhB;EACA,IAAM,SAAS,GAAG,IAAI,MAAJ,YACZ,QAAQ,CAAC,MADG,mBACY,SAAS,CAAC,MADtB,gBACkC,OAAO,CAAC,MAD1C,gBACsD,SAAS,CAAC,MADhE,eAC2E,OAAO,CAAC,MADnF,QAAlB;EAGA,IAAM,SAAS,GAAG,2FAAlB;EACO,IAAM,MAAM,GAAG,wFAAf;EACP,IAAM,SAAS,GAAG,IAAI,MAAJ,wBAA2B,MAAM,CAAC,MAAlC,uBAAqD,UAAU,CAAC,MAAhE,YAAlB;EACA,IAAM,QAAQ,GAAG,IAAI,MAAJ,oBAAuB,UAAU,CAAC,MAAlC,UAAjB;EAEO,IAAMiC,SAAO,GAAG,IAAI,MAAJ,YACjB,SAAS,CAAC,MADO,0BACe,SAAS,CAAC,MADzB,eACoC,SAAS,CAAC,MAD9C,gBAC0D,QAAQ,CAAC,MADnE,UAErB,GAFqB,CAAhB;EAIA,IAAM,QAAQ,GAAG,IAAI,MAAJ,YAClB,SAAS,CAAC,MADQ,0BACc,SAAS,CAAC,MADxB,kBACsC,SAAS,CAAC,MADhD,kBAC8D,QAAQ,CAAC,MADvE,UAEtB,GAFsB,CAAjB;EAKA,IAAM,IAAI,GAAG,IAAI,MAAJ,YAAe,SAAS,CAAC,MAAzB,gBAAqC,SAAS,CAAC,MAA/C,kBAA6D,QAAQ,CAAC,MAAtE,UAAmF,GAAnF,CAAb;EAGP;EACA;EACA;EACA;;EACO,IAAM,SAAS,GAAG,IAAI,MAAJ,aAAgB,QAAQ,CAAC,MAAzB,iBAAsC,SAAS,CAAC,MAAhD,QAAlB;EACA,IAAM,QAAQ,GAAG,IAAI,MAAJ,oBAAuB,SAAS,CAAC,MAAjC,iBAA8C,OAAO,CAAC,MAAtD,QAAjB;EAEP,IAAM,QAAQ,GAAG,yBAAjB;EAEA,IAAM,YAAY,GAAG,8CAArB;EACA,IAAM,YAAY,GAAG,IAAI,MAAJ,cAAiB,QAAQ,CAAC,MAA1B,mBAAyC,QAAQ,CAAC,MAAlD,mBAAiE,QAAQ,CAAC,MAA1E,SAArB;EACO,IAAM,QAAQ,GAAG,IAAI,MAAJ,0BAA6B,YAAY,CAAC,MAA1C,sBAA4D,YAAY,CAAC,MAAzE,UAAsF,GAAtF,CAAjB;;EC3CP,IAAMrC,oBAAkB,GAAG,KAAK,CAAC,SAAN,CAAgB,IAA3C;EACA,IAAMC,oBAAkB,GAAG,UAAU,CAAC,IAAX,CAAgB,cAA3C;EACA,IAAM,OAAO,GAAG,IAAI,CAAC,GAArB;EACA,IAAM,OAAO,GAAG,IAAI,CAAC,GAArB;EACA,IAAM,OAAO,GAAG,IAAI,CAAC,GAArB;EACA,IAAM,SAAS,GAAG,IAAI,CAAC,KAAvB;EACA,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAtB;EACA,IAAM,SAAS,GAAG,IAAI,CAAC,KAAvB;EACA,IAAM,WAAW,GAAG,MAAM,CAAC,KAA3B;EACA,IAAM,cAAc,GAAG,MAAM,CAAC,QAA9B;EACA,IAAM,UAAU,GAAG,MAAnB;EACA,IAAM,UAAU,GAAG,MAAnB;EACA,IAAM,oBAAoB,GAAG,MAAM,CAAC,gBAApC;EACA,IAAMqC,cAAY,GAAG,MAAM,CAAC,MAA5B;EACA,IAAM,oBAAoB,GAAG,MAAM,CAAC,cAApC;EACA,IAAM,QAAQ,GAAG,MAAM,CAAC,EAAxB;EACA,IAAMjC,cAAY,GAAG,OAAO,CAAC,KAA7B;EA4DA,IAAM,WAAW,GAAG,KAApB;EACA,IAAM,SAAS,GAAG,MAAM,CAAC,WAAD,CAAN,CAAoB,QAApB,CAA6B,GAA7B,CAAlB;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,WAAF,CAAN,CAAqB,QAArB,CAA8B,IAA9B,CAAf;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,WAAD,CAAN,CAAoB,QAApB,CAA6B,IAA7B,CAAf;EACA,IAAM,QAAQ,GAAG,CAAC,MAAlB;EACA,IAAM,QAAQ,GAAG,MAAjB;EACA,IAAM,gBAAgB,GAAG,MAAM,CAAC,CAAC,MAAF,CAAN,CAAgB,QAAhB,CAAyB,IAAzB,CAAzB;;EAEA,SAAS,SAAT,CAAmB,KAAnB,EAAiC;EAC/B,MAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,CAAC,cAAc,CAAC,KAAD,CAAhD,EAAyD,OAAO,KAAP;EACzD,MAAM,GAAG,GAAG,OAAO,CAAC,KAAD,CAAnB;EACA,SAAO,SAAS,CAAC,GAAD,CAAT,KAAmB,GAA1B;EACD;;EAQK,SAAU,QAAV,CAAmB,KAAnB,EAAiC;EACrC,SAAQ,QAAO,KAAP,MAAiB,QAAjB,IAA6B,KAAK,KAAK,IAAxC,IAAiD,OAAO,KAAP,KAAiB,UAAzE;EACD;EAEK,SAAU,QAAV,CAAmB,KAAnB,EAAiC;EACrC,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B,MAAM,IAAI,SAAJ,CAAc,iCAAd,CAAN;EAC/B,SAAO,UAAU,CAAC,KAAD,CAAjB;EACD;;EAED,SAAS,SAAT,CAAmB,KAAnB,EAAiC;EAC/B,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAD,CAApB;EACA,MAAI,WAAW,CAAC,GAAD,CAAf,EAAsB,OAAO,CAAP;EACtB,MAAM,OAAO,GAAG,SAAS,CAAC,GAAD,CAAzB;EACA,MAAI,GAAG,KAAK,CAAZ,EAAe,OAAO,CAAP;EACf,SAAO,OAAP;EACD;;EAEK,SAAU,QAAV,CAAmB,KAAnB,EAAiC;EACrC,MAAI,QAAO,KAAP,MAAiB,QAArB,EAA+B;EAC7B,UAAM,IAAI,SAAJ,CAAc,2CAAd,CAAN;EACD;;EACD,SAAO,UAAU,CAAC,KAAD,CAAjB;EACD;EAEK,SAAU,wBAAV,CAAmC,KAAnC,EAAiD;EACrD,MAAM,OAAO,GAAG,SAAS,CAAC,KAAD,CAAzB;;EACA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAnB,EAA8B;EAC5B,UAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACD;;EACD,SAAO,OAAP;EACD;EAEK,SAAU,iBAAV,CAA4B,UAA5B,EAAiD,QAAjD,EAAkE;EACtE,MAAM,KAAK,GAAG,SAAS,CAAC,UAAD,CAAvB;;EACA,MAAI,CAAC,cAAc,CAAC,KAAD,CAAnB,EAA4B;EAC1B,UAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACD;;EACD,MAAI,KAAK,GAAG,CAAZ,EAAe;EACb,QAAI,QAAQ,KAAK,SAAjB,EAA4B;EAC1B,YAAM,IAAI,UAAJ,qBAA4B,QAA5B,0CAAN;EACD;;EACD,UAAM,IAAI,UAAJ,CAAe,6DAAf,CAAN;EACD;;EACD,SAAO,KAAP;EACD;EAEK,SAAU,wBAAV,CAAmC,UAAnC,EAAsD;EAC1D,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAD,CAAtB;EACA,MAAI,WAAW,CAAC,KAAD,CAAf,EAAwB,OAAO,CAAP;;EACxB,MAAI,CAAC,cAAc,CAAC,KAAD,CAAnB,EAA4B;EAC1B,UAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACD;;EACD,MAAI,CAAC,SAAS,CAAC,KAAD,CAAd,EAAuB;EACrB,UAAM,IAAI,UAAJ,wCAA+C,KAA/C,EAAN;EACD;;EACD,SAAO,SAAS,CAAC,KAAD,CAAhB,CAT0D;EAU3D;EAED,IAAM,aAAa,GAAG,IAAI,GAAJ,CAAiE,CACrF,CAAC,MAAD,EAAS,wBAAT,CADqF,EAErF,CAAC,OAAD,EAAU,iBAAV,CAFqF,EAGrF,CAAC,WAAD,EAAc,QAAd,CAHqF,EAIrF,CAAC,KAAD,EAAQ,iBAAR,CAJqF,EAKrF,CAAC,MAAD,EAAS,wBAAT,CALqF,EAMrF,CAAC,QAAD,EAAW,wBAAX,CANqF,EAOrF,CAAC,QAAD,EAAW,wBAAX,CAPqF,EAQrF,CAAC,aAAD,EAAgB,wBAAhB,CARqF,EASrF,CAAC,aAAD,EAAgB,wBAAhB,CATqF,EAUrF,CAAC,YAAD,EAAe,wBAAf,CAVqF,EAWrF,CAAC,OAAD,EAAU,wBAAV,CAXqF,EAYrF,CAAC,QAAD,EAAW,wBAAX,CAZqF,EAarF,CAAC,OAAD,EAAU,wBAAV,CAbqF,EAcrF,CAAC,MAAD,EAAS,wBAAT,CAdqF,EAerF,CAAC,OAAD,EAAU,wBAAV,CAfqF,EAgBrF,CAAC,SAAD,EAAY,wBAAZ,CAhBqF,EAiBrF,CAAC,SAAD,EAAY,wBAAZ,CAjBqF,EAkBrF,CAAC,cAAD,EAAiB,wBAAjB,CAlBqF,EAmBrF,CAAC,cAAD,EAAiB,wBAAjB,CAnBqF,EAoBrF,CAAC,aAAD,EAAgB,wBAAhB,CApBqF,EAqBrF,CAAC,KAAD,EAAQ,QAAR,CArBqF,EAsBrF,CAAC,SAAD,EAAY,SAAZ,CAtBqF,EAuBrF,CAAC,QAAD,EAAW,QAAX,CAvBqF,CAAjE,CAAtB;EA0BA,IAAM,aAAa,GAAqC,CACtD,MADsD,EAEtD,OAFsD,EAGtD,MAHsD,EAItD,KAJsD,EAKtD,MALsD,EAMtD,QANsD,EAOtD,QAPsD,EAQtD,aARsD,EAStD,aATsD,EAUtD,YAVsD,CAAxD;EAaA,IAAM,qBAAqB,GAAiE,CAC1F,CAAC,OAAD,EAAU,MAAV,CAD0F,EAE1F,CAAC,QAAD,EAAW,OAAX,CAF0F,EAG1F,CAAC,OAAD,EAAU,MAAV,CAH0F,EAI1F,CAAC,MAAD,EAAS,KAAT,CAJ0F,EAK1F,CAAC,OAAD,EAAU,MAAV,CAL0F,EAM1F,CAAC,SAAD,EAAY,QAAZ,CAN0F,EAO1F,CAAC,SAAD,EAAY,QAAZ,CAP0F,EAQ1F,CAAC,cAAD,EAAiB,aAAjB,CAR0F,EAS1F,CAAC,cAAD,EAAiB,aAAjB,CAT0F,EAU1F,CAAC,aAAD,EAAgB,YAAhB,CAV0F,CAA5F;EAeA,IAAM,2BAA2B,GAAG,IAAI,GAAJ,EAApC;;EAEA,SAAS,oCAAT,CAA8C,kBAA9C,EAAwE;EACtE,MAAI,QAAQ,GAAG,2BAA2B,CAAC,GAA5B,CAAgC,kBAAhC,CAAf;;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;EAC1B,IAAA,QAAQ,GAAG,IAAIJ,oBAAJ,CAAuB,OAAvB,EAAgC;EACzC,MAAA,QAAQ,EAAE,UAAU,CAAC,kBAAD,CADqB;EAEzC,MAAA,MAAM,EAAE,KAFiC;EAGzC,MAAA,GAAG,EAAE,OAHoC;EAIzC,MAAA,IAAI,EAAE,SAJmC;EAKzC,MAAA,KAAK,EAAE,SALkC;EAMzC,MAAA,GAAG,EAAE,SANoC;EAOzC,MAAA,IAAI,EAAE,SAPmC;EAQzC,MAAA,MAAM,EAAE,SARiC;EASzC,MAAA,MAAM,EAAE;EATiC,KAAhC,CAAX;EAWA,IAAA,2BAA2B,CAAC,GAA5B,CAAgC,kBAAhC,EAAoD,QAApD;EACD;;EACD,SAAO,QAAP;EACD;;EAEK,SAAU,iBAAV,CAA4B,IAA5B,EAAyC;EAC7C,SAAO,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAP,IAAmC,CAAC,OAAO,CAAC,IAAD,EAAO,SAAP,EAAkB,QAAlB,CAAlD;EACD;EAEK,SAAU,kBAAV,CAA6B,IAA7B,EAA0C;EAC9C,SAAO,OAAO,CAAC,IAAD,EAAO,WAAP,CAAd;EACD;EACK,SAAU,kBAAV,CAA6B,IAA7B,EAA0C;EAC9C,SAAO,OAAO,CAAC,IAAD,EAAO,WAAP,CAAd;EACD;EACK,SAAU,kBAAV,CAA6B,IAA7B,EAA0C;EAC9C,SAAO,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,IAAtB,EAA4B,KAA5B,EAAmC,OAAnC,EAA4C,OAA5C,EAAqD,YAArD,EAAmE,YAAnE,EAAiF,WAAjF,CAAd;EACD;EACK,SAAU,cAAV,CAAyB,IAAzB,EAAsC;EAC1C,SAAO,OAAO,CAAC,IAAD,EAAO,UAAP,CAAd;EACD;EACK,SAAU,cAAV,CAAyB,IAAzB,EAAsC;EAC1C,SACE,OAAO,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,UAA7B,EAAyC,eAAzC,EAA0D,eAA1D,EAA2E,cAA3E,CAAP,IACA,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,EAAiB,SAAjB,EAA4B,OAA5B,CAFV;EAID;EACK,SAAU,kBAAV,CAA6B,IAA7B,EAA0C;EAC9C,SAAO,OAAO,CACZ,IADY,EAEZ,QAFY,EAGZ,SAHY,EAIZ,OAJY,EAKZ,QALY,EAMZ,UANY,EAOZ,UAPY,EAQZ,eARY,EASZ,eATY,EAUZ,cAVY,CAAd;EAYD;EACK,SAAU,mBAAV,CAA8B,IAA9B,EAA2C;EAC/C,SAAO,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAd;EACD;EACK,SAAU,kBAAV,CAA6B,IAA7B,EAA0C;EAC9C,SAAO,OAAO,CAAC,IAAD,EAAO,eAAP,CAAd;EACD;EACK,SAAU,uBAAV,CAAkC,IAAlC,EAA+C;EACnD,SAAO,OAAO,CAAC,IAAD,EAAO,gBAAP,EAAyB,SAAzB,EAAoC,QAApC,CAAd;EACD;EACK,SAAU,kCAAV,CAA6C,IAA7C,EAAsE;EAC1E,MAAI,OAAO,CAAC,IAAD,EAAO,QAAP,CAAP,IAA2B,OAAO,CAAC,IAAD,EAAO,SAAP,CAAtC,EAAyD;EACvD,UAAM,IAAI,SAAJ,CAAc,yDAAd,CAAN;EACD;;EACD,MAAK,IAAY,CAAC,QAAb,KAA0B,SAA/B,EAA0C;EACxC,UAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;EACD;;EACD,MAAK,IAAY,CAAC,QAAb,KAA0B,SAA/B,EAA0C;EACxC,UAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;EACD;EACF;;EACD,SAAS,qBAAT,CAA+B,WAA/B,EAAkD;EAChD;EACA,8BAA8B,2BAA2B,CAAC,WAAD,CAAzD;EAAA,MAAM,QAAN,yBAAM,QAAN;EAAA,MAAgB,MAAhB,yBAAgB,MAAhB;EAAA,MAAwB,CAAxB,yBAAwB,CAAxB;;EACA,MAAI,QAAJ,EAAc,OAAO,QAAP;EACd,MAAI,CAAJ,EAAO,OAAO,KAAP;EACP,SAAO,MAAP;EACD;;EAED,SAAS,wBAAT,CAAkC,EAAlC,EAA8C,YAA9C,EAAuG;EACrG,MAAI,YAAY,KAAK,OAArB,EAA8B,OAAO,EAAP;EAC9B,MAAI,YAAY,KAAK,MAAjB,IAA2B,EAAE,KAAK,SAAtC,EAAiD,OAAO,EAAP;EACjD,yBAAgB,EAAhB;EACD;;EAED,SAAS,gBAAT,CAA0B,SAA1B,QAAwF;EAAA,MAAzC,YAAyC,QAAzC,YAAyC;EACtF,MAAM,KAAK,GAAG,YAAY,GAAGsC,SAAH,GAAmBC,QAA7C;EACA,MAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,SAAX,CAAd;EACA,MAAI,CAAC,KAAL,EAAY,MAAM,IAAI,UAAJ,oCAA2C,SAA3C,EAAN;EACZ,MAAI,UAAU,GAAG,KAAK,CAAC,CAAD,CAAtB;EACA,MAAI,UAAU,CAAC,CAAD,CAAV,KAAkB,QAAtB,EAAgC,UAAU,cAAO,UAAU,CAAC,KAAX,CAAiB,CAAjB,CAAP,CAAV;EAChC,MAAM,IAAI,GAAG,SAAS,CAAC,UAAD,CAAtB;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,CAAD,CAAlB,CAAvB;EACA,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,CAAD,CAAlB,CAArB;EACA,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAtB;EACA,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,EAAD,CAAlB,CAAxB;EACA,MAAI,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,EAAD,CAAlB,CAAtB;EACA,MAAI,MAAM,KAAK,EAAf,EAAmB,MAAM,GAAG,EAAT;EACnB,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,EAAD,CAAlB,IAA0B,WAA3C;EACA,MAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAA7B;EACA,MAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAA7B;EACA,MAAM,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAA5B;EACA,MAAI,MAAJ;EACA,MAAI,CAAC,GAAG,KAAR;;EACA,MAAI,KAAK,CAAC,EAAD,CAAT,EAAe;EACb,IAAA,MAAM,GAAG,SAAT;EACA,IAAA,CAAC,GAAG,IAAJ;EACD,GAHD,MAGO,IAAI,KAAK,CAAC,EAAD,CAAL,IAAa,KAAK,CAAC,EAAD,CAAtB,EAA4B;EACjC,QAAM,UAAU,GAAG,KAAK,CAAC,EAAD,CAAL,KAAc,GAAd,IAAqB,KAAK,CAAC,EAAD,CAAL,KAAc,QAAnC,GAA8C,GAA9C,GAAoD,GAAvE;EACA,QAAM,WAAW,GAAG,KAAK,CAAC,EAAD,CAAL,IAAa,IAAjC;EACA,QAAM,aAAa,GAAG,KAAK,CAAC,EAAD,CAAL,IAAa,IAAnC;EACA,QAAM,aAAa,GAAG,KAAK,CAAC,EAAD,CAAL,IAAa,IAAnC;EACA,QAAI,cAAc,GAAG,KAAK,CAAC,EAAD,CAAL,IAAa,GAAlC;EACA,IAAA,MAAM,aAAM,UAAN,SAAmB,WAAnB,cAAkC,aAAlC,CAAN;;EACA,QAAI,CAAC,cAAL,EAAqB;EACnB,aAAO,cAAc,CAAC,QAAf,CAAwB,GAAxB,CAAP;EAAqC,QAAA,cAAc,GAAG,cAAc,CAAC,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAjB;EAArC;;EACA,MAAA,MAAM,eAAQ,aAAR,cAAyB,cAAzB,CAAN;EACD,KAHD,MAGO,IAAI,CAAC,aAAL,EAAoB;EACzB,MAAA,MAAM,eAAQ,aAAR,CAAN;EACD;;EACD,QAAI,MAAM,KAAK,QAAf,EAAyB,MAAM,GAAG,QAAT;EAC1B;;EACD,MAAI,QAAQ,GAAG,KAAK,CAAC,EAAD,CAApB;;EACA,MAAI,QAAJ,EAAc;EACZ,QAAI;EACF;EACA,MAAA,QAAQ,GAAG,8BAA8B,CAAC,QAAD,CAA9B,CAAyC,QAAzC,EAAX;EACD,KAHD,CAGE,gBAAM;EAEP;EACF;;EACD,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAD,CAAtB;EACA,SAAO;EACL,IAAA,IAAI,EAAJ,IADK;EAEL,IAAA,KAAK,EAAL,KAFK;EAGL,IAAA,GAAG,EAAH,GAHK;EAIL,IAAA,IAAI,EAAJ,IAJK;EAKL,IAAA,MAAM,EAAN,MALK;EAML,IAAA,MAAM,EAAN,MANK;EAOL,IAAA,WAAW,EAAX,WAPK;EAQL,IAAA,WAAW,EAAX,WARK;EASL,IAAA,UAAU,EAAV,UATK;EAUL,IAAA,QAAQ,EAAR,QAVK;EAWL,IAAA,MAAM,EAAN,MAXK;EAYL,IAAA,CAAC,EAAD,CAZK;EAaL,IAAA,QAAQ,EAAR;EAbK,GAAP;EAeD;;EAED,SAAS,0BAAT,CAAoC,SAApC,EAAqD;EACnD,SAAO,gBAAgB,CAAC,SAAD,EAAY;EAAE,IAAA,YAAY,EAAE;EAAhB,GAAZ,CAAvB;EACD;;EAED,SAAS,gCAAT,CAA0C,SAA1C,EAA2D;EACzD,SAAO,gBAAgB,CAAC,SAAD,EAAY;EAAE,IAAA,YAAY,EAAE;EAAhB,GAAZ,CAAvB;EACD;;EAED,SAAS,2BAAT,CAAqC,SAArC,EAAsD;EACpD,SAAO,gBAAgB,CAAC,SAAD,EAAY;EAAE,IAAA,YAAY,EAAE;EAAhB,GAAZ,CAAvB;EACD;;EAED,SAAS,uBAAT,CAAiC,SAAjC,EAAkD;EAChD,SAAO,gBAAgB,CAAC,SAAD,EAAY;EAAE,IAAA,YAAY,EAAE;EAAhB,GAAZ,CAAvB;EACD;;EAED,SAAS,uBAAT,CAAiC,SAAjC,EAAkD;EAChD,MAAM,KAAK,GAAGC,IAAA,CAAW,IAAX,CAAgB,SAAhB,CAAd;EACA,MAAI,IAAJ,EAAU,MAAV,EAAkB,MAAlB,EAA0B,WAA1B,EAAuC,WAAvC,EAAoD,UAApD,EAAgE,QAAhE;;EACA,MAAI,KAAJ,EAAW;EACT,IAAA,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAhB;EACA,IAAA,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,CAAD,CAAlB,CAAlB;EACA,IAAA,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,CAAD,CAAlB,CAAlB;EACA,QAAI,MAAM,KAAK,EAAf,EAAmB,MAAM,GAAG,EAAT;EACnB,QAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,KAAK,CAAC,CAAD,CAAlB,IAAyB,WAA1C;EACA,IAAA,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAvB;EACA,IAAA,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAvB;EACA,IAAA,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAtB;EACA,IAAA,QAAQ,GAAG,KAAK,CAAC,EAAD,CAAhB;EACD,GAVD,MAUO;EACL,QAAI,CAAJ;;EADK,4BAE0E,gBAAgB,CAAC,SAAD,EAAY;EACzG,MAAA,YAAY,EAAE;EAD2F,KAAZ,CAF1F;;EAEF,IAAA,IAFE,qBAEF,IAFE;EAEI,IAAA,MAFJ,qBAEI,MAFJ;EAEY,IAAA,MAFZ,qBAEY,MAFZ;EAEoB,IAAA,WAFpB,qBAEoB,WAFpB;EAEiC,IAAA,WAFjC,qBAEiC,WAFjC;EAE8C,IAAA,UAF9C,qBAE8C,UAF9C;EAE0D,IAAA,QAF1D,qBAE0D,QAF1D;EAEoE,IAAA,CAFpE,qBAEoE,CAFpE;EAKL,QAAI,CAAJ,EAAO,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACR;;EACD,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,MAAM,EAAN,MAAR;EAAgB,IAAA,MAAM,EAAN,MAAhB;EAAwB,IAAA,WAAW,EAAX,WAAxB;EAAqC,IAAA,WAAW,EAAX,WAArC;EAAkD,IAAA,UAAU,EAAV,UAAlD;EAA8D,IAAA,QAAQ,EAAR;EAA9D,GAAP;EACD;;EAED,SAAS,4BAAT,CAAsC,SAAtC,EAAuD;EACrD,MAAM,KAAK,GAAGC,SAAA,CAAgB,IAAhB,CAAqB,SAArB,CAAd;EACA,MAAI,IAAJ,EAAU,KAAV,EAAiB,QAAjB,EAA2B,eAA3B;;EACA,MAAI,KAAJ,EAAW;EACT,QAAI,UAAU,GAAG,KAAK,CAAC,CAAD,CAAtB;EACA,QAAI,UAAU,CAAC,CAAD,CAAV,KAAkB,QAAtB,EAAgC,UAAU,cAAO,UAAU,CAAC,KAAX,CAAiB,CAAjB,CAAP,CAAV;EAChC,IAAA,IAAI,GAAG,SAAS,CAAC,UAAD,CAAhB;EACA,IAAA,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAjB;EACA,IAAA,QAAQ,GAAG,KAAK,CAAC,CAAD,CAAhB;EACD,GAND,MAMO;EACL,QAAI,CAAJ;;EADK,6BAEiD,gBAAgB,CAAC,SAAD,EAAY;EAAE,MAAA,YAAY,EAAE;EAAhB,KAAZ,CAFjE;;EAEF,IAAA,IAFE,sBAEF,IAFE;EAEI,IAAA,KAFJ,sBAEI,KAFJ;EAEW,IAAA,QAFX,sBAEW,QAFX;EAE0B,IAAA,eAF1B,sBAEqB,GAFrB;EAE2C,IAAA,CAF3C,sBAE2C,CAF3C;EAGL,QAAI,CAAJ,EAAO,MAAM,IAAI,UAAJ,CAAe,+CAAf,CAAN;EACR;;EACD,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,QAAQ,EAAR,QAAf;EAAyB,IAAA,eAAe,EAAf;EAAzB,GAAP;EACD;;EAED,SAAS,2BAAT,CAAqC,SAArC,EAAsD;EACpD,MAAM,KAAK,GAAGC,QAAA,CAAe,IAAf,CAAoB,SAApB,CAAd;EACA,MAAI,KAAJ,EAAW,GAAX,EAAgB,QAAhB,EAA0B,gBAA1B;;EACA,MAAI,KAAJ,EAAW;EACT,IAAA,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAjB;EACA,IAAA,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAf;EACD,GAHD,MAGO;EACL,QAAI,CAAJ;;EADK,6BAEkD,gBAAgB,CAAC,SAAD,EAAY;EAAE,MAAA,YAAY,EAAE;EAAhB,KAAZ,CAFlE;;EAEF,IAAA,KAFE,sBAEF,KAFE;EAEK,IAAA,GAFL,sBAEK,GAFL;EAEU,IAAA,QAFV,sBAEU,QAFV;EAE0B,IAAA,gBAF1B,sBAEoB,IAFpB;EAE4C,IAAA,CAF5C,sBAE4C,CAF5C;EAGL,QAAI,CAAJ,EAAO,MAAM,IAAI,UAAJ,CAAe,8CAAf,CAAN;EACR;;EACD,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,GAAG,EAAH,GAAT;EAAc,IAAA,QAAQ,EAAR,QAAd;EAAwB,IAAA,gBAAgB,EAAhB;EAAxB,GAAP;EACD;;EAED,SAAS,2BAAT,CAAqC,WAArC,EAAwD;EAKtD,MAAI;EACF,QAAI,cAAc,GAAG,8BAA8B,CAAC,WAAD,CAAnD;;EACA,QAAI,cAAJ,EAAoB;EAClB,MAAA,cAAc,GAAG,cAAc,CAAC,QAAf,EAAjB;EACA,UAAI,iBAAiB,CAAC,cAAD,CAAjB,KAAsC,IAA1C,EAAgD,OAAO;EAAE,QAAA,MAAM,EAAE;EAAV,OAAP;EAChD,aAAO;EAAE,QAAA,QAAQ,EAAE;EAAZ,OAAP;EACD;EACF,GAPD,CAOE,iBAAM;EAEP;;EACD,MAAI;EACF;EACA,WAAO,gBAAgB,CAAC,WAAD,EAAc;EAAE,MAAA,YAAY,EAAE;EAAhB,KAAd,CAAvB;EACD,GAHD,CAGE,iBAAM;EACN,UAAM,IAAI,UAAJ,8BAAqC,WAArC,EAAN;EACD;EACF;;EAED,SAAS,2BAAT,CAAqC,SAArC,EAAsD;EACpD,MAAM,KAAK,GAAGC,QAAA,CAAe,IAAf,CAAoB,SAApB,CAAd;EACA,MAAI,CAAC,KAAL,EAAY,MAAM,IAAI,UAAJ,6BAAoC,SAApC,EAAN;;EACZ,MAAI,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,KAAf,CAAqB,UAAC,OAAD;EAAA,WAAa,OAAO,KAAK,SAAzB;EAAA,GAArB,CAAJ,EAA8D;EAC5D,UAAM,IAAI,UAAJ,6BAAoC,SAApC,EAAN;EACD;;EACD,MAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoB,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjC,GAA4C,CAAC,CAA7C,GAAiD,CAA9D;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAApC;EACA,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAArC;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAApC;EACA,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAAnC;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAApC;EACA,MAAI,MAAM,GAAoB,KAAK,CAAC,CAAD,CAAnC;EACA,MAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,GAAsB,IAApC;EACA,MAAI,QAAQ,GAAoB,KAAK,CAAC,CAAD,CAArC;EACA,MAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,EAAD,CAAN,CAAT,GAAuB,IAArC;EACA,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAD,CAAL,GAAY,WAA7B;EACA,MAAI,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAT,GAAkC,IAArD;EACA,MAAI,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAT,GAAkC,IAArD;EACA,MAAI,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAT,GAAkC,IAApD;EAEA,EAAA,MAAM,GAAG,MAAM,GAAI,IAAI,GAAG,SAAS,CAAC,MAAD,CAAjB,YAA6B,EAA7B,EAAmC,MAAM,CAAC,MAA1C,CAAH,GAAsD,CAArE;EACA,EAAA,QAAQ,GAAG,QAAQ,GAAI,IAAI,GAAG,SAAS,CAAC,QAAD,CAAjB,YAA+B,EAA/B,EAAqC,QAAQ,CAAC,MAA9C,CAAH,GAA0D,CAA7E;;EAtBoD,8BAwBa,uBAAuB,CACtF,MADsF,EAEtF,OAFsF,EAGtF,QAHsF,EAItF,OAJsF,EAKtF,YALsF,EAMtF,YANsF,EAOtF,WAPsF,CAxBpC;;EAwBjD,EAAA,OAxBiD,yBAwBjD,OAxBiD;EAwBxC,EAAA,OAxBwC,yBAwBxC,OAxBwC;EAwB/B,EAAA,YAxB+B,yBAwB/B,YAxB+B;EAwBjB,EAAA,YAxBiB,yBAwBjB,YAxBiB;EAwBH,EAAA,WAxBG,yBAwBH,WAxBG;EAiCpD,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;;EAED,SAAS,oBAAT,CAA8B,SAA9B,EAA+C;EAC7C,8BACE,0BAA0B,CAAC,SAAD,CAD5B;EAAA,MAAQ,IAAR,yBAAQ,IAAR;EAAA,MAAc,KAAd,yBAAc,KAAd;EAAA,MAAqB,GAArB,yBAAqB,GAArB;EAAA,MAA0B,IAA1B,yBAA0B,IAA1B;EAAA,MAAgC,MAAhC,yBAAgC,MAAhC;EAAA,MAAwC,MAAxC,yBAAwC,MAAxC;EAAA,MAAgD,WAAhD,yBAAgD,WAAhD;EAAA,MAA6D,WAA7D,yBAA6D,WAA7D;EAAA,MAA0E,UAA1E,yBAA0E,UAA1E;EAAA,MAAsF,MAAtF,yBAAsF,MAAtF;EAAA,MAA8F,CAA9F,yBAA8F,CAA9F;;EAGA,MAAM,OAAO,GAAG,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAApC;EACA,MAAI,OAAO,KAAK,IAAhB,EAAsB,MAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACtB,MAAI,CAAC,CAAD,IAAM,CAAC,MAAX,EAAmB,MAAM,IAAI,UAAJ,CAAe,8CAAf,CAAN;EACnB,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAH,GAAO,iBAAiB,CAAC,MAAD,CAA1C;EACA,SAAO,OAAO,CAAC,QAAR,CAAiB,QAAjB,CAAP;EACD;;EAEK,SAAU,eAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,QAHI,EAIJ,QAJI,EAI4C;EAEhD,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,GAAG,GAAG,QAAV;;EACA,UAAQ,QAAR;EACE,SAAK,QAAL;EACE,MAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAAb;EACA;;EACF,SAAK,WAAL;EAAA,8BAC0B,gBAAgB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAD1C;;EACK,MAAA,IADL,qBACK,IADL;EACW,MAAA,KADX,qBACW,KADX;EACkB,MAAA,GADlB,qBACkB,GADlB;EAEE;EANJ;;EAQA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH;EAAf,GAAP;EACD;EAEK,SAAU,YAAV,CACJ,SADI,EAEJ,WAFI,EAGJ,WAHI,EAIJ,gBAJI,EAKJ,gBALI,EAMJ,eANI,EAOJ,QAPI,EAO4C;EAEhD,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,UAAU,GAAG,eAAjB;;EAEA,UAAQ,QAAR;EACE,SAAK,QAAL;EACE,MAAA,UAAU,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,UAAjD,CAAV;EACA;;EACF,SAAK,WAAL;EAAA,2BACoE,aAAa,CAC7E,IAD6E,EAE7E,MAF6E,EAG7E,MAH6E,EAI7E,WAJ6E,EAK7E,WAL6E,EAM7E,UAN6E,CADjF;;EACK,MAAA,IADL,kBACK,IADL;EACW,MAAA,MADX,kBACW,MADX;EACmB,MAAA,MADnB,kBACmB,MADnB;EAC2B,MAAA,WAD3B,kBAC2B,WAD3B;EACwC,MAAA,WADxC,kBACwC,WADxC;EACqD,MAAA,UADrD,kBACqD,UADrD;EASE;EAbJ;;EAeA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,MAAM,EAAN,MAAR;EAAgB,IAAA,MAAM,EAAN,MAAhB;EAAwB,IAAA,WAAW,EAAX,WAAxB;EAAqC,IAAA,WAAW,EAAX,WAArC;EAAkD,IAAA,UAAU,EAAV;EAAlD,GAAP;EACD;EAEK,SAAU,oBAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,QAHI,EAG4C;EAEhD,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAM,eAAe,GAAG,CAAxB;;EACA,UAAQ,QAAR;EACE,SAAK,QAAL;EACE,MAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,eAAd,CAAb;EACA;;EACF,SAAK,WAAL;EAAA,+BACqB,gBAAgB,CAAC,IAAD,EAAO,KAAP,CADrC;;EACK,MAAA,IADL,sBACK,IADL;EACW,MAAA,KADX,sBACW,KADX;EAEE;EANJ;;EAQA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL;EAAR,GAAP;EACD;;EAED,SAAS,uBAAT,CACE,WADF,EAEE,YAFF,EAGE,aAHF,EAIE,YAJF,EAKE,iBALF,EAME,iBANF,EAOE,gBAPF,EAO0B;EAExB,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,QAAQ,GAAG,aAAf;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,WAAW,GAAG,gBAAlB;;EAEA,MAAI,MAAM,KAAK,CAAf,EAAkB;EAChB,KAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,YAA7B,EAA2C,YAA3C,EAAyD,WAAzD,EAAsE,OAAtE,CAA8E,UAAC,GAAD,EAAQ;EACpF,UAAI,GAAG,KAAK,CAAZ,EAAe,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EAChB,KAFD;EAGA,QAAM,IAAI,GAAG,MAAM,GAAG,EAAtB;EACA,IAAA,OAAO,GAAG,SAAS,CAAC,IAAD,CAAnB;EACA,IAAA,QAAQ,GAAG,IAAI,GAAG,CAAlB;EACD;;EAED,MAAI,QAAQ,KAAK,CAAjB,EAAoB;EAClB,KAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,EAAsC,WAAtC,EAAmD,OAAnD,CAA2D,UAAC,GAAD,EAAQ;EACjE,UAAI,GAAG,KAAK,CAAZ,EAAe,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EAChB,KAFD;EAGA,QAAM,IAAI,GAAG,QAAQ,GAAG,EAAxB;EACA,IAAA,OAAO,GAAG,SAAS,CAAC,IAAD,CAAnB;EACA,QAAM,QAAQ,GAAG,IAAI,GAAG,CAAxB;;EAEA,QAAI,QAAQ,KAAK,CAAjB,EAAoB;EAClB,UAAM,IAAI,GAAG,QAAQ,GAAG,IAAxB;EACA,MAAA,YAAY,GAAG,SAAS,CAAC,IAAD,CAAxB;EACA,UAAM,aAAa,GAAG,IAAI,GAAG,CAA7B;;EAEA,UAAI,aAAa,KAAK,CAAtB,EAAyB;EACvB,YAAM,IAAI,GAAG,aAAa,GAAG,IAA7B;EACA,QAAA,YAAY,GAAG,SAAS,CAAC,IAAD,CAAxB;EACA,YAAM,aAAa,GAAG,IAAI,GAAG,CAA7B;;EAEA,YAAI,aAAa,KAAK,CAAtB,EAAyB;EACvB,cAAM,IAAI,GAAG,aAAa,GAAG,IAA7B;EACA,UAAA,WAAW,GAAG,SAAS,CAAC,IAAD,CAAvB;EACD;EACF;EACF;EACF;;EAED,SAAO;EAAE,IAAA,OAAO,EAAP,OAAF;EAAW,IAAA,OAAO,EAAP,OAAX;EAAoB,IAAA,YAAY,EAAZ,YAApB;EAAkC,IAAA,YAAY,EAAZ,YAAlC;EAAgD,IAAA,WAAW,EAAX;EAAhD,GAAP;EACD;;EAED,SAAS,wBAAT,CAAkC,IAAlC,EAAiF;EAC/E,MAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B;EAC5B,WAAO;EACL,MAAA,KAAK,EAAE,OAAO,CAAC,IAAD,EAAO,KAAP,CADT;EAEL,MAAA,MAAM,EAAE,OAAO,CAAC,IAAD,EAAO,MAAP,CAFV;EAGL,MAAA,KAAK,EAAE,OAAO,CAAC,IAAD,EAAO,KAAP,CAHT;EAIL,MAAA,IAAI,EAAE,OAAO,CAAC,IAAD,EAAO,IAAP,CAJR;EAKL,MAAA,KAAK,EAAE,OAAO,CAAC,IAAD,EAAO,KAAP,CALT;EAML,MAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CANX;EAOL,MAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CAPX;EAQL,MAAA,YAAY,EAAE,OAAO,CAAC,IAAD,EAAO,YAAP,CARhB;EASL,MAAA,YAAY,EAAE,OAAO,CAAC,IAAD,EAAO,YAAP,CAThB;EAUL,MAAA,WAAW,EAAE,OAAO,CAAC,IAAD,EAAO,WAAP;EAVf,KAAP;EAYD;;EACD,MAAM,KAAK,GAAG,eAAe,CAAC,IAAD,EAAO,CAClC,MADkC,EAElC,OAFkC,EAGlC,cAHkC,EAIlC,cAJkC,EAKlC,SALkC,EAMlC,QANkC,EAOlC,aAPkC,EAQlC,SARkC,EASlC,OATkC,EAUlC,OAVkC,CAAP,CAA7B;EAYA,MAAI,CAAC,KAAL,EAAY,MAAM,IAAI,SAAJ,CAAc,uBAAd,CAAN;EACZ,qBAWI,KAXJ,CACE,KADF;EAAA,MACE,KADF,6BACU,CADV;EAAA,sBAWI,KAXJ,CAEE,MAFF;EAAA,MAEE,MAFF,8BAEW,CAFX;EAAA,qBAWI,KAXJ,CAGE,KAHF;EAAA,MAGE,KAHF,6BAGU,CAHV;EAAA,oBAWI,KAXJ,CAIE,IAJF;EAAA,MAIE,IAJF,4BAIS,CAJT;EAAA,qBAWI,KAXJ,CAKE,KALF;EAAA,MAKE,KALF,6BAKU,CALV;EAAA,uBAWI,KAXJ,CAME,OANF;EAAA,MAME,OANF,+BAMY,CANZ;EAAA,uBAWI,KAXJ,CAOE,OAPF;EAAA,MAOE,OAPF,+BAOY,CAPZ;EAAA,4BAWI,KAXJ,CAQE,YARF;EAAA,MAQE,YARF,oCAQiB,CARjB;EAAA,4BAWI,KAXJ,CASE,YATF;EAAA,MASE,YATF,oCASiB,CATjB;EAAA,2BAWI,KAXJ,CAUE,WAVF;EAAA,MAUE,WAVF,mCAUgB,CAVhB;EAYA,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;;EAEK,SAAU,yBAAV,CACJ,IADI,EAEsD;EAAA,MAA1D,oBAA0D,uEAAF,EAAE;EAE1D,MAAI,MAAJ;;EACA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,IAAA,MAAM,GAAG,wBAAwB,CAAC,IAAD,CAAjC;EACD,GAFD,MAEO;EACL,QAAM,GAAG,GAAG,QAAQ,CAAC,IAAD,CAApB;EACA,IAAA,MAAM,GAAG,2BAA2B,CAAC,GAAD,CAApC;EACD;;EACD,gBAAyG,MAAzG;EAAA,MAAQ,KAAR,WAAQ,KAAR;EAAA,MAAe,MAAf,WAAe,MAAf;EAAA,MAAuB,KAAvB,WAAuB,KAAvB;EAAA,MAA8B,IAA9B,WAA8B,IAA9B;EAAA,MAAoC,KAApC,WAAoC,KAApC;EAAA,MAA2C,OAA3C,WAA2C,OAA3C;EAAA,MAAoD,OAApD,WAAoD,OAApD;EAAA,MAA6D,YAA7D,WAA6D,YAA7D;EAAA,MAA2E,YAA3E,WAA2E,YAA3E;EAAA,MAAyF,WAAzF,WAAyF,WAAzF;EACA,EAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,YAAtD,EAAoE,YAApE,EAAkF,WAAlF,CAAd;;EAV0D,6CAWnC,oBAXmC;EAAA;;EAAA;EAW1D,wDAA6C;EAAA,UAAlC,QAAkC;;EAC3C,UAAI,MAAM,CAAC,QAAD,CAAN,KAAqB,CAAzB,EAA4B;EAC1B,cAAM,IAAI,UAAJ,0BACc,QADd,6EAAN;EAGD;EACF;EAjByD;EAAA;EAAA;EAAA;EAAA;;EAkB1D,SAAO,MAAP;EACD;EAEK,SAAU,kBAAV,CAA6B,OAA7B,EAAgE;EACpE,SAAO,SAAS,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAC,WAAD,EAAc,QAAd,CAAtB,EAA+C,WAA/C,CAAhB;EACD;EAEK,SAAU,wBAAV,CAAmC,OAAnC,EAAqE;EACzE,SAAO,SAAS,CAAC,OAAD,EAAU,gBAAV,EAA4B,CAAC,YAAD,EAAe,SAAf,EAA0B,OAA1B,EAAmC,QAAnC,CAA5B,EAA0E,YAA1E,CAAhB;EACD;EAEK,SAAU,sBAAV,CACJ,OADI,EAEJ,QAFI,EAE2B;EAE/B,SAAO,SAAS,CAAC,OAAD,EAAU,cAAV,EAA0B,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,YAA3B,CAA1B,EAAoE,QAApE,CAAhB;EACD;EAEK,SAAU,0BAAV,CAAqC,YAArC,EAAoG;EACxG,UAAQ,YAAR;EACE,SAAK,MAAL;EACE,aAAO,OAAP;;EACF,SAAK,OAAL;EACE,aAAO,MAAP;;EACF;EACE,aAAO,YAAP;EANJ;EAQD;EAEK,SAAU,gBAAV,CACJ,OADI,EAEJ,QAFI,EAEoD;EAExD,SAAO,SAAS,CAAC,OAAD,EAAU,QAAV,EAAoB,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,EAA4B,QAA5B,CAApB,EAA2D,QAA3D,CAAhB;EACD;EAEK,SAAU,oBAAV,CAA+B,OAA/B,EAAmE;EACvE,SAAO,SAAS,CAAC,OAAD,EAAU,cAAV,EAA0B,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAA1B,EAAuD,MAAvD,CAAhB;EACD;EAEK,SAAU,wBAAV,CAAmC,OAAnC,EAAiF;EACrF,SAAO,SAAS,CAAC,OAAD,EAAU,cAAV,EAA0B,CAAC,MAAD,EAAS,OAAT,CAA1B,EAA6C,MAA7C,CAAhB;EACD;EAEK,SAAU,kBAAV,CAA6B,OAA7B,EAA2E;EAC/E,SAAO,SAAS,CAAC,OAAD,EAAU,QAAV,EAAoB,CAAC,MAAD,EAAS,OAAT,CAApB,EAAuC,MAAvC,CAAhB;EACD;EAEK,SAAU,2BAAV,CACJ,OADI,EAEJ,QAFI,EAGJ,SAHI,EAGe;EAEnB,MAAI,OAAO,GAAG,QAAd;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B,OAAO,GAAG,QAAV;EAC5B,MAAI,CAAC,SAAD,IAAc,QAAQ,KAAK,SAA/B,EAA0C,OAAO,GAAG,QAAQ,GAAG,CAAX,GAAe,QAAQ,GAAG,CAA1B,GAA8B,CAAxC;EAC1C,MAAM,SAAS,GAAG,eAAe,CAAC,OAAD,EAAU,mBAAV,EAA+B,CAA/B,EAAkC,OAAlC,EAA2C,CAA3C,CAAjC;;EACA,MAAI,QAAQ,KAAK,SAAb,IAA0B,QAAQ,GAAG,SAAX,KAAyB,CAAvD,EAA0D;EACxD,UAAM,IAAI,UAAJ,sDAA6D,QAA7D,EAAN;EACD;;EACD,SAAO,SAAP;EACD;EAeK,SAAU,mCAAV,CACJ,OADI,EAEJ,YAFI,EAEyD;EAE7D,MAAM,iBAAiB,GAA8C;EACnE,IAAA,IAAI,EAAE,SAD6D;EAEnE,IAAA,KAAK,EAAE,SAF4D;EAGnE,IAAA,IAAI,EAAE,SAH6D;EAInE,IAAA,GAAG,EAAE,SAJ8D;EAKnE,IAAA,IAAI,EAAE,EAL6D;EAMnE,IAAA,MAAM,EAAE,EAN2D;EAOnE,IAAA,MAAM,EAAE,EAP2D;EAQnE,IAAA,WAAW,EAAE,IARsD;EASnE,IAAA,WAAW,EAAE,IATsD;EAUnE,IAAA,UAAU,EAAE;EAVuD,GAArE;EAYA,SAAO,2BAA2B,CAAC,OAAD,EAAU,iBAAiB,CAAC,YAAD,CAA3B,EAA2C,KAA3C,CAAlC;EACD;EAEK,SAAU,wBAAV,CAAmC,OAAnC,EAA6E;EAKjF,MAAM,YAAY,GAAG,sBAAsB,CAAC,OAAD,EAAU,SAAV,EAAqB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,KAA1B,EAAiC,MAAjC,CAArB,CAA3C;;EACA,UAAQ,YAAR;EACE,SAAK,QAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,QAAb;EAAuB,QAAA,IAAI,EAAE,QAA7B;EAAuC,QAAA,SAAS,EAAE;EAAlD,OAAP;;EACF,SAAK,QAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,CAAb;EAAgB,QAAA,IAAI,EAAE,QAAtB;EAAgC,QAAA,SAAS,EAAE;EAA3C,OAAP;;EACF,SAAK,aAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,CAAb;EAAgB,QAAA,IAAI,EAAE,aAAtB;EAAqC,QAAA,SAAS,EAAE;EAAhD,OAAP;;EACF,SAAK,aAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,CAAb;EAAgB,QAAA,IAAI,EAAE,aAAtB;EAAqC,QAAA,SAAS,EAAE;EAAhD,OAAP;;EACF,SAAK,YAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,CAAb;EAAgB,QAAA,IAAI,EAAE,YAAtB;EAAoC,QAAA,SAAS,EAAE;EAA/C,OAAP;;EAVJ;;EAaA,MAAI,MAAM,GAAG,OAAO,CAAC,sBAArB;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B,MAAM,GAAG,MAAT;;EAC1B,MAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;EAC9B,QAAM,YAAY,GAAG,QAAQ,CAAC,MAAD,CAA7B;EACA,QAAI,YAAY,KAAK,MAArB,EAA6B,OAAO;EAAE,MAAA,SAAS,EAAE,MAAb;EAAqB,MAAA,IAAI,EAAE,YAA3B;EAAyC,MAAA,SAAS,EAAE;EAApD,KAAP;EAC7B,UAAM,IAAI,UAAJ,qEAA4E,YAA5E,EAAN;EACD;;EACD,MAAI,WAAW,CAAC,MAAD,CAAX,IAAuB,MAAM,GAAG,CAAhC,IAAqC,MAAM,GAAG,CAAlD,EAAqD;EACnD,UAAM,IAAI,UAAJ,qEAA4E,MAA5E,EAAN;EACD;;EACD,MAAM,SAAS,GAAG,SAAS,CAAC,MAAD,CAA3B;;EACA,UAAQ,SAAR;EACE,SAAK,CAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAT,SAAF;EAAa,QAAA,IAAI,EAAE,QAAnB;EAA6B,QAAA,SAAS,EAAE;EAAxC,OAAP;;EACF,SAAK,CAAL;EACA,SAAK,CAAL;EACA,SAAK,CAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAT,SAAF;EAAa,QAAA,IAAI,EAAE,aAAnB;EAAkC,QAAA,SAAS,WAAE,EAAF,EAAS,IAAI,SAAb;EAA3C,OAAP;;EACF,SAAK,CAAL;EACA,SAAK,CAAL;EACA,SAAK,CAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAT,SAAF;EAAa,QAAA,IAAI,EAAE,aAAnB;EAAkC,QAAA,SAAS,WAAE,EAAF,EAAS,IAAI,SAAb;EAA3C,OAAP;;EACF,SAAK,CAAL;EACA,SAAK,CAAL;EACA,SAAK,CAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAT,SAAF;EAAa,QAAA,IAAI,EAAE,YAAnB;EAAiC,QAAA,SAAS,WAAE,EAAF,EAAS,IAAI,SAAb;EAA1C,OAAP;;EACF;EACE,YAAM,IAAI,UAAJ,qEAA4E,MAA5E,EAAN;EAhBJ;EAkBD;EAiBK,SAAU,qBAAV,CAKJ,OALI,EAMJ,QANI,EAQc;EAAA,MADlB,iBACkB,uEAD6B,EAC7B;EAAA,MAAlB,SAAkB;EAElB,MAAM,QAAQ,GAAG,IAAI,GAAJ,CACf,qBAAqB,CAAC,MAAtB,CAA6B;EAAA;EAAA,QAAI,IAAJ;;EAAA,WAAc,CAAC,iBAAiB,CAAC,QAAlB,CAA2B,IAA3B,CAAf;EAAA,GAA7B,CADe,CAAjB;EAGA,MAAM,OAAO,GAAG,IAAI,GAAJ,CAAQ,aAAR,CAAhB;;EALkB,8CAMF,iBANE;EAAA;;EAAA;EAMlB,2DAAmC;EAAA,UAAxB,CAAwB;EACjC,MAAA,OAAO,CAAC,MAAR,CAAe,CAAf;EACD;EARiB;EAAA;EAAA;EAAA;EAAA;;EASlB,MAAM,MAAM,GAAG,SAAS,CAAC,OAAD,EAAU,aAAV,GAA0B,MAA1B,4BAAqC,OAArC,sBAAiD,QAAQ,CAAC,IAAT,EAAjD,IAAmE,QAAnE,CAAxB;EAEA,MAAI,MAAM,KAAK,MAAX,IAAqB,SAAS,KAAK,SAAvC,EAAkD,OAAO,SAAP;;EAClD,MAAI,QAAQ,CAAC,GAAT,CAAa,MAAb,CAAJ,EAA0D;EACxD,WAAO,QAAQ,CAAC,GAAT,CAAa,MAAb,CAAP;EACD;;EACD,SAAO,MAAP;EACD;EAEK,SAAU,sBAAV,CAKJ,OALI,EAMJ,QANI,EAO6C;EAAA,MAAjD,iBAAiD,uEAAF,EAAE;EAEjD,MAAM,QAAQ,GAAG,IAAI,GAAJ,CACf,qBAAqB,CAAC,MAAtB,CAA6B;EAAA;EAAA,QAAI,IAAJ;;EAAA,WAAc,CAAC,iBAAiB,CAAC,QAAlB,CAA2B,IAA3B,CAAf;EAAA,GAA7B,CADe,CAAjB;EAGA,MAAM,OAAO,GAAG,IAAI,GAAJ,CAAQ,aAAR,CAAhB;;EALiD,8CAMjC,iBANiC;EAAA;;EAAA;EAMjD,2DAAmC;EAAA,UAAxB,CAAwB;EACjC,MAAA,OAAO,CAAC,MAAR,CAAe,CAAf;EACD;EARgD;EAAA;EAAA;EAAA;EAAA;;EASjD,MAAM,KAAK,GAAG,SAAS,CAAC,OAAD,EAAU,cAAV,+BAA8B,OAA9B,sBAA0C,QAAQ,CAAC,IAAT,EAA1C,IAA4D,QAA5D,CAAvB;EACA,MAAI,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAJ,EAAyD,OAAO,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAP;EACzD,SAAO,KAAP;EACD;EAEK,SAAU,2BAAV,CAAsC,OAAtC,EAEL;EACC;EACA;EACA;EACA;EACA,MAAM,QAAQ,GAAG,IAAI,GAAJ,CAAQ,qBAAR,CAAjB;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,OAAD,EAAU,MAAV,+BAAsB,QAAQ,CAAC,MAAT,EAAtB,sBAA4C,QAAQ,CAAC,IAAT,EAA5C,IAA8D,SAA9D,CAAvB;;EACA,MAAI,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAJ,EAAuE;EACrE,WAAO,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAP;EACD;;EACD,SAAO,KAAP;EACD;EAEK,SAAU,wBAAV,CAAmC,OAAnC,EAQL;EACC,MAAM,UAAU,GAAG,OAAO,CAAC,UAA3B,CADD;EAGC;;EACA,MAAI,UAAU,KAAK,SAAnB,EAA8B,OAAO,UAAP;EAE9B,MAAI,eAAe,GAAoB,QAAvC;EACA,MAAI,YAAY,GAAG,KAAnB;EACA,MAAI,IAAJ,EAAU,KAAV,EAAiB,GAAjB,EAAsB,IAAtB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,WAA5C,EAAyD,WAAzD,EAAsE,UAAtE,EAAkF,QAAlF,EAA4F,QAA5F,EAAsG,MAAtG;;EACA,MAAI,QAAQ,CAAC,UAAD,CAAZ,EAA0B;EACxB,QAAI,uBAAuB,CAAC,UAAD,CAAvB,IAAuC,cAAc,CAAC,UAAD,CAAzD,EAAuE,OAAO,UAAP;EACvE,QAAI,kBAAkB,CAAC,UAAD,CAAtB,EAAoC,OAAO,sBAAsB,CAAC,UAAD,CAA7B;EACpC,IAAA,QAAQ,GAAG,iCAAiC,CAAC,UAAD,CAA5C;EACA,QAAM,UAAU,GAAG,cAAc,CAAC,QAAD,EAAW,CAC1C,KAD0C,EAE1C,MAF0C,EAG1C,aAH0C,EAI1C,aAJ0C,EAK1C,QAL0C,EAM1C,OAN0C,EAO1C,WAP0C,EAQ1C,YAR0C,EAS1C,QAT0C,EAU1C,MAV0C,CAAX,CAAjC;EAYA,QAAM,MAAM,GAAG,wBAAwB,CAAC,UAAD,EAAa,UAAb,CAAvC;EACA,QAAM,WAAW,GAAGN,cAAY,CAAC,IAAD,CAAhC;EACA,IAAA,WAAW,CAAC,QAAZ,GAAuB,WAAvB;;EAlBwB,gCAmB4D,+BAA+B,CACjH,QADiH,EAEjH,MAFiH,EAGjH,WAHiH,CAnB3F;;EAmBrB,IAAA,IAnBqB,yBAmBrB,IAnBqB;EAmBf,IAAA,KAnBe,yBAmBf,KAnBe;EAmBR,IAAA,GAnBQ,yBAmBR,GAnBQ;EAmBH,IAAA,IAnBG,yBAmBH,IAnBG;EAmBG,IAAA,MAnBH,yBAmBG,MAnBH;EAmBW,IAAA,MAnBX,yBAmBW,MAnBX;EAmBmB,IAAA,WAnBnB,yBAmBmB,WAnBnB;EAmBgC,IAAA,WAnBhC,yBAmBgC,WAnBhC;EAmB6C,IAAA,UAnB7C,yBAmB6C,UAnB7C;EAwBxB;EACA;EACA;EACA,IAAA,MAAM,GAAI,UAAyC,CAAC,MAApD;EACA,QAAI,MAAM,KAAK,SAAf,EAA0B,eAAe,GAAG,MAAlB;EAC1B,IAAA,QAAQ,GAAI,UAAyC,CAAC,QAAtD;EACD,GA9BD,MA8BO;EACL,QAAI,QAAJ,EAAc,CAAd;;EADK,6BAGH,gBAAgB,CAAC,QAAQ,CAAC,UAAD,CAAT,EAAuB;EAAE,MAAA,YAAY,EAAE;EAAhB,KAAvB,CAHb;;EAEF,IAAA,IAFE,sBAEF,IAFE;EAEI,IAAA,KAFJ,sBAEI,KAFJ;EAEW,IAAA,GAFX,sBAEW,GAFX;EAEgB,IAAA,IAFhB,sBAEgB,IAFhB;EAEsB,IAAA,MAFtB,sBAEsB,MAFtB;EAE8B,IAAA,MAF9B,sBAE8B,MAF9B;EAEsC,IAAA,WAFtC,sBAEsC,WAFtC;EAEmD,IAAA,WAFnD,sBAEmD,WAFnD;EAEgE,IAAA,UAFhE,sBAEgE,UAFhE;EAE4E,IAAA,QAF5E,sBAE4E,QAF5E;EAEsF,IAAA,QAFtF,sBAEsF,QAFtF;EAEgG,IAAA,MAFhG,sBAEgG,MAFhG;EAEwG,IAAA,CAFxG,sBAEwG,CAFxG;EAIL,QAAI,QAAJ,EAAc,QAAQ,GAAG,QAAX;;EACd,QAAI,CAAJ,EAAO;EACL,MAAA,eAAe,GAAG,OAAlB;EACD,KAFD,MAEO,IAAI,CAAC,MAAL,EAAa;EAClB,MAAA,eAAe,GAAG,MAAlB;EACD;;EACD,QAAI,CAAC,QAAL,EAAe,QAAQ,GAAG,kBAAkB,EAA7B;EACf,IAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;EACA,IAAA,YAAY,GAAG,IAAf;EACD;;EACD,MAAI,QAAJ,EAAc;EACZ,IAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;EACA,QAAI,QAAQ,GAAG,CAAf;EACA,QAAI,eAAe,KAAK,QAAxB,EAAkC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAD,CAAT,CAA5B;EAClC,QAAM,gBAAgB,GAAG,0BAA0B,CACjD,IADiD,EAEjD,KAFiD,EAGjD,GAHiD,EAIjD,IAJiD,EAKjD,MALiD,EAMjD,MANiD,EAOjD,WAPiD,EAQjD,WARiD,EASjD,UATiD,EAUjD,eAViD,EAWjD,QAXiD,EAYjD,QAZiD,EAajD,YAbiD,EAcjD,QAdiD,EAejD,YAfiD,CAAnD;EAiBA,WAAO,2BAA2B,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,QAA7B,CAAlC;EACD;;EACD,SAAO,kBAAkB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAAzB;EACD;EAEK,SAAU,yBAAV,CAAoC,WAApC,EAAwE,YAAxE,EAA2G;EAC/G,MAAI,aAAa,CAAC,OAAd,CAAsB,WAAtB,IAAqC,aAAa,CAAC,OAAd,CAAsB,YAAtB,CAAzC,EAA8E;EAC5E,UAAM,IAAI,UAAJ,uBAA8B,WAA9B,kDAAiF,YAAjF,EAAN;EACD;EACF;EAEK,SAAU,0BAAV,CACJ,KADI,EAEJ,MAFI,EAGJ,KAHI,EAIJ,IAJI,EAKJ,KALI,EAMJ,OANI,EAOJ,OAPI,EAQJ,YARI,EASJ,YATI,EAUJ,WAVI,EAUe;EAEnB,MAAM,QAAQ,GAAG,IAAI,GAAJ,CAAuC,qBAAvC,CAAjB;;EACA,0BAAwB,CACtB,CAAC,OAAD,EAAU,KAAV,CADsB,EAEtB,CAAC,QAAD,EAAW,MAAX,CAFsB,EAGtB,CAAC,OAAD,EAAU,KAAV,CAHsB,EAItB,CAAC,MAAD,EAAS,IAAT,CAJsB,EAKtB,CAAC,OAAD,EAAU,KAAV,CALsB,EAMtB,CAAC,SAAD,EAAY,OAAZ,CANsB,EAOtB,CAAC,SAAD,EAAY,OAAZ,CAPsB,EAQtB,CAAC,cAAD,EAAiB,YAAjB,CARsB,EAStB,CAAC,cAAD,EAAiB,YAAjB,CATsB,EAUtB,CAAC,aAAD,EAAgB,WAAhB,CAVsB,CAAxB,0BAWY;EAXP;EAAA,QAAO,IAAP;EAAA,QAAa,CAAb;;EAYH,QAAI,CAAC,KAAK,CAAV,EAAa,OAAO,QAAQ,CAAC,GAAT,CAAa,IAAb,CAAP;EACd;;EACD,SAAO,YAAP;EACD;EAEK,SAAU,wBAAV,CACJ,KADI,EAEJ,KAFI,EAEK;EAET,MAAI,aAAa,CAAC,OAAd,CAAsB,KAAtB,IAA+B,aAAa,CAAC,OAAd,CAAsB,KAAtB,CAAnC,EAAiE,OAAO,KAAP;EACjE,SAAO,KAAP;EACD;EAEK,SAAU,eAAV,CACJ,GADI,EAEJ,MAFI,EAGJ,UAHI,EAGoC;EAExC,MAAI,CAAC,QAAQ,CAAC,GAAD,CAAb,EAAoB,OAAO,KAAP;EACpB,MAAI,GAAJ;;EAHwC,8CAIjB,MAJiB;EAAA;;EAAA;EAIxC,2DAA+B;EAAA,UAApB,QAAoB;EAC7B,UAAM,KAAK,GAAG,GAAG,CAAC,QAAD,CAAjB;;EACA,UAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,QAAA,GAAG,GAAG,GAAG,IAAK,EAAd;;EACA,YAAI,UAAU,KAAK,SAAf,IAA4B,aAAa,CAAC,GAAd,CAAkB,QAAlB,CAAhC,EAAuF;EACrF,UAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,aAAa,CAAC,GAAd,CAAkB,QAAlB,EAAsD,KAAtD,CAAhB;EACD,SAFD,MAEO,IAAI,UAAU,KAAK,SAAnB,EAA8B;EACnC,UAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,UAAU,CAAC,KAAD,CAA1B;EACD,SAFM,MAEA;EACL,UAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,KAAhB;EACD;EACF;EACF;EAhBuC;EAAA;EAAA;EAAA;EAAA;;EAiBxC,SAAO,GAAG,GAAG,GAAH,GAAS,KAAnB;EACD;EAEK,SAAU,qBAAV,CACJ,GADI,EAEJ,MAFI,EAEiC;EAErC,MAAI,CAAC,QAAQ,CAAC,GAAD,CAAb,EAAoB,OAAO,SAAP;EACpB,MAAM,MAAM,GAAG,EAAf;EACA,MAAI,GAAG,GAAG,KAAV;;EAJqC,8CAKX,MALW;EAAA;;EAAA;EAKrC,2DAAkC;EAAA,UAAvB,WAAuB;;EAChC,wCAAiC,WAAjC;EAAA,UAAO,QAAP;EAAA,UAAiB,YAAjB;;EACA,UAAI,KAAK,GAAG,GAAG,CAAC,QAAD,CAAf;;EACA,UAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,YAAI,WAAW,CAAC,MAAZ,KAAuB,CAA3B,EAA8B;EAC5B,gBAAM,IAAI,SAAJ,8BAAoC,QAApC,4BAAN;EACD,SAHsB;EAKvB;EACA;EACA;;;EACA,QAAA,KAAK,GAAG,YAAR;EACD,OATD,MASO;EACL,QAAA,GAAG,GAAG,IAAN;;EACA,YAAI,aAAa,CAAC,GAAd,CAAkB,QAAlB,CAAJ,EAA2D;EACzD,UAAA,KAAK,GAAG,aAAa,CAAC,GAAd,CAAkB,QAAlB,EAAsD,KAAtD,CAAR;EACD;EACF;;EACD,MAAA,MAAM,CAAC,QAAD,CAAN,GAAmB,KAAnB;EACD;EAxBoC;EAAA;EAAA;EAAA;EAAA;;EAyBrC,MAAI,CAAC,GAAL,EAAU;EACR,UAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EACD;;EACD,MACI,MAAiC,CAAC,KAAD,CAAjC,KAA6C,SAA/C,MACE,MAAiC,CAAC,SAAD,CAAjC,KAAiD,SADnD,CADF,EAGE;EACA,UAAM,IAAI,UAAJ,CAAe,0DAAf,CAAN;EACD;;EACD,SAAO,MAAP;EACD;;EAGK,SAAU,oBAAV,CACJ,GADI,EAEJ,UAFI,EAEiD;EAErD,MAAM,OAAO,GAAoD,CAC/D,CAAC,KAAD,EAAQ,SAAR,CAD+D,EAE/D,CAAC,OAAD,EAAU,SAAV,CAF+D,EAG/D,CAAC,WAAD,EAAc,SAAd,CAH+D,EAI/D,CAAC,MAAD,EAAS,SAAT,CAJ+D,CAAjE,CAFqD;;EASrD,EAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,QAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,UAAE,IAAF;;EAAA,aAAY,IAAI,KAAK,SAArB;EAAA,KAAb,CAAL,EAAmD;EACjD,MAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,GAJD;EAKA,SAAO,qBAAqB,CAAC,GAAD,EAAM,OAAN,CAA5B;EACD;EAEK,SAAU,wBAAV,CACJ,GADI,EAEJ,UAFI,EAEqD;EAEzD,MAAM,OAAO,GAAwD,CACnE,CAAC,KAAD,EAAQ,SAAR,CADmE,EAEnE,CAAC,MAAD,EAAS,CAAT,CAFmE,EAGnE,CAAC,aAAD,EAAgB,CAAhB,CAHmE,EAInE,CAAC,aAAD,EAAgB,CAAhB,CAJmE,EAKnE,CAAC,QAAD,EAAW,CAAX,CALmE,EAMnE,CAAC,OAAD,EAAU,SAAV,CANmE,EAOnE,CAAC,WAAD,EAAc,SAAd,CAPmE,EAQnE,CAAC,YAAD,EAAe,CAAf,CARmE,EASnE,CAAC,QAAD,EAAW,CAAX,CATmE,EAUnE,CAAC,MAAD,EAAS,SAAT,CAVmE,CAArE,CAFyD;;EAezD,EAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,QAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,UAAE,IAAF;;EAAA,aAAY,IAAI,KAAK,SAArB;EAAA,KAAb,CAAL,EAAmD;EACjD,MAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,GAJD;EAKA,SAAO,qBAAqB,CAAC,GAAD,EAAM,OAAN,CAA5B;EACD;EAEK,SAAU,wBAAV,CACJ,GADI,EAEJ,UAFI,EAEqD;EAEzD,MAAM,OAAO,GAAwD,CACnE,CAAC,KAAD,EAAQ,SAAR,CADmE,EAEnE,CAAC,OAAD,EAAU,SAAV,CAFmE,EAGnE,CAAC,WAAD,EAAc,SAAd,CAHmE,EAInE,CAAC,MAAD,EAAS,SAAT,CAJmE,CAArE,CAFyD;;EASzD,EAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,QAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,UAAE,IAAF;;EAAA,aAAY,IAAI,KAAK,SAArB;EAAA,KAAb,CAAL,EAAmD;EACjD,MAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,GAJD;EAKA,SAAO,qBAAqB,CAAC,GAAD,EAAM,OAAN,CAA5B;EACD;EAEK,SAAU,oBAAV,CAA+B,GAA/B,EAA0D;EAC9D,SAAO,qBAAqB,CAAC,GAAD,EAAM,CAChC,CAAC,MAAD,EAAS,CAAT,CADgC,EAEhC,CAAC,aAAD,EAAgB,CAAhB,CAFgC,EAGhC,CAAC,aAAD,EAAgB,CAAhB,CAHgC,EAIhC,CAAC,QAAD,EAAW,CAAX,CAJgC,EAKhC,CAAC,YAAD,EAAe,CAAf,CALgC,EAMhC,CAAC,QAAD,EAAW,CAAX,CANgC,CAAN,CAA5B;EAQD;EAEK,SAAU,yBAAV,CACJ,GADI,EAEJ,UAFI,EAEsD;EAE1D,MAAM,OAAO,GAAyD,CACpE,CAAC,OAAD,EAAU,SAAV,CADoE,EAEpE,CAAC,WAAD,EAAc,SAAd,CAFoE,EAGpE,CAAC,MAAD,EAAS,SAAT,CAHoE,CAAtE,CAF0D;;EAQ1D,EAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,QAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,UAAE,IAAF;;EAAA,aAAY,IAAI,KAAK,SAArB;EAAA,KAAb,CAAL,EAAmD;EACjD,MAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,GAJD;EAKA,SAAO,qBAAqB,CAAC,GAAD,EAAM,OAAN,CAA5B;EACD;;EAED,SAAS,6BAAT,CACE,GADF,EAEE,UAFF,EAE2D;EAEzD,MAAM,OAAO,GAAyE,CACpF,CAAC,KAAD,EAAQ,SAAR,CADoF,EAEpF,CAAC,MAAD,EAAS,CAAT,CAFoF,EAGpF,CAAC,aAAD,EAAgB,CAAhB,CAHoF,EAIpF,CAAC,aAAD,EAAgB,CAAhB,CAJoF,EAKpF,CAAC,QAAD,EAAW,CAAX,CALoF,EAMpF,CAAC,OAAD,EAAU,SAAV,CANoF,EAOpF,CAAC,WAAD,EAAc,SAAd,CAPoF,EAQpF,CAAC,YAAD,EAAe,CAAf,CARoF,EASpF,CAAC,QAAD,EAAW,CAAX,CAToF,EAUpF,CAAC,MAAD,EAAS,SAAT,CAVoF,EAWpF,CAAC,QAAD,EAAW,SAAX,CAXoF,EAYpF,CAAC,UAAD,CAZoF,CAAtF,CAFyD;;EAiBzD,EAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,QAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,UAAE,IAAF;;EAAA,aAAY,IAAI,KAAK,SAArB;EAAA,KAAb,CAAL,EAAmD;EACjD,MAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,GAJD;EAKA,SAAO,qBAAqB,CAAC,GAAD,EAAM,OAAN,CAA5B;EACD;;EAEK,SAAU,cAAV,CACJ,SADI,EAEoD;EAAA,MAAxD,OAAwD,uEAAlBA,cAAY,CAAC,IAAD,CAAM;EAExD,MAAI,IAAI,GAAG,SAAX;;EACA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,cAAc,CAAC,IAAD,CAAlB,EAA0B,OAAO,IAAP;;EAC1B,QAAI,uBAAuB,CAAC,IAAD,CAA3B,EAAmC;EACjC,MAAA,IAAI,GAAG,kCAAkC,CACvC,OAAO,CAAC,IAAD,EAAO,SAAP,CADgC,EAEvC,OAAO,CAAC,IAAD,EAAO,OAAP,CAFgC,EAGvC,OAAO,CAAC,IAAD,EAAO,QAAP,CAHgC,CAAzC;EAKD;;EACD,QAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B;EAC5B,aAAO,kBAAkB,CACvB,OAAO,CAAC,IAAD,EAAO,QAAP,CADgB,EAEvB,OAAO,CAAC,IAAD,EAAO,SAAP,CAFgB,EAGvB,OAAO,CAAC,IAAD,EAAO,OAAP,CAHgB,EAIvB,OAAO,CAAC,IAAD,EAAO,QAAP,CAJgB,CAAzB;EAMD;;EACD,QAAM,SAAQ,GAAG,iCAAiC,CAAC,IAAD,CAAlD;;EACA,QAAM,UAAU,GAAG,cAAc,CAAC,SAAD,EAAW,CAAC,KAAD,EAAQ,OAAR,EAAiB,WAAjB,EAA8B,MAA9B,CAAX,CAAjC;EACA,QAAM,MAAM,GAAG,oBAAoB,CAAC,IAAD,EAAO,UAAP,CAAnC;EACA,WAAO,cAAc,CAAC,SAAD,EAAW,MAAX,EAAmB,OAAnB,CAArB;EACD;;EACD,EAAA,kBAAkB,CAAC,OAAD,CAAlB,CAzBwD;;EA0BxD,8BAA0C,uBAAuB,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAjE;EAAA,MAAQ,IAAR,yBAAQ,IAAR;EAAA,MAAc,KAAd,yBAAc,KAAd;EAAA,MAAqB,GAArB,yBAAqB,GAArB;EAAA,MAA0B,QAA1B,yBAA0B,QAA1B;EAAA,MAAoC,CAApC,yBAAoC,CAApC;;EACA,MAAI,CAAJ,EAAO,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACP,MAAM,iBAAiB,GAAG,YAAY,CAAC,sBAAD,CAAtC;EACA,SAAO,IAAI,iBAAJ,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC,GAAnC,EAAwC,QAAxC,CAAP,CA7BwD;EA8BzD;EAEK,SAAU,+BAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,OAHI,EAG+B;EAEnC,8BAAqE,oBAAoB,CAAC,MAAD,CAAzF;EAAA,MAAM,IAAN,yBAAM,IAAN;EAAA,MAAY,MAAZ,yBAAY,MAAZ;EAAA,MAAoB,MAApB,yBAAoB,MAApB;EAAA,MAA4B,WAA5B,yBAA4B,WAA5B;EAAA,MAAyC,WAAzC,yBAAyC,WAAzC;EAAA,MAAsD,UAAtD,yBAAsD,UAAtD;;EACA,MAAM,QAAQ,GAAG,kBAAkB,CAAC,OAAD,CAAnC;EACA,MAAM,IAAI,GAAG,cAAc,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAA3B;EACA,MAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAArB;EACA,MAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAnB;;EAPmC,sBAQ+B,YAAY,CAC5E,IAD4E,EAE5E,MAF4E,EAG5E,MAH4E,EAI5E,WAJ4E,EAK5E,WAL4E,EAM5E,UAN4E,EAO5E,QAP4E,CAR3C;;EAQhC,EAAA,IARgC,iBAQhC,IARgC;EAQ1B,EAAA,MAR0B,iBAQ1B,MAR0B;EAQlB,EAAA,MARkB,iBAQlB,MARkB;EAQV,EAAA,WARU,iBAQV,WARU;EAQG,EAAA,WARH,iBAQG,WARH;EAQgB,EAAA,UARhB,iBAQgB,UARhB;EAiBnC,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH,GAAf;EAAoB,IAAA,IAAI,EAAJ,IAApB;EAA0B,IAAA,MAAM,EAAN,MAA1B;EAAkC,IAAA,MAAM,EAAN,MAAlC;EAA0C,IAAA,WAAW,EAAX,WAA1C;EAAuD,IAAA,WAAW,EAAX,WAAvD;EAAoE,IAAA,UAAU,EAAV;EAApE,GAAP;EACD;EAEK,SAAU,kBAAV,CACJ,IADI,EAEwD;EAAA,MAA5D,OAA4D,uEAAlBA,cAAY,CAAC,IAAD,CAAM;EAE5D,MAAI,IAAJ,EACE,KADF,EAEE,GAFF,EAGE,IAHF,EAIE,MAJF,EAKE,MALF,EAME,WANF,EAOE,WAPF,EAQE,UARF,EASE,QATF;;EAUA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B,OAAO,IAAP;;EAC9B,QAAI,uBAAuB,CAAC,IAAD,CAA3B,EAAmC;EACjC,aAAO,kCAAkC,CACvC,OAAO,CAAC,IAAD,EAAO,SAAP,CADgC,EAEvC,OAAO,CAAC,IAAD,EAAO,OAAP,CAFgC,EAGvC,OAAO,CAAC,IAAD,EAAO,QAAP,CAHgC,CAAzC;EAKD;;EACD,QAAI,cAAc,CAAC,IAAD,CAAlB,EAA0B;EACxB,aAAO,sBAAsB,CAC3B,OAAO,CAAC,IAAD,EAAO,QAAP,CADoB,EAE3B,OAAO,CAAC,IAAD,EAAO,SAAP,CAFoB,EAG3B,OAAO,CAAC,IAAD,EAAO,OAAP,CAHoB,EAI3B,CAJ2B,EAK3B,CAL2B,EAM3B,CAN2B,EAO3B,CAP2B,EAQ3B,CAR2B,EAS3B,CAT2B,EAU3B,OAAO,CAAC,IAAD,EAAO,QAAP,CAVoB,CAA7B;EAYD;;EAED,IAAA,QAAQ,GAAG,iCAAiC,CAAC,IAAD,CAA5C;EACA,QAAM,UAAU,GAAG,cAAc,CAAC,QAAD,EAAW,CAC1C,KAD0C,EAE1C,MAF0C,EAG1C,aAH0C,EAI1C,aAJ0C,EAK1C,QAL0C,EAM1C,OAN0C,EAO1C,WAP0C,EAQ1C,YAR0C,EAS1C,QAT0C,EAU1C,MAV0C,CAAX,CAAjC;EAYA,QAAM,MAAM,GAAG,wBAAwB,CAAC,IAAD,EAAO,UAAP,CAAvC;;EArCkB,iCAsCkE,+BAA+B,CACjH,QADiH,EAEjH,MAFiH,EAGjH,OAHiH,CAtCjG;;EAsCf,IAAA,IAtCe,0BAsCf,IAtCe;EAsCT,IAAA,KAtCS,0BAsCT,KAtCS;EAsCF,IAAA,GAtCE,0BAsCF,GAtCE;EAsCG,IAAA,IAtCH,0BAsCG,IAtCH;EAsCS,IAAA,MAtCT,0BAsCS,MAtCT;EAsCiB,IAAA,MAtCjB,0BAsCiB,MAtCjB;EAsCyB,IAAA,WAtCzB,0BAsCyB,WAtCzB;EAsCsC,IAAA,WAtCtC,0BAsCsC,WAtCtC;EAsCmD,IAAA,UAtCnD,0BAsCmD,UAtCnD;EA2CnB,GA3CD,MA2CO;EACL,IAAA,kBAAkB,CAAC,OAAD,CAAlB,CADK;;EAEL,QAAI,CAAJ;;EAFK,gCAIH,2BAA2B,CAAC,QAAQ,CAAC,IAAD,CAAT,CAJxB;;EAGF,IAAA,IAHE,yBAGF,IAHE;EAGI,IAAA,KAHJ,yBAGI,KAHJ;EAGW,IAAA,GAHX,yBAGW,GAHX;EAGgB,IAAA,IAHhB,yBAGgB,IAHhB;EAGsB,IAAA,MAHtB,yBAGsB,MAHtB;EAG8B,IAAA,MAH9B,yBAG8B,MAH9B;EAGsC,IAAA,WAHtC,yBAGsC,WAHtC;EAGmD,IAAA,WAHnD,yBAGmD,WAHnD;EAGgE,IAAA,UAHhE,yBAGgE,UAHhE;EAG4E,IAAA,QAH5E,yBAG4E,QAH5E;EAGsF,IAAA,CAHtF,yBAGsF,CAHtF;EAKL,QAAI,CAAJ,EAAO,MAAM,IAAI,UAAJ,CAAe,8CAAf,CAAN;EACP,IAAA,cAAc,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAAd;EACA,QAAI,QAAQ,KAAK,SAAjB,EAA4B,QAAQ,GAAG,kBAAkB,EAA7B;EAC5B,IAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;EACD;;EACD,SAAO,sBAAsB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,EAA+E,QAA/E,CAA7B;EACD;EAEK,SAAU,kBAAV,CAA6B,IAA7B,EAA4D;EAChE,MAAI,KAAJ,EAAW,MAAX,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,YAAzD,EAAuE,YAAvE,EAAqF,WAArF;;EACA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B,OAAO,IAAP;;EADZ,gCAGhB,wBAAwB,CAAC,IAAD,CAHR;;EAEf,IAAA,KAFe,yBAEf,KAFe;EAER,IAAA,MAFQ,yBAER,MAFQ;EAEA,IAAA,KAFA,yBAEA,KAFA;EAEO,IAAA,IAFP,yBAEO,IAFP;EAEa,IAAA,KAFb,yBAEa,KAFb;EAEoB,IAAA,OAFpB,yBAEoB,OAFpB;EAE6B,IAAA,OAF7B,yBAE6B,OAF7B;EAEsC,IAAA,YAFtC,yBAEsC,YAFtC;EAEoD,IAAA,YAFpD,yBAEoD,YAFpD;EAEkE,IAAA,WAFlE,yBAEkE,WAFlE;EAInB,GAJD,MAIO;EAAA,gCAEH,2BAA2B,CAAC,QAAQ,CAAC,IAAD,CAAT,CAFxB;;EACF,IAAA,KADE,yBACF,KADE;EACK,IAAA,MADL,yBACK,MADL;EACa,IAAA,KADb,yBACa,KADb;EACoB,IAAA,IADpB,yBACoB,IADpB;EAC0B,IAAA,KAD1B,yBAC0B,KAD1B;EACiC,IAAA,OADjC,yBACiC,OADjC;EAC0C,IAAA,OAD1C,yBAC0C,OAD1C;EACmD,IAAA,YADnD,yBACmD,YADnD;EACiE,IAAA,YADjE,yBACiE,YADjE;EAC+E,IAAA,WAD/E,yBAC+E,WAD/E;EAGN;;EACD,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,SAAO,IAAI,gBAAJ,CACL,KADK,EAEL,MAFK,EAGL,KAHK,EAIL,IAJK,EAKL,KALK,EAML,OANK,EAOL,OAPK,EAQL,YARK,EASL,YATK,EAUL,WAVK,CAAP;EAYD;EAEK,SAAU,iBAAV,CAA4B,IAA5B,EAA0D;EAC9D,MAAI,iBAAiB,CAAC,IAAD,CAArB,EAA6B,OAAO,IAAP;;EAC7B,MAAI,uBAAuB,CAAC,IAAD,CAA3B,EAAmC;EACjC,QAAM,gBAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;;EACA,WAAO,IAAI,gBAAJ,CAAoB,OAAO,CAAC,IAAD,EAAO,gBAAP,CAA3B,CAAP;EACD;;EACD,MAAM,EAAE,GAAG,oBAAoB,CAAC,QAAQ,CAAC,IAAD,CAAT,CAA/B;EACA,MAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,SAAO,IAAI,eAAJ,CAAoB,EAApB,CAAP;EACD;EAEK,SAAU,kBAAV,CACJ,IADI,EAEwD;EAAA,MAA5D,OAA4D,uEAAlBA,cAAY,CAAC,IAAD,CAAM;;EAE5D,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B,OAAO,IAAP;;EAC9B,QAAI,UAAJ,EAAyC,cAAzC;;EACA,QAAI,OAAO,CAAC,IAAD,EAAO,QAAP,CAAX,EAA6B;EAC3B,MAAA,UAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,MAAA,cAAc,GAAG,KAAjB;EACD,KAHD,MAGO;EACL,UAAI,oBAAmB,GAAG,IAAI,CAAC,QAA/B;EACA,MAAA,cAAc,GAAG,oBAAmB,KAAK,SAAzC;EACA,UAAI,oBAAmB,KAAK,SAA5B,EAAuC,oBAAmB,GAAG,kBAAkB,EAAxC;EACvC,MAAA,UAAQ,GAAG,kBAAkB,CAAC,oBAAD,CAA7B;EACD;;EACD,QAAM,UAAU,GAAG,cAAc,CAAC,UAAD,EAAW,CAAC,KAAD,EAAQ,OAAR,EAAiB,WAAjB,EAA8B,MAA9B,CAAX,CAAjC;EACA,QAAM,MAAM,GAAG,wBAAwB,CAAC,IAAD,EAAO,UAAP,CAAvC,CAbkB;EAelB;EACA;;EACA,QAAI,cAAc,IAAI,MAAM,CAAC,KAAP,KAAiB,SAAnC,IAAgD,MAAM,CAAC,SAAP,KAAqB,SAArE,IAAkF,MAAM,CAAC,IAAP,KAAgB,SAAtG,EAAiH;EAC/G,MAAA,MAAM,CAAC,IAAP,GAAc,IAAd;EACD;;EACD,WAAO,kBAAkB,CAAC,UAAD,EAAW,MAAX,EAAmB,OAAnB,CAAzB;EACD;;EAED,EAAA,kBAAkB,CAAC,OAAD,CAAlB,CAzB4D;;EA0B5D,8BAAsE,2BAA2B,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAjG;EAAA,MAAM,KAAN,yBAAM,KAAN;EAAA,MAAa,GAAb,yBAAa,GAAb;EAAA,MAAkB,gBAAlB,yBAAkB,gBAAlB;EAAA,MAA8C,mBAA9C,yBAAoC,QAApC,CA1B4D;;;EA4B5D,MAAI,QAAQ,GAAuC,mBAAnD;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B,QAAQ,GAAG,kBAAkB,EAA7B;EAC5B,EAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;;EAEA,MAAI,gBAAgB,KAAK,SAAzB,EAAoC;EAClC,IAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAAb;EACA,WAAO,sBAAsB,CAAC,KAAD,EAAQ,GAAR,EAAa,QAAb,CAA7B;EACD;;EACD,MAAM,MAAM,GAAG,sBAAsB,CAAC,KAAD,EAAQ,GAAR,EAAa,QAAb,EAAuB,gBAAvB,CAArC;EACA,MAAM,gBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;EACA,SAAO,kBAAkB,CAAC,QAAD,EAAW,MAAX,EAAmB,gBAAnB,CAAzB;EACD;EAEK,SAAU,cAAV,CACJ,SADI,EAE0D;EAAA,MAA9D,QAA8D,uEAAX,WAAW;EAE9D,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,IAAJ,EAAU,MAAV,EAAkB,MAAlB,EAA0B,WAA1B,EAAuC,WAAvC,EAAoD,UAApD,EAAgE,QAAhE;;EACA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,cAAc,CAAC,IAAD,CAAlB,EAA0B,OAAO,IAAP;;EAC1B,QAAI,uBAAuB,CAAC,IAAD,CAA3B,EAAmC;EACjC,MAAA,IAAI,GAAG,kCAAkC,CACvC,OAAO,CAAC,IAAD,EAAO,SAAP,CADgC,EAEvC,OAAO,CAAC,IAAD,EAAO,OAAP,CAFgC,EAGvC,OAAO,CAAC,IAAD,EAAO,QAAP,CAHgC,CAAzC;EAKD;;EACD,QAAI,kBAAkB,CAAC,IAAD,CAAtB,EAA8B;EAC5B,UAAM,kBAAiB,GAAG,YAAY,CAAC,sBAAD,CAAtC;;EACA,aAAO,IAAI,kBAAJ,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,UAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,UAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,eAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,eAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,cAAP,CANF,CAAP;EAQD;;EACD,IAAA,QAAQ,GAAG,iCAAiC,CAAC,IAAD,CAA5C;;EACA,QAAI,QAAQ,CAAC,QAAD,CAAR,KAAuB,SAA3B,EAAsC;EACpC,YAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACD;;EAvBiB,iCAwBgD,oBAAoB,CAAC,IAAD,CAxBpE;;EAwBf,IAAA,IAxBe,0BAwBf,IAxBe;EAwBT,IAAA,MAxBS,0BAwBT,MAxBS;EAwBD,IAAA,MAxBC,0BAwBD,MAxBC;EAwBO,IAAA,WAxBP,0BAwBO,WAxBP;EAwBoB,IAAA,WAxBpB,0BAwBoB,WAxBpB;EAwBiC,IAAA,UAxBjC,0BAwBiC,UAxBjC;;EAAA,yBAyBgD,YAAY,CAC5E,IAD4E,EAE5E,MAF4E,EAG5E,MAH4E,EAI5E,WAJ4E,EAK5E,WAL4E,EAM5E,UAN4E,EAO5E,QAP4E,CAzB5D;;EAyBf,IAAA,IAzBe,kBAyBf,IAzBe;EAyBT,IAAA,MAzBS,kBAyBT,MAzBS;EAyBD,IAAA,MAzBC,kBAyBD,MAzBC;EAyBO,IAAA,WAzBP,kBAyBO,WAzBP;EAyBoB,IAAA,WAzBpB,kBAyBoB,WAzBpB;EAyBiC,IAAA,UAzBjC,kBAyBiC,UAzBjC;EAkCnB,GAlCD,MAkCO;EAAA,gCACuE,uBAAuB,CACjG,QAAQ,CAAC,IAAD,CADyF,CAD9F;;EACF,IAAA,IADE,yBACF,IADE;EACI,IAAA,MADJ,yBACI,MADJ;EACY,IAAA,MADZ,yBACY,MADZ;EACoB,IAAA,WADpB,yBACoB,WADpB;EACiC,IAAA,WADjC,yBACiC,WADjC;EAC8C,IAAA,UAD9C,yBAC8C,UAD9C;EAC0D,IAAA,QAD1D,yBAC0D,QAD1D;EAIL,IAAA,UAAU,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,UAAjD,CAAV;;EACA,QAAI,QAAQ,KAAK,SAAb,IAA0B,QAAQ,KAAK,SAA3C,EAAsD;EACpD,YAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACD;EACF;;EACD,MAAM,iBAAiB,GAAG,YAAY,CAAC,sBAAD,CAAtC;EACA,SAAO,IAAI,iBAAJ,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,WAA5C,EAAyD,WAAzD,EAAsE,UAAtE,CAAP;EACD;EAEK,SAAU,mBAAV,CACJ,IADI,EAEyD;EAAA,MAA7D,OAA6D,uEAAlBA,cAAY,CAAC,IAAD,CAAM;;EAE7D,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,mBAAmB,CAAC,IAAD,CAAvB,EAA+B,OAAO,IAAP;;EAC/B,QAAM,UAAQ,GAAG,iCAAiC,CAAC,IAAD,CAAlD;;EACA,QAAM,UAAU,GAAG,cAAc,CAAC,UAAD,EAAW,CAAC,OAAD,EAAU,WAAV,EAAuB,MAAvB,CAAX,CAAjC;EACA,QAAM,MAAM,GAAG,yBAAyB,CAAC,IAAD,EAAO,UAAP,CAAxC;EACA,WAAO,mBAAmB,CAAC,UAAD,EAAW,MAAX,EAAmB,OAAnB,CAA1B;EACD;;EAED,EAAA,kBAAkB,CAAC,OAAD,CAAlB,CAV6D;;EAW7D,8BAAsE,4BAA4B,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAlG;EAAA,MAAM,IAAN,yBAAM,IAAN;EAAA,MAAY,KAAZ,yBAAY,KAAZ;EAAA,MAAmB,eAAnB,yBAAmB,eAAnB;EAAA,MAA8C,mBAA9C,yBAAoC,QAApC,CAX6D;;;EAa7D,MAAI,QAAQ,GAAuC,mBAAnD;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B,QAAQ,GAAG,kBAAkB,EAA7B;EAC5B,EAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;;EAEA,MAAI,eAAe,KAAK,SAAxB,EAAmC;EACjC,IAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,CAAd,CAAb;EACA,WAAO,uBAAuB,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,CAA9B;EACD;;EACD,MAAM,MAAM,GAAG,uBAAuB,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAAwB,eAAxB,CAAtC;EACA,MAAM,gBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;EACA,SAAO,mBAAmB,CAAC,QAAD,EAAW,MAAX,EAAmB,gBAAnB,CAA1B;EACD;EAIK,SAAU,0BAAV,CACJ,IADI,EAEJ,KAFI,EAGJ,GAHI,EAIJ,IAJI,EAKJ,MALI,EAMJ,MANI,EAOJ,WAPI,EAQJ,WARI,EASJ,UATI,EAUJ,eAVI,EAWJ,QAXI,EAYJ,QAZI,EAaJ,cAbI,EAcJ,SAdI,EAeJ,WAfI,EAegB;EAEpB,MAAM,QAAQ,GAAG,YAAY,CAAC,0BAAD,CAA7B;EACA,MAAM,EAAE,GAAG,IAAI,QAAJ,CAAa,IAAb,EAAmB,KAAnB,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,MAArC,EAA6C,MAA7C,EAAqD,WAArD,EAAkE,WAAlE,EAA+E,UAA/E,CAAX;;EAEA,MAAI,eAAe,KAAK,MAApB,IAA8B,SAAS,KAAK,QAAhD,EAA0D;EACxD;EACA;EACA,QAAM,QAAO,GAAG,4BAA4B,CAAC,QAAD,EAAW,EAAX,EAAe,cAAf,CAA5C;;EACA,WAAO,OAAO,CAAC,QAAD,EAAU,gBAAV,CAAd;EACD,GAVmB;EAapB;EACA;;;EACA,MAAI,eAAe,KAAK,OAApB,IAA+B,SAAS,KAAK,KAAjD,EAAwD;EACtD;EACA,QAAM,OAAO,GAAG,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAApC;EACA,QAAI,OAAO,KAAK,IAAhB,EAAsB,MAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACtB,WAAO,OAAO,CAAC,KAAR,CAAc,QAAd,CAAP;EACD,GApBmB;;;EAuBpB,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,QAAD,EAAW,EAAX,CAA/C;;EAvBoB,8CAwBI,gBAxBJ;EAAA;;EAAA;EAwBpB,2DAA0C;EAAA,UAA/B,SAA+B;EACxC,UAAM,eAAe,GAAG,uBAAuB,CAAC,QAAD,EAAW,SAAX,CAA/C;EACA,UAAM,sBAAsB,GAAG,sBAAsB,CAAC,MAAM,CAAC,eAAD,CAAP,EAA0B,IAA1B,EAAgC,YAAhC,CAAtB,CAAoE,UAApE,EAA/B;;EACA,UAAI,eAAe,KAAK,QAApB,IAAiC,WAAW,IAAI,sBAAsB,KAAK,QAA/E,EAA0F;EACxF,eAAO,OAAO,CAAC,SAAD,EAAY,gBAAZ,CAAd;EACD;EACF,KA9BmB;EAiCpB;;EAjCoB;EAAA;EAAA;EAAA;EAAA;;EAkCpB,MAAI,SAAS,KAAK,QAAlB,EAA4B;EAC1B,QAAM,SAAS,GAAG,0BAA0B,CAAC,QAAD,CAA5C;EACA,QAAM,cAAc,GAAG,kBAAkB,CAAC,QAAD,CAAlB,GAA+B,OAAO,CAAC,QAAD,EAAW,WAAX,CAAtC,GAAgE,WAAvF,CAF0B;EAI1B;EACA;;EACA,UAAM,IAAI,UAAJ,kBAAyB,SAAzB,6BAAqD,EAAE,CAAC,QAAH,EAArD,iBAAyE,cAAzE,EAAN;EACD,GAzCmB;EA2CpB;;;EACA,MAAM,OAAO,GAAG,4BAA4B,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,EAA7B,EAAiC,cAAjC,CAA5C;EACA,SAAO,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAd;EACD;EAEK,SAAU,uBAAV,CACJ,IADI,EAEwD;EAAA,MAA5D,OAA4D,uEAAlBA,cAAY,CAAC,IAAD,CAAM;EAE5D,MAAI,IAAJ,EACE,KADF,EAEE,GAFF,EAGE,IAHF,EAIE,MAJF,EAKE,MALF,EAME,WANF,EAOE,WAPF,EAQE,UARF,EASE,QATF,EAUE,MAVF,EAWE,QAXF;EAYA,MAAI,WAAW,GAAG,KAAlB;EACA,MAAI,eAAe,GAAoB,QAAvC;;EACA,MAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB;EAClB,QAAI,uBAAuB,CAAC,IAAD,CAA3B,EAAmC,OAAO,IAAP;EACnC,IAAA,QAAQ,GAAG,iCAAiC,CAAC,IAAD,CAA5C;EACA,QAAM,UAAU,GAAG,cAAc,CAAC,QAAD,EAAW,CAC1C,KAD0C,EAE1C,MAF0C,EAG1C,aAH0C,EAI1C,aAJ0C,EAK1C,QAL0C,EAM1C,OAN0C,EAO1C,WAP0C,EAQ1C,YAR0C,EAS1C,QAT0C,EAU1C,MAV0C,CAAX,CAAjC;EAYA,QAAM,MAAM,GAAG,6BAA6B,CAAC,IAAD,EAAO,UAAP,CAA5C;;EAfkB,iCAgBkE,+BAA+B,CACjH,QADiH,EAEjH,MAFiH,EAGjH,OAHiH,CAhBjG;;EAgBf,IAAA,IAhBe,0BAgBf,IAhBe;EAgBT,IAAA,KAhBS,0BAgBT,KAhBS;EAgBF,IAAA,GAhBE,0BAgBF,GAhBE;EAgBG,IAAA,IAhBH,0BAgBG,IAhBH;EAgBS,IAAA,MAhBT,0BAgBS,MAhBT;EAgBiB,IAAA,MAhBjB,0BAgBiB,MAhBjB;EAgByB,IAAA,WAhBzB,0BAgByB,WAhBzB;EAgBsC,IAAA,WAhBtC,0BAgBsC,WAhBtC;EAgBmD,IAAA,UAhBnD,0BAgBmD,UAhBnD;EAqBlB,IAAA,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,QAAR,CAA7B;EACA,IAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;;EACA,QAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,MAAA,eAAe,GAAG,MAAlB;EACD,KAFD,MAEO;EACL,MAAA,MAAM,GAAG,QAAQ,CAAC,MAAD,CAAjB;EACD;EACF,GA5BD,MA4BO;EACL,IAAA,kBAAkB,CAAC,OAAD,CAAlB,CADK;;EAEL,QAAI,QAAJ,EAAc,CAAd;;EAFK,gCAIH,gCAAgC,CAAC,QAAQ,CAAC,IAAD,CAAT,CAJ7B;;EAGF,IAAA,IAHE,yBAGF,IAHE;EAGI,IAAA,KAHJ,yBAGI,KAHJ;EAGW,IAAA,GAHX,yBAGW,GAHX;EAGgB,IAAA,IAHhB,yBAGgB,IAHhB;EAGsB,IAAA,MAHtB,yBAGsB,MAHtB;EAG8B,IAAA,MAH9B,yBAG8B,MAH9B;EAGsC,IAAA,WAHtC,yBAGsC,WAHtC;EAGmD,IAAA,WAHnD,yBAGmD,WAHnD;EAGgE,IAAA,UAHhE,yBAGgE,UAHhE;EAG4E,IAAA,QAH5E,yBAG4E,QAH5E;EAGsF,IAAA,MAHtF,yBAGsF,MAHtF;EAG8F,IAAA,CAH9F,yBAG8F,CAH9F;EAGiG,IAAA,QAHjG,yBAGiG,QAHjG;EAKL,QAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,mCAAf,CAAN;;EACf,QAAI,CAAJ,EAAO;EACL,MAAA,eAAe,GAAG,OAAlB;EACD,KAFD,MAEO,IAAI,CAAC,MAAL,EAAa;EAClB,MAAA,eAAe,GAAG,MAAlB;EACD;;EACD,QAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,IAAA,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,QAArB,CAAX;EACA,QAAI,CAAC,QAAL,EAAe,QAAQ,GAAG,kBAAkB,EAA7B;EACf,IAAA,QAAQ,GAAG,kBAAkB,CAAC,QAAD,CAA7B;EACA,IAAA,WAAW,GAAG,IAAd,CAfK;EAgBN;;EACD,MAAI,QAAQ,GAAG,CAAf;EACA,MAAI,eAAe,KAAK,QAAxB,EAAkC,QAAQ,GAAG,iBAAiB,CAAC,MAAD,CAA5B;EAClC,MAAM,cAAc,GAAG,wBAAwB,CAAC,OAAD,CAA/C;EACA,MAAM,SAAS,GAAG,gBAAgB,CAAC,OAAD,EAAU,QAAV,CAAlC;EACA,MAAM,gBAAgB,GAAG,0BAA0B,CACjD,IADiD,EAEjD,KAFiD,EAGjD,GAHiD,EAIjD,IAJiD,EAKjD,MALiD,EAMjD,MANiD,EAOjD,WAPiD,EAQjD,WARiD,EASjD,UATiD,EAUjD,eAViD,EAWjD,QAXiD,EAYjD,QAZiD,EAajD,cAbiD,EAcjD,SAdiD,EAejD,WAfiD,CAAnD;EAiBA,SAAO,2BAA2B,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,QAA7B,CAAlC;EACD;EAEK,SAAU,uBAAV,CACJ,MADI,EAEJ,OAFI,EAGJ,QAHI,EAIJ,MAJI,EAKJ,QALI,EAK+B;EAEnC,EAAA,aAAa,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAAb;EACA,EAAA,eAAe,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAAf;EAEA,EAAA,WAAW,CAAC,MAAD,CAAX;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,UAAT,EAAqB,IAArB,CAAP;;EAEA,EAAW;EACT,IAAA,oBAAoB,CAAC,MAAD,EAAS,QAAT,EAAmB;EACrC,MAAA,KAAK,YAAK,MAAM,CAAC,MAAM,CAAC,WAAR,CAAX,eAAoC,oBAAoB,CAAC,MAAD,CAAxD,MADgC;EAErC,MAAA,QAAQ,EAAE,KAF2B;EAGrC,MAAA,UAAU,EAAE,KAHyB;EAIrC,MAAA,YAAY,EAAE;EAJuB,KAAnB,CAApB;EAMD;EACF;EAEK,SAAU,kBAAV,CACJ,OADI,EAEJ,QAFI,EAGJ,MAHI,EAIsD;EAAA,MAA1D,QAA0D,uEAApB,kBAAkB,EAAE;EAE1D,MAAM,iBAAiB,GAAG,YAAY,CAAC,sBAAD,CAAtC;EACA,MAAM,MAAM,GAAGA,cAAY,CAAC,iBAAiB,CAAC,SAAnB,CAA3B;EACA,EAAA,uBAAuB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,MAA5B,EAAoC,QAApC,CAAvB;EACA,SAAO,MAAP;EACD;EAEK,SAAU,2BAAV,CACJ,MADI,EAEJ,OAFI,EAGJ,QAHI,EAIJ,MAJI,EAKJ,CALI,EAMJ,GANI,EAOJ,CAPI,EAQJ,EARI,EASJ,EATI,EAUJ,EAVI,EAWJ,QAXI,EAW+B;EAEnC,EAAA,cAAc,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,CAAd;EACA,EAAA,mBAAmB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,CAAnB;EAEA,EAAA,WAAW,CAAC,MAAD,CAAX;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,UAAT,EAAqB,GAArB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B,EAA1B,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B,EAA1B,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,cAAT,EAAyB,EAAzB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAP;;EAEA,EAAW;EACT,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;EACtC,MAAA,KAAK,YAAK,MAAM,CAAC,MAAM,CAAC,WAAR,CAAX,eAAoC,wBAAwB,CAAC,MAAD,EAAS,MAAT,CAA5D,MADiC;EAEtC,MAAA,QAAQ,EAAE,KAF4B;EAGtC,MAAA,UAAU,EAAE,KAH0B;EAItC,MAAA,YAAY,EAAE;EAJwB,KAAxC;EAMD;EACF;EAEK,SAAU,sBAAV,CACJ,OADI,EAEJ,QAFI,EAGJ,MAHI,EAIJ,CAJI,EAKJ,GALI,EAMJ,CANI,EAOJ,EAPI,EAQJ,EARI,EASJ,EATI,EAUsD;EAAA,MAA1D,QAA0D,uEAApB,kBAAkB,EAAE;EAE1D,MAAM,qBAAqB,GAAG,YAAY,CAAC,0BAAD,CAA1C;EACA,MAAM,MAAM,GAAGA,cAAY,CAAC,qBAAqB,CAAC,SAAvB,CAA3B;EACA,EAAA,2BAA2B,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,MAA5B,EAAoC,CAApC,EAAuC,GAAvC,EAA4C,CAA5C,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD,EAA2D,QAA3D,CAA3B;EACA,SAAO,MAAP;EACD;EAEK,SAAU,2BAAV,CACJ,MADI,EAEJ,QAFI,EAGJ,MAHI,EAIJ,QAJI,EAKJ,gBALI,EAKoB;EAExB,EAAA,aAAa,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,MAA7B,CAAb;EACA,EAAA,eAAe,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,MAA7B,CAAf;EAEA,EAAA,WAAW,CAAC,MAAD,CAAX;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,gBAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,eAAT,EAA0B,IAA1B,CAAP;;EAEA,EAAW;EACT,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;EACtC,MAAA,KAAK,YAAK,MAAM,CAAC,MAAM,CAAC,WAAR,CAAX,eAAoC,wBAAwB,CAAC,MAAD,CAA5D,MADiC;EAEtC,MAAA,QAAQ,EAAE,KAF4B;EAGtC,MAAA,UAAU,EAAE,KAH0B;EAItC,MAAA,YAAY,EAAE;EAJwB,KAAxC;EAMD;EACF;EAEK,SAAU,sBAAV,CACJ,QADI,EAEJ,MAFI,EAImB;EAAA,MADvB,QACuB,uEADe,kBAAkB,EACjC;EAAA,MAAvB,gBAAuB,uEAAJ,IAAI;EAEvB,MAAM,qBAAqB,GAAG,YAAY,CAAC,0BAAD,CAA1C;EACA,MAAM,MAAM,GAAGA,cAAY,CAAC,qBAAqB,CAAC,SAAvB,CAA3B;EACA,EAAA,2BAA2B,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC,gBAArC,CAA3B;EACA,SAAO,MAAP;EACD;EAEK,SAAU,4BAAV,CACJ,MADI,EAEJ,OAFI,EAGJ,QAHI,EAIJ,QAJI,EAKJ,eALI,EAKmB;EAEvB,EAAA,aAAa,CAAC,OAAD,EAAU,QAAV,EAAoB,eAApB,CAAb;EACA,EAAA,oBAAoB,CAAC,OAAD,EAAU,QAAV,CAApB;EAEA,EAAA,WAAW,CAAC,MAAD,CAAX;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,eAAlB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,gBAAT,EAA2B,IAA3B,CAAP;;EAEA,EAAW;EACT,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;EACtC,MAAA,KAAK,YAAK,MAAM,CAAC,MAAM,CAAC,WAAR,CAAX,eAAoC,yBAAyB,CAAC,MAAD,CAA7D,MADiC;EAEtC,MAAA,QAAQ,EAAE,KAF4B;EAGtC,MAAA,UAAU,EAAE,KAH0B;EAItC,MAAA,YAAY,EAAE;EAJwB,KAAxC;EAMD;EACF;EAEK,SAAU,uBAAV,CACJ,OADI,EAEJ,QAFI,EAIe;EAAA,MADnB,QACmB,uEADmB,kBAAkB,EACrC;EAAA,MAAnB,eAAmB,uEAAD,CAAC;EAEnB,MAAM,sBAAsB,GAAG,YAAY,CAAC,2BAAD,CAA3C;EACA,MAAM,MAAM,GAAGA,cAAY,CAAC,sBAAsB,CAAC,SAAxB,CAA3B;EACA,EAAA,4BAA4B,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4B,QAA5B,EAAsC,eAAtC,CAA5B;EACA,SAAO,MAAP;EACD;EAEK,SAAU,gCAAV,CACJ,MADI,EAEJ,gBAFI,EAGJ,QAHI,EAIJ,QAJI,EAI+B;EAEnC,EAAA,wBAAwB,CAAC,gBAAD,CAAxB;EAEA,EAAA,WAAW,CAAC,MAAD,CAAX;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,gBAAT,EAA2B,gBAA3B,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAP;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAP;EAEA,MAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,MAAM,OAAO,GAAG,IAAI,eAAJ,CAAoB,OAAO,CAAC,MAAD,EAAS,gBAAT,CAA3B,CAAhB;EACA,EAAA,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAP;;EAEA,EAAW;EACT,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,QAA9B,EAAwC;EACtC,MAAA,KAAK,YAAK,MAAM,CAAC,MAAM,CAAC,WAAR,CAAX,eAAoC,6BAA6B,CAAC,MAAD,EAAS,MAAT,CAAjE,MADiC;EAEtC,MAAA,QAAQ,EAAE,KAF4B;EAGtC,MAAA,UAAU,EAAE,KAH0B;EAItC,MAAA,YAAY,EAAE;EAJwB,KAAxC;EAMD;EACF;EAEK,SAAU,2BAAV,CACJ,gBADI,EAEJ,QAFI,EAGsD;EAAA,MAA1D,QAA0D,uEAApB,kBAAkB,EAAE;EAE1D,MAAM,qBAAqB,GAAG,YAAY,CAAC,0BAAD,CAA1C;EACA,MAAM,MAAM,GAAGA,cAAY,CAAC,qBAAqB,CAAC,SAAvB,CAA3B;EACA,EAAA,gCAAgC,CAAC,MAAD,EAAS,gBAAT,EAA2B,QAA3B,EAAqC,QAArC,CAAhC;EACA,SAAO,MAAP;EACD;EAEK,SAAU,kBAAV,GAA4B;EAChC,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,SAAO,IAAI,gBAAJ,CAAqB,SAArB,CAAP;EACD;EAGD;;EACM,SAAU,cAAV,CAAqD,QAArD,EAA0F,eAA1F,EAA4G;EAChH,MAAI,UAAU,GAAG,eAAjB;;EACA,MAAI,QAAQ,CAAC,MAAb,EAAqB;EACnB,IAAA,UAAU,GAAG,QAAQ,CAAC,MAAT,CAAgB,UAAhB,CAAb;EACD;;EACD,MAAM,MAAM,GAAa,EAAzB;;EALgH,8CAM7F,UAN6F;EAAA;;EAAA;EAMhH,2DAA+B;EAAA,UAApB,IAAoB;EAC7B,UAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B,MAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;EAC9B,MAAAtC,oBAAkB,CAAC,IAAnB,CAAwB,MAAxB,EAAgC,IAAhC;EACD;EAT+G;EAAA;EAAA;EAAA;EAAA;;EAUhH,SAAO,MAAP;EACD;EAEK,SAAU,mBAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,gBAHI,EAGqC;EAEzC,MAAM,cAAc,GAAG,QAAQ,CAAC,WAAhC;;EACA,MAAI,CAAC,cAAL,EAAqB;EACnB,6CAAY,MAAZ,GAAuB,gBAAvB;EACD;;EACD,MAAM,MAAM,GAAG,OAAO,CAAC,KAAR,CAAc,cAAd,EAA8B,QAA9B,EAAwC,CAAC,MAAD,EAAS,gBAAT,CAAxC,CAAf;EACA,MAAI,CAAC,QAAQ,CAAC,MAAD,CAAb,EAAuB,MAAM,IAAI,SAAJ,CAAc,wCAAd,CAAN;EACvB,SAAO,MAAP;EACD;EAEK,SAAU,eAAV,CACJ,QADI,EAEJ,IAFI,EAGJ,QAHI,EAIJ,OAJI,EAKJ,YALI,EAK+C;EAEnD,MAAI,OAAO,GAAG,YAAd;;EACA,MAAI,OAAO,KAAK,SAAhB,EAA2B;EACzB,IAAA,OAAO,GAAG,QAAQ,CAAC,OAAnB;EACD;;EACD,MAAM,MAAM,GAAGK,cAAY,CAAC,OAAD,EAAU,QAAV,EAAoB,CAAC,IAAD,EAAO,QAAP,EAAiB,OAAjB,CAApB,CAA3B;EACA,MAAI,CAAC,cAAc,CAAC,MAAD,CAAnB,EAA6B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC7B,SAAO,MAAP;EACD;EAEK,SAAU,iBAAV,CACJ,QADI,EAEJ,IAFI,EAGJ,SAHI,EAIJ,OAJI,EAKJ,cALI,EAKmD;EAEvD,MAAI,SAAS,GAAG,cAAhB;;EACA,MAAI,SAAS,KAAK,SAAlB,EAA6B;EAC3B,IAAA,SAAS,GAAG,QAAQ,CAAC,SAArB;EACD;;EACD,MAAM,MAAM,GAAGA,cAAY,CAAC,SAAD,EAAY,QAAZ,EAAsB,CAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAAtB,CAA3B;EACA,MAAI,CAAC,kBAAkB,CAAC,MAAD,CAAvB,EAAiC,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EACjC,SAAO,MAAP;EACD;EAEK,SAAU,YAAV,CAAuB,QAAvB,EAA4D,QAA5D,EAAuG;EAC3G,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAf;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,UAAM,IAAI,UAAJ,CAAe,yCAAf,CAAN;EACD;;EACD,SAAO,wBAAwB,CAAC,MAAD,CAA/B;EACD;EAEK,SAAU,aAAV,CAAwB,QAAxB,EAA6D,QAA7D,EAAyG;EAC7G,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,QAAf,CAAf;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,UAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EACD;;EACD,SAAO,iBAAiB,CAAC,MAAD,CAAxB;EACD;EAEK,SAAU,iBAAV,CACJ,QADI,EAEJ,QAFI,EAE4C;EAEhD,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAT,CAAmB,QAAnB,CAAf;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,UAAM,IAAI,UAAJ,CAAe,4CAAf,CAAN;EACD;;EACD,SAAO,QAAQ,CAAC,MAAD,CAAf;EACD;EAEK,SAAU,WAAV,CAAsB,QAAtB,EAA2D,QAA3D,EAAqG;EACzG,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAf;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,UAAM,IAAI,UAAJ,CAAe,gDAAf,CAAN;EACD;;EACD,SAAO,iBAAiB,CAAC,MAAD,CAAxB;EACD;EAEK,SAAU,WAAV,CAAsB,QAAtB,EAA2D,QAA3D,EAAqG;EACzG,MAAI,MAAM,GAAG,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAb;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAD,CAAjB;EACD;;EACD,SAAO,MAAP;EACD;EAEK,SAAU,eAAV,CAA0B,QAA1B,EAA+D,QAA/D,EAA6G;EACjH,MAAI,MAAM,GAAG,QAAQ,CAAC,OAAT,CAAiB,QAAjB,CAAb;;EACA,MAAI,MAAM,KAAK,SAAf,EAA0B;EACxB,IAAA,MAAM,GAAG,wBAAwB,CAAC,MAAD,CAAjC;EACD;;EACD,SAAO,MAAP;EACD;EAEK,SAAU,iBAAV,CACJ,QADI,EAEJ,QAFI,EAE4C;EAEhD,SAAO,QAAQ,CAAC,SAAT,CAAmB,QAAnB,CAAP;EACD;EAEK,SAAU,iBAAV,CACJ,QADI,EAEJ,QAFI,EAE4C;EAEhD,SAAO,QAAQ,CAAC,SAAT,CAAmB,QAAnB,CAAP;EACD;EAEK,SAAU,kBAAV,CACJ,QADI,EAEJ,QAFI,EAE6C;EAEjD,SAAO,QAAQ,CAAC,UAAT,CAAoB,QAApB,CAAP;EACD;EAEK,SAAU,kBAAV,CACJ,QADI,EAEJ,QAFI,EAE6C;EAEjD,SAAO,QAAQ,CAAC,UAAT,CAAoB,QAApB,CAAP;EACD;EAEK,SAAU,mBAAV,CACJ,QADI,EAEJ,QAFI,EAE8C;EAElD,SAAO,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAAP;EACD;EAEK,SAAU,kBAAV,CACJ,QADI,EAEJ,QAFI,EAE6C;EAEjD,SAAO,QAAQ,CAAC,UAAT,CAAoB,QAApB,CAAP;EACD;EAEK,SAAU,oBAAV,CACJ,QADI,EAEJ,QAFI,EAE+C;EAEnD,SAAO,QAAQ,CAAC,YAAT,CAAsB,QAAtB,CAAP;EACD;EAEK,SAAU,kBAAV,CACJ,QADI,EAEJ,QAFI,EAE6C;EAEjD,SAAO,QAAQ,CAAC,UAAT,CAAoB,QAApB,CAAP;EACD;EAEK,SAAU,kBAAV,CAA6B,iBAA7B,EAAyE;EAC7E,MAAI,YAAY,GAAG,iBAAnB;;EACA,MAAI,QAAQ,CAAC,YAAD,CAAZ,EAA4B;EAC1B,QAAI,OAAO,CAAC,YAAD,EAAe,QAAf,CAAX,EAAqC,OAAO,OAAO,CAAC,YAAD,EAAe,QAAf,CAAd;EACrC,QAAI,EAAE,cAAc,YAAhB,CAAJ,EAAmC,OAAO,YAAP;EACnC,IAAA,YAAY,GAAG,YAAY,CAAC,QAA5B;EACA,QAAI,QAAQ,CAAC,YAAD,CAAR,IAA0B,EAAE,cAAc,YAAhB,CAA9B,EAA6D,OAAO,YAAP;EAC9D;;EACD,MAAM,UAAU,GAAG,QAAQ,CAAC,YAAD,CAA3B;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,MAAI,iBAAiB,CAAC,UAAD,CAArB,EAAmC,OAAO,IAAI,gBAAJ,CAAqB,UAArB,CAAP;EACnC,MAAI,QAAJ;;EACA,MAAI;EAAA,6BACc,gBAAgB,CAAC,UAAD,EAAa;EAAE,MAAA,YAAY,EAAE;EAAhB,KAAb,CAD9B;;EACC,IAAA,QADD,sBACC,QADD;EAEH,GAFD,CAEE,iBAAM;EACN,UAAM,IAAI,UAAJ,6BAAoC,UAApC,EAAN;EACD;;EACD,MAAI,CAAC,QAAL,EAAe,QAAQ,GAAG,SAAX;EACf,SAAO,IAAI,gBAAJ,CAAqB,QAArB,CAAP;EACD;;EAED,SAAS,iCAAT,CACE,IADF,EACiG;EAE/F,MAAI,OAAO,CAAC,IAAD,EAAO,QAAP,CAAX,EAA6B,OAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EAC7B,MAAQ,QAAR,GAAqB,IAArB,CAAQ,QAAR;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B,OAAO,kBAAkB,EAAzB;EAC5B,SAAO,kBAAkB,CAAC,QAAD,CAAzB;EACD;;EAEK,SAAU,cAAV,CAAyB,GAAzB,EAAyD,GAAzD,EAAuF;EAC3F,MAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,IAAP;EACjB,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;EACA,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;EACA,SAAO,IAAI,KAAK,IAAhB;EACD;EAEK,SAAU,oBAAV,CAA+B,GAA/B,EAA+D,GAA/D,EAA6F;EACjG,MAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,GAAP;EACjB,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;EACA,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;;EACA,MAAI,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,SAA9B,EAAyC;EACvC,WAAO,GAAP;EACD,GAFD,MAEO,IAAI,IAAI,KAAK,SAAb,EAAwB;EAC7B,WAAO,GAAP;EACD,GAFM,MAEA;EACL,UAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACD;EACF;EAEK,SAAU,cAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,OAHI,EAG0D;EAE9D,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,EAAgC,OAAhC,CAAf;EACA,MAAI,CAAC,cAAc,CAAC,MAAD,CAAnB,EAA6B,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAC7B,SAAO,MAAP;EACD;EAEK,SAAU,mBAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,OAHI,EAGsD;EAE1D,MAAM,MAAM,GAAG,QAAQ,CAAC,mBAAT,CAA6B,MAA7B,EAAqC,OAArC,CAAf;EACA,MAAI,CAAC,mBAAmB,CAAC,MAAD,CAAxB,EAAkC,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EAClC,SAAO,MAAP;EACD;EAEK,SAAU,kBAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,OAHI,EAGqD;EAEzD,MAAM,MAAM,GAAG,QAAQ,CAAC,kBAAT,CAA4B,MAA5B,EAAoC,OAApC,CAAf;EACA,MAAI,CAAC,kBAAkB,CAAC,MAAD,CAAvB,EAAiC,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;EACjC,SAAO,MAAP;EACD;EAEK,SAAU,kBAAV,CAA6B,yBAA7B,EAAiF;EACrF,MAAI,oBAAoB,GAAG,yBAA3B;;EACA,MAAI,QAAQ,CAAC,oBAAD,CAAZ,EAAoC;EAClC,QAAI,uBAAuB,CAAC,oBAAD,CAA3B,EAAmD,OAAO,OAAO,CAAC,oBAAD,EAAuB,SAAvB,CAAd;EACnD,QAAI,EAAE,cAAc,oBAAhB,CAAJ,EAA2C,OAAO,oBAAP;EAC3C,IAAA,oBAAoB,GAAI,oBAAkE,CAAC,QAA3F;;EACA,QAAI,QAAQ,CAAC,oBAAD,CAAR,IAAkC,EAAE,cAAc,oBAAhB,CAAtC,EAA6E;EAC3E,aAAO,oBAAP;EACD;EACF;;EACD,MAAM,UAAU,GAAG,QAAQ,CAAC,oBAAD,CAA3B;EACA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,UAAD,CAAtC;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,SAAO,IAAI,gBAAJ,CAAqB,QAArB,CAAP;EACD;EAEK,SAAU,cAAV,CAAyB,GAAzB,EAAyD,GAAzD,EAAuF;EAC3F,MAAI,GAAG,KAAK,GAAZ,EAAiB,OAAO,IAAP;EACjB,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAD,CAApB;EACA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAD,CAApB;EACA,SAAO,GAAG,KAAK,GAAf;EACD;EAEK,SAAU,sBAAV,CAAiC,QAAjC,EAAiE;EACrE,SAAO,kBAAkB,CACvB,OAAO,CAAC,QAAD,EAAW,QAAX,CADgB,EAEvB,OAAO,CAAC,QAAD,EAAW,SAAX,CAFgB,EAGvB,OAAO,CAAC,QAAD,EAAW,OAAX,CAHgB,EAIvB,OAAO,CAAC,QAAD,EAAW,QAAX,CAJgB,CAAzB;EAMD;EAEK,SAAU,sBAAV,CAAiC,QAAjC,EAAiE;EACrE,MAAM,IAAI,GAAG,YAAY,CAAC,sBAAD,CAAzB;EACA,SAAO,IAAI,IAAJ,CACL,OAAO,CAAC,QAAD,EAAW,QAAX,CADF,EAEL,OAAO,CAAC,QAAD,EAAW,UAAX,CAFF,EAGL,OAAO,CAAC,QAAD,EAAW,UAAX,CAHF,EAIL,OAAO,CAAC,QAAD,EAAW,eAAX,CAJF,EAKL,OAAO,CAAC,QAAD,EAAW,eAAX,CALF,EAML,OAAO,CAAC,QAAD,EAAW,cAAX,CANF,CAAP;EAQD;EAEK,SAAU,uBAAV,CACJ,QADI,EAEJ,OAFI,EAEyD;EAE7D,MAAI,uBAAuB,GAAG,QAAQ,CAAC,uBAAvC;;EACA,MAAI,OAAO,uBAAP,KAAmC,UAAvC,EAAmD;EACjD,UAAM,IAAI,SAAJ,CAAc,sCAAd,CAAN;EACD;;EACD,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,uBAAd,EAAuC,QAAvC,EAAiD,CAAC,OAAD,CAAjD,CAAjB;;EACA,MAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;EAChC,UAAM,IAAI,SAAJ,CAAc,yCAAd,CAAN;EACD;;EACD,MAAI,CAAC,SAAS,CAAC,QAAD,CAAV,IAAwB,OAAO,CAAC,QAAD,CAAP,GAAoB,OAAhD,EAAyD;EACvD,UAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EACD;;EACD,SAAO,QAAP;EACD;EAEK,SAAU,iCAAV,CAA4C,QAA5C,EAAiF,OAAjF,EAA0G;EAC9G,MAAM,QAAQ,GAAG,uBAAuB,CAAC,QAAD,EAAW,OAAX,CAAxC;EACA,SAAO,0BAA0B,CAAC,QAAD,CAAjC;EACD;EAEK,SAAU,kCAAV,CACJ,QADI,EAEJ,OAFI,EAGJ,QAHI,EAG+B;EAEnC,MAAM,EAAE,GAAG,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAlB;EACA,MAAM,QAAQ,GAAG,uBAAuB,CAAC,QAAD,EAAW,OAAX,CAAxC;;EACA,8BAAuF,oBAAoB,CAAC,EAAD,CAA3G;EAAA,MAAM,IAAN,yBAAM,IAAN;EAAA,MAAY,KAAZ,yBAAY,KAAZ;EAAA,MAAmB,GAAnB,yBAAmB,GAAnB;EAAA,MAAwB,IAAxB,yBAAwB,IAAxB;EAAA,MAA8B,MAA9B,yBAA8B,MAA9B;EAAA,MAAsC,MAAtC,yBAAsC,MAAtC;EAAA,MAA8C,WAA9C,yBAA8C,WAA9C;EAAA,MAA2D,WAA3D,yBAA2D,WAA3D;EAAA,MAAwE,UAAxE,yBAAwE,UAAxE;;EAJmC,4BAKiD,kBAAkB,CACpG,IADoG,EAEpG,KAFoG,EAGpG,GAHoG,EAIpG,IAJoG,EAKpG,MALoG,EAMpG,MANoG,EAOpG,WAPoG,EAQpG,WARoG,EASpG,UAAU,GAAG,QATuF,CALnE;;EAKhC,EAAA,IALgC,uBAKhC,IALgC;EAK1B,EAAA,KAL0B,uBAK1B,KAL0B;EAKnB,EAAA,GALmB,uBAKnB,GALmB;EAKd,EAAA,IALc,uBAKd,IALc;EAKR,EAAA,MALQ,uBAKR,MALQ;EAKA,EAAA,MALA,uBAKA,MALA;EAKQ,EAAA,WALR,uBAKQ,WALR;EAKqB,EAAA,WALrB,uBAKqB,WALrB;EAKkC,EAAA,UALlC,uBAKkC,UALlC;EAgBnC,SAAO,sBAAsB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,EAA+E,QAA/E,CAA7B;EACD;EAEK,SAAU,4BAAV,CACJ,QADI,EAEJ,QAFI,EAGJ,cAHI,EAGuD;EAE3D,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,QAAD,EAAW,QAAX,CAA/C;EACA,SAAO,4BAA4B,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,cAAvC,CAAnC;EACD;;EAED,SAAS,4BAAT,CACE,gBADF,EAEE,QAFF,EAGE,QAHF,EAIE,cAJF,EAI6D;EAE3D,MAAM,OAAO,GAAG,YAAY,CAAC,oBAAD,CAA5B;EACA,MAAM,WAAW,GAAG,gBAAgB,CAAC,MAArC;EAEA,MAAI,WAAW,KAAK,CAApB,EAAuB,OAAO,gBAAgB,CAAC,CAAD,CAAvB;;EACvB,MAAI,WAAJ,EAAiB;EACf,YAAQ,cAAR;EACE,WAAK,YAAL,CADF;;EAGE,WAAK,SAAL;EACE,eAAO,gBAAgB,CAAC,CAAD,CAAvB;;EACF,WAAK,OAAL;EACE,eAAO,gBAAgB,CAAC,WAAW,GAAG,CAAf,CAAvB;;EACF,WAAK,QAAL;EAAe;EACb,gBAAM,IAAI,UAAJ,CAAe,yBAAf,CAAN;EACD;EATH;EAWD;;EAED,MAAM,IAAI,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAApB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,QAAD,EAAW,SAAX,CAArB;EACA,MAAM,GAAG,GAAG,OAAO,CAAC,QAAD,EAAW,OAAX,CAAnB;EACA,MAAM,IAAI,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAApB;EACA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAD,EAAW,UAAX,CAAtB;EACA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAD,EAAW,UAAX,CAAtB;EACA,MAAM,WAAW,GAAG,OAAO,CAAC,QAAD,EAAW,eAAX,CAA3B;EACA,MAAM,WAAW,GAAG,OAAO,CAAC,QAAD,EAAW,eAAX,CAA3B;EACA,MAAM,UAAU,GAAG,OAAO,CAAC,QAAD,EAAW,cAAX,CAA1B;EACA,MAAM,KAAK,GAAG,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAAlC;EACA,MAAI,KAAK,KAAK,IAAd,EAAoB,MAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACpB,MAAM,SAAS,GAAG,IAAI,OAAJ,CAAY,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAZ,CAAlB;EACA,MAAM,QAAQ,GAAG,IAAI,OAAJ,CAAY,KAAK,CAAC,IAAN,CAAW,OAAX,CAAZ,CAAjB;EACA,MAAM,YAAY,GAAG,uBAAuB,CAAC,QAAD,EAAW,SAAX,CAA5C;EACA,MAAM,WAAW,GAAG,uBAAuB,CAAC,QAAD,EAAW,QAAX,CAA3C;EACA,MAAM,WAAW,GAAG,WAAW,GAAG,YAAlC;;EACA,UAAQ,cAAR;EACE,SAAK,SAAL;EAAgB;EACd,YAAM,QAAQ,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAAxB;EACA,YAAM,aAAa,GAAG,YAAY,CAAC,0BAAD,CAAlC;EACA,YAAM,OAAO,GAAG,WAAW,CACzB,IADyB,EAEzB,KAFyB,EAGzB,GAHyB,EAIzB,IAJyB,EAKzB,MALyB,EAMzB,MANyB,EAOzB,WAPyB,EAQzB,WARyB,EASzB,UATyB,EAUzB,QAVyB,EAWzB,CAXyB,EAYzB,CAZyB,EAazB,CAbyB,EAczB,CAdyB,EAezB,CAfyB,EAgBzB,CAhByB,EAiBzB,CAjByB,EAkBzB,CAlByB,EAmBzB,CAnByB,EAoBzB,CAAC,WApBwB,EAqBzB,SArByB,CAA3B;EAuBA,YAAM,oBAAoB,GAAG,IAAI,aAAJ,CAC3B,OAAO,CAAC,IADmB,EAE3B,OAAO,CAAC,KAFmB,EAG3B,OAAO,CAAC,GAHmB,EAI3B,OAAO,CAAC,IAJmB,EAK3B,OAAO,CAAC,MALmB,EAM3B,OAAO,CAAC,MANmB,EAO3B,OAAO,CAAC,WAPmB,EAQ3B,OAAO,CAAC,WARmB,EAS3B,OAAO,CAAC,UATmB,EAU3B,QAV2B,CAA7B;EAYA,eAAO,sBAAsB,CAAC,QAAD,EAAW,oBAAX,CAAtB,CAAuD,CAAvD,CAAP;EACD;;EACD,SAAK,YAAL,CAzCF;;EA2CE,SAAK,OAAL;EAAc;EACZ,YAAM,UAAQ,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAAxB;;EACA,YAAM,cAAa,GAAG,YAAY,CAAC,0BAAD,CAAlC;;EACA,YAAM,KAAK,GAAG,WAAW,CACvB,IADuB,EAEvB,KAFuB,EAGvB,GAHuB,EAIvB,IAJuB,EAKvB,MALuB,EAMvB,MANuB,EAOvB,WAPuB,EAQvB,WARuB,EASvB,UATuB,EAUvB,UAVuB,EAWvB,CAXuB,EAYvB,CAZuB,EAavB,CAbuB,EAcvB,CAduB,EAevB,CAfuB,EAgBvB,CAhBuB,EAiBvB,CAjBuB,EAkBvB,CAlBuB,EAmBvB,CAnBuB,EAoBvB,WApBuB,EAqBvB,SArBuB,CAAzB;EAuBA,YAAM,kBAAkB,GAAG,IAAI,cAAJ,CACzB,KAAK,CAAC,IADmB,EAEzB,KAAK,CAAC,KAFmB,EAGzB,KAAK,CAAC,GAHmB,EAIzB,KAAK,CAAC,IAJmB,EAKzB,KAAK,CAAC,MALmB,EAMzB,KAAK,CAAC,MANmB,EAOzB,KAAK,CAAC,WAPmB,EAQzB,KAAK,CAAC,WARmB,EASzB,KAAK,CAAC,UATmB,EAUzB,UAVyB,CAA3B;EAYA,YAAM,QAAQ,GAAG,sBAAsB,CAAC,QAAD,EAAW,kBAAX,CAAvC;EACA,eAAO,QAAQ,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAAf;EACD;;EACD,SAAK,QAAL;EAAe;EACb,cAAM,IAAI,UAAJ,CAAe,uBAAf,CAAN;EACD;EAtFH;EAwFD;;EAED,SAAS,sBAAT,CACE,QADF,EAEE,QAFF,EAE+D;EAE7D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,sBAAT,CAAgC,QAAhC,CAAzB;EACA,MAAM,MAAM,GAAuB,EAAnC;;EAH6D,8CAIvC,gBAJuC;EAAA;;EAAA;EAI7D,2DAAwC;EAAA,UAA7B,OAA6B;;EACtC,UAAI,CAAC,iBAAiB,CAAC,OAAD,CAAtB,EAAiC;EAC/B,cAAM,IAAI,SAAJ,CAAc,wCAAd,CAAN;EACD;;EACD,MAAAL,oBAAkB,CAAC,IAAnB,CAAwB,MAAxB,EAAgC,OAAhC;EACD;EAT4D;EAAA;EAAA;EAAA;EAAA;;EAU7D,SAAO,MAAP;EACD;;EAEK,SAAU,aAAV,CAAwB,IAAxB,EAAoC;EACxC,MAAI,UAAJ;;EACA,MAAI,IAAI,GAAG,IAAP,IAAe,IAAI,GAAG,IAA1B,EAAgC;EAC9B,QAAM,IAAI,GAAG,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,GAA9B;EACA,QAAM,UAAU,GAAG,OAAO,CAAC,IAAD,CAA1B;EACA,IAAA,UAAU,GAAG,IAAI,GAAG,gBAAS,UAAT,EAAsB,KAAtB,CAA4B,CAAC,CAA7B,CAApB;EACD,GAJD,MAIO;EACL,IAAA,UAAU,aAAM,IAAN,CAAV;EACD;;EACD,SAAO,UAAP;EACD;EAEK,SAAU,qBAAV,CAAgC,IAAhC,EAA4C;EAChD,SAAO,YAAK,IAAL,EAAY,KAAZ,CAAkB,CAAC,CAAnB,CAAP;EACD;EACK,SAAU,uBAAV,CACJ,MADI,EAEJ,WAFI,EAGJ,WAHI,EAIJ,UAJI,EAKJ,SALI,EAK+D;EAEnE,MAAI,SAAS,KAAK,QAAlB,EAA4B,OAAO,EAAP;EAE5B,MAAM,IAAI,cAAO,qBAAqB,CAAC,MAAD,CAA5B,CAAV;EACA,MAAI,cAAc,GAAG,WAAW,GAAG,GAAd,GAAoB,WAAW,GAAG,GAAlC,GAAwC,UAA7D;EACA,MAAI,QAAJ;;EAEA,MAAI,SAAS,KAAK,MAAlB,EAA0B;EACxB,QAAI,cAAc,KAAK,CAAvB,EAA0B,OAAO,IAAP;EAC1B,IAAA,QAAQ,GAAG,UAAG,cAAH,EAAoB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,CAAX;;EACA,WAAO,QAAQ,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAAR,KAAkC,GAAzC;EAA8C,MAAA,QAAQ,GAAG,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;EAA9C;EACD,GAJD,MAIO;EACL,QAAI,SAAS,KAAK,CAAlB,EAAqB,OAAO,IAAP;EACrB,IAAA,QAAQ,GAAG,UAAG,cAAH,EAAoB,QAApB,CAA6B,CAA7B,EAAgC,GAAhC,EAAqC,KAArC,CAA2C,CAA3C,EAA8C,SAA9C,CAAX;EACD;;EACD,mBAAU,IAAV,cAAkB,QAAlB;EACD;EAEK,SAAU,uBAAV,CACJ,OADI,EAEJ,QAFI,EAGJ,SAHI,EAG+D;EAEnE,MAAI,cAAc,GAAG,QAArB;;EACA,MAAI,cAAc,KAAK,SAAvB,EAAkC;EAChC,QAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,IAAA,cAAc,GAAG,IAAI,gBAAJ,CAAqB,KAArB,CAAjB;EACD;;EACD,MAAM,GAAG,GAAG,kBAAkB,EAA9B;EACA,MAAM,QAAQ,GAAG,kCAAkC,CAAC,cAAD,EAAiB,OAAjB,EAA0B,GAA1B,CAAnD;EACA,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAA1B;EACA,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,SAAX,CAAR,CAAnC;EACA,MAAM,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,OAAX,CAAR,CAAjC;EACA,MAAM,IAAI,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAAlC;EACA,MAAM,MAAM,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,UAAX,CAAR,CAApC;EACA,MAAM,OAAO,GAAG,uBAAuB,CACrC,OAAO,CAAC,QAAD,EAAW,UAAX,CAD8B,EAErC,OAAO,CAAC,QAAD,EAAW,eAAX,CAF8B,EAGrC,OAAO,CAAC,QAAD,EAAW,eAAX,CAH8B,EAIrC,OAAO,CAAC,QAAD,EAAW,cAAX,CAJ8B,EAKrC,SALqC,CAAvC;EAOA,MAAI,cAAc,GAAG,GAArB;;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;EAC1B,QAAM,QAAQ,GAAG,uBAAuB,CAAC,cAAD,EAAiB,OAAjB,CAAxC;EACA,IAAA,cAAc,GAAG,6BAA6B,CAAC,QAAD,CAA9C;EACD;;EACD,mBAAU,IAAV,cAAkB,KAAlB,cAA2B,GAA3B,cAAkC,IAAlC,cAA0C,MAA1C,SAAmD,OAAnD,SAA6D,cAA7D;EACD;EAEK,SAAU,wBAAV,CACJ,QADI,EAOS;EAAA,MALb,SAKa,uEAL4D,MAK5D;EAAA,MAJb,OAIa,uEAAT,SAAS;;EAEb,WAAS,YAAT,CAAsB,GAAtB,EAAiC;EAC/B,QAAI,GAAG,IAAI,oBAAX,EAAiC,OAAO,GAAG,CAAC,QAAJ,CAAa,EAAb,CAAP;EACjC,WAAO,MAAM,CAAC,GAAD,CAAN,CAAY,QAAZ,EAAP;EACD;;EAED,MAAM,KAAK,GAAG,OAAO,CAAC,QAAD,EAAW,KAAX,CAArB;EACA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAD,EAAW,MAAX,CAAtB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,QAAD,EAAW,KAAX,CAArB;EACA,MAAM,IAAI,GAAG,OAAO,CAAC,QAAD,EAAW,IAAX,CAApB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,QAAD,EAAW,KAAX,CAArB;EACA,MAAM,OAAO,GAAG,OAAO,CAAC,QAAD,EAAW,OAAX,CAAvB;EACA,MAAI,OAAO,GAAG,OAAO,CAAC,QAAD,EAAW,OAAX,CAArB;EACA,MAAI,EAAE,GAAG,OAAO,CAAC,QAAD,EAAW,YAAX,CAAhB;EACA,MAAI,EAAE,GAAG,OAAO,CAAC,QAAD,EAAW,YAAX,CAAhB;EACA,MAAI,EAAE,GAAG,OAAO,CAAC,QAAD,EAAW,WAAX,CAAhB;EACA,MAAM,IAAI,GAAG,YAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,EAAtD,EAA0D,EAA1D,EAA8D,EAA9D,CAAzB;;EAEA,MAAI,OAAJ,EAAa;EACX,QAAQ,IAAR,GAA0C,OAA1C,CAAQ,IAAR;EAAA,QAAc,SAAd,GAA0C,OAA1C,CAAc,SAAd;EAAA,QAAyB,YAAzB,GAA0C,OAA1C,CAAyB,YAAzB;;EADW,yBAOP,aAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,OAAnB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,SAAxC,EAAmD,IAAnD,EAAyD,YAAzD,CAPN;;EAGT,IAAA,OAHS,kBAGT,OAHS;EAIK,IAAA,EAJL,kBAIT,YAJS;EAKK,IAAA,EALL,kBAKT,YALS;EAMI,IAAA,EANJ,kBAMT,WANS;EAQZ;;EAED,MAAM,SAAS,GAAG,EAAlB;EACA,MAAI,KAAJ,EAAW,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,KAAD,CAAR,CAA9B;EACX,MAAI,MAAJ,EAAY,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,MAAD,CAAR,CAA9B;EACZ,MAAI,KAAJ,EAAW,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,KAAD,CAAR,CAA9B;EACX,MAAI,IAAJ,EAAU,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,IAAD,CAAR,CAA9B;EAEV,MAAM,SAAS,GAAG,EAAlB;EACA,MAAI,KAAJ,EAAW,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,KAAD,CAAR,CAA9B;EACX,MAAI,OAAJ,EAAa,SAAS,CAAC,IAAV,WAAkB,YAAY,CAAC,OAAO,CAAC,OAAD,CAAR,CAA9B;EAEb,MAAM,WAAW,GAAG,EAApB;EACA,MAAI,KAAK,GAAG,wBAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,OAAV,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,CAA/B,CAApC;EACA,MAAI,QAAJ,EACE,QADF,EAEE,QAFF,EAGE,aAHF;;EAzCa,sBA6C+B,KAAK,CAAC,MAAN,CAAa,IAAb,CA7C/B;;EA6CA,EAAA,KA7CA,iBA6CV,QA7CU;EA6CkB,EAAA,QA7ClB,iBA6CO,SA7CP;;EAAA,uBA8C+B,KAAK,CAAC,MAAN,CAAa,IAAb,CA9C/B;;EA8CA,EAAA,KA9CA,kBA8CV,QA9CU;EA8CkB,EAAA,QA9ClB,kBA8CO,SA9CP;;EAAA,uBA+CuC,KAAK,CAAC,MAAN,CAAa,IAAb,CA/CvC;;EA+CA,EAAA,aA/CA,kBA+CV,QA/CU;EA+C0B,EAAA,QA/C1B,kBA+Ce,SA/Cf;EAgDb,MAAM,QAAQ,GACZ,OAAO,CAAC,QAAQ,CAAC,UAAT,EAAD,CAAP,GAAiC,GAAjC,GAAuC,OAAO,CAAC,QAAQ,CAAC,UAAT,EAAD,CAAP,GAAiC,GAAxE,GAA8E,OAAO,CAAC,QAAQ,CAAC,UAAT,EAAD,CADvF;EAEA,MAAI,WAAJ;;EACA,MAAI,SAAS,KAAK,MAAlB,EAA0B;EACxB,QAAI,QAAQ,KAAK,CAAjB,EAAoB;EAClB,MAAA,WAAW,GAAG,UAAG,QAAH,EAAc,QAAd,CAAuB,CAAvB,EAA0B,GAA1B,CAAd;;EACA,aAAO,WAAW,CAAC,WAAW,CAAC,MAAZ,GAAqB,CAAtB,CAAX,KAAwC,GAA/C,EAAoD;EAClD,QAAA,WAAW,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;EACD;EACF;EACF,GAPD,MAOO,IAAI,SAAS,KAAK,CAAlB,EAAqB;EAC1B,IAAA,WAAW,GAAG,UAAG,QAAH,EAAc,QAAd,CAAuB,CAAvB,EAA0B,GAA1B,EAA+B,KAA/B,CAAqC,CAArC,EAAwC,SAAxC,CAAd;EACD;;EACD,MAAI,WAAJ,EAAiB,WAAW,CAAC,OAAZ,CAAoB,GAApB,EAAyB,WAAzB;EACjB,MAAI,CAAC,aAAa,CAAC,MAAd,EAAD,IAA2B,WAAW,CAAC,MAA3C,EAAmD,WAAW,CAAC,OAAZ,CAAoB,aAAa,CAAC,GAAd,GAAoB,QAApB,EAApB;EACnD,MAAI,WAAW,CAAC,MAAhB,EAAwB,SAAS,CAAC,IAAV,WAAkB,WAAW,CAAC,IAAZ,CAAiB,EAAjB,CAAlB;EACxB,MAAI,SAAS,CAAC,MAAd,EAAsB,SAAS,CAAC,OAAV,CAAkB,GAAlB;EACtB,MAAI,CAAC,SAAS,CAAC,MAAX,IAAqB,CAAC,SAAS,CAAC,MAApC,EAA4C,OAAO,MAAP;EAC5C,mBAAU,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAA3B,cAAiC,SAAS,CAAC,IAAV,CAAe,EAAf,CAAjC,SAAsD,SAAS,CAAC,IAAV,CAAe,EAAf,CAAtD;EACD;EAEK,SAAU,oBAAV,CACJ,IADI,EAE8D;EAAA,MAAlE,YAAkE,uEAAN,MAAM;EAElE,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAR,CAA1B;EACA,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,IAAD,EAAO,SAAP,CAAR,CAAnC;EACA,MAAM,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAC,IAAD,EAAO,OAAP,CAAR,CAAjC;EACA,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAD,EAAO,QAAP,CAAR,CAA3B;EACA,MAAM,QAAQ,GAAG,wBAAwB,CAAC,UAAD,EAAa,YAAb,CAAzC;EACA,mBAAU,IAAV,cAAkB,KAAlB,cAA2B,GAA3B,SAAiC,QAAjC;EACD;EAEK,SAAU,wBAAV,CACJ,QADI,EAEJ,SAFI,EAQS;EAAA,MALb,YAKa,uEAL2C,MAK3C;EAAA,MAJb,OAIa,uEAAT,SAAS;EAEb,MAAI,IAAI,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAAlB;EACA,MAAI,KAAK,GAAG,OAAO,CAAC,QAAD,EAAW,SAAX,CAAnB;EACA,MAAI,GAAG,GAAG,OAAO,CAAC,QAAD,EAAW,OAAX,CAAjB;EACA,MAAI,IAAI,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAAlB;EACA,MAAI,MAAM,GAAG,OAAO,CAAC,QAAD,EAAW,UAAX,CAApB;EACA,MAAI,MAAM,GAAG,OAAO,CAAC,QAAD,EAAW,UAAX,CAApB;EACA,MAAI,WAAW,GAAG,OAAO,CAAC,QAAD,EAAW,eAAX,CAAzB;EACA,MAAI,WAAW,GAAG,OAAO,CAAC,QAAD,EAAW,eAAX,CAAzB;EACA,MAAI,UAAU,GAAG,OAAO,CAAC,QAAD,EAAW,cAAX,CAAxB;;EAEA,MAAI,OAAJ,EAAa;EACX,QAAQ,IAAR,GAA0C,OAA1C,CAAQ,IAAR;EAAA,QAAc,SAAd,GAA0C,OAA1C,CAAc,SAAd;EAAA,QAAyB,YAAzB,GAA0C,OAA1C,CAAyB,YAAzB;;EADW,4BAEyE,gBAAgB,CAClG,IADkG,EAElG,KAFkG,EAGlG,GAHkG,EAIlG,IAJkG,EAKlG,MALkG,EAMlG,MANkG,EAOlG,WAPkG,EAQlG,WARkG,EASlG,UATkG,EAUlG,SAVkG,EAWlG,IAXkG,EAYlG,YAZkG,CAFzF;;EAER,IAAA,IAFQ,qBAER,IAFQ;EAEF,IAAA,KAFE,qBAEF,KAFE;EAEK,IAAA,GAFL,qBAEK,GAFL;EAEU,IAAA,IAFV,qBAEU,IAFV;EAEgB,IAAA,MAFhB,qBAEgB,MAFhB;EAEwB,IAAA,MAFxB,qBAEwB,MAFxB;EAEgC,IAAA,WAFhC,qBAEgC,WAFhC;EAE6C,IAAA,WAF7C,qBAE6C,WAF7C;EAE0D,IAAA,UAF1D,qBAE0D,UAF1D;EAgBZ;;EAED,MAAM,UAAU,GAAG,aAAa,CAAC,IAAD,CAAhC;EACA,MAAM,WAAW,GAAG,qBAAqB,CAAC,KAAD,CAAzC;EACA,MAAM,SAAS,GAAG,qBAAqB,CAAC,GAAD,CAAvC;EACA,MAAM,UAAU,GAAG,qBAAqB,CAAC,IAAD,CAAxC;EACA,MAAM,YAAY,GAAG,qBAAqB,CAAC,MAAD,CAA1C;EACA,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAD,EAAS,WAAT,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,SAA/C,CAA7C;EACA,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAA3B;EACA,MAAM,QAAQ,GAAG,wBAAwB,CAAC,UAAD,EAAa,YAAb,CAAzC;EACA,mBAAU,UAAV,cAAwB,WAAxB,cAAuC,SAAvC,cAAoD,UAApD,cAAkE,YAAlE,SAAiF,aAAjF,SAAiG,QAAjG;EACD;EAEK,SAAU,wBAAV,CACJ,QADI,EAE8D;EAAA,MAAlE,YAAkE,uEAAN,MAAM;EAElE,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,SAAX,CAAR,CAAnC;EACA,MAAM,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,OAAX,CAAR,CAAjC;EACA,MAAI,YAAY,aAAM,KAAN,cAAe,GAAf,CAAhB;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAD,EAAW,QAAX,CAAxB;EACA,MAAM,UAAU,GAAG,QAAQ,CAAC,QAAD,CAA3B;;EACA,MAAI,UAAU,KAAK,SAAnB,EAA8B;EAC5B,QAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAA1B;EACA,IAAA,YAAY,aAAM,IAAN,cAAc,YAAd,CAAZ;EACD;;EACD,MAAM,cAAc,GAAG,wBAAwB,CAAC,UAAD,EAAa,YAAb,CAA/C;EACA,MAAI,cAAJ,EAAoB,YAAY,IAAI,cAAhB;EACpB,SAAO,YAAP;EACD;EAEK,SAAU,yBAAV,CACJ,SADI,EAE8D;EAAA,MAAlE,YAAkE,uEAAN,MAAM;EAElE,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,SAAD,EAAY,QAAZ,CAAR,CAA1B;EACA,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,SAAD,EAAY,SAAZ,CAAR,CAAnC;EACA,MAAI,YAAY,aAAM,IAAN,cAAc,KAAd,CAAhB;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,SAAD,EAAY,QAAZ,CAAxB;EACA,MAAM,UAAU,GAAG,QAAQ,CAAC,QAAD,CAA3B;;EACA,MAAI,UAAU,KAAK,SAAnB,EAA8B;EAC5B,QAAM,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAC,SAAD,EAAY,OAAZ,CAAR,CAAjC;EACA,IAAA,YAAY,eAAQ,GAAR,CAAZ;EACD;;EACD,MAAM,cAAc,GAAG,wBAAwB,CAAC,UAAD,EAAa,YAAb,CAA/C;EACA,MAAI,cAAJ,EAAoB,YAAY,IAAI,cAAhB;EACpB,SAAO,YAAP;EACD;EAEK,SAAU,6BAAV,CACJ,GADI,EAEJ,SAFI,EAUS;EAAA,MAPb,YAOa,uEAP2C,MAO3C;EAAA,MANb,YAMa,uEAN+C,MAM/C;EAAA,MALb,UAKa,uEALuC,MAKvC;EAAA,MAJb,OAIa,uEAAT,SAAS;EAEb,MAAI,OAAO,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAArB;;EAEA,MAAI,OAAJ,EAAa;EACX,QAAQ,IAAR,GAA0C,OAA1C,CAAQ,IAAR;EAAA,QAAc,SAAd,GAA0C,OAA1C,CAAc,SAAd;EAAA,QAAyB,YAAzB,GAA0C,OAA1C,CAAyB,YAAzB;EACA,QAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,GAAD,EAAM,gBAAN,CAAR,EAAiC,SAAjC,EAA4C,IAA5C,EAAkD,YAAlD,CAAvB;EACA,QAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,IAAA,OAAO,GAAG,IAAI,eAAJ,CAAoB,EAApB,CAAV;EACD;;EAED,MAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,SAAN,CAAlB;EACA,MAAM,GAAG,GAAG,kBAAkB,EAA9B;EACA,MAAM,QAAQ,GAAG,kCAAkC,CAAC,EAAD,EAAK,OAAL,EAAc,GAAd,CAAnD;EAEA,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAA1B;EACA,MAAM,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,SAAX,CAAR,CAAnC;EACA,MAAM,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,OAAX,CAAR,CAAjC;EACA,MAAM,IAAI,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,QAAX,CAAR,CAAlC;EACA,MAAM,MAAM,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAD,EAAW,UAAX,CAAR,CAApC;EACA,MAAM,OAAO,GAAG,uBAAuB,CACrC,OAAO,CAAC,QAAD,EAAW,UAAX,CAD8B,EAErC,OAAO,CAAC,QAAD,EAAW,eAAX,CAF8B,EAGrC,OAAO,CAAC,QAAD,EAAW,eAAX,CAH8B,EAIrC,OAAO,CAAC,QAAD,EAAW,cAAX,CAJ8B,EAKrC,SALqC,CAAvC;EAOA,MAAI,MAAM,aAAM,IAAN,cAAc,KAAd,cAAuB,GAAvB,cAA8B,IAA9B,cAAsC,MAAtC,SAA+C,OAA/C,CAAV;;EACA,MAAI,UAAU,KAAK,OAAnB,EAA4B;EAC1B,QAAM,QAAQ,GAAG,uBAAuB,CAAC,EAAD,EAAK,OAAL,CAAxC;EACA,IAAA,MAAM,IAAI,6BAA6B,CAAC,QAAD,CAAvC;EACD;;EACD,MAAI,YAAY,KAAK,OAArB,EAA8B,MAAM,eAAQ,EAAR,MAAN;EAC9B,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAD,EAAM,QAAN,CAAR,CAA3B;EACA,EAAA,MAAM,IAAI,wBAAwB,CAAC,UAAD,EAAa,YAAb,CAAlC;EACA,SAAO,MAAP;EACD;EAEK,SAAU,iBAAV,CAA4B,MAA5B,EAA0C;EAC9C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,MAAD,CAAtB,CAAd;EACA,MAAI,CAAC,KAAL,EAAY,OAAO,IAAP;EACZ,MAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoB,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjC,GAA4C,CAAC,CAA7C,GAAiD,CAAC,CAA/D;EACA,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAD,CAApB;EACA,MAAM,OAAO,GAAG,EAAE,KAAK,CAAC,CAAD,CAAL,IAAY,CAAd,CAAhB;EACA,MAAM,OAAO,GAAG,EAAE,KAAK,CAAC,CAAD,CAAL,IAAY,CAAd,CAAhB;EACA,MAAM,WAAW,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAD,CAAL,IAAY,CAAb,IAAkB,WAAnB,EAAgC,KAAhC,CAAsC,CAAtC,EAAyC,CAAzC,CAArB;EACA,SAAO,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAR,GAAa,OAAd,IAAyB,EAAzB,GAA8B,OAA/B,IAA0C,GAA1C,GAAgD,WAApD,CAAX;EACD;EAEK,SAAU,8BAAV,CAAyC,kBAAzC,EAAmE;EACvE,MAAM,QAAQ,GAAG,iBAAiB,CAAC,kBAAD,CAAlC;EACA,MAAI,QAAQ,KAAK,IAAjB,EAAuB,OAAO,0BAA0B,CAAC,QAAD,CAAjC;EACvB,MAAM,SAAS,GAAG,oCAAoC,CAAC,UAAU,CAAC,kBAAD,CAAX,CAAtD;EACA,SAAO,SAAS,CAAC,eAAV,GAA4B,QAAnC;EACD;EAEK,SAAU,gCAAV,CAA2C,gBAA3C,EAAgF,EAAhF,EAA0F;EAC9F,8BAAyF,4BAA4B,CACnH,gBADmH,EAEnH,EAFmH,CAArH;EAAA,MAAQ,IAAR,yBAAQ,IAAR;EAAA,MAAc,KAAd,yBAAc,KAAd;EAAA,MAAqB,GAArB,yBAAqB,GAArB;EAAA,MAA0B,IAA1B,yBAA0B,IAA1B;EAAA,MAAgC,MAAhC,yBAAgC,MAAhC;EAAA,MAAwC,MAAxC,yBAAwC,MAAxC;EAAA,MAAgD,WAAhD,yBAAgD,WAAhD;EAAA,MAA6D,WAA7D,yBAA6D,WAA7D;EAAA,MAA0E,UAA1E,yBAA0E,UAA1E;;EAIA,MAAM,GAAG,GAAG,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAAhC;EACA,MAAI,GAAG,KAAK,IAAZ,EAAkB,MAAM,IAAI,UAAJ,CAAe,iCAAf,CAAN;EAClB,SAAO,CAAC,GAAG,CAAC,KAAJ,CAAU,gBAAV,CAAR;EACD;;EAED,SAAS,0BAAT,CAAoC,sBAApC,EAAkE;EAChE,MAAM,IAAI,GAAG,sBAAsB,GAAG,CAAzB,GAA6B,GAA7B,GAAmC,GAAhD;EACA,MAAM,iBAAiB,GAAG,OAAO,CAAC,sBAAD,CAAjC;EACA,MAAM,WAAW,GAAG,iBAAiB,GAAG,GAAxC;EACA,MAAM,OAAO,GAAG,SAAS,CAAC,iBAAiB,GAAG,GAArB,CAAT,GAAqC,EAArD;EACA,MAAM,OAAO,GAAG,SAAS,CAAC,iBAAiB,GAAG,IAArB,CAAT,GAAsC,EAAtD;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,iBAAiB,GAAG,MAArB,CAAvB;EAEA,MAAM,UAAU,GAAG,qBAAqB,CAAC,KAAD,CAAxC;EACA,MAAM,YAAY,GAAG,qBAAqB,CAAC,OAAD,CAA1C;EACA,MAAM,YAAY,GAAG,qBAAqB,CAAC,OAAD,CAA1C;EACA,MAAI,IAAI,GAAG,EAAX;;EACA,MAAI,WAAJ,EAAiB;EACf,QAAI,QAAQ,GAAG,UAAG,WAAH,EAAiB,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAf;;EACA,WAAO,QAAQ,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAAR,KAAkC,GAAzC;EAA8C,MAAA,QAAQ,GAAG,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;EAA9C;;EACA,IAAA,IAAI,cAAO,YAAP,cAAuB,QAAvB,CAAJ;EACD,GAJD,MAIO,IAAI,OAAJ,EAAa;EAClB,IAAA,IAAI,cAAO,YAAP,CAAJ;EACD;;EACD,mBAAU,IAAV,SAAiB,UAAjB,cAA+B,YAA/B,SAA8C,IAA9C;EACD;;EAED,SAAS,6BAAT,CAAuC,sBAAvC,EAAqE;EACnE,MAAI,iBAAiB,GAAG,sBAAsB,CAAC,MAAM,CAAC,sBAAD,CAAP,EAAiC,IAAjC,EAAuC,YAAvC,CAAtB,CAA2E,UAA3E,EAAxB;EACA,MAAM,IAAI,GAAG,iBAAiB,GAAG,CAApB,GAAwB,GAAxB,GAA8B,GAA3C;EACA,EAAA,iBAAiB,GAAG,OAAO,CAAC,iBAAD,CAA3B;EACA,MAAM,OAAO,GAAI,iBAAiB,GAAG,IAArB,GAA6B,EAA7C;EACA,MAAM,KAAK,GAAG,SAAS,CAAC,iBAAiB,GAAG,MAArB,CAAvB;EAEA,MAAM,UAAU,GAAG,qBAAqB,CAAC,KAAD,CAAxC;EACA,MAAM,YAAY,GAAG,qBAAqB,CAAC,OAAD,CAA1C;EACA,mBAAU,IAAV,SAAiB,UAAjB,cAA+B,YAA/B;EACD;;EACK,SAAU,oBAAV,CACJ,IADI,EAEJ,KAFI,EAGJ,GAHI,EAIJ,IAJI,EAKJ,MALI,EAMJ,MANI,EAOJ,WAPI,EAQJ,WARI,EASJ,UATI,EASc;EAElB;EACA;EACA,MAAM,UAAU,GAAG,IAAI,IAAJ,EAAnB;EACA,EAAA,UAAU,CAAC,WAAX,CAAuB,IAAvB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,WAA7C;EACA,EAAA,UAAU,CAAC,cAAX,CAA0B,IAA1B,EAAgC,KAAK,GAAG,CAAxC,EAA2C,GAA3C;EACA,MAAM,EAAE,GAAG,UAAU,CAAC,OAAX,EAAX;EACA,MAAI,WAAW,CAAC,EAAD,CAAf,EAAqB,OAAO,IAAP;EACrB,MAAI,EAAE,GAAG,MAAM,CAAC,EAAD,CAAN,CAAW,QAAX,CAAoB,GAApB,CAAT;EACA,EAAA,EAAE,GAAG,EAAE,CAAC,IAAH,CAAQ,MAAM,CAAC,WAAD,CAAN,CAAoB,QAApB,CAA6B,GAA7B,CAAR,CAAL;EACA,EAAA,EAAE,GAAG,EAAE,CAAC,IAAH,CAAQ,MAAM,CAAC,UAAD,CAAd,CAAL;EACA,MAAI,EAAE,CAAC,MAAH,CAAU,MAAV,KAAqB,EAAE,CAAC,OAAH,CAAW,MAAX,CAAzB,EAA6C,OAAO,IAAP;EAC7C,SAAO,EAAP;EACD;;EAED,SAAS,oBAAT,CAA8B,gBAA9B,EAAiE;EAC/D,uBAAgC,MAAM,CAAC,gBAAD,CAAN,CAAyB,MAAzB,CAAgC,GAAhC,CAAhC;EAAA,MAAQ,QAAR,kBAAQ,QAAR;EAAA,MAAkB,SAAlB,kBAAkB,SAAlB;;EACA,MAAI,iBAAiB,GAAG,CAAC,QAAzB;EACA,MAAI,KAAK,GAAG,CAAC,SAAb;;EACA,MAAI,KAAK,GAAG,CAAZ,EAAe;EACb,IAAA,KAAK,IAAI,GAAT;EACA,IAAA,iBAAiB,IAAI,CAArB;EACD;;EACD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,GAAG,GAAT,CAAT,GAAyB,GAA7C;EACA,MAAM,UAAU,GAAG,KAAK,GAAG,GAA3B;EAEA,MAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,iBAAT,CAAb;EACA,MAAM,IAAI,GAAG,IAAI,CAAC,cAAL,EAAb;EACA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAL,KAAqB,CAAnC;EACA,MAAM,GAAG,GAAG,IAAI,CAAC,UAAL,EAAZ;EACA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAL,EAAb;EACA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,EAAf;EACA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,EAAf;EACA,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAL,EAApB;EAEA,SAAO;EAAE,IAAA,iBAAiB,EAAjB,iBAAF;EAAqB,IAAA,IAAI,EAAJ,IAArB;EAA2B,IAAA,KAAK,EAAL,KAA3B;EAAkC,IAAA,GAAG,EAAH,GAAlC;EAAuC,IAAA,IAAI,EAAJ,IAAvC;EAA6C,IAAA,MAAM,EAAN,MAA7C;EAAqD,IAAA,MAAM,EAAN,MAArD;EAA6D,IAAA,WAAW,EAAX,WAA7D;EAA0E,IAAA,WAAW,EAAX,WAA1E;EAAuF,IAAA,UAAU,EAAV;EAAvF,GAAP;EACD;;;EAGK,SAAU,4BAAV,CAAuC,gBAAvC,EAA4E,EAA5E,EAAsF;EAC1F,+BAAoE,oBAAoB,CAAC,gBAAD,CAAxF;EAAA,MAAQ,iBAAR,0BAAQ,iBAAR;EAAA,MAA2B,WAA3B,0BAA2B,WAA3B;EAAA,MAAwC,WAAxC,0BAAwC,WAAxC;EAAA,MAAqD,UAArD,0BAAqD,UAArD;;EACA,2BAAmD,iBAAiB,CAAC,EAAD,EAAK,iBAAL,CAApE;EAAA,MAAQ,IAAR,sBAAQ,IAAR;EAAA,MAAc,KAAd,sBAAc,KAAd;EAAA,MAAqB,GAArB,sBAAqB,GAArB;EAAA,MAA0B,IAA1B,sBAA0B,IAA1B;EAAA,MAAgC,MAAhC,sBAAgC,MAAhC;EAAA,MAAwC,MAAxC,sBAAwC,MAAxC;;EACA,SAAO,kBAAkB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAAzB;EACD;EAEK,SAAU,6BAAV,CAAwC,gBAAxC,EAA6E,EAA7E,EAAuF;EAC3F,MAAM,QAAQ,GAAG,yBAAyB,GAAG,IAA5B,CAAiC,SAAS,CAAC,QAAV,CAAmB,GAAnB,CAAjC,CAAjB;EACA,MAAI,SAAS,GAAG,gBAAhB;EACA,MAAM,YAAY,GAAG,gCAAgC,CAAC,SAAD,EAAY,EAAZ,CAArD;EACA,MAAI,UAAU,GAAG,SAAjB;EACA,MAAI,aAAa,GAAG,YAApB;;EACA,SAAO,YAAY,KAAK,aAAjB,IAAkC,MAAM,CAAC,SAAD,CAAN,CAAkB,OAAlB,CAA0B,QAA1B,MAAwC,CAAC,CAAlF,EAAqF;EACnF,IAAA,UAAU,GAAG,MAAM,CAAC,SAAD,CAAN,CAAkB,IAAlB,CAAuB,SAAS,CAAC,QAAV,CAAmB,IAAI,CAAvB,CAAvB,CAAb;EACA,IAAA,aAAa,GAAG,gCAAgC,CAAC,UAAD,EAAa,EAAb,CAAhD;;EACA,QAAI,YAAY,KAAK,aAArB,EAAoC;EAClC,MAAA,SAAS,GAAG,UAAZ;EACD;EACF;;EACD,MAAI,YAAY,KAAK,aAArB,EAAoC,OAAO,IAAP;EACpC,MAAM,MAAM,GAAG,MAAM,CACnB,UAAC,OAAD;EAAA,WAAgC,gCAAgC,CAAC,OAAD,EAAU,EAAV,CAAhE;EAAA,GADmB,EAEnB,SAFmB,EAGnB,UAHmB,EAInB,YAJmB,EAKnB,aALmB,CAArB;EAOA,SAAO,MAAP;EACD;EAEK,SAAU,iCAAV,CAA4C,gBAA5C,EAAiF,EAAjF,EAA2F;EAC/F,MAAM,QAAQ,GAAG,gBAAjB,CAD+F;;EAE/F,MAAI,UAAU,GAAG,MAAM,CAAC,gBAAD,CAAN,CAAyB,KAAzB,CAA+B,CAA/B,CAAjB;EACA,MAAM,aAAa,GAAG,gCAAgC,CAAC,UAAD,EAAa,EAAb,CAAtD;EACA,MAAI,SAAS,GAAG,UAAhB;EACA,MAAI,YAAY,GAAG,aAAnB;;EACA,SAAO,aAAa,KAAK,YAAlB,IAAkC,MAAM,CAAC,UAAD,CAAN,CAAmB,OAAnB,CAA2B,QAA3B,MAAyC,CAAlF,EAAqF;EACnF,IAAA,SAAS,GAAG,MAAM,CAAC,UAAD,CAAN,CAAmB,KAAnB,CAAyB,SAAS,CAAC,QAAV,CAAmB,IAAI,CAAvB,CAAzB,CAAZ;EACA,IAAA,YAAY,GAAG,gCAAgC,CAAC,SAAD,EAAY,EAAZ,CAA/C;;EACA,QAAI,aAAa,KAAK,YAAtB,EAAoC;EAClC,MAAA,UAAU,GAAG,SAAb;EACD;EACF;;EACD,MAAI,aAAa,KAAK,YAAtB,EAAoC,OAAO,IAAP;EACpC,MAAM,MAAM,GAAG,MAAM,CACnB,UAAC,OAAD;EAAA,WAAgC,gCAAgC,CAAC,OAAD,EAAU,EAAV,CAAhE;EAAA,GADmB,EAEnB,SAFmB,EAGnB,UAHmB,EAInB,YAJmB,EAKnB,aALmB,CAArB;EAOA,SAAO,MAAP;EACD;;EAGK,SAAU,iBAAV,CAA4B,QAA5B,EAA8C,iBAA9C,EAAuE;EAC3E,MAAM,SAAS,GAAG,oCAAoC,CAAC,QAAD,CAAtD,CAD2E;;EAG3E,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAV,CAAiB,IAAI,IAAJ,CAAS,iBAAT,CAAjB,CAAjB;;EACA,wBAAsD,QAAQ,CAAC,KAAT,CAAe,QAAf,CAAtD;EAAA;EAAA,MAAO,KAAP;EAAA,MAAc,GAAd;EAAA,MAAmB,IAAnB;EAAA,MAAyB,GAAzB;EAAA,MAA8B,IAA9B;EAAA,MAAoC,MAApC;EAAA,MAA4C,MAA5C;;EACA,SAAO;EACL,IAAA,IAAI,EAAE,GAAG,CAAC,WAAJ,GAAkB,UAAlB,CAA6B,GAA7B,IAAoC,CAAC,IAAD,GAAQ,CAA5C,GAAgD,CAAC,IADlD;EAEL,IAAA,KAAK,EAAE,CAAC,KAFH;EAGL,IAAA,GAAG,EAAE,CAAC,GAHD;EAIL,IAAA,IAAI,EAAE,IAAI,KAAK,IAAT,GAAgB,CAAhB,GAAoB,CAAC,IAJtB;EAKL,IAAA,MAAM,EAAE,CAAC,MALJ;EAML,IAAA,MAAM,EAAE,CAAC;EANJ,GAAP;EAQD;EAEK,SAAU,yBAAV,CACJ,EADI,EAEJ,IAFI,EAGJ,KAHI,EAIJ,GAJI,EAKJ,IALI,EAMJ,MANI,EAOJ,MAPI,EAQJ,WARI,EASJ,WATI,EAUJ,UAVI,EAUc;EAElB,MAAM,EAAE,GAAG,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,WAAzC,EAAsD,WAAtD,EAAmE,UAAnE,CAA/B;EACA,MAAI,EAAE,KAAK,IAAX,EAAiB,MAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACjB,MAAI,SAAS,GAAG,EAAE,CAAC,KAAH,CAAS,SAAT,CAAhB;EACA,MAAI,SAAS,CAAC,MAAV,CAAiB,MAAjB,CAAJ,EAA8B,SAAS,GAAG,EAAZ;EAC9B,MAAI,OAAO,GAAG,EAAE,CAAC,IAAH,CAAQ,SAAR,CAAd;EACA,MAAI,OAAO,CAAC,OAAR,CAAgB,MAAhB,CAAJ,EAA6B,OAAO,GAAG,EAAV;EAC7B,MAAM,QAAQ,GAAG,gCAAgC,CAAC,SAAD,EAAY,EAAZ,CAAjD;EACA,MAAM,MAAM,GAAG,gCAAgC,CAAC,OAAD,EAAU,EAAV,CAA/C;EACA,MAAM,KAAK,GAAG,QAAQ,KAAK,MAAb,GAAsB,CAAC,QAAD,CAAtB,GAAmC,CAAC,QAAD,EAAW,MAAX,CAAjD;EACA,SAAO,KAAK,CACT,GADI,CACA,UAAC,iBAAD,EAAsB;EACzB,QAAM,gBAAgB,GAAG,MAAM,CAAC,EAAD,CAAN,CAAW,KAAX,CAAiB,iBAAjB,CAAzB;EACA,QAAM,KAAK,GAAG,4BAA4B,CAAC,gBAAD,EAAmB,EAAnB,CAA1C;;EACA,QACE,IAAI,KAAK,KAAK,CAAC,IAAf,IACA,KAAK,KAAK,KAAK,CAAC,KADhB,IAEA,GAAG,KAAK,KAAK,CAAC,GAFd,IAGA,IAAI,KAAK,KAAK,CAAC,IAHf,IAIA,MAAM,KAAK,KAAK,CAAC,MAJjB,IAKA,MAAM,KAAK,KAAK,CAAC,MALjB,IAMA,WAAW,KAAK,KAAK,CAAC,WANtB,IAOA,WAAW,KAAK,KAAK,CAAC,WAPtB,IAQA,UAAU,KAAK,KAAK,CAAC,UATvB,EAUE;EACA,aAAO,SAAP;EACD;;EACD,WAAO,gBAAP;EACD,GAlBI,EAmBJ,MAnBI,CAmBG,UAAC,CAAD;EAAA,WAAO,CAAC,KAAK,SAAb;EAAA,GAnBH,CAAP;EAoBD;EAEK,SAAU,QAAV,CAAmB,IAAnB,EAA+B;EACnC,MAAI,SAAS,KAAK,IAAlB,EAAwB,OAAO,KAAP;EACxB,MAAM,MAAM,GAAG,IAAI,GAAG,CAAP,KAAa,CAA5B;EACA,MAAM,QAAQ,GAAG,IAAI,GAAG,GAAP,KAAe,CAAhC;EACA,MAAM,QAAQ,GAAG,IAAI,GAAG,GAAP,KAAe,CAAhC;EACA,SAAO,MAAM,KAAK,CAAC,QAAD,IAAa,QAAlB,CAAb;EACD;EAEK,SAAU,cAAV,CAAyB,IAAzB,EAAuC,KAAvC,EAAoD;EACxD,MAAM,GAAG,GAAG;EACV,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CADA;EAEV,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C;EAFA,GAAZ;EAIA,SAAO,GAAG,CAAC,QAAQ,CAAC,IAAD,CAAR,GAAiB,UAAjB,GAA8B,UAA/B,CAAH,CAA8C,KAAK,GAAG,CAAtD,CAAP;EACD;EAEK,SAAU,SAAV,CAAoB,IAApB,EAAkC,KAAlC,EAAiD,GAAjD,EAA4D;EAChE,MAAM,CAAC,GAAG,KAAK,IAAI,KAAK,GAAG,CAAR,GAAY,EAAZ,GAAiB,CAAC,CAAtB,CAAf;EACA,MAAM,CAAC,GAAG,IAAI,IAAI,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,CAApB,CAAd;EAEA,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,GAAL,CAAnB;EACA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAlB;EACA,MAAM,CAAC,GAAG,GAAV;EAEA,MAAM,EAAE,GAAG,CAAX;EACA,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAN,GAAU,GAAX,CAApB;EACA,MAAM,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAL,CAAxB;EACA,MAAM,EAAE,GAAG,SAAS,CAAC,CAAC,GAAG,CAAL,CAAT,GAAmB,IAAI,CAAlC;EAEA,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAL,GAAU,EAAV,GAAe,EAAhB,IAAsB,CAAlC;EAEA,SAAO,GAAG,IAAI,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAnB,CAAV;EACD;EAEK,SAAU,SAAV,CAAoB,IAApB,EAAkC,KAAlC,EAAiD,GAAjD,EAA4D;EAChE,MAAI,IAAI,GAAG,GAAX;;EACA,OAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAArB,EAAwB,CAAC,GAAG,CAA5B,EAA+B,CAAC,EAAhC,EAAoC;EAClC,IAAA,IAAI,IAAI,cAAc,CAAC,IAAD,EAAO,CAAP,CAAtB;EACD;;EACD,SAAO,IAAP;EACD;EAEK,SAAU,UAAV,CAAqB,IAArB,EAAmC,KAAnC,EAAkD,GAAlD,EAA6D;EACjE,MAAM,GAAG,GAAG,SAAS,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAArB;EACA,MAAM,GAAG,GAAG,SAAS,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAAT,IAA+B,CAA3C;EACA,MAAM,GAAG,GAAG,SAAS,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,CAArB;EAEA,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,GAAG,GAAG,GAAN,GAAY,EAAb,IAAmB,CAApB,CAAtB;;EAEA,MAAI,IAAI,GAAG,CAAX,EAAc;EACZ,QAAI,GAAG,KAAK,CAAR,IAAc,GAAG,KAAK,CAAR,IAAa,QAAQ,CAAC,IAAI,GAAG,CAAR,CAAvC,EAAoD;EAClD,aAAO,EAAP;EACD,KAFD,MAEO;EACL,aAAO,EAAP;EACD;EACF;;EACD,MAAI,IAAI,KAAK,EAAb,EAAiB;EACf,QAAI,CAAC,QAAQ,CAAC,IAAD,CAAR,GAAiB,GAAjB,GAAuB,GAAxB,IAA+B,GAA/B,GAAqC,IAAI,GAA7C,EAAkD;EAChD,aAAO,CAAP;EACD;EACF;;EAED,SAAO,IAAP;EACD;EAEK,SAAU,YAAV,CACJ,CADI,EAEJ,GAFI,EAGJ,CAHI,EAIJ,CAJI,EAKJ,CALI,EAMJ,GANI,EAOJ,CAPI,EAQJ,EARI,EASJ,EATI,EAUJ,EAVI,EAUM;EAEV,4BAAmB,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,GAAlB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAnB,6BAA0D;EAArD,QAAM,IAAI,aAAV;EACH,QAAI,IAAI,KAAK,CAAb,EAAgB,OAAO,IAAI,GAAG,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAvB;EACjB;;EACD,SAAO,CAAP;EACD;;EAED,SAAS,mBAAT,CAA6B,SAA7B,EAAgD,UAAhD,EAAkE;EAChE,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,CAAC,cAAc,CAAC,IAAD,CAAf,IAAyB,CAAC,cAAc,CAAC,KAAD,CAA5C,EAAqD,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACrD,EAAA,KAAK,IAAI,CAAT;EACA,EAAA,IAAI,IAAI,SAAS,CAAC,KAAK,GAAG,EAAT,CAAjB;EACA,EAAA,KAAK,IAAI,EAAT;EACA,MAAI,KAAK,GAAG,CAAZ,EAAe,KAAK,IAAI,EAAT;EACf,EAAA,KAAK,IAAI,CAAT;EACA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL;EAAR,GAAP;EACD;;EAED,SAAS,cAAT,CAAwB,SAAxB,EAA2C,UAA3C,EAA+D,QAA/D,EAA+E;EAC7E,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,GAAG,GAAG,QAAV;EACA,MAAI,CAAC,cAAc,CAAC,GAAD,CAAnB,EAA0B,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;;EAJmD,6BAK1D,mBAAmB,CAAC,IAAD,EAAO,KAAP,CALuC;;EAK1E,EAAA,IAL0E,wBAK1E,IAL0E;EAKpE,EAAA,KALoE,wBAKpE,KALoE;EAM7E,MAAI,UAAU,GAAG,CAAjB;EACA,MAAI,QAAQ,GAAG,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,IAAI,GAAG,CAAzC;;EACA,SAAS,UAAU,GAAG,QAAQ,CAAC,QAAD,CAAR,GAAqB,GAArB,GAA2B,GAAzC,EAA+C,GAAG,GAAG,CAAC,UAA9D,EAA2E;EACzE,IAAA,IAAI,IAAI,CAAR;EACA,IAAA,QAAQ,IAAI,CAAZ;EACA,IAAA,GAAG,IAAI,UAAP;EACD;;EACD,EAAA,QAAQ,IAAI,CAAZ;;EACA,SAAS,UAAU,GAAG,QAAQ,CAAC,QAAD,CAAR,GAAqB,GAArB,GAA2B,GAAzC,EAA+C,GAAG,GAAG,UAA7D,EAA0E;EACxE,IAAA,IAAI,IAAI,CAAR;EACA,IAAA,QAAQ,IAAI,CAAZ;EACA,IAAA,GAAG,IAAI,UAAP;EACD;;EAED,SAAO,GAAG,GAAG,CAAb,EAAgB;EAAA,gCACK,mBAAmB,CAAC,IAAD,EAAO,KAAK,GAAG,CAAf,CADxB;;EACX,IAAA,IADW,yBACX,IADW;EACL,IAAA,KADK,yBACL,KADK;EAEd,IAAA,GAAG,IAAI,cAAc,CAAC,IAAD,EAAO,KAAP,CAArB;EACD;;EACD,SAAO,GAAG,GAAG,cAAc,CAAC,IAAD,EAAO,KAAP,CAA3B,EAA0C;EACxC,IAAA,GAAG,IAAI,cAAc,CAAC,IAAD,EAAO,KAAP,CAArB;;EADwC,gCAErB,mBAAmB,CAAC,IAAD,EAAO,KAAK,GAAG,CAAf,CAFE;;EAErC,IAAA,IAFqC,yBAErC,IAFqC;EAE/B,IAAA,KAF+B,yBAE/B,KAF+B;EAGzC;;EAED,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH;EAAf,GAAP;EACD;;EAED,SAAS,kBAAT,CACE,SADF,EAEE,UAFF,EAGE,QAHF,EAIE,SAJF,EAKE,WALF,EAME,WANF,EAOE,gBAPF,EAQE,gBARF,EASE,eATF,EASyB;EAEvB,qBAAkF,WAAW,CAC3F,SAD2F,EAE3F,WAF2F,EAG3F,WAH2F,EAI3F,gBAJ2F,EAK3F,gBAL2F,EAM3F,eAN2F,CAA7F;EAAA,MAAQ,SAAR,gBAAQ,SAAR;EAAA,MAAmB,IAAnB,gBAAmB,IAAnB;EAAA,MAAyB,MAAzB,gBAAyB,MAAzB;EAAA,MAAiC,MAAjC,gBAAiC,MAAjC;EAAA,MAAyC,WAAzC,gBAAyC,WAAzC;EAAA,MAAsD,WAAtD,gBAAsD,WAAtD;EAAA,MAAmE,UAAnE,gBAAmE,UAAnE;;EAQA,wBAA6B,cAAc,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAQ,GAAG,SAAnC,CAA3C;EAAA,MAAQ,IAAR,mBAAQ,IAAR;EAAA,MAAc,KAAd,mBAAc,KAAd;EAAA,MAAqB,GAArB,mBAAqB,GAArB;;EACA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH,GAAf;EAAoB,IAAA,IAAI,EAAJ,IAApB;EAA0B,IAAA,MAAM,EAAN,MAA1B;EAAkC,IAAA,MAAM,EAAN,MAAlC;EAA0C,IAAA,WAAW,EAAX,WAA1C;EAAuD,IAAA,WAAW,EAAX,WAAvD;EAAoE,IAAA,UAAU,EAAV;EAApE,GAAP;EACD;;EAED,SAAS,WAAT,CACE,SADF,EAEE,WAFF,EAGE,WAHF,EAIE,gBAJF,EAKE,gBALF,EAME,eANF,EAMyB;EAEvB,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,UAAU,GAAG,eAAjB;;EACA,MACE,CAAC,cAAc,CAAC,IAAD,CAAf,IACA,CAAC,cAAc,CAAC,MAAD,CADf,IAEA,CAAC,cAAc,CAAC,MAAD,CAFf,IAGA,CAAC,cAAc,CAAC,WAAD,CAHf,IAIA,CAAC,cAAc,CAAC,WAAD,CAJf,IAKA,CAAC,cAAc,CAAC,UAAD,CANjB,EAOE;EACA,UAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EACD;;EAED,EAAA,WAAW,IAAI,SAAS,CAAC,UAAU,GAAG,IAAd,CAAxB;EACA,EAAA,UAAU,GAAG,iBAAiB,CAAC,UAAD,EAAa,IAAb,CAA9B;EAEA,EAAA,WAAW,IAAI,SAAS,CAAC,WAAW,GAAG,IAAf,CAAxB;EACA,EAAA,WAAW,GAAG,iBAAiB,CAAC,WAAD,EAAc,IAAd,CAA/B;EAEA,EAAA,MAAM,IAAI,SAAS,CAAC,WAAW,GAAG,IAAf,CAAnB;EACA,EAAA,WAAW,GAAG,iBAAiB,CAAC,WAAD,EAAc,IAAd,CAA/B;EAEA,EAAA,MAAM,IAAI,SAAS,CAAC,MAAM,GAAG,EAAV,CAAnB;EACA,EAAA,MAAM,GAAG,iBAAiB,CAAC,MAAD,EAAS,EAAT,CAA1B;EAEA,EAAA,IAAI,IAAI,SAAS,CAAC,MAAM,GAAG,EAAV,CAAjB;EACA,EAAA,MAAM,GAAG,iBAAiB,CAAC,MAAD,EAAS,EAAT,CAA1B;EAEA,MAAM,SAAS,GAAG,SAAS,CAAC,IAAI,GAAG,EAAR,CAA3B;EACA,EAAA,IAAI,GAAG,iBAAiB,CAAC,IAAD,EAAO,EAAP,CAAxB;EAEA,SAAO;EAAE,IAAA,SAAS,EAAT,SAAF;EAAa,IAAA,IAAI,EAAJ,IAAb;EAAmB,IAAA,MAAM,EAAN,MAAnB;EAA2B,IAAA,MAAM,EAAN,MAA3B;EAAmC,IAAA,WAAW,EAAX,WAAnC;EAAgD,IAAA,WAAW,EAAX,WAAhD;EAA6D,IAAA,UAAU,EAAV;EAA7D,GAAP;EACD;;EAEK,SAAU,wBAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,YAHI,EAIJ,YAJI,EAKJ,iBALI,EAMJ,iBANI,EAOJ,gBAPI,EAQJ,WARI,EAQe;EAEnB,MAAM,IAAI,GAAsB,MAAM,CAAC,SAAD,CAAtC;EACA,MAAI,WAAW,GAAsB,MAAM,CAAC,gBAAD,CAA3C;EACA,MAAI,SAAS,KAAK,CAAlB,EAAqB,WAAW,GAAG,MAAM,CAAC,gBAAD,CAAN,CAAyB,QAAzB,CAAkC,WAAlC,CAAd;EACrB,MAAM,KAAK,GAAG,MAAM,CAAC,UAAD,CAAN,CAAmB,GAAnB,CAAuB,MAAM,CAAC,IAAD,CAAN,CAAa,QAAb,CAAsB,EAAtB,CAAvB,CAAd;EACA,MAAM,OAAO,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,GAArB,CAAyB,KAAK,CAAC,QAAN,CAAe,EAAf,CAAzB,CAAhB;EACA,MAAM,OAAO,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,GAArB,CAAyB,OAAO,CAAC,QAAR,CAAiB,EAAjB,CAAzB,CAAhB;EACA,MAAM,YAAY,GAAG,MAAM,CAAC,iBAAD,CAAN,CAA0B,GAA1B,CAA8B,OAAO,CAAC,QAAR,CAAiB,IAAjB,CAA9B,CAArB;EACA,MAAM,YAAY,GAAG,MAAM,CAAC,iBAAD,CAAN,CAA0B,GAA1B,CAA8B,YAAY,CAAC,QAAb,CAAsB,IAAtB,CAA9B,CAArB;EACA,SAAO,MAAM,CAAC,WAAD,CAAN,CAAoB,GAApB,CAAwB,YAAY,CAAC,QAAb,CAAsB,IAAtB,CAAxB,CAAP;EACD;;EAED,SAAS,iBAAT,CACE,gBADF,EAEE,UAFF,EAEyD;EAEvD,MAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,MAAM,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,UAAjB,EAAD,CAArB;EACA,MAAI,WAAW,GAAG,MAAM,CAAC,gBAAD,CAAxB;EACA,MAAI,WAAW,GAAG,OAAlB;EACA,MAAI,IAAI,KAAK,CAAb,EAAgB,OAAO;EAAE,IAAA,IAAI,EAAE,CAAR;EAAW,IAAA,WAAW,EAAE,MAAM,CAAC,IAA/B;EAAqC,IAAA,WAAW,EAAX;EAArC,GAAP;;EAChB,MAAI,CAAC,uBAAuB,CAAC,UAAD,CAA5B,EAA0C;EACxC,QAAI,KAAJ;;EADwC,8BAEM,WAAW,CAAC,MAAZ,CAAmB,WAAnB,CAFN;;EAE3B,IAAA,KAF2B,uBAErC,QAFqC;EAEV,IAAA,WAFU,uBAErB,SAFqB;EAGxC,IAAA,KAAI,GAAG,KAAI,CAAC,UAAL,EAAP;EACA,WAAO;EAAE,MAAA,IAAI,EAAJ,KAAF;EAAQ,MAAA,WAAW,EAAX,WAAR;EAAqB,MAAA,WAAW,EAAX;EAArB,KAAP;EACD;;EAED,MAAM,OAAO,GAAG,OAAO,CAAC,UAAD,EAAa,gBAAb,CAAvB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,UAAD,EAAa,OAAb,CAArB;EACA,MAAM,KAAK,GAAG,OAAO,CAAC,GAAR,CAAY,WAAZ,CAAd;EACA,MAAM,GAAG,GAAG,IAAI,eAAJ,CAAoB,KAApB,CAAZ;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,SAAb,CAAxB;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB,CAnBuD;;EAsBvD,MAAM,OAAO,GAAG,kCAAkC,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,CAAlD;EACA,MAAM,KAAK,GAAG,kCAAkC,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CAAhD;;EACA,8BAAe,qBAAqB,CAClC,OAAO,CAAC,OAAD,EAAU,QAAV,CAD2B,EAElC,OAAO,CAAC,OAAD,EAAU,SAAV,CAF2B,EAGlC,OAAO,CAAC,OAAD,EAAU,OAAV,CAH2B,EAIlC,OAAO,CAAC,OAAD,EAAU,QAAV,CAJ2B,EAKlC,OAAO,CAAC,OAAD,EAAU,UAAV,CAL2B,EAMlC,OAAO,CAAC,OAAD,EAAU,UAAV,CAN2B,EAOlC,OAAO,CAAC,OAAD,EAAU,eAAV,CAP2B,EAQlC,OAAO,CAAC,OAAD,EAAU,eAAV,CAR2B,EASlC,OAAO,CAAC,OAAD,EAAU,cAAV,CAT2B,EAUlC,OAAO,CAAC,KAAD,EAAQ,QAAR,CAV2B,EAWlC,OAAO,CAAC,KAAD,EAAQ,SAAR,CAX2B,EAYlC,OAAO,CAAC,KAAD,EAAQ,OAAR,CAZ2B,EAalC,OAAO,CAAC,KAAD,EAAQ,QAAR,CAb2B,EAclC,OAAO,CAAC,KAAD,EAAQ,UAAR,CAd2B,EAelC,OAAO,CAAC,KAAD,EAAQ,UAAR,CAf2B,EAgBlC,OAAO,CAAC,KAAD,EAAQ,eAAR,CAhB2B,EAiBlC,OAAO,CAAC,KAAD,EAAQ,eAAR,CAjB2B,EAkBlC,OAAO,CAAC,KAAD,EAAQ,cAAR,CAlB2B,EAmBlC,QAnBkC,EAoBlC,KApBkC,CAApC;EAAA,MAAM,IAAN,yBAAM,IAAN;;EAsBA,MAAI,cAAc,GAAG,gBAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,IAArC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,CAArC,CA9CuD;EAiDvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAI,IAAI,KAAK,CAAb,EAAgB;EACd,WAAO,IAAI,GAAG,CAAP,IAAY,cAAc,CAAC,OAAf,CAAuB,KAAvB,CAAnB,EAAkD;EAChD,QAAE,IAAF;EACA,MAAA,cAAc,GAAG,gBAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,IAArC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,CAAjC,CAFgD;EAIjD;EACF;;EACD,EAAA,WAAW,GAAG,KAAK,CAAC,QAAN,CAAe,cAAf,CAAd;EAEA,MAAI,UAAU,GAAG,KAAjB;EACA,MAAI,eAAe,GAAG,IAAI,eAAJ,CAAoB,cAApB,CAAtB;;EACA,KAAG;EACD;EACA,QAAM,eAAe,GAAG,gBAAgB,CAAC,eAAD,EAAkB,QAAlB,EAA4B,QAA5B,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,CAAxC;EACA,QAAM,UAAU,GAAG,OAAO,CAAC,eAAD,EAAkB,gBAAlB,CAA1B;EACA,IAAA,WAAW,GAAG,eAAe,CAAC,QAAhB,CAAyB,UAAzB,EAAqC,UAArC,EAAd;EACA,IAAA,UAAU,GAAG,WAAW,CAAC,QAAZ,CAAqB,WAArB,EAAkC,QAAlC,CAA2C,IAA3C,EAAiD,GAAjD,CAAqD,CAArD,CAAb;;EACA,QAAI,UAAJ,EAAgB;EACd,MAAA,WAAW,GAAG,WAAW,CAAC,QAAZ,CAAqB,WAArB,CAAd;EACA,MAAA,eAAe,GAAG,IAAI,eAAJ,CAAoB,eAApB,CAAlB;EACA,MAAA,IAAI,IAAI,IAAR;EACD;EACF,GAXD,QAWS,UAXT;;EAYA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,WAAW,EAAX,WAAR;EAAqB,IAAA,WAAW,EAAE,OAAO,CAAC,WAAD;EAAzC,GAAP;EACD;;EAEK,SAAU,eAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,YAHI,EAIJ,YAJI,EAKJ,iBALI,EAMJ,iBANI,EAOJ,gBAPI,EAQJ,WARI,EAS+D;EAAA,MAAnE,UAAmE,uEAAT,SAAS;EAEnE,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,iBAAJ,EACE,kBADF,EAEE,kBAFF,EAGE,aAHF,EAIE,aAJF,EAKE,WALF;;EAMA,MAAI,uBAAuB,CAAC,UAAD,CAA3B,EAAyC;EACvC,QAAM,KAAK,GAAG,gBAAgB,CAC5B,OAAO,CAAC,UAAD,EAAa,OAAb,CADqB,EAE5B,OAAO,CAAC,UAAD,EAAa,SAAb,CAFqB,EAG5B,OAAO,CAAC,UAAD,EAAa,QAAb,CAHqB,EAI5B,CAJ4B,EAK5B,CAL4B,EAM5B,CAN4B,EAO5B,IAP4B,EAQ5B,UAR4B,EAS5B,YAT4B,EAU5B,YAV4B,EAW5B,iBAX4B,EAY5B,iBAZ4B,EAa5B,gBAb4B,CAA9B;EAeA,QAAM,OAAO,GAAG,OAAO,CAAC,UAAD,EAAa,gBAAb,CAAvB;EACA,IAAA,iBAAiB,GAAG,KAAK,CAAC,QAAN,CAAe,OAAf,CAApB;EACD,GAlBD,MAkBO;EACL,IAAA,iBAAiB,GAAG,wBAAwB,CAC1C,IAD0C,EAE1C,UAF0C,EAG1C,YAH0C,EAI1C,YAJ0C,EAK1C,iBAL0C,EAM1C,iBAN0C,EAO1C,gBAP0C,EAQ1C,CAR0C,CAA5C;EAUD;;EACD,MAAI,WAAW,KAAK,MAAhB,IAA0B,WAAW,KAAK,OAA1C,IAAqD,WAAW,KAAK,MAArE,IAA+E,WAAW,KAAK,KAAnG,EAA0G;EAAA,6BAC5D,iBAAiB,CAAC,iBAAD,EAAoB,UAApB,CAD2C;;EACrG,IAAA,IADqG,sBACrG,IADqG;EAClF,IAAA,iBADkF,sBAC/F,WAD+F;EAEzG,GAFD,MAEO;EACL,IAAA,IAAI,GAAG,CAAP;EACD;;EAED,MAAM,IAAI,GAAG,iBAAiB,CAAC,MAAlB,CAAyB,CAAzB,IAA8B,CAAC,CAA/B,GAAmC,CAAhD;EACA,EAAA,iBAAiB,GAAG,iBAAiB,CAAC,GAAlB,EAApB;EACA,EAAA,kBAAkB,GAAG,kBAAkB,GAAG,aAAa,GAAG,aAAa,GAAG,WAAW,GAAG,MAAM,CAAC,IAA/F;;EAEA,UAAQ,WAAR;EACE,SAAK,MAAL;EACA,SAAK,OAAL;EACA,SAAK,MAAL;EACA,SAAK,KAAL;EACA,SAAK,MAAL;EAAA,kCACoE,iBAAiB,CAAC,MAAlB,CAAyB,IAAzB,CADpE;;EACe,MAAA,kBADf,yBACK,QADL;EAC8C,MAAA,iBAD9C,yBACmC,SADnC;;EAAA,kCAEqE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAFrE;;EAEe,MAAA,kBAFf,yBAEK,QAFL;EAE8C,MAAA,kBAF9C,yBAEmC,SAFnC;;EAAA,kCAGgE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAHhE;;EAGe,MAAA,aAHf,yBAGK,QAHL;EAGyC,MAAA,kBAHzC,yBAG8B,SAH9B;;EAAA,kCAI2D,aAAa,CAAC,MAAd,CAAqB,EAArB,CAJ3D;;EAIe,MAAA,aAJf,yBAIK,QAJL;EAIyC,MAAA,aAJzC,yBAI8B,SAJ9B;;EAAA,kCAKyD,aAAa,CAAC,MAAd,CAAqB,EAArB,CALzD;;EAKe,MAAA,WALf,yBAKK,QALL;EAKuC,MAAA,aALvC,yBAK4B,SAL5B;EAME;;EACF,SAAK,QAAL;EAAA,mCACoE,iBAAiB,CAAC,MAAlB,CAAyB,IAAzB,CADpE;;EACe,MAAA,kBADf,0BACK,QADL;EAC8C,MAAA,iBAD9C,0BACmC,SADnC;;EAAA,mCAEqE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAFrE;;EAEe,MAAA,kBAFf,0BAEK,QAFL;EAE8C,MAAA,kBAF9C,0BAEmC,SAFnC;;EAAA,mCAGgE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAHhE;;EAGe,MAAA,aAHf,0BAGK,QAHL;EAGyC,MAAA,kBAHzC,0BAG8B,SAH9B;;EAAA,mCAI2D,aAAa,CAAC,MAAd,CAAqB,EAArB,CAJ3D;;EAIe,MAAA,aAJf,0BAIK,QAJL;EAIyC,MAAA,aAJzC,0BAI8B,SAJ9B;EAKE;;EACF,SAAK,QAAL;EAAA,mCACoE,iBAAiB,CAAC,MAAlB,CAAyB,IAAzB,CADpE;;EACe,MAAA,kBADf,0BACK,QADL;EAC8C,MAAA,iBAD9C,0BACmC,SADnC;;EAAA,mCAEqE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAFrE;;EAEe,MAAA,kBAFf,0BAEK,QAFL;EAE8C,MAAA,kBAF9C,0BAEmC,SAFnC;;EAAA,mCAGgE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAHhE;;EAGe,MAAA,aAHf,0BAGK,QAHL;EAGyC,MAAA,kBAHzC,0BAG8B,SAH9B;EAIE;;EACF,SAAK,aAAL;EAAA,mCACoE,iBAAiB,CAAC,MAAlB,CAAyB,IAAzB,CADpE;;EACe,MAAA,kBADf,0BACK,QADL;EAC8C,MAAA,iBAD9C,0BACmC,SADnC;;EAAA,mCAEqE,kBAAkB,CAAC,MAAnB,CAA0B,IAA1B,CAFrE;;EAEe,MAAA,kBAFf,0BAEK,QAFL;EAE8C,MAAA,kBAF9C,0BAEmC,SAFnC;EAGE;;EACF,SAAK,aAAL;EAAA,mCACoE,iBAAiB,CAAC,MAAlB,CAAyB,IAAzB,CADpE;;EACe,MAAA,kBADf,0BACK,QADL;EAC8C,MAAA,iBAD9C,0BACmC,SADnC;EAEE;;EACF,SAAK,YAAL;EACE;;EACF;EACE,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;EAjCJ;;EAoCA,MAAM,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,IAAzC;EACA,MAAM,OAAO,GAAG,aAAa,CAAC,UAAd,KAA6B,IAA7C;EACA,MAAM,OAAO,GAAG,aAAa,CAAC,UAAd,KAA6B,IAA7C;EACA,MAAM,YAAY,GAAG,kBAAkB,CAAC,UAAnB,KAAkC,IAAvD;EACA,MAAM,YAAY,GAAG,kBAAkB,CAAC,UAAnB,KAAkC,IAAvD;EACA,MAAM,WAAW,GAAG,iBAAiB,CAAC,UAAlB,KAAiC,IAArD;EAEA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,OAAO,EAAP,OAAf;EAAwB,IAAA,OAAO,EAAP,OAAxB;EAAiC,IAAA,YAAY,EAAZ,YAAjC;EAA+C,IAAA,YAAY,EAAZ,YAA/C;EAA6D,IAAA,WAAW,EAAX;EAA7D,GAAP;EACD;EAEK,SAAU,yBAAV,CACJ,UADI,EAEJ,WAFI,EAGJ,UAHI,EAIJ,SAJI,EAKJ,WALI,EAMJ,eANI,EAMwD;EAE5D,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,IAAI,GAAG,SAAX;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,MAAM,IAAI,GAAG,YAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAzB;EAEA,MAAI,QAAJ;EACA,MAAI,UAAJ;;EACA,MAAI,eAAJ,EAAqB;EACnB,IAAA,UAAU,GAAG,cAAc,CAAC,eAAD,CAA3B;EACA,IAAA,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAlB;EACD;;EAED,MAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,IAArB,CAAhB;EACA,MAAM,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,IAAxB,CAAjB;EACA,MAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,CAAhB;;EAEA,UAAQ,WAAR;EACE,SAAK,MAAL;EACE;EACA;;EACF,SAAK,OAAL;EACE;EACE,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,mDAAf,CAAN,CADjB;;EAGE,YAAM,OAAO,GAAG,QAAQ,CAAC,OAAzB;EACA,YAAM,SAAS,GAAG,QAAQ,CAAC,SAA3B;EACA,YAAI,kBAAkB,GAA2B,UAAjD;;EACA,eAAO,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAxB,EAA2B;EACzB,cAAM,UAAU,GAAGsC,cAAY,CAAC,IAAD,CAA/B;EACA,cAAM,aAAa,GAAG,eAAe,CAAC,QAAD,EAAW,kBAAX,EAA+B,OAA/B,EAAwC,UAAxC,EAAoD,OAApD,CAArC;EACA,cAAM,YAAY,GAAGA,cAAY,CAAC,IAAD,CAAjC;EACA,UAAA,YAAY,CAAC,WAAb,GAA2B,OAA3B;EACA,cAAM,WAAW,GAAG,iBAAiB,CAAC,QAAD,EAAW,kBAAX,EAA+B,aAA/B,EAA8C,YAA9C,EAA4D,SAA5D,CAArC;EACA,cAAM,aAAa,GAAG,OAAO,CAAC,WAAD,EAAc,MAAd,CAA7B;EACA,UAAA,kBAAkB,GAAG,aAArB;EACA,UAAA,MAAM,IAAI,aAAV;EACA,UAAA,KAAK,IAAI,IAAT;EACD;EACF;EACD;;EACF,SAAK,MAAL;EACE,UAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN,CADjB;;EAGE,aAAO,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAxB,EAA2B;EACzB,YAAI,WAAW,SAAf;;EADyB,gCAEY,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAF5B;;EAEtB,QAAA,UAFsB,qBAEtB,UAFsB;EAEJ,QAAA,WAFI,qBAEV,IAFU;EAGzB,QAAA,IAAI,IAAI,WAAR;EACA,QAAA,KAAK,IAAI,IAAT;EACD,OARH;;;EAWE,aAAO,OAAO,CAAC,MAAD,CAAP,GAAkB,CAAzB,EAA4B;EAC1B,YAAI,YAAY,SAAhB;;EAD0B,iCAEY,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAF5B;;EAEvB,QAAA,UAFuB,sBAEvB,UAFuB;EAEL,QAAA,YAFK,sBAEX,IAFW;EAG1B,QAAA,IAAI,IAAI,YAAR;EACA,QAAA,MAAM,IAAI,IAAV;EACD;;EACD;;EACF;EACE;EACA,aAAO,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAxB,EAA2B;EACzB,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,2DAAf,CAAN;;EACf,YAAI,YAAW,SAAf;;EAFyB,iCAGY,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAH5B;;EAGtB,QAAA,UAHsB,sBAGtB,UAHsB;EAGJ,QAAA,YAHI,sBAGV,IAHU;EAIzB,QAAA,IAAI,IAAI,YAAR;EACA,QAAA,KAAK,IAAI,IAAT;EACD,OARH;;;EAWE,aAAO,OAAO,CAAC,MAAD,CAAP,GAAkB,CAAzB,EAA4B;EAC1B,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,2DAAf,CAAN;;EACf,YAAI,aAAY,SAAhB;;EAF0B,iCAGY,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAH5B;;EAGvB,QAAA,UAHuB,sBAGvB,UAHuB;EAGL,QAAA,aAHK,sBAGX,IAHW;EAI1B,QAAA,IAAI,IAAI,aAAR;EACA,QAAA,MAAM,IAAI,IAAV;EACD,OAjBH;;;EAoBE,aAAO,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAxB,EAA2B;EACzB,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,2DAAf,CAAN;EACf,YAAI,WAAW,SAAf;;EAFyB,iCAGY,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAH5B;;EAGtB,QAAA,UAHsB,sBAGtB,UAHsB;EAGJ,QAAA,WAHI,sBAGV,IAHU;EAIzB,QAAA,IAAI,IAAI,WAAR;EACA,QAAA,KAAK,IAAI,IAAT;EACD;;EACD;EArEJ;;EAwEA,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ;EAAxB,GAAP;EACD;EAEK,SAAU,uBAAV,CACJ,UADI,EAEJ,WAFI,EAGJ,UAHI,EAIJ,SAJI,EAKJ,WALI,EAMJ,eANI,EAMwD;EAE5D,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,IAAI,GAAG,SAAX;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,MAAM,IAAI,GAAG,YAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAzB;EACA,MAAI,IAAI,KAAK,CAAb,EAAgB,OAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ;EAAxB,GAAP;EAEhB,MAAI,QAAJ;EACA,MAAI,UAAJ;;EACA,MAAI,eAAJ,EAAqB;EACnB,IAAA,UAAU,GAAG,cAAc,CAAC,eAAD,CAA3B;EACA,IAAA,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAlB;EACD;;EAED,MAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,IAArB,CAAhB;EACA,MAAM,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,IAAxB,CAAjB;EACA,MAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,CAAhB;;EAEA,UAAQ,WAAR;EACE,SAAK,MAAL;EAAa;EACX,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN,CADJ;;EAGX,YAAI,aAAJ,EAAmB,WAAnB;;EAHW,iCAIyC,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAJzD;;EAII,QAAA,aAJJ,sBAIR,UAJQ;EAIyB,QAAA,WAJzB,sBAImB,IAJnB;;EAKX,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,WAAD,CAA/B,EAA8C;EAC5C,UAAA,IAAI,IAAI,WAAR;EACA,UAAA,KAAK,IAAI,IAAT;EACA,UAAA,UAAU,GAAG,aAAb;;EAH4C,mCAIQ,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAJxB;;EAI7B,UAAA,aAJ6B,sBAIzC,UAJyC;EAIR,UAAA,WAJQ,sBAId,IAJc;EAK7C,SAVU;;;EAaX,YAAI,YAAJ;;EAbW,iCAc0C,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAd1D;;EAcI,QAAA,aAdJ,sBAcR,UAdQ;EAcyB,QAAA,YAdzB,sBAcmB,IAdnB;;EAeX,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,YAAD,CAA/B,EAA+C;EAC7C,UAAA,IAAI,IAAI,YAAR;EACA,UAAA,MAAM,IAAI,IAAV;EACA,UAAA,UAAU,GAAG,aAAb;;EAH6C,mCAIQ,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAJxB;;EAI9B,UAAA,aAJ8B,sBAI1C,UAJ0C;EAIT,UAAA,YAJS,sBAIf,IAJe;EAK9C,SApBU;;;EAuBX,YAAM,OAAO,GAAG,QAAQ,CAAC,OAAzB;EACA,YAAM,UAAU,GAAGA,cAAY,CAAC,IAAD,CAA/B;EACA,QAAA,aAAa,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,UAAhC,EAA4C,OAA5C,CAA/B;EACA,YAAM,SAAS,GAAG,QAAQ,CAAC,SAA3B;EACA,YAAM,YAAY,GAAGA,cAAY,CAAC,IAAD,CAAjC;EACA,QAAA,YAAY,CAAC,WAAb,GAA2B,OAA3B;EACA,YAAI,WAAW,GAAG,iBAAiB,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,EAAsC,YAAtC,EAAoD,SAApD,CAAnC;EACA,YAAI,aAAa,GAAG,OAAO,CAAC,WAAD,EAAc,MAAd,CAA3B;;EACA,eAAO,OAAO,CAAC,MAAD,CAAP,IAAmB,OAAO,CAAC,aAAD,CAAjC,EAAkD;EAChD,UAAA,MAAM,IAAI,aAAV;EACA,UAAA,KAAK,IAAI,IAAT;EACA,UAAA,UAAU,GAAG,aAAb;;EACA,cAAM,WAAU,GAAGA,cAAY,CAAC,IAAD,CAA/B;;EACA,UAAA,aAAa,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,WAAhC,EAA4C,OAA5C,CAA/B;;EACA,cAAM,aAAY,GAAGA,cAAY,CAAC,IAAD,CAAjC;;EACA,UAAA,aAAY,CAAC,WAAb,GAA2B,OAA3B;EACA,UAAA,WAAW,GAAG,iBAAiB,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,EAAsC,aAAtC,EAAoD,SAApD,CAA/B;EACA,UAAA,aAAa,GAAG,OAAO,CAAC,WAAD,EAAc,MAAd,CAAvB;EACD;;EACD;EACD;;EACD,SAAK,OAAL;EAAc;EACZ,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,mDAAf,CAAN,CADH;;EAGZ,YAAI,cAAJ,EAAmB,cAAnB;;EAHY,kCAIyC,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAJzD;;EAIG,QAAA,cAJH,uBAIT,UAJS;EAIwB,QAAA,cAJxB,uBAIkB,IAJlB;;EAKZ,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,cAAD,CAA/B,EAA+C;EAC7C,UAAA,IAAI,IAAI,cAAR;EACA,UAAA,MAAM,IAAI,IAAV;EACA,UAAA,UAAU,GAAG,cAAb;;EAH6C,oCAIQ,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAJxB;;EAI9B,UAAA,cAJ8B,uBAI1C,UAJ0C;EAIT,UAAA,cAJS,uBAIf,IAJe;EAK9C;;EACD;EACD;;EACD,SAAK,MAAL;EAAa;EACX,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN,CADJ;;EAGX,YAAI,eAAJ,EAAmB,WAAnB;;EAHW,kCAIyC,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAJzD;;EAII,QAAA,eAJJ,uBAIR,UAJQ;EAIyB,QAAA,WAJzB,uBAImB,IAJnB;;EAKX,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,WAAD,CAA/B,EAA8C;EAC5C,UAAA,IAAI,IAAI,WAAR;EACA,UAAA,KAAK,IAAI,IAAT;EACA,UAAA,UAAU,GAAG,eAAb;;EAH4C,oCAIQ,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAJxB;;EAI7B,UAAA,eAJ6B,uBAIzC,UAJyC;EAIR,UAAA,WAJQ,uBAId,IAJc;EAK7C;;EACD;EACD;EAtEH;;EA4EA,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ;EAAxB,GAAP;EACD;EAEK,SAAU,oBAAV,CACJ,UADI,EAEJ,CAFI,EAGJ,GAHI,EAIJ,CAJI,EAKJ,CALI,EAMJ,CANI,EAOJ,GAPI,EAQJ,CARI,EASJ,EATI,EAUJ,EAVI,EAWJ,EAXI,EAWM;EAEV,MAAI,uBAAuB,CAAC,UAAD,CAA3B,EAAyC;EACvC,QAAM,OAAO,GAAG,OAAO,CAAC,UAAD,EAAa,OAAb,CAAvB;EACA,QAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,SAAb,CAAxB;EACA,QAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB;EACA,QAAM,YAAY,GAAG,uBAAuB,CAAC,QAAD,EAAW,OAAX,CAA5C;EACA,QAAM,KAAK,GAAG,gBAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,CAA9B,EAAiC,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,GAA/C,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,EAA3D,EAA+D,EAA/D,CAA9B;EACA,QAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,QAAM,YAAY,GAAG,IAAI,eAAJ,CAAoB,KAApB,CAArB;EACA,QAAM,WAAW,GAAG,uBAAuB,CAAC,QAAD,EAAW,YAAX,CAA3C;EACA,WAAO,WAAW,GAAG,YAArB;EACD;;EACD,SAAO,CAAP;EACD;EAEK,SAAU,6BAAV,CAAwC,QAAxC,EAAmE;EACvE,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,SAAO,IAAI,gBAAJ,CACL,CAAC,OAAO,CAAC,QAAD,EAAW,KAAX,CADH,EAEL,CAAC,OAAO,CAAC,QAAD,EAAW,MAAX,CAFH,EAGL,CAAC,OAAO,CAAC,QAAD,EAAW,KAAX,CAHH,EAIL,CAAC,OAAO,CAAC,QAAD,EAAW,IAAX,CAJH,EAKL,CAAC,OAAO,CAAC,QAAD,EAAW,KAAX,CALH,EAML,CAAC,OAAO,CAAC,QAAD,EAAW,OAAX,CANH,EAOL,CAAC,OAAO,CAAC,QAAD,EAAW,OAAX,CAPH,EAQL,CAAC,OAAO,CAAC,QAAD,EAAW,YAAX,CARH,EASL,CAAC,OAAO,CAAC,QAAD,EAAW,YAAX,CATH,EAUL,CAAC,OAAO,CAAC,QAAD,EAAW,WAAX,CAVH,CAAP;EAYD;EAEK,SAAU,gBAAV,CAA2B,KAA3B,EAA0C,GAA1C,EAAuD,GAAvD,EAAkE;EACtE,SAAO,OAAO,CAAC,GAAD,EAAM,OAAO,CAAC,GAAD,EAAM,KAAN,CAAb,CAAd;EACD;;EACD,SAAS,gBAAT,CAA0B,IAA1B,EAAwC,UAAxC,EAA4D,QAA5D,EAA6E;EAC3E,MAAM,KAAK,GAAG,gBAAgB,CAAC,UAAD,EAAa,CAAb,EAAgB,EAAhB,CAA9B;EACA,MAAM,GAAG,GAAG,gBAAgB,CAAC,QAAD,EAAW,CAAX,EAAc,cAAc,CAAC,IAAD,EAAO,KAAP,CAA5B,CAA5B;EACA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH;EAAf,GAAP;EACD;;EAED,SAAS,aAAT,CACE,SADF,EAEE,WAFF,EAGE,WAHF,EAIE,gBAJF,EAKE,gBALF,EAME,eANF,EAMyB;EAEvB,MAAM,IAAI,GAAG,gBAAgB,CAAC,SAAD,EAAY,CAAZ,EAAe,EAAf,CAA7B;EACA,MAAM,MAAM,GAAG,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,EAAjB,CAA/B;EACA,MAAM,MAAM,GAAG,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,EAAjB,CAA/B;EACA,MAAM,WAAW,GAAG,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,GAAtB,CAApC;EACA,MAAM,WAAW,GAAG,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,GAAtB,CAApC;EACA,MAAM,UAAU,GAAG,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,GAArB,CAAnC;EACA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,MAAM,EAAN,MAAR;EAAgB,IAAA,MAAM,EAAN,MAAhB;EAAwB,IAAA,WAAW,EAAX,WAAxB;EAAqC,IAAA,WAAW,EAAX,WAArC;EAAkD,IAAA,UAAU,EAAV;EAAlD,GAAP;EACD;;EAEK,SAAU,aAAV,CAAwB,KAAxB,EAAuC,GAAvC,EAAoD,GAApD,EAA+D;EACnE,MAAI,KAAK,GAAG,GAAR,IAAe,KAAK,GAAG,GAA3B,EAAgC,MAAM,IAAI,UAAJ,+BAAsC,GAAtC,iBAAgD,KAAhD,iBAA4D,GAA5D,EAAN;EACjC;;EAED,SAAS,aAAT,CAAuB,IAAvB,EAAqC,KAArC,EAAoD,GAApD,EAA+D;EAC7D,EAAA,aAAa,CAAC,KAAD,EAAQ,CAAR,EAAW,EAAX,CAAb;EACA,EAAA,aAAa,CAAC,GAAD,EAAM,CAAN,EAAS,cAAc,CAAC,IAAD,EAAO,KAAP,CAAvB,CAAb;EACD;;EAED,SAAS,eAAT,CAAyB,IAAzB,EAAuC,KAAvC,EAAsD,GAAtD,EAAiE;EAC/D;EACA,EAAA,mBAAmB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,CAAnB;EACD;;EAEK,SAAU,UAAV,CACJ,IADI,EAEJ,MAFI,EAGJ,MAHI,EAIJ,WAJI,EAKJ,WALI,EAMJ,UANI,EAMc;EAElB,EAAA,aAAa,CAAC,IAAD,EAAO,CAAP,EAAU,EAAV,CAAb;EACA,EAAA,aAAa,CAAC,MAAD,EAAS,CAAT,EAAY,EAAZ,CAAb;EACA,EAAA,aAAa,CAAC,MAAD,EAAS,CAAT,EAAY,EAAZ,CAAb;EACA,EAAA,aAAa,CAAC,WAAD,EAAc,CAAd,EAAiB,GAAjB,CAAb;EACA,EAAA,aAAa,CAAC,WAAD,EAAc,CAAd,EAAiB,GAAjB,CAAb;EACA,EAAA,aAAa,CAAC,UAAD,EAAa,CAAb,EAAgB,GAAhB,CAAb;EACD;;EAED,SAAS,cAAT,CACE,IADF,EAEE,KAFF,EAGE,GAHF,EAIE,IAJF,EAKE,MALF,EAME,MANF,EAOE,WAPF,EAQE,WARF,EASE,UATF,EASoB;EAElB,EAAA,aAAa,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAAb;EACA,EAAA,UAAU,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,UAAjD,CAAV;EACD;;EAED,SAAS,mBAAT,CACE,IADF,EAEE,KAFF,EAGE,GAHF,EAIE,IAJF,EAKE,MALF,EAME,MANF,EAOE,WAPF,EAQE,WARF,EASE,UATF,EASoB;EAElB,EAAA,aAAa,CAAC,IAAD,EAAO,QAAP,EAAiB,QAAjB,CAAb,CAFkB;;EAIlB,MACG,IAAI,KAAK,QAAT,IACC,QACE,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAG,GAAG,CAApB,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,UAAU,GAAG,CAApF,CAFxB,IAGC,IAAI,KAAK,QAAT,IACC,QACE,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAG,GAAG,CAApB,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,UAAU,GAAG,CAApF,CAN1B,EAOE;EACA,UAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACD;EACF;;EAEK,SAAU,wBAAV,CAAmC,gBAAnC,EAAsE;EAC1E,MAAI,gBAAgB,CAAC,MAAjB,CAAwB,MAAxB,KAAmC,gBAAgB,CAAC,OAAjB,CAAyB,MAAzB,CAAvC,EAAyE;EACvE,UAAM,IAAI,UAAJ,CAAe,oCAAf,CAAN;EACD;EACF;;EAED,SAAS,oBAAT,CAA8B,IAA9B,EAA4C,KAA5C,EAAyD;EACvD,EAAA,aAAa,CAAC,IAAD,EAAO,QAAP,EAAiB,QAAjB,CAAb;;EACA,MAAI,IAAI,KAAK,QAAb,EAAuB;EACrB,IAAA,aAAa,CAAC,KAAD,EAAQ,CAAR,EAAW,EAAX,CAAb;EACD,GAFD,MAEO,IAAI,IAAI,KAAK,QAAb,EAAuB;EAC5B,IAAA,aAAa,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAb;EACD;EACF;;EAED,SAAS,cAAT,CACE,CADF,EAEE,GAFF,EAGE,CAHF,EAIE,CAJF,EAKE,CALF,EAME,GANF,EAOE,CAPF,EAQE,EARF,EASE,EATF,EAUE,EAVF,EAUY;EAEV,MAAM,IAAI,GAAG,YAAY,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,GAAlB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAzB;;EACA,4BAAmB,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,GAAlB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAnB,6BAA0D;EAArD,QAAM,IAAI,aAAV;EACH,QAAI,CAAC,cAAc,CAAC,IAAD,CAAnB,EAA2B,MAAM,IAAI,UAAJ,CAAe,gDAAf,CAAN;EAC3B,QAAM,QAAQ,GAAG,QAAQ,CAAC,IAAD,CAAzB;EACA,QAAI,QAAQ,KAAK,CAAb,IAAkB,QAAQ,KAAK,IAAnC,EAAyC,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EAC1C;EACF;;EAEK,SAAU,iBAAV,CACJ,EADI,EAEJ,EAFI,EAGJ,EAHI,EAIJ,EAJI,EAKJ,EALI,EAMJ,EANI,EAOJ,WAPI,EAOgB;EAEpB,UAAQ,WAAR;EACE,SAAK,MAAL;EACA,SAAK,OAAL;EAAc;EACZ,YAAM,IAAI,GAAG,CAAC,cAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAA5B;EACA,YAAI,IAAI,KAAK,CAAb,EAAgB,OAAO;EAAE,UAAA,KAAK,EAAE,CAAT;EAAY,UAAA,MAAM,EAAE,CAApB;EAAuB,UAAA,KAAK,EAAE,CAA9B;EAAiC,UAAA,IAAI,EAAE;EAAvC,SAAP;EAEhB,YAAM,KAAK,GAAG;EAAE,UAAA,IAAI,EAAE,EAAR;EAAY,UAAA,KAAK,EAAE,EAAnB;EAAuB,UAAA,GAAG,EAAE;EAA5B,SAAd;EACA,YAAM,GAAG,GAAG;EAAE,UAAA,IAAI,EAAE,EAAR;EAAY,UAAA,KAAK,EAAE,EAAnB;EAAuB,UAAA,GAAG,EAAE;EAA5B,SAAZ;EAEA,YAAI,KAAK,GAAG,GAAG,CAAC,IAAJ,GAAW,KAAK,CAAC,IAA7B;EACA,YAAI,GAAG,GAAG,UAAU,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,KAAb,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,WAA7B,CAApB;EACA,YAAI,OAAO,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,IAAL,EAAW,GAAG,CAAC,KAAf,EAAsB,GAAG,CAAC,GAA1B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,CAA7B;;EACA,YAAI,OAAO,KAAK,CAAhB,EAAmB;EACjB,iBAAO,WAAW,KAAK,MAAhB,GACH;EAAE,YAAA,KAAK,EAAL,KAAF;EAAS,YAAA,MAAM,EAAE,CAAjB;EAAoB,YAAA,KAAK,EAAE,CAA3B;EAA8B,YAAA,IAAI,EAAE;EAApC,WADG,GAEH;EAAE,YAAA,KAAK,EAAE,CAAT;EAAY,YAAA,MAAM,EAAE,KAAK,GAAG,EAA5B;EAAgC,YAAA,KAAK,EAAE,CAAvC;EAA0C,YAAA,IAAI,EAAE;EAAhD,WAFJ;EAGD;;EACD,YAAI,MAAM,GAAG,GAAG,CAAC,KAAJ,GAAY,KAAK,CAAC,KAA/B;;EACA,YAAI,OAAO,KAAK,IAAhB,EAAsB;EACpB,UAAA,KAAK,IAAI,IAAT;EACA,UAAA,MAAM,IAAI,IAAI,GAAG,EAAjB;EACD;;EACD,QAAA,GAAG,GAAG,UAAU,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,KAAb,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,WAAlC,CAAhB;EACA,QAAA,OAAO,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,IAAL,EAAW,GAAG,CAAC,KAAf,EAAsB,GAAG,CAAC,GAA1B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,CAAzB;;EACA,YAAI,OAAO,KAAK,CAAhB,EAAmB;EACjB,iBAAO,WAAW,KAAK,MAAhB,GACH;EAAE,YAAA,KAAK,EAAL,KAAF;EAAS,YAAA,MAAM,EAAN,MAAT;EAAiB,YAAA,KAAK,EAAE,CAAxB;EAA2B,YAAA,IAAI,EAAE;EAAjC,WADG,GAEH;EAAE,YAAA,KAAK,EAAE,CAAT;EAAY,YAAA,MAAM,EAAE,MAAM,GAAG,KAAK,GAAG,EAArC;EAAyC,YAAA,KAAK,EAAE,CAAhD;EAAmD,YAAA,IAAI,EAAE;EAAzD,WAFJ;EAGD;;EACD,YAAI,OAAO,KAAK,IAAhB,EAAsB;EACpB;EACA;EACA,UAAA,MAAM,IAAI,IAAV;;EACA,cAAI,MAAM,KAAK,CAAC,IAAhB,EAAsB;EACpB,YAAA,KAAK,IAAI,IAAT;EACA,YAAA,MAAM,GAAG,KAAK,IAAd;EACD;;EACD,UAAA,GAAG,GAAG,UAAU,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,KAAb,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,WAAlC,CAAhB;EACA,UAAA,OAAO,GAAG,CAAC,cAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAG,CAAC,IAAjB,EAAuB,GAAG,CAAC,KAA3B,EAAkC,GAAG,CAAC,GAAtC,CAAzB;EACD;;EAED,YAAI,IAAI,GAAG,CAAX,CAvCY;EAyCZ;EACA;EACA;EACA;EACA;;EACA,YAAI,GAAG,CAAC,KAAJ,KAAc,GAAG,CAAC,KAAtB,EAA6B;EAC3B;EACA,UAAA,IAAI,GAAG,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,GAArB;EACD,SAHD,MAGO,IAAI,IAAI,GAAG,CAAX,EAAc;EACnB;EACA;EACA,UAAA,IAAI,GAAG,CAAC,GAAG,CAAC,GAAL,IAAY,cAAc,CAAC,GAAG,CAAC,IAAL,EAAW,GAAG,CAAC,KAAf,CAAd,GAAsC,GAAG,CAAC,GAAtD,CAAP;EACD,SAJM,MAIA;EACL;EACA;EACA,UAAA,IAAI,GAAG,GAAG,CAAC,GAAJ,IAAW,cAAc,CAAC,GAAG,CAAC,IAAL,EAAW,GAAG,CAAC,KAAf,CAAd,GAAsC,GAAG,CAAC,GAArD,CAAP;EACD;;EAED,YAAI,WAAW,KAAK,OAApB,EAA6B;EAC3B,UAAA,MAAM,IAAI,KAAK,GAAG,EAAlB;EACA,UAAA,KAAK,GAAG,CAAR;EACD;;EACD,eAAO;EAAE,UAAA,KAAK,EAAL,KAAF;EAAS,UAAA,MAAM,EAAN,MAAT;EAAiB,UAAA,KAAK,EAAE,CAAxB;EAA2B,UAAA,IAAI,EAAJ;EAA3B,SAAP;EACD;;EACD,SAAK,MAAL;EACA,SAAK,KAAL;EAAY;EACV,YAAI,MAAJ,EAAY,OAAZ,EAAqB,KAArB;;EACA,YAAI,cAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAd,GAAyC,CAA7C,EAAgD;EAC9C,UAAA,OAAO,GAAG;EAAE,YAAA,IAAI,EAAE,EAAR;EAAY,YAAA,KAAK,EAAE,EAAnB;EAAuB,YAAA,GAAG,EAAE;EAA5B,WAAV;EACA,UAAA,MAAM,GAAG;EAAE,YAAA,IAAI,EAAE,EAAR;EAAY,YAAA,KAAK,EAAE,EAAnB;EAAuB,YAAA,GAAG,EAAE;EAA5B,WAAT;EACA,UAAA,KAAI,GAAG,CAAP;EACD,SAJD,MAIO;EACL,UAAA,OAAO,GAAG;EAAE,YAAA,IAAI,EAAE,EAAR;EAAY,YAAA,KAAK,EAAE,EAAnB;EAAuB,YAAA,GAAG,EAAE;EAA5B,WAAV;EACA,UAAA,MAAM,GAAG;EAAE,YAAA,IAAI,EAAE,EAAR;EAAY,YAAA,KAAK,EAAE,EAAnB;EAAuB,YAAA,GAAG,EAAE;EAA5B,WAAT;EACA,UAAA,KAAI,GAAG,CAAC,CAAR;EACD;;EACD,YAAI,MAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,MAAM,CAAC,KAArB,EAA4B,MAAM,CAAC,GAAnC,CAAT,GAAmD,SAAS,CAAC,OAAO,CAAC,IAAT,EAAe,OAAO,CAAC,KAAvB,EAA8B,OAAO,CAAC,GAAtC,CAAvE;;EACA,aAAK,IAAI,IAAI,GAAG,OAAO,CAAC,IAAxB,EAA8B,IAAI,GAAG,MAAM,CAAC,IAA5C,EAAkD,EAAE,IAApD,EAA0D;EACxD,UAAA,MAAI,IAAI,QAAQ,CAAC,IAAD,CAAR,GAAiB,GAAjB,GAAuB,GAA/B;EACD;;EACD,YAAI,KAAK,GAAG,CAAZ;;EACA,YAAI,WAAW,KAAK,MAApB,EAA4B;EAC1B,UAAA,KAAK,GAAG,SAAS,CAAC,MAAI,GAAG,CAAR,CAAjB;EACA,UAAA,MAAI,IAAI,CAAR;EACD;;EACD,QAAA,KAAK,IAAI,KAAT;EACA,QAAA,MAAI,IAAI,KAAR;EACA,eAAO;EAAE,UAAA,KAAK,EAAE,CAAT;EAAY,UAAA,MAAM,EAAE,CAApB;EAAuB,UAAA,KAAK,EAAL,KAAvB;EAA8B,UAAA,IAAI,EAAJ;EAA9B,SAAP;EACD;;EACD;EACE,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;EA7FJ;EA+FD;EAEK,SAAU,cAAV,CACJ,EADI,EAEJ,IAFI,EAGJ,EAHI,EAIJ,GAJI,EAKJ,GALI,EAMJ,GANI,EAOJ,EAPI,EAQJ,IARI,EASJ,EATI,EAUJ,GAVI,EAWJ,GAXI,EAYJ,GAZI,EAYO;EAEX,MAAI,KAAK,GAAG,EAAE,GAAG,EAAjB;EACA,MAAI,OAAO,GAAG,IAAI,GAAG,IAArB;EACA,MAAI,OAAO,GAAG,EAAE,GAAG,EAAnB;EACA,MAAI,YAAY,GAAG,GAAG,GAAG,GAAzB;EACA,MAAI,YAAY,GAAG,GAAG,GAAG,GAAzB;EACA,MAAI,WAAW,GAAG,GAAG,GAAG,GAAxB;EAEA,MAAM,IAAI,GAAG,YAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,KAAb,EAAoB,OAApB,EAA6B,OAA7B,EAAsC,YAAtC,EAAoD,YAApD,EAAkE,WAAlE,CAAzB;EACA,EAAA,KAAK,IAAI,IAAT;EACA,EAAA,OAAO,IAAI,IAAX;EACA,EAAA,OAAO,IAAI,IAAX;EACA,EAAA,YAAY,IAAI,IAAhB;EACA,EAAA,YAAY,IAAI,IAAhB;EACA,EAAA,WAAW,IAAI,IAAf;EAEA,MAAI,SAAS,GAAG,CAAhB;;EAjBW,sBA0BP,WAAW,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,EAA0B,YAA1B,EAAwC,YAAxC,EAAsD,WAAtD,CA1BJ;;EAmBT,EAAA,SAnBS,iBAmBT,SAnBS;EAoBH,EAAA,KApBG,iBAoBT,IApBS;EAqBD,EAAA,OArBC,iBAqBT,MArBS;EAsBD,EAAA,OAtBC,iBAsBT,MAtBS;EAuBI,EAAA,YAvBJ,iBAuBT,WAvBS;EAwBI,EAAA,YAxBJ,iBAwBT,WAxBS;EAyBG,EAAA,WAzBH,iBAyBT,UAzBS;EA4BX,EAAA,SAAS,IAAI,IAAb;EACA,EAAA,KAAK,IAAI,IAAT;EACA,EAAA,OAAO,IAAI,IAAX;EACA,EAAA,OAAO,IAAI,IAAX;EACA,EAAA,YAAY,IAAI,IAAhB;EACA,EAAA,YAAY,IAAI,IAAhB;EACA,EAAA,WAAW,IAAI,IAAf;EAEA,SAAO;EAAE,IAAA,SAAS,EAAT,SAAF;EAAa,IAAA,KAAK,EAAL,KAAb;EAAoB,IAAA,OAAO,EAAP,OAApB;EAA6B,IAAA,OAAO,EAAP,OAA7B;EAAsC,IAAA,YAAY,EAAZ,YAAtC;EAAoD,IAAA,YAAY,EAAZ,YAApD;EAAkE,IAAA,WAAW,EAAX;EAAlE,GAAP;EACD;EAEK,SAAU,iBAAV,CACJ,GADI,EAEJ,GAFI,EAGJ,SAHI,EAIJ,IAJI,EAKJ,YALI,EAK+B;EAEnC,MAAM,IAAI,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAb;EAEA,MAAM,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,OAAT,CAAlB;EACA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAlB;EACA,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAD,EAAY,aAAa,CAAC,IAAD,CAAb,GAAsB,SAAlC,EAA6C,YAA7C,CAA/C;EACA,MAAM,WAAW,GAAG,SAAS,CAAC,IAAV,CAAe,gBAAf,CAApB;EAEA,MAAM,WAAW,GAAG,CAAC,WAAW,CAAC,GAAZ,CAAgB,GAAhB,CAArB;EACA,MAAM,YAAY,GAAG,CAAC,WAAW,CAAC,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,CAA4B,GAA5B,CAAtB;EACA,MAAM,YAAY,GAAG,CAAC,WAAW,CAAC,MAAZ,CAAmB,GAAnB,EAAwB,GAAxB,CAA4B,GAA5B,CAAtB;EACA,MAAM,OAAO,GAAG,CAAC,WAAW,CAAC,MAAZ,CAAmB,GAAnB,CAAjB;EACA,SAAO;EAAE,IAAA,OAAO,EAAP,OAAF;EAAW,IAAA,YAAY,EAAZ,YAAX;EAAyB,IAAA,YAAY,EAAZ,YAAzB;EAAuC,IAAA,WAAW,EAAX;EAAvC,GAAP;EACD;EAEK,SAAU,qBAAV,CACJ,OADI,EAEJ,SAFI,EAGJ,OAHI,EAIJ,EAJI,EAKJ,IALI,EAMJ,EANI,EAOJ,GAPI,EAQJ,GARI,EASJ,GATI,EAUJ,EAVI,EAWJ,IAXI,EAYJ,EAZI,EAaJ,EAbI,EAcJ,IAdI,EAeJ,EAfI,EAgBJ,GAhBI,EAiBJ,GAjBI,EAkBJ,GAlBI,EAmBJ,QAnBI,EAoBJ,WApBI,EAqBwB;EAAA,MAA5B,OAA4B,0EAAlBA,cAAY,CAAC,IAAD,CAAM;EAE5B,MAAI,EAAE,GAAG,OAAT;EACA,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,EAAE,GAAG,OAAT;;EAEA,wBAAsF,cAAc,CAClG,EADkG,EAElG,IAFkG,EAGlG,EAHkG,EAIlG,GAJkG,EAKlG,GALkG,EAMlG,GANkG,EAOlG,EAPkG,EAQlG,IARkG,EASlG,EATkG,EAUlG,GAVkG,EAWlG,GAXkG,EAYlG,GAZkG,CAApG;EAAA,MAAM,SAAN,mBAAM,SAAN;EAAA,MAAiB,KAAjB,mBAAiB,KAAjB;EAAA,MAAwB,OAAxB,mBAAwB,OAAxB;EAAA,MAAiC,OAAjC,mBAAiC,OAAjC;EAAA,MAA0C,YAA1C,mBAA0C,YAA1C;EAAA,MAAwD,YAAxD,mBAAwD,YAAxD;EAAA,MAAsE,WAAtE,mBAAsE,WAAtE;;EAeA,MAAM,QAAQ,GAAG,YAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,SAAV,EAAqB,KAArB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,YAA9C,EAA4D,YAA5D,EAA0E,WAA1E,CAA7B;;EArB4B,yBAsBU,cAAc,CAAC,EAAD,EAAK,IAAL,EAAW,EAAE,GAAG,SAAhB,CAtBxB;;EAsBnB,EAAA,EAtBmB,oBAsBzB,IAtByB;EAsBR,EAAA,IAtBQ,oBAsBf,KAtBe;EAsBG,EAAA,EAtBH,oBAsBF,GAtBE;EAuB5B,MAAM,QAAQ,GAAG,cAAc,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,EAAmB,IAAnB,EAAyB,EAAzB,CAA/B;;EACA,MAAI,QAAQ,KAAK,CAAC,QAAlB,EAA4B;EAAA,2BACY,cAAc,CAAC,EAAD,EAAK,IAAL,EAAW,EAAE,GAAG,QAAhB,CAD1B;;EACjB,IAAA,EADiB,oBACvB,IADuB;EACN,IAAA,IADM,oBACb,KADa;EACK,IAAA,EADL,oBACA,GADA;;EAAA,2BAE8C,eAAe,CACrF,CAAC,QADoF,EAErF,KAFqF,EAGrF,OAHqF,EAIrF,OAJqF,EAKrF,YALqF,EAMrF,YANqF,EAOrF,WAPqF,EAQrF,WARqF,CAF7D;;EAEvB,IAAA,KAFuB,oBAEvB,KAFuB;EAEhB,IAAA,OAFgB,oBAEhB,OAFgB;EAEP,IAAA,OAFO,oBAEP,OAFO;EAEE,IAAA,YAFF,oBAEE,YAFF;EAEgB,IAAA,YAFhB,oBAEgB,YAFhB;EAE8B,IAAA,WAF9B,oBAE8B,WAF9B;EAY3B;;EAED,MAAM,KAAK,GAAG,kBAAkB,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,QAAf,CAAhC;EACA,MAAM,KAAK,GAAG,kBAAkB,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,QAAf,CAAhC;EACA,MAAM,eAAe,GAAG,wBAAwB,CAAC,KAAD,EAAQ,WAAR,CAAhD;;EACA,MAAM,YAAY,qCAAQ,OAAR;EAAiB,IAAA,WAAW,EAAE;EAA9B,IAAlB;;EACA,2BAAqC,iBAAiB,CAAC,QAAD,EAAW,KAAX,EAAkB,KAAlB,EAAyB,YAAzB,CAAtD;EAAA,MAAM,KAAN,sBAAM,KAAN;EAAA,MAAa,MAAb,sBAAa,MAAb;EAAA,MAAqB,KAArB,sBAAqB,KAArB;EAAA,MAA4B,IAA5B,sBAA4B,IAA5B,CA1C4B;;;EAAA,0BA4CkD,eAAe,CAC3F,IAD2F,EAE3F,KAF2F,EAG3F,OAH2F,EAI3F,OAJ2F,EAK3F,YAL2F,EAM3F,YAN2F,EAO3F,WAP2F,EAQ3F,WAR2F,CA5CjE;;EA4CzB,EAAA,IA5CyB,qBA4CzB,IA5CyB;EA4CnB,EAAA,KA5CmB,qBA4CnB,KA5CmB;EA4CZ,EAAA,OA5CY,qBA4CZ,OA5CY;EA4CH,EAAA,OA5CG,qBA4CH,OA5CG;EA4CM,EAAA,YA5CN,qBA4CM,YA5CN;EA4CoB,EAAA,YA5CpB,qBA4CoB,YA5CpB;EA4CkC,EAAA,WA5ClC,qBA4CkC,WA5ClC;EAsD5B,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;EAEK,SAAU,uBAAV,CACJ,GADI,EAEJ,GAFI,EAGJ,QAHI,EAIJ,QAJI,EAKJ,WALI,EAMJ,OANI,EAMuD;EAE3D,MAAM,MAAM,GAAG,GAAG,CAAC,QAAJ,CAAa,GAAb,CAAf;;EACA,MAAI,MAAM,CAAC,MAAP,EAAJ,EAAqB;EACnB,WAAO;EACL,MAAA,KAAK,EAAE,CADF;EAEL,MAAA,MAAM,EAAE,CAFH;EAGL,MAAA,KAAK,EAAE,CAHF;EAIL,MAAA,IAAI,EAAE,CAJD;EAKL,MAAA,KAAK,EAAE,CALF;EAML,MAAA,OAAO,EAAE,CANJ;EAOL,MAAA,OAAO,EAAE,CAPJ;EAQL,MAAA,YAAY,EAAE,CART;EASL,MAAA,YAAY,EAAE,CATT;EAUL,MAAA,WAAW,EAAE;EAVR,KAAP;EAYD,GAhB0D;;;EAmB3D,MAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,MAAM,KAAK,GAAG,IAAI,eAAJ,CAAoB,GAApB,CAAd;EACA,MAAM,GAAG,GAAG,IAAI,eAAJ,CAAoB,GAApB,CAAZ;EACA,MAAM,OAAO,GAAG,kCAAkC,CAAC,QAAD,EAAW,KAAX,EAAkB,QAAlB,CAAlD;EACA,MAAM,KAAK,GAAG,kCAAkC,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CAAhD;;EACA,+BAAqC,qBAAqB,CACxD,OAAO,CAAC,OAAD,EAAU,QAAV,CADiD,EAExD,OAAO,CAAC,OAAD,EAAU,SAAV,CAFiD,EAGxD,OAAO,CAAC,OAAD,EAAU,OAAV,CAHiD,EAIxD,OAAO,CAAC,OAAD,EAAU,QAAV,CAJiD,EAKxD,OAAO,CAAC,OAAD,EAAU,UAAV,CALiD,EAMxD,OAAO,CAAC,OAAD,EAAU,UAAV,CANiD,EAOxD,OAAO,CAAC,OAAD,EAAU,eAAV,CAPiD,EAQxD,OAAO,CAAC,OAAD,EAAU,eAAV,CARiD,EASxD,OAAO,CAAC,OAAD,EAAU,cAAV,CATiD,EAUxD,OAAO,CAAC,KAAD,EAAQ,QAAR,CAViD,EAWxD,OAAO,CAAC,KAAD,EAAQ,SAAR,CAXiD,EAYxD,OAAO,CAAC,KAAD,EAAQ,OAAR,CAZiD,EAaxD,OAAO,CAAC,KAAD,EAAQ,QAAR,CAbiD,EAcxD,OAAO,CAAC,KAAD,EAAQ,UAAR,CAdiD,EAexD,OAAO,CAAC,KAAD,EAAQ,UAAR,CAfiD,EAgBxD,OAAO,CAAC,KAAD,EAAQ,eAAR,CAhBiD,EAiBxD,OAAO,CAAC,KAAD,EAAQ,eAAR,CAjBiD,EAkBxD,OAAO,CAAC,KAAD,EAAQ,cAAR,CAlBiD,EAmBxD,QAnBwD,EAoBxD,WApBwD,EAqBxD,OArBwD,CAA1D;EAAA,MAAM,KAAN,0BAAM,KAAN;EAAA,MAAa,MAAb,0BAAa,MAAb;EAAA,MAAqB,KAArB,0BAAqB,KAArB;EAAA,MAA4B,IAA5B,0BAA4B,IAA5B;;EAuBA,MAAM,cAAc,GAAG,gBAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,KAA5B,EAAmC,MAAnC,EAA2C,KAA3C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,CAAvC,CA/C2D;;EAiD3D,MAAI,eAAe,GAAG,GAAG,CAAC,QAAJ,CAAa,cAAb,CAAtB;EACA,MAAM,YAAY,GAAG,2BAA2B,CAAC,cAAD,EAAiB,QAAjB,EAA2B,QAA3B,CAAhD;;EAlD2D,4BAmDjB,iBAAiB,CAAC,eAAD,EAAkB,YAAlB,CAnDA;;EAmD3C,EAAA,eAnD2C,uBAmDxD,WAnDwD;EAmD1B,EAAA,IAnD0B,uBAmD1B,IAnD0B;;EAqD3D;EACA,0BAA6E,eAAe,CAC1F,CAD0F,EAE1F,CAF0F,EAG1F,CAH0F,EAI1F,CAJ0F,EAK1F,CAL0F,EAM1F,CAN0F,EAO1F,eAAe,CAAC,UAAhB,EAP0F,EAQ1F,MAR0F,CAA5F;EAAA,MAAQ,KAAR,qBAAQ,KAAR;EAAA,MAAe,OAAf,qBAAe,OAAf;EAAA,MAAwB,OAAxB,qBAAwB,OAAxB;EAAA,MAAiC,YAAjC,qBAAiC,YAAjC;EAAA,MAA+C,YAA/C,qBAA+C,YAA/C;EAAA,MAA6D,WAA7D,qBAA6D,WAA7D;;EAUA,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;EAEK,SAAU,UAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,QAHI,EAIJ,UAJI,EAKJ,WALI,EAMJ,UANI,EAOJ,SAPI,EAQJ,QARI,EAQ4C;EAEhD,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,GAAG,GAAG,QAAV;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,IAAI,GAAG,SAAX;EAEA,EAAA,IAAI,IAAI,KAAR;EACA,EAAA,KAAK,IAAI,MAAT;;EAXgD,8BAY7B,mBAAmB,CAAC,IAAD,EAAO,KAAP,CAZU;;EAY7C,EAAA,IAZ6C,yBAY7C,IAZ6C;EAYvC,EAAA,KAZuC,yBAYvC,KAZuC;;EAAA,yBAaxB,eAAe,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAbS;;EAa7C,EAAA,IAb6C,oBAa7C,IAb6C;EAavC,EAAA,KAbuC,oBAavC,KAbuC;EAahC,EAAA,GAbgC,oBAahC,GAbgC;EAchD,EAAA,IAAI,IAAI,IAAI,KAAZ;EACA,EAAA,GAAG,IAAI,IAAP;;EAfgD,yBAgBxB,cAAc,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAhBU;;EAgB7C,EAAA,IAhB6C,oBAgB7C,IAhB6C;EAgBvC,EAAA,KAhBuC,oBAgBvC,KAhBuC;EAgBhC,EAAA,GAhBgC,oBAgBhC,GAhBgC;EAiBhD,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH;EAAf,GAAP;EACD;EAEK,SAAU,OAAV,CACJ,SADI,EAEJ,WAFI,EAGJ,WAHI,EAIJ,gBAJI,EAKJ,gBALI,EAMJ,eANI,EAOJ,KAPI,EAQJ,OARI,EASJ,OATI,EAUJ,YAVI,EAWJ,YAXI,EAYJ,WAZI,EAYe;EAEnB,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,WAAW,GAAG,gBAAlB;EACA,MAAI,UAAU,GAAG,eAAjB;EAEA,EAAA,IAAI,IAAI,KAAR;EACA,EAAA,MAAM,IAAI,OAAV;EACA,EAAA,MAAM,IAAI,OAAV;EACA,EAAA,WAAW,IAAI,YAAf;EACA,EAAA,WAAW,IAAI,YAAf;EACA,EAAA,UAAU,IAAI,WAAd;EACA,MAAI,SAAS,GAAG,CAAhB;;EAfmB,sBAgB0D,WAAW,CACtF,IADsF,EAEtF,MAFsF,EAGtF,MAHsF,EAItF,WAJsF,EAKtF,WALsF,EAMtF,UANsF,CAhBrE;;EAgBhB,EAAA,SAhBgB,iBAgBhB,SAhBgB;EAgBL,EAAA,IAhBK,iBAgBL,IAhBK;EAgBC,EAAA,MAhBD,iBAgBC,MAhBD;EAgBS,EAAA,MAhBT,iBAgBS,MAhBT;EAgBiB,EAAA,WAhBjB,iBAgBiB,WAhBjB;EAgB8B,EAAA,WAhB9B,iBAgB8B,WAhB9B;EAgB2C,EAAA,UAhB3C,iBAgB2C,UAhB3C;EAwBnB,SAAO;EAAE,IAAA,SAAS,EAAT,SAAF;EAAa,IAAA,IAAI,EAAJ,IAAb;EAAmB,IAAA,MAAM,EAAN,MAAnB;EAA2B,IAAA,MAAM,EAAN,MAA3B;EAAmC,IAAA,WAAW,EAAX,WAAnC;EAAgD,IAAA,WAAW,EAAX,WAAhD;EAA6D,IAAA,UAAU,EAAV;EAA7D,GAAP;EACD;EAEK,SAAU,WAAV,CACJ,EADI,EAEJ,IAFI,EAGJ,EAHI,EAIJ,EAJI,EAKJ,EALI,EAMJ,IANI,EAOJ,EAPI,EAQJ,GARI,EASJ,GATI,EAUJ,GAVI,EAWJ,EAXI,EAYJ,IAZI,EAaJ,EAbI,EAcJ,EAdI,EAeJ,EAfI,EAgBJ,IAhBI,EAiBJ,EAjBI,EAkBJ,GAlBI,EAmBJ,GAnBI,EAoBJ,GApBI,EAqBJ,UArBI,EAqBmD;EAEvD,MAAM,YAAY,GAAG,0BAA0B,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,CAA/C;EACA,MAAM,YAAY,GAAG,0BAA0B,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,CAA/C;EACA,MAAM,WAAW,GAAG,wBAAwB,CAAC,YAAD,EAAe,YAAf,CAA5C;EAEA,MAAI,KAAJ,EAAW,MAAX,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,YAAzD,EAAuE,YAAvE,EAAqF,WAArF;;EACA,MAAI,CAAC,UAAL,EAAiB;EACf,QAAI,WAAW,KAAK,MAAhB,IAA0B,WAAW,KAAK,OAA1C,IAAqD,WAAW,KAAK,MAAzE,EAAiF;EAC/E,YAAM,IAAI,UAAJ,CAAe,+DAAf,CAAN;EACD;;EACD,IAAA,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,CAAzB;;EAJe,4BAK+D,eAAe,CAC3F,EAAE,GAAG,EADsF,EAE3F,EAAE,GAAG,EAFsF,EAG3F,IAAI,GAAG,IAHoF,EAI3F,EAAE,GAAG,EAJsF,EAK3F,GAAG,GAAG,GALqF,EAM3F,GAAG,GAAG,GANqF,EAO3F,GAAG,GAAG,GAPqF,EAQ3F,WAR2F,CAL9E;;EAKZ,IAAA,IALY,qBAKZ,IALY;EAKN,IAAA,KALM,qBAKN,KALM;EAKC,IAAA,OALD,qBAKC,OALD;EAKU,IAAA,OALV,qBAKU,OALV;EAKmB,IAAA,YALnB,qBAKmB,YALnB;EAKiC,IAAA,YALjC,qBAKiC,YALjC;EAK+C,IAAA,WAL/C,qBAK+C,WAL/C;EAehB,GAfD,MAeO,IAAI,cAAc,CAAC,UAAD,CAAlB,EAAgC;EACrC,QAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,QAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB;EAEA,QAAM,aAAa,GAAG,IAAI,gBAAJ,CAAqB,EAArB,EAAyB,IAAzB,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAtB;EACA,QAAM,aAAa,GAAG,IAAI,gBAAJ,CAAqB,EAArB,EAAyB,IAAzB,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAtB;EACA,QAAM,OAAO,GAAG,QAAQ,CAAC,OAAzB;EACA,QAAM,eAAe,GAAGA,cAAY,CAAC,IAAD,CAApC;EACA,QAAM,YAAY,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,EAAsC,eAAtC,EAAuD,OAAvD,CAApC;EACA,QAAM,gBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;EACA,QAAM,GAAG,GAAG,eAAe,CAAC,QAAD,EAAW,YAAX,EAAyB,aAAzB,EAAwC,gBAAxC,EAA0D,OAA1D,CAA3B;EAEA,QAAM,eAAe,GAAG,wBAAwB,CAAC,KAAD,EAAQ,WAAR,CAAhD;EACA,QAAM,iBAAiB,GAAGA,cAAY,CAAC,IAAD,CAAtC;EACA,IAAA,iBAAiB,CAAC,WAAlB,GAAgC,eAAhC;;EAdqC,8BAeH,iBAAiB,CAAC,QAAD,EAAW,UAAX,EAAuB,GAAvB,EAA4B,iBAA5B,CAfd;;EAelC,IAAA,KAfkC,uBAelC,KAfkC;EAe3B,IAAA,MAf2B,uBAe3B,MAf2B;EAenB,IAAA,KAfmB,uBAenB,KAfmB;EAeZ,IAAA,IAfY,uBAeZ,IAfY;;EAAA,4BAiByC,eAAe,CAC3F,IAD2F,EAE3F,EAAE,GAAG,EAFsF,EAG3F,IAAI,GAAG,IAHoF,EAI3F,EAAE,GAAG,EAJsF,EAK3F,GAAG,GAAG,GALqF,EAM3F,GAAG,GAAG,GANqF,EAO3F,GAAG,GAAG,GAPqF,EAQ3F,WAR2F,CAjBxD;;EAiBlC,IAAA,IAjBkC,qBAiBlC,IAjBkC;EAiB5B,IAAA,KAjB4B,qBAiB5B,KAjB4B;EAiBrB,IAAA,OAjBqB,qBAiBrB,OAjBqB;EAiBZ,IAAA,OAjBY,qBAiBZ,OAjBY;EAiBH,IAAA,YAjBG,qBAiBH,YAjBG;EAiBW,IAAA,YAjBX,qBAiBW,YAjBX;EAiByB,IAAA,WAjBzB,qBAiByB,WAjBzB;EA2BtC,GA3BM,MA2BA;EACL;EACA,QAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,QAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,SAAb,CAAxB;;EACA,QAAM,UAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB;;EACA,QAAM,cAAc,GAAG,gBAAgB,CACrC,OAAO,CAAC,UAAD,EAAa,OAAb,CAD8B,EAErC,QAFqC,EAGrC,UAHqC,EAIrC,EAJqC,EAKrC,IALqC,EAMrC,EANqC,EAOrC,EAPqC,EAQrC,EARqC,EASrC,IATqC,EAUrC,EAVqC,EAWrC,GAXqC,EAYrC,GAZqC,EAarC,GAbqC,CAAvC;EAeA,QAAM,KAAK,GAAG,gBAAgB,CAC5B,IAAI,eAAJ,CAAoB,cAApB,CAD4B,EAE5B,QAF4B,EAG5B,UAH4B,EAI5B,EAJ4B,EAK5B,IAL4B,EAM5B,EAN4B,EAO5B,EAP4B,EAQ5B,EAR4B,EAS5B,IAT4B,EAU5B,EAV4B,EAW5B,GAX4B,EAY5B,GAZ4B,EAa5B,GAb4B,CAA9B;;EAeA,QAAI,WAAW,KAAK,MAAhB,IAA0B,WAAW,KAAK,OAA1C,IAAqD,WAAW,KAAK,MAArE,IAA+E,WAAW,KAAK,KAAnG,EAA0G;EACxG;EACA,MAAA,KAAK,GAAG,CAAR;EACA,MAAA,MAAM,GAAG,CAAT;EACA,MAAA,KAAK,GAAG,CAAR;EACA,MAAA,IAAI,GAAG,CAAP;;EALwG,+BAMhD,iBAAiB,CACvE,OAAO,CAAC,UAAD,EAAa,gBAAb,CADgE,EAEvE,KAFuE,EAGvE,CAHuE,EAIvE,YAJuE,EAKvE,YALuE,CAN+B;;EAMrG,MAAA,OANqG,sBAMrG,OANqG;EAM5F,MAAA,YAN4F,sBAM5F,YAN4F;EAM9E,MAAA,YAN8E,sBAM9E,YAN8E;EAMhE,MAAA,WANgE,sBAMhE,WANgE;;EAAA,8BAahC,eAAe,CACrF,CADqF,EAErF,CAFqF,EAGrF,CAHqF,EAIrF,OAJqF,EAKrF,YALqF,EAMrF,YANqF,EAOrF,WAPqF,EAQrF,WARqF,CAbiB;;EAarG,MAAA,KAbqG,qBAarG,KAbqG;EAa9F,MAAA,OAb8F,qBAa9F,OAb8F;EAarF,MAAA,OAbqF,qBAarF,OAbqF;EAa5E,MAAA,YAb4E,qBAa5E,YAb4E;EAa9D,MAAA,YAb8D,qBAa9D,YAb8D;EAahD,MAAA,WAbgD,qBAahD,WAbgD;EAuBzG,KAvBD,MAuBO;EAAA,kCAEH,uBAAuB,CAAC,OAAO,CAAC,UAAD,EAAa,gBAAb,CAAR,EAAwC,KAAxC,EAA+C,QAA/C,EAAyD,UAAzD,EAAmE,WAAnE,CAFpB;;EACF,MAAA,KADE,yBACF,KADE;EACK,MAAA,MADL,yBACK,MADL;EACa,MAAA,KADb,yBACa,KADb;EACoB,MAAA,IADpB,yBACoB,IADpB;EAC0B,MAAA,KAD1B,yBAC0B,KAD1B;EACiC,MAAA,OADjC,yBACiC,OADjC;EAC0C,MAAA,OAD1C,yBAC0C,OAD1C;EACmD,MAAA,YADnD,yBACmD,YADnD;EACiE,MAAA,YADjE,yBACiE,YADjE;EAC+E,MAAA,WAD/E,yBAC+E,WAD/E;EAGN;EACF;;EAED,EAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,YAAtD,EAAoE,YAApE,EAAkF,WAAlF,CAAd;EACA,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;EAEK,SAAU,UAAV,CACJ,gBADI,EAEJ,CAFI,EAGJ,GAHI,EAIJ,CAJI,EAKJ,EALI,EAMJ,EANI,EAOJ,EAPI,EAOM;EAEV,MAAI,GAAG,GAAG,MAAM,CAAC,IAAjB;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,EAAD,CAAf,CAAN;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,EAAD,CAAN,CAAW,QAAX,CAAoB,GAApB,CAAT,CAAN;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,EAAD,CAAN,CAAW,QAAX,CAAoB,GAApB,CAAT,CAAN;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,QAAV,CAAmB,GAAnB,CAAT,CAAN;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,GAAD,CAAN,CAAY,QAAZ,CAAqB,KAAK,GAA1B,CAAT,CAAN;EACA,EAAA,GAAG,GAAG,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,CAAD,CAAN,CAAU,QAAV,CAAmB,KAAK,EAAL,GAAU,GAA7B,CAAT,CAAN;EAEA,MAAM,MAAM,GAAG,MAAM,CAAC,gBAAD,CAAN,CAAyB,IAAzB,CAA8B,GAA9B,CAAf;EACA,EAAA,wBAAwB,CAAC,MAAD,CAAxB;EACA,SAAO,MAAP;EACD;EAEK,SAAU,WAAV,CACJ,IADI,EAEJ,KAFI,EAGJ,GAHI,EAIJ,SAJI,EAKJ,WALI,EAMJ,WANI,EAOJ,gBAPI,EAQJ,gBARI,EASJ,eATI,EAUJ,QAVI,EAWJ,KAXI,EAYJ,MAZI,EAaJ,KAbI,EAcJ,SAdI,EAeJ,KAfI,EAgBJ,OAhBI,EAiBJ,OAjBI,EAkBJ,YAlBI,EAmBJ,YAnBI,EAoBJ,WApBI,EAqBJ,OArBI,EAqB+B;EAEnC,MAAI,IAAI,GAAG,SAAX,CAFmC;;EAInC,iBAAgF,OAAO,CACrF,SADqF,EAErF,WAFqF,EAGrF,WAHqF,EAIrF,gBAJqF,EAKrF,gBALqF,EAMrF,eANqF,EAOrF,KAPqF,EAQrF,OARqF,EASrF,OATqF,EAUrF,YAVqF,EAWrF,YAXqF,EAYrF,WAZqF,CAAvF;EAAA,MAAM,SAAN,YAAM,SAAN;EAAA,MAAiB,IAAjB,YAAiB,IAAjB;EAAA,MAAuB,MAAvB,YAAuB,MAAvB;EAAA,MAA+B,MAA/B,YAA+B,MAA/B;EAAA,MAAuC,WAAvC,YAAuC,WAAvC;EAAA,MAAoD,WAApD,YAAoD,WAApD;EAAA,MAAiE,UAAjE,YAAiE,UAAjE;;EAcA,EAAA,IAAI,IAAI,SAAR,CAlBmC;;EAqBnC,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,MAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,QAAnB,CAAnC;EACA,MAAM,YAAY,GAAG,IAAI,gBAAJ,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,EAA2C,IAA3C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,CAArB;EACA,MAAM,SAAS,GAAG,eAAe,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,EAAmC,OAAnC,CAAjC;EAEA,SAAO;EACL,IAAA,IAAI,EAAE,OAAO,CAAC,SAAD,EAAY,QAAZ,CADR;EAEL,IAAA,KAAK,EAAE,OAAO,CAAC,SAAD,EAAY,SAAZ,CAFT;EAGL,IAAA,GAAG,EAAE,OAAO,CAAC,SAAD,EAAY,OAAZ,CAHP;EAIL,IAAA,IAAI,EAAJ,IAJK;EAKL,IAAA,MAAM,EAAN,MALK;EAML,IAAA,MAAM,EAAN,MANK;EAOL,IAAA,WAAW,EAAX,WAPK;EAQL,IAAA,WAAW,EAAX,WARK;EASL,IAAA,UAAU,EAAV;EATK,GAAP;EAWD;EAEK,SAAU,gBAAV,CACJ,OADI,EAEJ,QAFI,EAGJ,QAHI,EAIJ,KAJI,EAKJ,MALI,EAMJ,KANI,EAOJ,IAPI,EAQJ,CARI,EASJ,GATI,EAUJ,CAVI,EAWJ,EAXI,EAYJ,EAZI,EAaJ,EAbI,EAcJ,OAdI,EAcgC;EAEpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;;EACA,MAAI,YAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CAAZ,KAA+D,CAAnE,EAAsE;EACpE,WAAO,UAAU,CAAC,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAR,EAAqC,CAArC,EAAwC,GAAxC,EAA6C,CAA7C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,CAAjB;EACD,GAbmC;EAgBpC;;;EACA,MAAM,EAAE,GAAG,kCAAkC,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAA7C;EACA,MAAM,QAAQ,GAAG,kBAAkB,CAAC,OAAO,CAAC,EAAD,EAAK,QAAL,CAAR,EAAwB,OAAO,CAAC,EAAD,EAAK,SAAL,CAA/B,EAAgD,OAAO,CAAC,EAAD,EAAK,OAAL,CAAvD,EAAsE,QAAtE,CAAnC;EACA,MAAM,YAAY,GAAG,IAAI,gBAAJ,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,EAA2C,IAA3C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,CAArB;EACA,MAAM,SAAS,GAAG,eAAe,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,EAAmC,OAAnC,CAAjC;EACA,MAAM,cAAc,GAAG,sBAAsB,CAC3C,OAAO,CAAC,SAAD,EAAY,QAAZ,CADoC,EAE3C,OAAO,CAAC,SAAD,EAAY,SAAZ,CAFoC,EAG3C,OAAO,CAAC,SAAD,EAAY,OAAZ,CAHoC,EAI3C,OAAO,CAAC,EAAD,EAAK,QAAL,CAJoC,EAK3C,OAAO,CAAC,EAAD,EAAK,UAAL,CALoC,EAM3C,OAAO,CAAC,EAAD,EAAK,UAAL,CANoC,EAO3C,OAAO,CAAC,EAAD,EAAK,eAAL,CAPoC,EAQ3C,OAAO,CAAC,EAAD,EAAK,eAAL,CARoC,EAS3C,OAAO,CAAC,EAAD,EAAK,cAAL,CAToC,EAU3C,QAV2C,CAA7C,CArBoC;EAmCpC;;EACA,MAAM,mBAAmB,GAAG,4BAA4B,CAAC,QAAD,EAAW,cAAX,EAA2B,YAA3B,CAAxD;EACA,SAAO,UAAU,CAAC,OAAO,CAAC,mBAAD,EAAsB,gBAAtB,CAAR,EAAiD,CAAjD,EAAoD,GAApD,EAAyD,CAAzD,EAA4D,EAA5D,EAAgE,EAAhE,EAAoE,EAApE,CAAjB;EACD;;EAED,SAAS,sBAAT,CAAgC,QAAhC,EAA6D,SAA7D,EAAgF,IAAhF,EAA2G;EACzG,MAAI,SAAS,KAAK,CAAlB,EAAqB,OAAO,QAAP;;EACrB,yBAA8B,QAAQ,CAAC,MAAT,CAAgB,SAAhB,CAA9B;EAAA,MAAM,QAAN,oBAAM,QAAN;EAAA,MAAgB,SAAhB,oBAAgB,SAAhB;;EACA,MAAI,SAAS,CAAC,MAAV,CAAiB,MAAM,CAAC,IAAxB,CAAJ,EAAmC,OAAO,QAAP;EACnC,MAAM,IAAI,GAAG,SAAS,CAAC,EAAV,CAAa,MAAM,CAAC,IAApB,IAA4B,CAAC,CAA7B,GAAiC,CAA9C;;EACA,UAAQ,IAAR;EACE,SAAK,MAAL;EACE,UAAI,IAAI,GAAG,CAAX,EAAc,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAa,IAAb,CAAX;EACd;;EACF,SAAK,OAAL;EACE,UAAI,IAAI,GAAG,CAAX,EAAc,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAa,IAAb,CAAX;EACd;;EACF,SAAK,OAAL;EACE;EACA;;EACF,SAAK,YAAL;EACE;EACA,UAAI,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,GAAtB,GAA4B,UAA5B,MAA4C,SAAhD,EAA2D,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAa,IAAb,CAAX;EAC3D;EAbJ;;EAeA,SAAO,QAAQ,CAAC,QAAT,CAAkB,SAAlB,CAAP;EACD;;EAEK,SAAU,YAAV,CACJ,OADI,EAEJ,SAFI,EAGJ,IAHI,EAIJ,YAJI,EAI+B;EAEnC;EACA,MAAI,SAAS,GAAG,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAhB;EACA,MAAI,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAAJ,EAAyB,SAAS,GAAG,SAAS,CAAC,IAAV,CAAe,OAAf,CAAZ;EACzB,MAAM,SAAS,GAAG,OAAO,CAAC,KAAR,CAAc,SAAd,CAAlB;EACA,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAD,EAAY,aAAa,CAAC,IAAD,CAAb,GAAsB,SAAlC,EAA6C,YAA7C,CAA/C;EACA,SAAO,SAAS,CAAC,IAAV,CAAe,gBAAf,CAAP;EACD;EAEK,SAAU,gBAAV,CACJ,SADI,EAEJ,UAFI,EAGJ,QAHI,EAIJ,SAJI,EAKJ,WALI,EAMJ,WANI,EAOJ,gBAPI,EAQJ,gBARI,EASJ,eATI,EAUJ,SAVI,EAWJ,IAXI,EAYJ,YAZI,EAaiB;EAAA,MAArB,WAAqB,0EAAP,OAAO;;EAErB,mBAAkF,SAAS,CACzF,SADyF,EAEzF,WAFyF,EAGzF,WAHyF,EAIzF,gBAJyF,EAKzF,gBALyF,EAMzF,eANyF,EAOzF,SAPyF,EAQzF,IARyF,EASzF,YATyF,EAUzF,WAVyF,CAA3F;EAAA,MAAQ,SAAR,cAAQ,SAAR;EAAA,MAAmB,IAAnB,cAAmB,IAAnB;EAAA,MAAyB,MAAzB,cAAyB,MAAzB;EAAA,MAAiC,MAAjC,cAAiC,MAAjC;EAAA,MAAyC,WAAzC,cAAyC,WAAzC;EAAA,MAAsD,WAAtD,cAAsD,WAAtD;EAAA,MAAmE,UAAnE,cAAmE,UAAnE;;EAYA,yBAA6B,cAAc,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAQ,GAAG,SAAnC,CAA3C;EAAA,MAAQ,IAAR,oBAAQ,IAAR;EAAA,MAAc,KAAd,oBAAc,KAAd;EAAA,MAAqB,GAArB,oBAAqB,GAArB;;EACA,SAAO;EAAE,IAAA,IAAI,EAAJ,IAAF;EAAQ,IAAA,KAAK,EAAL,KAAR;EAAe,IAAA,GAAG,EAAH,GAAf;EAAoB,IAAA,IAAI,EAAJ,IAApB;EAA0B,IAAA,MAAM,EAAN,MAA1B;EAAkC,IAAA,MAAM,EAAN,MAAlC;EAA0C,IAAA,WAAW,EAAX,WAA1C;EAAuD,IAAA,WAAW,EAAX,WAAvD;EAAoE,IAAA,UAAU,EAAV;EAApE,GAAP;EACD;EAEK,SAAU,SAAV,CACJ,IADI,EAEJ,MAFI,EAGJ,MAHI,EAIJ,WAJI,EAKJ,WALI,EAMJ,UANI,EAOJ,SAPI,EAQJ,IARI,EASJ,YATI,EAUiB;EAAA,MAArB,WAAqB,uEAAP,OAAO;EAErB,MAAI,QAAQ,GAAG,MAAM,CAAC,IAAtB;;EACA,UAAQ,IAAR;EACE,SAAK,KAAL;EACA,SAAK,MAAL;EACE,MAAA,QAAQ,GAAG,MAAM,CAAC,IAAD,CAAjB;EACF;;EACA,SAAK,QAAL;EACE,MAAA,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,EAAlB,EAAsB,IAAtB,CAA2B,MAA3B,CAAX;EACF;;EACA,SAAK,QAAL;EACE,MAAA,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,EAAlB,EAAsB,IAAtB,CAA2B,MAA3B,CAAX;EACF;;EACA,SAAK,aAAL;EACE,MAAA,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,IAAlB,EAAwB,IAAxB,CAA6B,WAA7B,CAAX;EACF;;EACA,SAAK,aAAL;EACE,MAAA,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,IAAlB,EAAwB,IAAxB,CAA6B,WAA7B,CAAX;EACF;;EACA,SAAK,YAAL;EACE,MAAA,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,IAAlB,EAAwB,IAAxB,CAA6B,UAA7B,CAAX;EAlBJ;;EAoBA,MAAM,SAAS,GAAG,IAAI,KAAK,KAAT,GAAiB,WAAjB,GAA+B,aAAa,CAAC,IAAD,CAA9D;EACA,MAAM,OAAO,GAAG,sBAAsB,CAAC,QAAD,EAAW,SAAS,GAAG,SAAvB,EAAkC,YAAlC,CAAtC;EACA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAR,CAAe,SAAf,EAA0B,UAA1B,EAAf;;EACA,UAAQ,IAAR;EACE,SAAK,KAAL;EACE,aAAO;EAAE,QAAA,SAAS,EAAE,MAAb;EAAqB,QAAA,IAAI,EAAE,CAA3B;EAA8B,QAAA,MAAM,EAAE,CAAtC;EAAyC,QAAA,MAAM,EAAE,CAAjD;EAAoD,QAAA,WAAW,EAAE,CAAjE;EAAoE,QAAA,WAAW,EAAE,CAAjF;EAAoF,QAAA,UAAU,EAAE;EAAhG,OAAP;;EACF,SAAK,MAAL;EACE,aAAO,WAAW,CAAC,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAlB;;EACF,SAAK,QAAL;EACE,aAAO,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAlB;;EACF,SAAK,QAAL;EACE,aAAO,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAlB;;EACF,SAAK,aAAL;EACE,aAAO,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,MAAvB,EAA+B,CAA/B,EAAkC,CAAlC,CAAlB;;EACF,SAAK,aAAL;EACE,aAAO,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,MAApC,EAA4C,CAA5C,CAAlB;;EACF,SAAK,YAAL;EACE,aAAO,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,MAAjD,CAAlB;;EACF;EACE,YAAM,IAAI,KAAJ,wBAA0B,IAA1B,EAAN;EAhBJ;EAkBD;;EAED,SAAS,SAAT,CACE,OADF,EAEE,KAFF,EAE6E;EAE3E,SAAO,iBAAiB,CACtB,OAAO,CAAC,OAAD,EAAU,QAAV,CADe,EAEtB,OAAO,CAAC,OAAD,EAAU,SAAV,CAFe,EAGtB,OAAO,CAAC,OAAD,EAAU,OAAV,CAHe,EAItB,OAAO,CAAC,KAAD,EAAQ,QAAR,CAJe,EAKtB,OAAO,CAAC,KAAD,EAAQ,SAAR,CALe,EAMtB,OAAO,CAAC,KAAD,EAAQ,OAAR,CANe,EAOtB,KAPsB,CAAjB,CAQL,IARF;EASD;;EAED,SAAS,gBAAT,CACE,QADF,EAEE,eAFF,EAGE,QAHF,EAG6B;EAE3B,MAAM,OAAO,GAAGA,cAAY,CAAC,IAAD,CAA5B;EACA,MAAM,KAAK,GAAG,eAAe,CAAC,QAAD,EAAW,eAAX,EAA4B,QAA5B,EAAsC,OAAtC,CAA7B;EACA,MAAM,IAAI,GAAG,SAAS,CAAC,eAAD,EAAkB,KAAlB,CAAtB;EACA,SAAO;EAAE,IAAA,UAAU,EAAE,KAAd;EAAqB,IAAA,IAAI,EAAJ;EAArB,GAAP;EACD;;EAEK,SAAU,yBAAV,CACJ,UADI,EAEJ,KAFI,EAGJ,MAHI,EAIJ,KAJI,EAKJ,IALI,EAKQ;EAEZ,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,SAAb,CAAxB;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB;EACA,MAAM,cAAc,GAAG,gBAAgB,CACrC,OAAO,CAAC,UAAD,EAAa,OAAb,CAD8B,EAErC,QAFqC,EAGrC,QAHqC,EAIrC,KAJqC,EAKrC,MALqC,EAMrC,KANqC,EAOrC,IAPqC,EAQrC,CARqC,EASrC,CATqC,EAUrC,CAVqC,EAWrC,CAXqC,EAYrC,CAZqC,EAarC,CAbqC,CAAvC;EAeA,SAAO,2BAA2B,CAAC,cAAD,EAAiB,QAAjB,EAA2B,QAA3B,CAAlC;EACD;EAEK,SAAU,yBAAV,CACJ,UADI,EAEJ,WAFI,EAGJ,UAHI,EAIJ,SAJI,EAKJ,UALI,EAMJ,YANI,EAOJ,YAPI,EAQJ,iBARI,EASJ,iBATI,EAUJ,gBAVI,EAWJ,SAXI,EAYJ,IAZI,EAaJ,YAbI,EAcJ,UAdI,EAcmD;EAEvD,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,WAAW,GAAG,gBAAlB;;EACA,MACE,CAAC,uBAAuB,CAAC,UAAD,CAAxB,IACA,IAAI,KAAK,MADT,IAEA,IAAI,KAAK,OAFT,IAGA,IAAI,KAAK,MAHT,IAIA,IAAI,KAAK,KAJT,IAKC,IAAI,KAAK,YAAT,IAAyB,SAAS,KAAK,CAN1C,EAOE;EACA,WAAO;EAAE,MAAA,KAAK,EAAL,KAAF;EAAS,MAAA,MAAM,EAAN,MAAT;EAAiB,MAAA,KAAK,EAAL,KAAjB;EAAwB,MAAA,IAAI,EAAJ,IAAxB;EAA8B,MAAA,KAAK,EAAL,KAA9B;EAAqC,MAAA,OAAO,EAAP,OAArC;EAA8C,MAAA,OAAO,EAAP,OAA9C;EAAuD,MAAA,YAAY,EAAZ,YAAvD;EAAqE,MAAA,YAAY,EAAZ,YAArE;EAAmF,MAAA,WAAW,EAAX;EAAnF,KAAP;EACD,GArBsD;EAwBvD;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAI,eAAe,GAAG,wBAAwB,CAC5C,CAD4C,EAE5C,KAF4C,EAG5C,OAH4C,EAI5C,OAJ4C,EAK5C,YAL4C,EAM5C,YAN4C,EAO5C,WAP4C,EAQ5C,CAR4C,CAA9C;EAUA,MAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAhB,EAAD,CAA1B;EAEA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,SAAb,CAAxB;EACA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAxB;EACA,MAAM,QAAQ,GAAG,gBAAgB,CAC/B,OAAO,CAAC,UAAD,EAAa,OAAb,CADwB,EAE/B,QAF+B,EAG/B,QAH+B,EAI/B,KAJ+B,EAK/B,MAL+B,EAM/B,KAN+B,EAO/B,IAP+B,EAQ/B,CAR+B,EAS/B,CAT+B,EAU/B,CAV+B,EAW/B,CAX+B,EAY/B,CAZ+B,EAa/B,CAb+B,CAAjC;EAeA,MAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,MAAM,MAAM,GAAG,gBAAgB,CAC7B,IAAI,eAAJ,CAAoB,QAApB,CAD6B,EAE7B,QAF6B,EAG7B,QAH6B,EAI7B,CAJ6B,EAK7B,CAL6B,EAM7B,CAN6B,EAO7B,SAP6B,EAQ7B,CAR6B,EAS7B,CAT6B,EAU7B,CAV6B,EAW7B,CAX6B,EAY7B,CAZ6B,EAa7B,CAb6B,CAA/B;EAeA,MAAM,WAAW,GAAG,MAAM,CAAC,QAAP,CAAgB,QAAhB,CAApB;;EAEA,MAAI,eAAe,CAAC,QAAhB,CAAyB,WAAzB,EAAsC,QAAtC,CAA+C,SAA/C,EAA0D,GAA1D,CAA8D,CAA9D,CAAJ,EAAsE;EAAA,uBAClC,WAAW,CAC3C,KAD2C,EAE3C,MAF2C,EAG3C,KAH2C,EAI3C,IAJ2C,EAK3C,CAL2C,EAM3C,CAN2C,EAO3C,CAP2C,EAQ3C,CAR2C,EAS3C,CAT2C,EAU3C,CAV2C,EAW3C,CAX2C,EAY3C,CAZ2C,EAa3C,CAb2C,EAc3C,SAd2C,EAe3C,CAf2C,EAgB3C,CAhB2C,EAiB3C,CAjB2C,EAkB3C,CAlB2C,EAmB3C,CAnB2C,EAoB3C,CApB2C,EAqB3C,UArB2C,CADuB;;EACjE,IAAA,KADiE,gBACjE,KADiE;EAC1D,IAAA,MAD0D,gBAC1D,MAD0D;EAClD,IAAA,KADkD,gBAClD,KADkD;EAC3C,IAAA,IAD2C,gBAC3C,IAD2C;EAwBpE,IAAA,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC,QAAhB,CAAyB,WAAzB,CAAD,EAAwC,SAAxC,EAAmD,IAAnD,EAAyD,YAAzD,CAA9B;;EAxBoE,4BAyBI,eAAe,CACrF,CADqF,EAErF,CAFqF,EAGrF,CAHqF,EAIrF,CAJqF,EAKrF,CALqF,EAMrF,CANqF,EAOrF,eAAe,CAAC,UAAhB,EAPqF,EAQrF,MARqF,CAzBnB;;EAyBjE,IAAA,KAzBiE,qBAyBjE,KAzBiE;EAyB1D,IAAA,OAzB0D,qBAyB1D,OAzB0D;EAyBjD,IAAA,OAzBiD,qBAyBjD,OAzBiD;EAyBxC,IAAA,YAzBwC,qBAyBxC,YAzBwC;EAyB1B,IAAA,YAzB0B,qBAyB1B,YAzB0B;EAyBZ,IAAA,WAzBY,qBAyBZ,WAzBY;EAmCrE;;EACD,SAAO;EAAE,IAAA,KAAK,EAAL,KAAF;EAAS,IAAA,MAAM,EAAN,MAAT;EAAiB,IAAA,KAAK,EAAL,KAAjB;EAAwB,IAAA,IAAI,EAAJ,IAAxB;EAA8B,IAAA,KAAK,EAAL,KAA9B;EAAqC,IAAA,OAAO,EAAP,OAArC;EAA8C,IAAA,OAAO,EAAP,OAA9C;EAAuD,IAAA,YAAY,EAAZ,YAAvD;EAAqE,IAAA,YAAY,EAAZ,YAArE;EAAmF,IAAA,WAAW,EAAX;EAAnF,GAAP;EACD;EAEK,SAAU,aAAV,CACJ,UADI,EAEJ,WAFI,EAGJ,UAHI,EAIJ,SAJI,EAKJ,UALI,EAMJ,YANI,EAOJ,YAPI,EAQJ,iBARI,EASJ,iBATI,EAUJ,gBAVI,EAWJ,SAXI,EAYJ,IAZI,EAaJ,YAbI,EAcoE;EAAA,MAAxE,eAAwE,0EAAT,SAAS;EAExE,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,IAAI,GAAG,SAAX;EACA,MAAI,KAAK,GAAG,UAAZ;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,OAAO,GAAG,YAAd;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,YAAY,GAAG,iBAAnB;EACA,MAAI,WAAW,GAAG,MAAM,CAAC,gBAAD,CAAxB;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,MAAI,QAAJ,EAAc,WAAd,CAbwE;EAexE;EACA;EACA;;EACA,MAAI,UAAU,GAAG,eAAjB;;EACA,MAAI,UAAJ,EAAgB;EACd,QAAI,uBAAuB,CAAC,UAAD,CAA3B,EAAyC;EACvC,MAAA,WAAW,GAAG,UAAd;EACA,MAAA,UAAU,GAAG,cAAc,CAAC,UAAD,CAA3B;EACD,KAHD,MAGO,IAAI,CAAC,cAAc,CAAC,UAAD,CAAnB,EAAiC;EACtC,YAAM,IAAI,SAAJ,CAAc,mDAAd,CAAN;EACD;;EACD,IAAA,QAAQ,GAAG,OAAO,CAAC,UAAD,EAAa,QAAb,CAAlB;EACD,GA3BuE;EA8BxE;;;EACA,MAAI,WAAJ;;EACA,MAAI,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,OAA5B,IAAuC,IAAI,KAAK,MAAhD,IAA0D,IAAI,KAAK,KAAvE,EAA8E;EAC5E,IAAA,WAAW,GAAG,wBAAwB,CAAC,CAAD,EAAI,KAAJ,EAAW,OAAX,EAAoB,OAApB,EAA6B,YAA7B,EAA2C,YAA3C,EAAyD,gBAAzD,EAA2E,CAA3E,CAAtC;EACA,QAAI,YAAJ;;EACA,QAAI,WAAJ,EAAiB;EACf,MAAA,YAAY,GAAG,yBAAyB,CAAC,WAAD,EAAc,KAAd,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,IAApC,CAAxC;EACD;;EACD,QAAI,SAAJ;;EAN4E,8BAO3B,iBAAiB,CAAC,WAAD,EAAc,YAAd,CAPU;;EAOnE,IAAA,SAPmE,uBAOzE,IAPyE;EAOxD,IAAA,WAPwD,uBAOxD,WAPwD;EAO3C,IAAA,WAP2C,uBAO3C,WAP2C;EAQ5E,IAAA,IAAI,IAAI,SAAR;EACA,IAAA,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,YAAY,GAAG,YAAY,GAAG,CAA1D;EACD;;EAED,MAAI,KAAJ;;EACA,UAAQ,IAAR;EACE,SAAK,MAAL;EAAa;EACX,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,iDAAf,CAAN,CADJ;EAIX;;EACA,YAAM,aAAa,GAAG,IAAI,gBAAJ,CAAqB,KAArB,CAAtB;EACA,YAAM,OAAO,GAAG,QAAQ,CAAC,OAAzB;EACA,YAAM,eAAe,GAAGA,cAAY,CAAC,IAAD,CAApC;EACA,YAAM,UAAU,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,aAAvB,EAAsC,eAAtC,EAAuD,OAAvD,CAAlC;EACA,YAAM,gBAAgB,GAAG,IAAI,gBAAJ,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,CAAzB;EACA,YAAM,gBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;EACA,YAAM,qBAAqB,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,gBAAvB,EAAyC,gBAAzC,EAA2D,OAA3D,CAA7C;EACA,YAAM,iBAAiB,GAAG,SAAS,CAAC,UAAD,EAAa,qBAAb,CAAnC;EACA,QAAA,UAAU,GAAG,UAAb;EACA,QAAA,IAAI,IAAI,iBAAR;EAEA,YAAM,eAAe,GAAGA,cAAY,CAAC,IAAD,CAApC;EACA,YAAM,SAAS,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB;EAAE,UAAA,IAAI,EAAJ;EAAF,SAAvB,EAAiC,eAAjC,EAAkD,OAAlD,CAAjC;EACA,YAAM,YAAY,GAAGA,cAAY,CAAC,IAAD,CAAjC;EACA,QAAA,YAAY,CAAC,WAAb,GAA2B,MAA3B;EACA,YAAM,WAAW,GAAG,iBAAiB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,YAAlC,CAAjB,CAAiE,KAArF;EACA,QAAA,KAAK,IAAI,WAAT;EACA,YAAM,aAAa,GAAG,UAAtB;EACA,YAAM,gBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;EACA,QAAA,UAAU,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB;EAAE,UAAA,KAAK,EAAE;EAAT,SAAvB,EAA+C,gBAA/C,EAAiE,OAAjE,CAA5B;EACA,YAAM,UAAU,GAAG,SAAS,CAAC,aAAD,EAAgB,UAAhB,CAA5B;EACA,QAAA,IAAI,IAAI,UAAR;EACA,YAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,IAAI,GAAG,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAArC,CAAhB;;EACA,kCAA4B,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAA5C;EAAA,YAAY,WAAZ,uBAAM,IAAN,CA5BW;EA+BX;EACA;EACA;EACA;EACA;;;EACA,QAAA,WAAW,GAAG,OAAO,CAAC,WAAD,CAArB;EACA,YAAM,OAAO,GAAG,MAAM,CAAC,WAAD,CAAN,CAAoB,QAApB,CAA6B,WAA7B,CAAhB;EACA,QAAA,WAAW,GAAG,OAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,IAAxB,CAA6B,MAAM,CAAC,IAAD,CAAN,CAAa,QAAb,CAAsB,WAAtB,CAA7B,EAAiE,IAAjE,CAAsE,WAAtE,CAAd;EACA,YAAM,OAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,OAAO,CAAC,QAAR,CAAiB,SAAjB,EAA4B,UAA5B,EAAd,EAAwD,YAAxD,CAAtC;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,OAAO,CAAC,UAAR,EAAnC;EACA,QAAA,KAAK,GAAG,OAAO,CAAC,MAAR,CAAe,OAAf,EAAwB,UAAxB,EAAR;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,MAAM,GAAG,KAAK,GAAG,IAAI,GAAG,CAAxB;EACA;EACD;;EACD,SAAK,OAAL;EAAc;EACZ,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN,CADH;EAIZ;;EACA,YAAM,WAAW,GAAG,IAAI,gBAAJ,CAAqB,KAArB,EAA4B,MAA5B,CAApB;EACA,YAAM,QAAO,GAAG,QAAQ,CAAC,OAAzB;;EACA,YAAM,gBAAe,GAAGA,cAAY,CAAC,IAAD,CAApC;;EACA,YAAM,gBAAgB,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,WAAvB,EAAoC,gBAApC,EAAqD,QAArD,CAAxC;;EACA,YAAM,iBAAgB,GAAG,IAAI,gBAAJ,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,KAApC,CAAzB;;EACA,YAAM,iBAAgB,GAAGA,cAAY,CAAC,IAAD,CAArC;;EACA,YAAM,sBAAqB,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,EAAuB,iBAAvB,EAAyC,iBAAzC,EAA2D,QAA3D,CAA7C;;EACA,YAAM,WAAW,GAAG,SAAS,CAAC,gBAAD,EAAmB,sBAAnB,CAA7B;EACA,QAAA,UAAU,GAAG,gBAAb;EACA,QAAA,IAAI,IAAI,WAAR,CAdY;EAiBZ;;EACA,YAAM,IAAI,GAAG,QAAQ,CAAC,IAAD,CAArB;EACA,YAAM,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,IAAI,GAAG,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAAxC,CAAjB;EACA,YAAI,YAAJ;;EApBY,kCAqB0B,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CArB1C;;EAqBT,QAAA,UArBS,uBAqBT,UArBS;EAqBS,QAAA,YArBT,uBAqBG,IArBH;;EAsBZ,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,YAAD,CAA/B,EAA+C;EAC7C,UAAA,MAAM,IAAI,IAAV;EACA,UAAA,IAAI,IAAI,YAAR;;EAF6C,oCAGP,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAHT;;EAG1C,UAAA,UAH0C,uBAG1C,UAH0C;EAGxB,UAAA,YAHwB,uBAG9B,IAH8B;EAI9C;;EACD,QAAA,YAAY,GAAG,OAAO,CAAC,YAAD,CAAtB;;EACA,YAAM,QAAO,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,WAA9B,CAAhB;;EACA,QAAA,WAAW,GAAG,QAAO,CAAC,QAAR,CAAiB,MAAjB,EAAyB,IAAzB,CAA8B,MAAM,CAAC,IAAD,CAAN,CAAa,QAAb,CAAsB,WAAtB,CAA9B,EAAkE,IAAlE,CAAuE,WAAvE,CAAd;;EACA,YAAM,QAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,QAAO,CAAC,QAAR,CAAiB,SAAjB,EAA4B,UAA5B,EAAd,EAAwD,YAAxD,CAAtC;;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,QAAO,CAAC,UAAR,EAAnC;EACA,QAAA,MAAM,GAAG,QAAO,CAAC,MAAR,CAAe,QAAf,EAAwB,UAAxB,EAAT;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,KAAK,GAAG,IAAI,GAAG,CAAf;EACA;EACD;;EACD,SAAK,MAAL;EAAa;EACX,YAAI,CAAC,QAAL,EAAe,MAAM,IAAI,UAAJ,CAAe,iDAAf,CAAN,CADJ;EAGX;;EACA,YAAM,MAAI,GAAG,QAAQ,CAAC,IAAD,CAArB;;EACA,YAAM,OAAO,GAAG,IAAI,gBAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAAI,GAAG,CAAP,GAAW,CAAC,CAAZ,GAAgB,CAA3C,CAAhB;EACA,YAAI,WAAJ;;EANW,kCAO0B,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAP1C;;EAOR,QAAA,UAPQ,uBAOR,UAPQ;EAOU,QAAA,WAPV,uBAOI,IAPJ;;EAQX,eAAO,OAAO,CAAC,IAAD,CAAP,IAAiB,OAAO,CAAC,WAAD,CAA/B,EAA8C;EAC5C,UAAA,KAAK,IAAI,MAAT;EACA,UAAA,IAAI,IAAI,WAAR;;EAF4C,oCAGP,gBAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,CAHT;;EAGzC,UAAA,UAHyC,uBAGzC,UAHyC;EAGvB,UAAA,WAHuB,uBAG7B,IAH6B;EAI7C;;EACD,QAAA,WAAW,GAAG,OAAO,CAAC,WAAD,CAArB;;EACA,YAAM,SAAO,GAAG,MAAM,CAAC,WAAD,CAAN,CAAoB,QAApB,CAA6B,WAA7B,CAAhB;;EACA,QAAA,WAAW,GAAG,SAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,IAAxB,CAA6B,MAAM,CAAC,IAAD,CAAN,CAAa,QAAb,CAAsB,WAAtB,CAA7B,EAAiE,IAAjE,CAAsE,WAAtE,CAAd;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,CAAC,QAAR,CAAiB,SAAjB,EAA4B,UAA5B,EAAd,EAAwD,YAAxD,CAAtC;;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAO,CAAC,UAAR,EAAnC;EACA,QAAA,KAAK,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAR;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,IAAI,GAAG,CAAP;EACA;EACD;;EACD,SAAK,KAAL;EAAY;EACV,YAAM,SAAO,GAAG,MAAM,CAAC,WAAD,CAAtB;;EACA,QAAA,WAAW,GAAG,SAAO,CAAC,QAAR,CAAiB,IAAjB,EAAuB,IAAvB,CAA4B,WAA5B,CAAd;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,CAAC,QAAR,CAAiB,SAAjB,EAA4B,UAA5B,EAAd,EAAwD,YAAxD,CAAtC;;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAO,CAAC,UAAR,EAAnC;EACA,QAAA,IAAI,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAP;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA;EACD;;EACD,SAAK,MAAL;EAAa;EACX,YAAM,SAAO,GAAG,MAAhB;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,KAAD,CAAN,CACX,QADW,CACF,MADE,EAEX,IAFW,CAEN,MAAM,CAAC,OAAD,CAAN,CAAgB,QAAhB,CAAyB,IAAzB,CAFM,EAGX,IAHW,CAGN,MAAM,CAAC,OAAD,CAAN,CAAgB,QAAhB,CAAyB,GAAzB,CAHM,EAIX,IAJW,CAIN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAJM,EAKX,IALW,CAKN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CALM,EAMX,IANW,CAMN,WANM,CAAd;EAOA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAnC;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,GAAG,SAAxB,EAAmC,YAAnC,CAAtC;;EACA,QAAA,KAAK,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAR;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,OAAO,GAAG,OAAO,GAAG,YAAY,GAAG,YAAY,GAAG,CAAlD;EACA;EACD;;EACD,SAAK,QAAL;EAAe;EACb,YAAM,SAAO,GAAG,IAAhB;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,OAAD,CAAN,CACX,QADW,CACF,IADE,EAEX,IAFW,CAEN,MAAM,CAAC,OAAD,CAAN,CAAgB,QAAhB,CAAyB,GAAzB,CAFM,EAGX,IAHW,CAGN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAHM,EAIX,IAJW,CAIN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAJM,EAKX,IALW,CAKN,WALM,CAAd;EAMA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAnC;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,GAAG,SAAxB,EAAmC,YAAnC,CAAtC;;EACA,QAAA,OAAO,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAV;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,OAAO,GAAG,YAAY,GAAG,YAAY,GAAG,CAAxC;EACA;EACD;;EACD,SAAK,QAAL;EAAe;EACb,YAAM,SAAO,GAAG,GAAhB;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,OAAD,CAAN,CACX,QADW,CACF,GADE,EAEX,IAFW,CAEN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAFM,EAGX,IAHW,CAGN,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAHM,EAIX,IAJW,CAIN,WAJM,CAAd;EAKA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAnC;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,GAAG,SAAxB,EAAmC,YAAnC,CAAtC;;EACA,QAAA,OAAO,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAV;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,YAAY,GAAG,YAAY,GAAG,CAA9B;EACA;EACD;;EACD,SAAK,aAAL;EAAoB;EAClB,YAAM,SAAO,GAAG,GAAhB;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,EAAmC,IAAnC,CAAwC,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAAxC,EAA4E,IAA5E,CAAiF,WAAjF,CAAd;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAnC;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,GAAG,SAAxB,EAAmC,YAAnC,CAAtC;;EACA,QAAA,YAAY,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAf;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA,QAAA,YAAY,GAAG,CAAf;EACA;EACD;;EACD,SAAK,aAAL;EAAoB;EAClB,YAAM,SAAO,GAAG,GAAhB;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,EAAmC,IAAnC,CAAwC,WAAxC,CAAd;EACA,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,KAA2B,SAAnC;;EACA,YAAM,SAAO,GAAG,sBAAsB,CAAC,WAAD,EAAc,SAAO,GAAG,SAAxB,EAAmC,YAAnC,CAAtC;;EACA,QAAA,YAAY,GAAG,SAAO,CAAC,MAAR,CAAe,SAAf,EAAwB,UAAxB,EAAf;EACA,QAAA,WAAW,GAAG,MAAM,CAAC,IAArB;EACA;EACD;;EACD,SAAK,YAAL;EAAmB;EACjB,QAAA,KAAK,GAAG,WAAW,CAAC,UAAZ,EAAR;EACA,QAAA,WAAW,GAAG,sBAAsB,CAAC,MAAM,CAAC,WAAD,CAAP,EAAsB,SAAtB,EAAiC,YAAjC,CAApC;EACA;EACD;EAxLH;;EA0LA,SAAO;EACL,IAAA,KAAK,EAAL,KADK;EAEL,IAAA,MAAM,EAAN,MAFK;EAGL,IAAA,KAAK,EAAL,KAHK;EAIL,IAAA,IAAI,EAAJ,IAJK;EAKL,IAAA,KAAK,EAAL,KALK;EAML,IAAA,OAAO,EAAP,OANK;EAOL,IAAA,OAAO,EAAP,OAPK;EAQL,IAAA,YAAY,EAAZ,YARK;EASL,IAAA,YAAY,EAAZ,YATK;EAUL,IAAA,WAAW,EAAE,WAAW,CAAC,UAAZ,EAVR;EAWL,IAAA,KAAK,EAAL;EAXK,GAAP;EAaD;EAEK,SAAU,cAAV,CAAyB,EAAzB,EAAqC,EAArC,EAAiD,EAAjD,EAA6D,EAA7D,EAAyE,EAAzE,EAAqF,EAArF,EAA+F;EACnG,4BAAqB,CACnB,CAAC,EAAD,EAAK,EAAL,CADmB,EAEnB,CAAC,EAAD,EAAK,EAAL,CAFmB,EAGnB,CAAC,EAAD,EAAK,EAAL,CAHmB,CAArB,6BAIG;EAJE;EAAA,QAAO,CAAP;EAAA,QAAU,CAAV;;EAKH,QAAI,CAAC,KAAK,CAAV,EAAa,OAAO,gBAAgB,CAAC,CAAC,GAAG,CAAL,CAAvB;EACd;;EACD,SAAO,CAAP;EACD;;EAED,SAAS,iBAAT,CAA2B,CAA3B,EAAsC,CAAtC,EAA+C;EAC7C,MAAI,MAAM,GAAG,CAAC,GAAG,CAAjB;EACA,MAAI,QAAQ,CAAC,MAAD,EAAS,CAAC,CAAV,CAAZ,EAA0B,OAAO,CAAP;EAC1B,MAAI,MAAM,GAAG,CAAb,EAAgB,MAAM,IAAI,CAAV;EAChB,SAAO,MAAP;EACD;;EAEK,SAAU,QAAV,CAAmB,GAAnB,EAA+B;EACnC,MAAI,MAAM,CAAC,UAAP,CAAkB,GAAlB,CAAJ,EAA4B;EAC1B,WAAO,GAAP;EACD;;EAED,MAAI,IAAI,GAAG,GAAX;;EACA,MAAI,QAAO,GAAP,MAAe,QAAnB,EAA6B;EAC3B,QAAM,QAAQ,GAAI,GAAyC,CAAC,MAAM,CAAC,WAAR,CAA3D;;EACA,QAAI,QAAQ,IAAI,OAAO,QAAP,KAAoB,UAApC,EAAgD;EAC9C,MAAA,IAAI,GAAGjC,cAAY,CAAC,QAAD,EAAW,GAAX,EAAgB,CAAC,QAAD,CAAhB,CAAnB;EACD;EACF;;EACD,kBAAe,IAAf;EACE,SAAK,WAAL;EACA,SAAK,QAAL;EACA,SAAK,QAAL;EACA,SAAK,QAAL;EACA;EACE,YAAM,IAAI,SAAJ,kCAAuC,GAAvC,iBAAN;;EACF,SAAK,QAAL;EACE,UAAI,CAAC,IAAI,CAAC,KAAL,CAAW,uBAAX,CAAL,EAA0C;EACxC,cAAM,IAAI,WAAJ,CAAgB,uBAAhB,CAAN;EACD;;EACH;;EACA,SAAK,QAAL;EACE,UAAI;EACF,eAAO,MAAM,CAAC,IAAD,CAAb;EACD,OAFD,CAEE,OAAO,CAAP,EAAU;EACV,YAAI,CAAC,YAAY,KAAb,IAAsB,CAAC,CAAC,OAAF,CAAU,UAAV,CAAqB,iBAArB,CAA1B,EAAmE,MAAM,IAAI,WAAJ,CAAgB,CAAC,CAAC,OAAlB,CAAN;EACnE,cAAM,CAAN;EACD;;EACH,SAAK,SAAL;EACE,UAAI,IAAJ,EAAU;EACR,eAAO,MAAM,CAAC,CAAD,CAAb;EACD,OAFD,MAEO;EACL,eAAO,MAAM,CAAC,IAAd;EACD;;EAxBL;EA0BD;EAGD;EACA;;EACO,IAAM,yBAAyB,GAA6B,YAAK;EACtE,MAAI,EAAE,GAAG,IAAI,CAAC,GAAL,KAAa,GAAtB;EACA,SAAO,YAAK;EACV,QAAM,EAAE,GAAG,IAAI,CAAC,GAAL,EAAX;EACA,QAAM,MAAM,GAAG,MAAM,CAAC,EAAD,CAAN,CAAW,QAAX,CAAoB,GAApB,EAAyB,IAAzB,CAA8B,EAA9B,CAAf;EACA,IAAA,EAAE,GAAG,EAAE,GAAG,GAAV;EACA,WAAO,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,MAAnB,CAAnB,CAAP;EACD,GALD;EAMD,CARiE,EAA3D;EAUD,SAAU,cAAV,GAAwB;EAC5B,MAAM,GAAG,GAAG,IAAIJ,oBAAJ,CAAuB,OAAvB,CAAZ;EACA,MAAM,gBAAgB,GAAG,YAAY,CAAC,qBAAD,CAArC;EACA,SAAO,IAAI,gBAAJ,CAAqB,qBAAqB,CAAC,GAAG,CAAC,eAAJ,GAAsB,QAAvB,CAA1C,CAAP;EACD;EAEK,SAAU,gBAAV,CAA2B,KAA3B,EAAwC;EAC5C,SAAO,KAAK,GAAG,CAAR,GAAY,CAAC,CAAb,GAAiB,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAiB,KAAzC;EACD;EAEK,SAAU,gBAAV,CAA8B,OAA9B,EAAwC;EAC5C,MAAI,OAAO,KAAK,SAAhB,EAA2B,OAAOqC,cAAY,CAAC,IAAD,CAAnB;EAC3B,MAAI,QAAQ,CAAC,OAAD,CAAR,IAAqB,OAAO,KAAK,IAArC,EAA2C,OAAO,OAAP;EAC3C,QAAM,IAAI,SAAJ,oDAA0D,OAAO,KAAK,IAAZ,GAAmB,MAAnB,qBAAsC,OAAtC,EAA1D,EAAN;EACD;EAEK,SAAU,mBAAV,CAAmD,QAAnD,EAAgE,SAAhE,EAA4E;EAChF,MAAM,CAAC,GAAGA,cAAY,CAAC,IAAD,CAAtB;EACA,EAAA,CAAC,CAAC,QAAD,CAAD,GAAc,SAAd;EACA,SAAO,CAAP;EACD;;EAED,SAAS,SAAT,CACE,OADF,EAEE,QAFF,EAGE,aAHF,EAIE,QAJF,EAIgB;EAEd,MAAI,KAAK,GAAG,OAAO,CAAC,QAAD,CAAnB;;EACA,MAAI,KAAK,KAAK,SAAd,EAAyB;EACvB,IAAA,KAAK,GAAG,QAAQ,CAAC,KAAD,CAAhB;;EACA,QAAI,CAAC,aAAa,CAAC,QAAd,CAAuB,KAAvB,CAAL,EAAoC;EAClC,YAAM,IAAI,UAAJ,WAAkB,QAAlB,6BAA6C,aAAa,CAAC,IAAd,CAAmB,IAAnB,CAA7C,mBAA8E,KAA9E,EAAN;EACD;;EACD,WAAO,KAAP;EACD;;EACD,SAAO,QAAP;EACD;;EAED,SAAS,eAAT,CACE,OADF,EAEE,QAFF,EAGE,OAHF,EAIE,OAJF,EAKE,QALF,EAKkB;EAEhB,MAAI,QAAQ,GAAG,OAAO,CAAC,QAAD,CAAtB;EACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B,OAAO,QAAP;EAC5B,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAD,CAAtB;;EACA,MAAI,WAAW,CAAC,KAAD,CAAX,IAAsB,KAAK,GAAG,OAA9B,IAAyC,KAAK,GAAG,OAArD,EAA8D;EAC5D,UAAM,IAAI,UAAJ,WAAkB,QAAlB,8BAA8C,OAA9C,kBAA6D,OAA7D,mBAA6E,KAA7E,EAAN;EACD;;EACD,SAAO,SAAS,CAAC,KAAD,CAAhB;EACD;;EAED,IAAM,MAAM,GAAG,IAAI,MAAJ,YAAeO,MAAA,CAAa,MAA5B,OAAf;;EAEA,SAAS,MAAT,CACE,QADF,EAEE,SAFF,EAGE,UAHF,EAK4C;EAAA,MAD1C,WAC0C,uEADpB,QAAQ,CAAC,SAAD,CACY;EAAA,MAA1C,WAA0C,uEAApB,QAAQ,CAAC,UAAD,CAAY;EAE1C,MAAI,IAAI,GAAG,MAAM,CAAC,SAAD,CAAjB;EACA,MAAI,KAAK,GAAG,MAAM,CAAC,UAAD,CAAlB;EACA,MAAI,MAAM,GAAG,WAAb;EACA,MAAI,MAAM,GAAG,WAAb;;EACA,SAAO,KAAK,CAAC,KAAN,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,CAA1B,CAAP,EAAqC;EACnC,QAAM,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,MAAjB,CAAwB,CAAxB,CAAf;EACA,QAAM,MAAM,GAAG,QAAQ,CAAC,MAAD,CAAvB;;EACA,QAAI,MAAM,KAAK,MAAf,EAAuB;EACrB,MAAA,IAAI,GAAG,MAAP;EACA,MAAA,MAAM,GAAG,MAAT;EACD,KAHD,MAGO,IAAI,MAAM,KAAK,MAAf,EAAuB;EAC5B,MAAA,KAAK,GAAG,MAAR;EACA,MAAA,MAAM,GAAG,MAAT;EACD,KAHM,MAGA;EACL,YAAM,IAAI,KAAJ,sCAAwC,MAAxC,gBAAoD,MAApD,gBAAgE,MAAhE,EAAN;EACD;EACF;;EACD,SAAO,KAAP;EACD;;EAED,IAAM,aAAa,GAAG;EACpB,EAAA,IAAI,EAAE,MADc;EAEpB,EAAA,MAAM,EAAE,IAFY;EAGpB,EAAA,MAAM,EAAE,GAHY;EAIpB,EAAA,WAAW,EAAE,GAJO;EAKpB,EAAA,WAAW,EAAE,GALO;EAMpB,EAAA,UAAU,EAAE;EANQ,CAAtB;;ECj7JA,IAAM,IAAI,GAAG,MAAM,CAAC,MAAD,CAAnB;EACA,IAAM,EAAE,GAAG,MAAM,CAAC,IAAD,CAAjB;EACA,IAAM,EAAE,GAAG,MAAM,CAAC,IAAD,CAAjB;EACA,IAAM,IAAI,GAAG,MAAM,CAAC,MAAD,CAAnB;EACA,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAD,CAAvB;EACA,IAAM,KAAK,GAAG,MAAM,CAAC,eAAD,CAApB;EACA,IAAM,IAAI,GAAG,MAAM,CAAC,SAAD,CAAnB;EACA,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAD,CAAvB;EACA,IAAM,WAAW,GAAG,MAAM,CAAC,UAAD,CAA1B;EACA,IAAM,QAAQ,GAAG,MAAM,CAAC,mBAAD,CAAvB;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,aAAD,CAArB;EACA,IAAM,MAAM,GAAG,MAAM,CAAC,QAAD,CAArB;EACA,IAAM,OAAO,GAAG,MAAM,CAAC,SAAD,CAAtB;;EAEA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAoC,KAApC,EAAgD;EACjE,SAAO;EACL,IAAA,KAAK,EAAL,KADK;EAEL,IAAA,UAAU,EAAE,IAFP;EAGL,IAAA,QAAQ,EAAE,KAHL;EAIL,IAAA,YAAY,EAAE;EAJT,GAAP;EAMD,CAPD;;EASA,IAAM,kBAAkB,GAAG,UAAU,CAAC,IAAX,CAAgB,cAA3C;EACA,IAAMzC,cAAY,GAAG,MAAM,CAAC,MAA5B;EACA,IAAM,oBAAoB,GAAG,MAAM,CAAC,SAAP,CAAiB,cAA9C;EACA,IAAM,YAAY,GAAG,OAAO,CAAC,KAA7B;EAyBA;EACA;;EACA,SAAS,WAAT,CACE,GADF,EAEE,IAFF,EAES;EAEP,MAAI,GAAG,GAAG,GAAG,CAAC,IAAD,CAAb;;EACA,MAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAA,GAAG,GAAG,IAAI,kBAAJ,CAAuB,GAAG,CAAC,MAAD,CAA1B,EAAoC,GAAG,CAAC,GAAG,CAAC,OAAD,CAAJ,CAAvC,CAAN,CAR6B;;EAU5B,IAAA,GAAG,CAAC,IAAD,CAAH,GAA+C,GAA/C;EACF;;EACD,SAAO,GAAP;EACD;;;EAGD,SAAS,uBAAT,CAAiC,GAAjC,EAAkD;EAChD,MAAI,GAAG,GAAG,GAAG,CAAC,WAAD,CAAb;;EACA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;EAC3B,IAAA,GAAG,GAAG0C,kBAAA,CAAsB,GAAtB,CAAN;EACA,IAAA,GAAG,CAAC,WAAD,CAAH,GAAmB,GAAnB;EACD;;EACD,SAAO,GAAP;EACD;;EAID,SAAS,kBAAT,GAG6C;EAAA,MAD3C,MAC2C,uEADR,SACQ;EAAA,MAA3C,YAA2C,uEAAF,EAAE;;EAE3C,MAAI,EAAE,gBAAgB,kBAAlB,CAAJ,EAA2C;EAKzC,WAAO,IAAK,kBAAL,CAAiD,MAAjD,EAAyD,YAAzD,CAAP;EACD;;EACD,MAAM,UAAU,GAAG,OAAO,YAAP,KAAwB,WAA3C;EACA,MAAM,OAAO,GAAG,UAAU,GAAG1C,cAAY,CAAC,EAAD,EAAK,YAAL,CAAf,GAAoC,EAA9D,CAV2C;;EAY3C,MAAM,QAAQ,GAAG,IAAI,kBAAJ,CAAuB,MAAvB,EAA+B,OAA/B,CAAjB;EACA,MAAM,EAAE,GAAG,QAAQ,CAAC,eAAT,EAAX,CAb2C;EAgB3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAI,UAAJ,EAAgB;EACd,QAAM,cAAc,GAAGA,cAAY,CAAC,EAAD,EAAK,EAAL,CAAnC;;EACA,SAAK,IAAM,IAAX,IAAmB,cAAnB,EAAmC;EACjC,UAAI,CAAC,YAAY,CAAC,oBAAD,EAAuB,OAAvB,EAAgC,CAAC,IAAD,CAAhC,CAAjB,EAA0D;EACxD,eAAO,cAAc,CAAC,IAAD,CAArB;EACD;EACF;;EACD,SAAK,OAAL,IAAgB,cAAhB;EACD,GARD,MAQO;EACL,SAAK,OAAL,IAAgB,OAAhB;EACD;;EAED,OAAK,QAAL,IAAiB,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,QAA3B,GAAsC,IAAvD;EACA,OAAK,MAAL,IAAe,EAAE,CAAC,MAAlB;EACA,OAAK,QAAL,IAAiB,QAAjB;EACA,OAAK,WAAL,IAAoB,EAAE,CAAC,QAAvB;EACA,OAAK,MAAL,IAAe,EAAE,CAAC,QAAlB;EACA,OAAK,IAAL,IAAa,SAAb;EACA,OAAK,EAAL,IAAW,cAAX;EACA,OAAK,EAAL,IAAW,aAAX;EACA,OAAK,IAAL,IAAa,SAAb;EACA,OAAK,QAAL,IAAiB,aAAjB;EACA,OAAK,KAAL,IAAc,kBAAd;EACA,OAAK,IAAL,IAAa,YAAb;EACA,SAAO,SAAP,CAnD2C;EAoD5C;;EAED,MAAM,CAAC,cAAP,CAAsB,kBAAtB,EAA0C,MAA1C,EAAkD;EAChD,EAAA,QAAQ,EAAE,IADsC;EAEhD,EAAA,KAAK,EAAE;EAFyC,CAAlD;EAKO,IAAM,cAAc,GAAG,kBAAvB;;EAEP,kBAAkB,CAAC,kBAAnB,GAAwC,UACtC,OADsC,EAEtC,OAFsC,EAEE;EAExC,SAAO,kBAAkB,CAAC,kBAAnB,CAAsC,OAAtC,EAA+C,OAA/C,CAAP;EACD,CALD;;EAOA,IAAM,UAAU,GAAiD;EAC/D,EAAA,eAAe,EAAE,UAAU,CAAC,eAAD,CADoC;EAE/D,EAAA,MAAM,EAAE,UAAU,CAAC,MAAD,CAF6C;EAG/D,EAAA,WAAW,EAAE,UAAU,CAAC,WAAD;EAHwC,CAAjE;;EAMA,IAAI,mBAAmB,kBAAkB,CAAC,SAA1C,EAAqD;EACnD,EAAA,UAAU,CAAC,aAAX,GAA2B,UAAU,CAAC,aAAD,CAArC;EACD;;EAED,IAAI,wBAAwB,kBAAkB,CAAC,SAA/C,EAA0D;EACxD,EAAA,UAAU,CAAC,kBAAX,GAAgC,UAAU,CAAC,kBAAD,CAA1C;EACD;;EAED,kBAAkB,CAAC,SAAnB,GAA+B,MAAM,CAAC,MAAP,CAAc,kBAAkB,CAAC,SAAjC,EAA4C,UAA5C,CAA/B;;EAEA,SAAS,eAAT,GAAwB;EACtB,SAAO,KAAK,QAAL,EAAe,eAAf,EAAP;EACD;;EAED,SAAS,uBAAT,CACE,SADF,EAEE,QAFF,EAEmB;EAEjB,MAAI,CAAC,QAAL,EAAe,OAAO,SAAP;EACf,MAAM,OAAO,GAAG,SAAS,CAAC,eAAV,EAAhB;EACA,MAAI,OAAO,CAAC,QAAR,KAAqB,QAAzB,EAAmC,OAAO,SAAP,CAJlB;EAMjB;EACA;EACA;EACA;;EACA,SAAO,IAAI,kBAAJ,CAAuB,OAAO,CAAC,MAA/B,oCAA6C,OAA7C;EAAgG,IAAA,QAAQ,EAAR;EAAhG,KAAP;EACD;EAGD;;;EACA,SAAS,MAAT,CAEE,QAFF,EAGY;EAAA;;EAEV,0BAAuC,gBAAgB,CAAC,QAAD,EAAW,IAAX,CAAvD;EAAA,MAAM,OAAN,qBAAM,OAAN;EAAA,MAAe,SAAf,qBAAe,SAAf;EAAA,MAA0B,QAA1B,qBAA0B,QAA1B;;EACA,MAAI,OAAO,IAAI,SAAf,EAA0B;EACxB,IAAA,SAAS,GAAG,uBAAuB,CAAC,SAAD,EAAY,QAAZ,CAAnC;EACA,WAAO,SAAS,CAAC,MAAV,CAAiB,OAAO,CAAC,iBAAzB,CAAP;EACD;;EANS,oCAAP,IAAO;EAAP,IAAA,IAAO;EAAA;;EASV,SAAQ,uBAAK,QAAL,GAAe,MAAf,wBAAsD,QAAtD,SAAmE,IAAnE,EAAR;EACD;;EAED,SAAS,aAAT,CAEE,QAFF,EAGY;EAAA;;EAEV,2BAAuC,gBAAgB,CAAC,QAAD,EAAW,IAAX,CAAvD;EAAA,MAAM,OAAN,sBAAM,OAAN;EAAA,MAAe,SAAf,sBAAe,SAAf;EAAA,MAA0B,QAA1B,sBAA0B,QAA1B;;EACA,MAAI,OAAO,IAAI,SAAf,EAA0B;EACxB,IAAA,SAAS,GAAG,uBAAuB,CAAC,SAAD,EAAY,QAAZ,CAAnC;EACA,WAAO,SAAS,CAAC,aAAV,CAAwB,OAAO,CAAC,iBAAhC,CAAP;EACD;;EANS,qCAAP,IAAO;EAAP,IAAA,IAAO;EAAA;;EAYV,SAAQ,wBAAK,QAAL,GAAe,aAAf,yBAA6D,QAA7D,SAA0E,IAA1E,EAAR;EACD;;EAED,SAAS,WAAT,CAA+C,CAA/C,EAA4E,CAA5E,EAAuG;EACrG,MAAI,gBAAgB,CAAC,CAAD,CAAhB,IAAuB,gBAAgB,CAAC,CAAD,CAA3C,EAAgD;EAC9C,QAAI,CAAC,gBAAgB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6B;EAC3B,YAAM,IAAI,SAAJ,CAAc,qEAAd,CAAN;EACD;;EACD,6BAII,gBAAgB,CAAC,CAAD,EAA0C,IAA1C,CAJpB;EAAA,QACW,EADX,sBACE,OADF;EAAA,QAEa,UAFb,sBAEE,SAFF;EAAA,QAGY,GAHZ,sBAGE,QAHF;;EAKA,6BAII,gBAAgB,CAAC,CAAD,EAA0C,IAA1C,CAJpB;EAAA,QACW,EADX,sBACE,OADF;EAAA,QAEa,UAFb,sBAEE,SAFF;EAAA,QAGY,GAHZ,sBAGE,QAHF;;EAKA,QAAI,GAAG,IAAI,GAAP,IAAc,GAAG,KAAK,GAA1B,EAA+B;EAC7B,YAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EACD;;EACD,QAAI,EAAE,IAAI,EAAN,IAAY,UAAZ,IAA0B,UAA1B,IAAwC,UAAU,KAAK,UAA3D,EAAuE;EACrE,UAAM,SAAS,GAAG,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAzC,CADqE;;EAGrE,aAAQ,SAAiC,CAAC,WAAlC,CAA8C,EAAE,CAAC,iBAAjD,EAAoE,EAAE,CAAC,iBAAvE,CAAR;EACD;EACF,GAvBoG;;;EAyBrG,SAAQ,KAAK,QAAL,EAAuC,WAAvC,CAAmD,CAAnD,EAAsD,CAAtD,CAAR;EACD;;EAED,SAAS,kBAAT,CAEE,CAFF,EAGE,CAHF,EAGoC;EAElC,MAAI,gBAAgB,CAAC,CAAD,CAAhB,IAAuB,gBAAgB,CAAC,CAAD,CAA3C,EAAgD;EAC9C,QAAI,CAAC,gBAAgB,CAAC,CAAD,EAAI,CAAJ,CAArB,EAA6B;EAC3B,YAAM,IAAI,SAAJ,CAAc,4EAAd,CAAN;EACD;;EACD,6BAA8D,gBAAgB,CAAC,CAAD,EAAI,IAAJ,CAA9E;EAAA,QAAiB,EAAjB,sBAAQ,OAAR;EAAA,QAAgC,UAAhC,sBAAqB,SAArB;EAAA,QAAsD,GAAtD,sBAA4C,QAA5C;;EACA,6BAA8D,gBAAgB,CAAC,CAAD,EAAI,IAAJ,CAA9E;EAAA,QAAiB,EAAjB,sBAAQ,OAAR;EAAA,QAAgC,UAAhC,sBAAqB,SAArB;EAAA,QAAsD,GAAtD,sBAA4C,QAA5C;;EACA,QAAI,GAAG,IAAI,GAAP,IAAc,GAAG,KAAK,GAA1B,EAA+B;EAC7B,YAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EACD;;EACD,QAAI,EAAE,IAAI,EAAN,IAAY,UAAZ,IAA0B,UAA1B,IAAwC,UAAU,KAAK,UAA3D,EAAuE;EACrE,UAAM,SAAS,GAAG,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAzC,CADqE;;EAGrE,aAAQ,SAAiC,CAAC,kBAAlC,CAAqD,EAAE,CAAC,iBAAxD,EAA2E,EAAE,CAAC,iBAA9E,CAAR;EACD;EACF,GAhBiC;;;EAkBlC,SAAQ,KAAK,QAAL,EAAuC,kBAAvC,CAA0D,CAA1D,EAA6D,CAA7D,CAAR;EACD;;EAOD,SAAS,KAAT,GAA6F;EAAA,MAA9E,YAA8E,uEAAnC,EAAmC;EAAA,MAA/B,OAA+B,uEAAF,EAAE;EAC3F,MAAM,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,YAAL,CAA5B;;EACA,0BAAkB,CAChB,MADgB,EAEhB,OAFgB,EAGhB,KAHgB,EAIhB,MAJgB,EAKhB,QALgB,EAMhB,QANgB,EAOhB,SAPgB,EAQhB,WARgB,EAShB,cATgB,EAUhB,WAVgB,EAWhB,WAXgB,CAAlB,0BAYY;EAZP,QAAM,GAAG,WAAT;EAeF,IAAA,OAAO,CAAC,GAAD,CAAP,GAAoC,GAAG,IAAI,OAAP,GAAiB,OAAO,CAAC,GAAD,CAAxB,GAAgC,OAAO,CAAC,GAAD,CAA3E;EACD,QAAK,OAAO,CAAC,GAAD,CAAP,KAAsC,KAAtC,IAA+C,OAAO,CAAC,GAAD,CAAP,KAAiB,SAArE,EAAgF,OAAO,OAAO,CAAC,GAAD,CAAd;EACjF;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,SAAT,CAAmB,YAAnB,EAA2D;EACzD,MAAI,OAAO,GAAG,KAAK,CAAC,YAAD,EAAe;EAChC,IAAA,IAAI,EAAE,KAD0B;EAEhC,IAAA,KAAK,EAAE,KAFyB;EAGhC,IAAA,GAAG,EAAE,KAH2B;EAIhC,IAAA,OAAO,EAAE,KAJuB;EAKhC,IAAA,YAAY,EAAE,KALkB;EAMhC,IAAA,SAAS,EAAE;EANqB,GAAf,CAAnB;;EAQA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAnB,EAA8B;EAC5B,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAClC,MAAA,IAAI,EAAE,SAD4B;EAElC,MAAA,MAAM,EAAE,SAF0B;EAGlC,MAAA,MAAM,EAAE;EAH0B,KAAd,CAAtB;EAKD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,cAAT,CAAwB,YAAxB,EAA+E;EAC7E,MAAI,OAAO,GAAG,KAAK,CAAC,YAAD,EAAe;EAChC,IAAA,GAAG,EAAE,KAD2B;EAEhC,IAAA,IAAI,EAAE,KAF0B;EAGhC,IAAA,MAAM,EAAE,KAHwB;EAIhC,IAAA,MAAM,EAAE,KAJwB;EAKhC,IAAA,OAAO,EAAE,KALuB;EAMhC,IAAA,SAAS,EAAE,KANqB;EAOhC,IAAA,YAAY,EAAE,KAPkB;EAQhC,IAAA,SAAS,EAAE,KARqB;EAShC,IAAA,SAAS,EAAE;EATqB,GAAf,CAAnB;;EAWA,MAAI,EAAE,UAAU,OAAV,IAAqB,WAAW,OAAlC,CAAJ,EAAgD;EAC9C,IAAA,OAAO,GAAGA,cAAY,CAAC,OAAD,EAAU;EAAE,MAAA,IAAI,EAAE,SAAR;EAAmB,MAAA,KAAK,EAAE;EAA1B,KAAV,CAAtB;EACD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,aAAT,CAAuB,YAAvB,EAA6E;EAC3E,MAAI,OAAO,GAAG,KAAK,CAAC,YAAD,EAAe;EAChC,IAAA,IAAI,EAAE,KAD0B;EAEhC,IAAA,IAAI,EAAE,KAF0B;EAGhC,IAAA,MAAM,EAAE,KAHwB;EAIhC,IAAA,MAAM,EAAE,KAJwB;EAKhC,IAAA,OAAO,EAAE,KALuB;EAMhC,IAAA,SAAS,EAAE,KANqB;EAOhC,IAAA,YAAY,EAAE,KAPkB;EAQhC,IAAA,SAAS,EAAE,KARqB;EAShC,IAAA,SAAS,EAAE;EATqB,GAAf,CAAnB;;EAWA,MAAI,EAAE,WAAW,OAAX,IAAsB,SAAS,OAAjC,CAAJ,EAA+C;EAC7C,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAAE,MAAA,KAAK,EAAE,SAAT;EAAoB,MAAA,GAAG,EAAE;EAAzB,KAAd,CAAtB;EACD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,SAAT,CAAmB,YAAnB,EAAqE;EACnE,MAAI,OAAO,GAAG,KAAK,CAAC,YAAD,EAAe;EAChC,IAAA,IAAI,EAAE,KAD0B;EAEhC,IAAA,MAAM,EAAE,KAFwB;EAGhC,IAAA,MAAM,EAAE,KAHwB;EAIhC,IAAA,SAAS,EAAE,KAJqB;EAKhC,IAAA,YAAY,EAAE,KALkB;EAMhC,IAAA,SAAS,EAAE;EANqB,GAAf,CAAnB;;EAQA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAnB,EAA8B;EAC5B,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAClC,MAAA,IAAI,EAAE,SAD4B;EAElC,MAAA,KAAK,EAAE,SAF2B;EAGlC,MAAA,GAAG,EAAE;EAH6B,KAAd,CAAtB;EAKD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,aAAT,CAAuB,YAAvB,EAA6E;EAC3E,MAAI,OAAO,GAAG,KAAK,CAAC,YAAD,EAAe;EAAE,IAAA,YAAY,EAAE;EAAhB,GAAf,CAAnB;;EACA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAf,IAA4B,CAAC,cAAc,CAAC,OAAD,CAA/C,EAA0D;EACxD,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAClC,MAAA,IAAI,EAAE,SAD4B;EAElC,MAAA,KAAK,EAAE,SAF2B;EAGlC,MAAA,GAAG,EAAE,SAH6B;EAIlC,MAAA,IAAI,EAAE,SAJ4B;EAKlC,MAAA,MAAM,EAAE,SAL0B;EAMlC,MAAA,MAAM,EAAE;EAN0B,KAAd,CAAtB;EAQD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,kBAAT,CAA4B,YAA5B,EAA8E;EAC5E,MAAI,OAAO,GAAG,YAAd;;EACA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAf,IAA4B,CAAC,cAAc,CAAC,OAAD,CAA/C,EAA0D;EACxD,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAClC,MAAA,IAAI,EAAE,SAD4B;EAElC,MAAA,KAAK,EAAE,SAF2B;EAGlC,MAAA,GAAG,EAAE,SAH6B;EAIlC,MAAA,IAAI,EAAE,SAJ4B;EAKlC,MAAA,MAAM,EAAE,SAL0B;EAMlC,MAAA,MAAM,EAAE;EAN0B,KAAd,CAAtB;EAQA,QAAI,OAAO,CAAC,YAAR,KAAyB,SAA7B,EAAwC,OAAO,CAAC,YAAR,GAAuB,OAAvB;EACzC;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,YAAT,CAAsB,YAAtB,EAAsE;EACpE,MAAI,OAAO,GAAG,YAAd;;EACA,MAAI,CAAC,cAAc,CAAC,OAAD,CAAf,IAA4B,CAAC,cAAc,CAAC,OAAD,CAA/C,EAA0D;EACxD,IAAA,OAAO,GAAGA,cAAY,CAAC,EAAD,EAAK,OAAL,EAAc;EAClC,MAAA,IAAI,EAAE,SAD4B;EAElC,MAAA,KAAK,EAAE,SAF2B;EAGlC,MAAA,GAAG,EAAE,SAH6B;EAIlC,MAAA,IAAI,EAAE,SAJ4B;EAKlC,MAAA,MAAM,EAAE,SAL0B;EAMlC,MAAA,MAAM,EAAE;EAN0B,KAAd,CAAtB;EAQD;;EACD,SAAO,OAAP;EACD;;EAED,SAAS,cAAT,CAAwB,OAAxB,EAAyF;EACvF,SAAO,UAAU,OAAV,IAAqB,WAAW,OAAhC,IAA2C,SAAS,OAApD,IAA+D,aAAa,OAA5E,IAAuF,eAAe,OAA7G;EACD;;EAED,SAAS,cAAT,CAAwB,OAAxB,EAAyF;EACvF,SACE,UAAU,OAAV,IAAqB,YAAY,OAAjC,IAA4C,YAAY,OAAxD,IAAmE,eAAe,OAAlF,IAA6F,eAAe,OAD9G;EAGD;;EAED,SAAS,gBAAT,CACE,GADF,EACc;EASZ,SACE2C,cAAA,CAAkB,GAAlB,KACAC,cAAA,CAAkB,GAAlB,CADA,IAEAC,kBAAA,CAAsB,GAAtB,CAFA,IAGAC,uBAAA,CAA2B,GAA3B,CAHA,IAIAnC,mBAAA,CAAuB,GAAvB,CAJA,IAKAC,kBAAA,CAAsB,GAAtB,CALA,IAMAmC,iBAAA,CAAqB,GAArB,CAPF;EASD;;EAED,SAAS,gBAAT,CAA0B,CAA1B,EAAsC,CAAtC,EAAgD;EAC9C,MAAI,CAAC,gBAAgB,CAAC,CAAD,CAAjB,IAAwB,CAAC,gBAAgB,CAAC,CAAD,CAA7C,EAAkD,OAAO,KAAP;EAClD,MAAIH,cAAA,CAAkB,CAAlB,KAAwB,CAACA,cAAA,CAAkB,CAAlB,CAA7B,EAAmD,OAAO,KAAP;EACnD,MAAID,cAAA,CAAkB,CAAlB,KAAwB,CAACA,cAAA,CAAkB,CAAlB,CAA7B,EAAmD,OAAO,KAAP;EACnD,MAAIE,kBAAA,CAAsB,CAAtB,KAA4B,CAACA,kBAAA,CAAsB,CAAtB,CAAjC,EAA2D,OAAO,KAAP;EAC3D,MAAIC,uBAAA,CAA2B,CAA3B,KAAiC,CAACA,uBAAA,CAA2B,CAA3B,CAAtC,EAAqE,OAAO,KAAP;EACrE,MAAInC,mBAAA,CAAuB,CAAvB,KAA6B,CAACA,mBAAA,CAAuB,CAAvB,CAAlC,EAA6D,OAAO,KAAP;EAC7D,MAAIC,kBAAA,CAAsB,CAAtB,KAA4B,CAACA,kBAAA,CAAsB,CAAtB,CAAjC,EAA2D,OAAO,KAAP;EAC3D,MAAImC,iBAAA,CAAqB,CAArB,KAA2B,CAACA,iBAAA,CAAqB,CAArB,CAAhC,EAAyD,OAAO,KAAP;EACzD,SAAO,IAAP;EACD;;EAUD,SAAS,gBAAT,CAA0B,WAA1B,EAA4D,IAA5D,EAAoF;EAClF,MAAM,QAAQ,GAAG,YAAY,CAAC,0BAAD,CAA7B;;EAEA,MAAIH,cAAA,CAAkB,WAAlB,CAAJ,EAAoC;EAClC,QAAM,IAAI,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAApB;EACA,QAAM,MAAM,GAAG,OAAO,CAAC,WAAD,EAAc,UAAd,CAAtB;EACA,QAAM,MAAM,GAAG,OAAO,CAAC,WAAD,EAAc,UAAd,CAAtB;EACA,QAAM,WAAW,GAAG,OAAO,CAAC,WAAD,EAAc,eAAd,CAA3B;EACA,QAAM,WAAW,GAAG,OAAO,CAAC,WAAD,EAAc,eAAd,CAA3B;EACA,QAAM,UAAU,GAAG,OAAO,CAAC,WAAD,EAAc,cAAd,CAA1B;EACA,QAAM,QAAQ,GAAG,IAAI,QAAJ,CAAa,IAAb,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,WAA/C,EAA4D,WAA5D,EAAyE,UAAzE,EAAqF,IAAI,CAAC,MAAD,CAAzF,CAAjB;EACA,WAAO;EACL,MAAA,OAAO,EAAEI,4BAAA,CAAgC,uBAAuB,CAAC,IAAD,CAAvD,EAA+D,QAA/D,EAAyE,YAAzE,CADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,IAAP;EAFjB,KAAP;EAID;;EAED,MAAIrC,mBAAA,CAAuB,WAAvB,CAAJ,EAAyC;EACvC,QAAM,OAAO,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAAvB;EACA,QAAM,QAAQ,GAAG,OAAO,CAAC,WAAD,EAAc,SAAd,CAAxB;EACA,QAAM,eAAe,GAAG,OAAO,CAAC,WAAD,EAAc,OAAd,CAA/B;EACA,QAAM,QAAQ,GAAGT,QAAA,CAAY,OAAO,CAAC,WAAD,EAAc,QAAd,CAAnB,CAAjB;;EACA,QAAI,QAAQ,KAAK,IAAI,CAAC,MAAD,CAArB,EAA+B;EAC7B,YAAM,IAAI,UAAJ,sDAC0C,QAD1C,sCAC8E,IAAI,CAAC,MAAD,CADlF,EAAN;EAGD;;EACD,QAAM,SAAQ,GAAG,IAAI,QAAJ,CAAa,OAAb,EAAsB,QAAtB,EAAgC,eAAhC,EAAiD,EAAjD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,QAApE,CAAjB;;EACA,WAAO;EACL,MAAA,OAAO,EAAE8C,4BAAA,CAAgC,uBAAuB,CAAC,IAAD,CAAvD,EAA+D,SAA/D,EAAyE,YAAzE,CADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,EAAP;EAFjB,KAAP;EAID;;EAED,MAAIpC,kBAAA,CAAsB,WAAtB,CAAJ,EAAwC;EACtC,QAAM,gBAAgB,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAAhC;;EACA,QAAM,SAAQ,GAAG,OAAO,CAAC,WAAD,EAAc,SAAd,CAAxB;;EACA,QAAM,MAAM,GAAG,OAAO,CAAC,WAAD,EAAc,OAAd,CAAtB;;EACA,QAAM,SAAQ,GAAGV,QAAA,CAAY,OAAO,CAAC,WAAD,EAAc,QAAd,CAAnB,CAAjB;;EACA,QAAI,SAAQ,KAAK,IAAI,CAAC,MAAD,CAArB,EAA+B;EAC7B,YAAM,IAAI,UAAJ,qDACyC,SADzC,sCAC6E,IAAI,CAAC,MAAD,CADjF,EAAN;EAGD;;EACD,QAAM,UAAQ,GAAG,IAAI,QAAJ,CAAa,gBAAb,EAA+B,SAA/B,EAAyC,MAAzC,EAAiD,EAAjD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,SAApE,CAAjB;;EACA,WAAO;EACL,MAAA,OAAO,EAAE8C,4BAAA,CAAgC,uBAAuB,CAAC,IAAD,CAAvD,EAA+D,UAA/D,EAAyE,YAAzE,CADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,EAAP;EAFjB,KAAP;EAID;;EAED,MAAIL,cAAA,CAAkB,WAAlB,CAAJ,EAAoC;EAClC,QAAM,QAAO,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAAvB;;EACA,QAAM,UAAQ,GAAG,OAAO,CAAC,WAAD,EAAc,SAAd,CAAxB;;EACA,QAAM,OAAM,GAAG,OAAO,CAAC,WAAD,EAAc,OAAd,CAAtB;;EACA,QAAM,UAAQ,GAAGzC,QAAA,CAAY,OAAO,CAAC,WAAD,EAAc,QAAd,CAAnB,CAAjB;;EACA,QAAI,UAAQ,KAAK,SAAb,IAA0B,UAAQ,KAAK,IAAI,CAAC,MAAD,CAA/C,EAAyD;EACvD,YAAM,IAAI,UAAJ,iDAAwD,UAAxD,sCAA4F,IAAI,CAAC,MAAD,CAAhG,EAAN;EACD;;EACD,QAAM,UAAQ,GAAG,IAAI,QAAJ,CAAa,QAAb,EAAsB,UAAtB,EAAgC,OAAhC,EAAwC,EAAxC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,IAAI,CAAC,MAAD,CAA/D,CAAjB;;EACA,WAAO;EACL,MAAA,OAAO,EAAE8C,4BAAA,CAAgC,uBAAuB,CAAC,IAAD,CAAvD,EAA+D,UAA/D,EAAyE,YAAzE,CADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,IAAP;EAFjB,KAAP;EAID;;EAED,MAAIH,kBAAA,CAAsB,WAAtB,CAAJ,EAAwC;EACtC,QAAM,SAAO,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAAvB;;EACA,QAAM,UAAQ,GAAG,OAAO,CAAC,WAAD,EAAc,SAAd,CAAxB;;EACA,QAAM,QAAM,GAAG,OAAO,CAAC,WAAD,EAAc,OAAd,CAAtB;;EACA,QAAM,KAAI,GAAG,OAAO,CAAC,WAAD,EAAc,QAAd,CAApB;;EACA,QAAM,OAAM,GAAG,OAAO,CAAC,WAAD,EAAc,UAAd,CAAtB;;EACA,QAAM,OAAM,GAAG,OAAO,CAAC,WAAD,EAAc,UAAd,CAAtB;;EACA,QAAM,YAAW,GAAG,OAAO,CAAC,WAAD,EAAc,eAAd,CAA3B;;EACA,QAAM,YAAW,GAAG,OAAO,CAAC,WAAD,EAAc,eAAd,CAA3B;;EACA,QAAM,WAAU,GAAG,OAAO,CAAC,WAAD,EAAc,cAAd,CAA1B;;EACA,QAAM,UAAQ,GAAG3C,QAAA,CAAY,OAAO,CAAC,WAAD,EAAc,QAAd,CAAnB,CAAjB;;EACA,QAAI,UAAQ,KAAK,SAAb,IAA0B,UAAQ,KAAK,IAAI,CAAC,MAAD,CAA/C,EAAyD;EACvD,YAAM,IAAI,UAAJ,qDACyC,UADzC,sCAC6E,IAAI,CAAC,MAAD,CADjF,EAAN;EAGD;;EACD,QAAI,UAAQ,GAAG,WAAf;;EACA,QAAI,UAAQ,KAAK,SAAjB,EAA4B;EAC1B,MAAA,UAAQ,GAAG,IAAI,QAAJ,CACT,SADS,EAET,UAFS,EAGT,QAHS,EAIT,KAJS,EAKT,OALS,EAMT,OANS,EAOT,YAPS,EAQT,YARS,EAST,WATS,EAUT,IAAI,CAAC,MAAD,CAVK,CAAX;EAYD;;EACD,WAAO;EACL,MAAA,OAAO,EAAE8C,4BAAA,CAAgC,uBAAuB,CAAC,IAAD,CAAvD,EAA+D,UAA/D,EAAyE,YAAzE,CADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,QAAP;EAFjB,KAAP;EAID;;EAED,MAAIF,uBAAA,CAA2B,WAA3B,CAAJ,EAA6C;EAC3C,QAAM,UAAQ,GAAG5C,QAAA,CAAY,OAAO,CAAC,WAAD,EAAc,QAAd,CAAnB,CAAjB;;EACA,QAAI,UAAQ,KAAK,SAAb,IAA0B,UAAQ,KAAK,IAAI,CAAC,MAAD,CAA/C,EAAyD;EACvD,YAAM,IAAI,UAAJ,qDACyC,UADzC,sCAC6E,IAAI,CAAC,MAAD,CADjF,EAAN;EAGD;;EAED,QAAM,QAAQ,GAAG,OAAO,CAAC,WAAD,EAAc,SAAd,CAAxB;EACA,QAAM,WAAW,GAAGA,QAAA,CAAY,QAAZ,CAApB;;EACA,QAAI,IAAI,CAAC,QAAD,CAAJ,IAAkB,IAAI,CAAC,QAAD,CAAJ,KAAmB,WAAzC,EAAsD;EACpD,YAAM,IAAI,UAAJ,2BAAkC,IAAI,CAAC,QAAD,CAAtC,6CAAmF,WAAnF,EAAN;EACD;;EAED,WAAO;EACL,MAAA,OAAO,EAAE,OAAO,CAAC,WAAD,EAAc,OAAd,CADX;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,KAAP,CAFjB;EAGL,MAAA,QAAQ,EAAE;EAHL,KAAP;EAKD;;EAED,MAAI6C,iBAAA,CAAqB,WAArB,CAAJ,EAAuC;EACrC,WAAO;EACL,MAAA,OAAO,EAAE,WADJ;EAEL,MAAA,SAAS,EAAE,WAAW,CAAC,IAAD,EAAO,IAAP;EAFjB,KAAP;EAID;;EAED,SAAO,EAAP;EACD;;;;;;;ECpnBD,IAAME,kBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,KAA1B,CAAzB;EACA,IAAM,yBAAyB,GAAG;EAChC,EAAA,IAAI,EAAE,EAD0B;EAEhC,EAAA,MAAM,EAAE,EAFwB;EAGhC,EAAA,MAAM,EAAE,EAHwB;EAIhC,EAAA,WAAW,EAAE,IAJmB;EAKhC,EAAA,WAAW,EAAE,IALmB;EAMhC,EAAA,UAAU,EAAE;EANoB,CAAlC;MASa,OAAb;EACE,mBAAY,gBAAZ,EAAwD;EAAA;;EACtD;EACA;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,SAAJ,CAAc,gDAAd,CAAN;EACD;;EAED,QAAM,EAAE,GAAGC,QAAA,CAAY,gBAAZ,CAAX;EACA,IAAAC,wBAAA,CAA4B,EAA5B;EACA,IAAA,WAAW,CAAC,IAAD,CAAX;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAAP;;EAEA,IAAW;EACT,UAAM,IAAI,GAAGC,uBAAA,CAA2B,IAA3B,EAAiC,SAAjC,EAA4C,MAA5C,CAAb;EACA,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpC,QAAA,KAAK,YAAK,KAAK,MAAM,CAAC,WAAZ,CAAL,eAAkC,IAAlC,MAD+B;EAEpC,QAAA,QAAQ,EAAE,KAF0B;EAGpC,QAAA,UAAU,EAAE,KAHwB;EAIpC,QAAA,YAAY,EAAE;EAJsB,OAAtC;EAMD;EACF;;EAtBH;EAAA;EAAA,SAwBE,eAAgB;EACd,UAAI,CAACL,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,aAAO,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAR;EACD;EA5BH;EAAA;EAAA,SA6BE,eAAqB;EACnB,UAAI,CAACA,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAR,CAApB;EACA,aAAO,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAR;EACD;EAjCH;EAAA;EAAA,SAkCE,eAAqB;EACnB,UAAI,CAACA,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,aAAOM,mBAAiB,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAD,CAAxB;EACD;EAtCH;EAAA;EAAA,SAuCE,eAAoB;EAClB,UAAI,CAACN,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,aAAOM,mBAAiB,CAAC,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAR,CAAxB;EACD;EA1CH;EAAA;EAAA,WA4CE,aAAI,oBAAJ,EAA0C;EACxC,UAAI,CAACN,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACjC,kCAA6EO,yBAAA,CAC3E,oBAD2E,EAE3E,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAF2E,CAA7E;EAAA,UAAQ,KAAR,yBAAQ,KAAR;EAAA,UAAe,OAAf,yBAAe,OAAf;EAAA,UAAwB,OAAxB,yBAAwB,OAAxB;EAAA,UAAiC,YAAjC,yBAAiC,YAAjC;EAAA,UAA+C,YAA/C,yBAA+C,YAA/C;EAAA,UAA6D,WAA7D,yBAA6D,WAA7D;;EAIA,UAAM,EAAE,GAAGC,UAAA,CACT,OAAO,CAAC,IAAD,EAAO,gBAAP,CADE,EAET,KAFS,EAGT,OAHS,EAIT,OAJS,EAKT,YALS,EAMT,YANS,EAOT,WAPS,CAAX;EASA,aAAO,IAAI,OAAJ,CAAY,EAAZ,CAAP;EACD;EA5DH;EAAA;EAAA,WA6DE,kBAAS,oBAAT,EAAoD;EAClD,UAAI,CAACR,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACjC,mCAA6EO,yBAAA,CAC3E,oBAD2E,EAE3E,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAF2E,CAA7E;EAAA,UAAQ,KAAR,0BAAQ,KAAR;EAAA,UAAe,OAAf,0BAAe,OAAf;EAAA,UAAwB,OAAxB,0BAAwB,OAAxB;EAAA,UAAiC,YAAjC,0BAAiC,YAAjC;EAAA,UAA+C,YAA/C,0BAA+C,YAA/C;EAAA,UAA6D,WAA7D,0BAA6D,WAA7D;;EAIA,UAAM,EAAE,GAAGC,UAAA,CACT,OAAO,CAAC,IAAD,EAAO,gBAAP,CADE,EAET,CAAC,KAFQ,EAGT,CAAC,OAHQ,EAIT,CAAC,OAJQ,EAKT,CAAC,YALQ,EAMT,CAAC,YANQ,EAOT,CAAC,WAPQ,CAAX;EASA,aAAO,IAAI,OAAJ,CAAY,EAAZ,CAAP;EACD;EA7EH;EAAA;EAAA,WA8EE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACR,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAGS,iBAAA,CAAqB,UAArB,CAAd;EACA,UAAM,OAAO,GAAGnD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,EAAiDR,kBAAjD,CAArB;EACA,UAAM,kBAAkB,GAAGS,wBAAA,CAA4B,QAA5B,EAAsC,YAAtC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,kBAA5D,CAApB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,yBAAyB,CAAC,YAAD,CAAjE,EAAiF,KAAjF,CAA1B;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAArB;;EACA,kCAA2DC,iBAAA,CACzD,KADyD,EAEzD,KAFyD,EAGzD,iBAHyD,EAIzD,YAJyD,EAKzD,YALyD,CAA3D;EAAA,UAAM,OAAN,yBAAM,OAAN;EAAA,UAAe,YAAf,yBAAe,YAAf;EAAA,UAA6B,YAA7B,yBAA6B,YAA7B;EAAA,UAA2C,WAA3C,yBAA2C,WAA3C;;EAOA,UAAI,KAAJ,EAAW,OAAX;;EAnBgF,gCAoBRrD,eAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CApBQ;;EAoB7E,MAAA,KApB6E,uBAoB7E,KApB6E;EAoBtE,MAAA,OApBsE,uBAoBtE,OApBsE;EAoB7D,MAAA,OApB6D,uBAoB7D,OApB6D;EAoBpD,MAAA,YApBoD,uBAoBpD,YApBoD;EAoBtC,MAAA,YApBsC,uBAoBtC,YApBsC;EAoBxB,MAAA,WApBwB,uBAoBxB,WApBwB;EA8BhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,CAAP;EACD;EA9GH;EAAA;EAAA,WA+GE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACsC,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAGS,iBAAA,CAAqB,UAArB,CAAd;EACA,UAAM,OAAO,GAAGnD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,EAAiDR,kBAAjD,CAArB;EACA,UAAM,kBAAkB,GAAGS,wBAAA,CAA4B,QAA5B,EAAsC,YAAtC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,kBAA5D,CAApB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,yBAAyB,CAAC,YAAD,CAAjE,EAAiF,KAAjF,CAA1B;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAArB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;;EACA,mCAA2DC,iBAAA,CACzD,KADyD,EAEzD,KAFyD,EAGzD,iBAHyD,EAIzD,YAJyD,EAKzD,YALyD,CAA3D;EAAA,UAAM,OAAN,0BAAM,OAAN;EAAA,UAAe,YAAf,0BAAe,YAAf;EAAA,UAA6B,YAA7B,0BAA6B,YAA7B;EAAA,UAA2C,WAA3C,0BAA2C,WAA3C;;EAOA,UAAI,KAAJ,EAAW,OAAX;;EAnBgF,iCAoBRrD,eAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CApBQ;;EAoB7E,MAAA,KApB6E,wBAoB7E,KApB6E;EAoBtE,MAAA,OApBsE,wBAoBtE,OApBsE;EAoB7D,MAAA,OApB6D,wBAoB7D,OApB6D;EAoBpD,MAAA,YApBoD,wBAoBpD,YApBoD;EAoBtC,MAAA,YApBsC,wBAoBtC,YApBsC;EAoBxB,MAAA,WApBwB,wBAoBxB,WApBwB;EA8BhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,CAAP;EACD;EA/IH;EAAA;EAAA,WAgJE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAACsC,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EAChC,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACKgB,mBAAA,CAAuB,cAAvB,EAAuC,YAAvC,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,SAAnC,EAA8CR,kBAA9C,CAArB;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EAChC,UAAM,YAAY,GAAGW,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,iBAAiB,GAAG;EACxB,QAAA,IAAI,EAAE,EADkB;EAExB,QAAA,MAAM,EAAE,IAFgB;EAGxB,QAAA,MAAM,EAAE,KAHgB;EAIxB,QAAA,WAAW,EAAE,OAJW;EAKxB,QAAA,WAAW,EAAE,OALW;EAMxB,QAAA,UAAU,EAAE;EANY,OAA1B;EAQA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,iBAAiB,CAAC,YAAD,CAAzD,EAAyE,IAAzE,CAA1B;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAlB;EACA,UAAM,SAAS,GAAGG,YAAA,CAAgB,EAAhB,EAAoB,iBAApB,EAAuC,YAAvC,EAAqD,YAArD,CAAlB;EACA,aAAO,IAAI,OAAJ,CAAY,SAAZ,CAAP;EACD;EAtKH;EAAA;EAAA,WAuKE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAACjB,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,KAAK,GAAGS,iBAAA,CAAqB,UAArB,CAAd;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAAnB;EACA,aAAO,MAAM,CAAC,GAAD,CAAN,CAAY,MAAZ,CAAmB,GAAnB,CAAP;EACD;EA7KH;EAAA;EAAA,WA8KE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACT,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,UAAM,OAAO,GAAG1C,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAI,QAAQ,GAAG,OAAO,CAAC,QAAvB;EACA,UAAI,QAAQ,KAAK,SAAjB,EAA4B,QAAQ,GAAGqC,kBAAA,CAAsB,QAAtB,CAAX,CAJ0B;;EAMtD,kCAAuCuB,wBAAA,CAA4B,OAA5B,CAAvC;EAAA,UAAQ,SAAR,yBAAQ,SAAR;EAAA,UAAmB,IAAnB,yBAAmB,IAAnB;EAAA,UAAyB,SAAzB,yBAAyB,SAAzB;;EACA,UAAM,YAAY,GAAGL,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAlB;EACA,UAAM,SAAS,GAAGI,YAAA,CAAgB,EAAhB,EAAoB,SAApB,EAA+B,IAA/B,EAAqC,YAArC,CAAlB;EACA,UAAM,cAAc,GAAG,IAAI,OAAJ,CAAY,SAAZ,CAAvB;EACA,aAAOZ,uBAAA,CAA2B,cAA3B,EAA2C,QAA3C,EAAkF,SAAlF,CAAP;EACD;EA1LH;EAAA;EAAA,WA2LE,kBAAM;EACJ,UAAI,CAACL,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,aAAOK,uBAAA,CAA2B,IAA3B,EAAiC,SAAjC,EAA4C,MAA5C,CAAP;EACD;EA9LH;EAAA;EAAA,WA+LE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACL,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACjC,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EArMH;EAAA;EAAA,WAsME,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,uDAAd,CAAN;EACD;EAxMH;EAAA;EAAA,WAyME,yBAAgB,IAAhB,EAAkD;EAChD,UAAI,CAACA,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACjC,UAAI,CAAC3C,QAAA,CAAY,IAAZ,CAAL,EAAwB;EACtB,cAAM,IAAI,SAAJ,CAAc,qCAAd,CAAN;EACD;;EACD,UAAM,YAAY,GAAG,IAAI,CAAC,QAA1B;;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B,cAAM,IAAI,SAAJ,CAAc,8CAAd,CAAN;EACD;;EACD,UAAM,QAAQ,GAAGS,kBAAA,CAAsB,YAAtB,CAAjB;EACA,UAAM,oBAAoB,GAAG,IAAI,CAAC,QAAlC;;EACA,UAAI,oBAAoB,KAAK,SAA7B,EAAwC;EACtC,cAAM,IAAI,SAAJ,CAAc,8CAAd,CAAN;EACD;;EACD,UAAM,QAAQ,GAAG6B,kBAAA,CAAsB,oBAAtB,CAAjB;EACA,aAAOwB,2BAAA,CAA+B,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAtC,EAAgE,QAAhE,EAA0E,QAA1E,CAAP;EACD;EAzNH;EAAA;EAAA,WA0NE,4BAAmB,SAAnB,EAA6D;EAC3D,UAAI,IAAI,GAAG,SAAX;EACA,UAAI,CAACnB,iBAAA,CAAqB,IAArB,CAAL,EAAiC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACjC,UAAI3C,QAAA,CAAY,IAAZ,CAAJ,EAAuB;EACrB,YAAM,gBAAgB,GAAG,IAAI,CAAC,QAA9B;;EACA,YAAI,gBAAgB,KAAK,SAAzB,EAAoC;EAClC,UAAA,IAAI,GAAG,gBAAP;EACD;EACF;;EACD,UAAM,QAAQ,GAAGsC,kBAAA,CAAsB,IAAtB,CAAjB;EACA,UAAM,QAAQ,GAAGyB,kBAAA,EAAjB;EACA,aAAOD,2BAAA,CAA+B,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAtC,EAAgE,QAAhE,EAA0E,QAA1E,CAAP;EACD;EAtOH;EAAA;EAAA,WAwOE,0BAAwB,iBAAxB,EAAwE;EACtE,UAAM,YAAY,GAAGE,QAAA,CAAY,iBAAZ,CAArB;EACA,UAAM,gBAAgB,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,QAArB,CAA8B,GAA9B,CAAzB;EACA,MAAAjB,wBAAA,CAA4B,gBAA5B;EACA,aAAO,IAAI,OAAJ,CAAY,gBAAZ,CAAP;EACD;EA7OH;EAAA;EAAA,WA8OE,+BACE,sBADF,EAC4D;EAE1D,UAAM,iBAAiB,GAAGiB,QAAA,CAAY,sBAAZ,CAA1B;EACA,UAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAD,CAAN,CAA0B,QAA1B,CAAmC,GAAnC,CAAzB;EACA,MAAAjB,wBAAA,CAA4B,gBAA5B;EACA,aAAO,IAAI,OAAJ,CAAY,gBAAZ,CAAP;EACD;EArPH;EAAA;EAAA,WAsPE,+BACE,sBADF,EAC4D;EAE1D,UAAM,iBAAiB,GAAGD,QAAA,CAAY,sBAAZ,CAA1B;EACA,UAAM,gBAAgB,GAAG,iBAAiB,CAAC,QAAlB,CAA2B,GAA3B,CAAzB;EACA,MAAAC,wBAAA,CAA4B,gBAA5B;EACA,aAAO,IAAI,OAAJ,CAAY,gBAAZ,CAAP;EACD;EA7PH;EAAA;EAAA,WA8PE,8BACE,qBADF,EAC0D;EAExD,UAAM,gBAAgB,GAAGD,QAAA,CAAY,qBAAZ,CAAzB;EACA,MAAAC,wBAAA,CAA4B,gBAA5B;EACA,aAAO,IAAI,OAAJ,CAAY,gBAAZ,CAAP;EACD;EApQH;EAAA;EAAA,WAqQE,cAAY,IAAZ,EAAmC;EACjC,UAAIJ,iBAAA,CAAqB,IAArB,CAAJ,EAAgC;EAC9B,eAAO,IAAI,OAAJ,CAAY,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAnB,CAAP;EACD;;EACD,aAAOS,iBAAA,CAAqB,IAArB,CAAP;EACD;EA1QH;EAAA;EAAA,WA2QE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,iBAAA,CAAqB,QAArB,CAAZ;EACA,UAAM,GAAG,GAAGA,iBAAA,CAAqB,QAArB,CAAZ;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,GAAD,EAAM,gBAAN,CAArB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,GAAD,EAAM,gBAAN,CAArB;EACA,UAAI,MAAM,CAAC,KAAD,CAAN,CAAc,MAAd,CAAqB,KAArB,CAAJ,EAAiC,OAAO,CAAC,CAAR;EACjC,UAAI,MAAM,CAAC,KAAD,CAAN,CAAc,OAAd,CAAsB,KAAtB,CAAJ,EAAkC,OAAO,CAAP;EAClC,aAAO,CAAP;EACD;EAnRH;;EAAA;EAAA;EAuRA,kBAAkB,CAAC,OAAD,EAAU,kBAAV,CAAlB;;EAEA,SAASH,mBAAT,CAA2B,OAA3B,EAA8D;EAC5D,SAAO,OAAQ,UAAkB,CAAC,MAA3B,KAAsC,WAAtC,GAAoD,OAApD,GAA+D,OAAe,CAAC,KAAtF;EACD;;EC3RD,IAAMJ,kBAAgB,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,aAA7B,EAA4C,aAA5C,EAA2D,YAA3D,CAAzB;MAEa,SAAb;EACE,qBACE,YADF,EAEE,aAFF,EAGE,WAHF,EAImE;EAAA,QAAjE,aAAiE,uEAAvBkB,kBAAA,EAAuB;;EAAA;;EAEjE,QAAM,OAAO,GAAGE,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,QAAQ,GAAGA,wBAAA,CAA4B,aAA5B,CAAjB;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,QAAQ,GAAGxD,kBAAA,CAAsB,aAAtB,CAAjB,CALiE;EAQjE;EACA;EACA;;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,6DAAf,CAAN;EACD;;EAED,IAAAyD,uBAAA,CAA2B,IAA3B,EAAiC,OAAjC,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,QAA5D;EACD;;EArBH;EAAA;EAAA,SAsBE,eAAY;EACV,UAAI,CAAC3B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EAzBH;EAAA;EAAA,SA0BE,eAAO;EACL,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO4B,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EA7BH;EAAA;EAAA,SA8BE,eAAW;EACT,UAAI,CAAC5B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO6B,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,IAA5C,CAAP;EACD;EAjCH;EAAA;EAAA,SAkCE,eAAQ;EACN,UAAI,CAAC7B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO8B,YAAA,CAAgB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAvB,EAAyC,IAAzC,CAAP;EACD;EArCH;EAAA;EAAA,SAsCE,eAAS;EACP,UAAI,CAAC9B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO+B,aAAA,CAAiB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB,EAA0C,IAA1C,CAAP;EACD;EAzCH;EAAA;EAAA,SA0CE,eAAa;EACX,UAAI,CAAC/B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOgC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EA7CH;EAAA;EAAA,SA8CE,eAAO;EACL,UAAI,CAAChC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOiC,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EAjDH;EAAA;EAAA,SAkDE,eAAa;EACX,UAAI,CAACjC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOkC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EArDH;EAAA;EAAA,SAsDE,eAAa;EACX,UAAI,CAAClC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOmC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EAzDH;EAAA;EAAA,SA0DE,eAAc;EACZ,UAAI,CAACnC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOoC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EA7DH;EAAA;EAAA,SA8DE,eAAc;EACZ,UAAI,CAACpC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOqC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EAjEH;EAAA;EAAA,SAkEE,eAAe;EACb,UAAI,CAACrC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOsC,mBAAA,CAAuB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA9B,EAAgD,IAAhD,CAAP;EACD;EArEH;EAAA;EAAA,SAsEE,eAAc;EACZ,UAAI,CAACtC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOuC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EAzEH;EAAA;EAAA,SA0EE,eAAgB;EACd,UAAI,CAACvC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOwC,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,IAAjD,CAAP;EACD;EA7EH;EAAA;EAAA,SA8EE,eAAc;EACZ,UAAI,CAACxC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOyC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EAjFH;EAAA;EAAA,WAkFE,eAAK,gBAAL,EAAqF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EACnF,UAAI,CAACzC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAC9B,UAAI,CAACvC,QAAA,CAAY,gBAAZ,CAAL,EAAoC;EAClC,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,gBAAtC;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,OAAR,EAAiB,WAAjB,EAA8B,MAA9B,CAA5B,CAAnB;EACA,UAAM,KAAK,GAAGC,eAAA,CAAmB,gBAAnB,EAAqC,UAArC,CAAd;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,mBAAd,CAAN;EACD;;EACD,UAAI,MAAM,GAAGC,oBAAA,CAAwB,IAAxB,EAA8B,UAA9B,CAAb;EACA,MAAA,MAAM,GAAGC,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,KAAzC,CAAT;EACA,MAAA,MAAM,GAAGD,oBAAA,CAAwB,MAAxB,EAAgC,UAAhC,CAAT;EAEA,UAAM,OAAO,GAAGnF,gBAAA,CAAoB,YAApB,CAAhB;EAEA,aAAOqF,cAAA,CAAkB,QAAlB,EAA4B,MAA5B,EAAoC,OAApC,CAAP;EACD;EAtGH;EAAA;EAAA,WAuGE,sBAAa,aAAb,EAAqD;EACnD,UAAI,CAAC/C,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,QAAQ,GAAG9B,kBAAA,CAAsB,aAAtB,CAAjB;EACA,aAAO,IAAI,SAAJ,CAAc,OAAO,CAAC,IAAD,EAAO,QAAP,CAArB,EAAuC,OAAO,CAAC,IAAD,EAAO,SAAP,CAA9C,EAAiE,OAAO,CAAC,IAAD,EAAO,OAAP,CAAxE,EAAyF,QAAzF,CAAP;EACD;EA3GH;EAAA;EAAA,WA4GE,aAAI,oBAAJ,EAAsF;EAAA,UAA1C,YAA0C,uEAAT,SAAS;EACpF,UAAI,CAAC8B,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAE9B,UAAM,QAAQ,GAAGpC,kBAAA,CAAsB,oBAAtB,CAAjB;EACA,UAAM,OAAO,GAAGF,gBAAA,CAAoB,YAApB,CAAhB;EAEA,aAAOsF,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,IAA5C,EAAkD,QAAlD,EAA4D,OAA5D,CAAP;EACD;EAnHH;EAAA;EAAA,WAoHE,kBACE,oBADF,EAEiD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EAE/C,UAAI,CAAChD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAE9B,UAAM,QAAQ,GAAGiD,6BAAA,CAAiCrF,kBAAA,CAAsB,oBAAtB,CAAjC,CAAjB;EACA,UAAM,OAAO,GAAGF,gBAAA,CAAoB,YAApB,CAAhB;EAEA,aAAOsF,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,IAA5C,EAAkD,QAAlD,EAA4D,OAA5D,CAAP;EACD;EA9HH;EAAA;EAAA,WA+HE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAAChD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGrC,cAAA,CAAkB,UAAlB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAGJ,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EAED,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,KAAnC,EAA0CR,kBAA1C,CAArB;EACA,UAAM,kBAAkB,GAAGS,wBAAA,CAA4B,KAA5B,EAAmC,YAAnC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,kBAA5D,CAApB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,SAAxC,EAAmD,KAAnD,CAA1B;;EAEA,UAAM,YAAY,qCAAQ,OAAR;EAAiB,QAAA,WAAW,EAAX;EAAjB,QAAlB;;EACA,UAAM,MAAM,GAAGgC,iBAAA,CAAqB,QAArB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,YAA5C,CAAf;EACA,UAAI,YAAY,KAAK,KAAjB,IAA0B,iBAAiB,KAAK,CAApD,EAAuD,OAAO,MAAP;EAEvD,UAAM,KAAN,GAAqC,MAArC,CAAM,KAAN;EAAA,UAAa,MAAb,GAAqC,MAArC,CAAa,MAAb;EAAA,UAAqB,KAArB,GAAqC,MAArC,CAAqB,KAArB;EAAA,UAA4B,IAA5B,GAAqC,MAArC,CAA4B,IAA5B;;EAvBgF,8BAwB9CC,aAAA,CAChC,KADgC,EAEhC,MAFgC,EAGhC,KAHgC,EAIhC,IAJgC,EAKhC,CALgC,EAMhC,CANgC,EAOhC,CAPgC,EAQhC,CARgC,EAShC,CATgC,EAUhC,CAVgC,EAWhC,iBAXgC,EAYhC,YAZgC,EAahC,YAbgC,EAchC,IAdgC,CAxB8C;;EAwB7E,MAAA,KAxB6E,qBAwB7E,KAxB6E;EAwBtE,MAAA,MAxBsE,qBAwBtE,MAxBsE;EAwB9D,MAAA,KAxB8D,qBAwB9D,KAxB8D;EAwBvD,MAAA,IAxBuD,qBAwBvD,IAxBuD;EAyChF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,CAAP;EACD;EA1KH;EAAA;EAAA,WA2KE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACnD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGrC,cAAA,CAAkB,UAAlB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAGJ,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EAED,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,KAAnC,EAA0CR,kBAA1C,CAArB;EACA,UAAM,kBAAkB,GAAGS,wBAAA,CAA4B,KAA5B,EAAmC,YAAnC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,kBAA5D,CAApB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,SAAxC,EAAmD,KAAnD,CAA1B;;EAEA,UAAM,YAAY,qCAAQ,OAAR;EAAiB,QAAA,WAAW,EAAX;EAAjB,QAAlB;;EACA,kCAAqCgC,iBAAA,CAAqB,QAArB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,YAA5C,CAArC;EAAA,UAAM,KAAN,yBAAM,KAAN;EAAA,UAAa,MAAb,yBAAa,MAAb;EAAA,UAAqB,KAArB,yBAAqB,KAArB;EAAA,UAA4B,IAA5B,yBAA4B,IAA5B;;EACA,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;;EACA,UAAI,YAAY,KAAK,KAAjB,IAA0B,iBAAiB,KAAK,CAApD,EAAuD;EACrD,eAAO,IAAI,QAAJ,CAAa,CAAC,KAAd,EAAqB,CAAC,MAAtB,EAA8B,CAAC,KAA/B,EAAsC,CAAC,IAAvC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,CAA5D,CAAP;EACD;;EAxB+E,+BAyB9CC,aAAA,CAChC,KADgC,EAEhC,MAFgC,EAGhC,KAHgC,EAIhC,IAJgC,EAKhC,CALgC,EAMhC,CANgC,EAOhC,CAPgC,EAQhC,CARgC,EAShC,CATgC,EAUhC,CAVgC,EAWhC,iBAXgC,EAYhC,YAZgC,EAahCC,0BAAA,CAA8B,YAA9B,CAbgC,EAchC,IAdgC,CAzB8C;;EAyB7E,MAAA,KAzB6E,sBAyB7E,KAzB6E;EAyBtE,MAAA,MAzBsE,sBAyBtE,MAzBsE;EAyB9D,MAAA,KAzB8D,sBAyB9D,KAzB8D;EAyBvD,MAAA,IAzBuD,sBAyBvD,IAzBuD;EA0ChF,aAAO,IAAI,QAAJ,CAAa,CAAC,KAAd,EAAqB,CAAC,MAAtB,EAA8B,CAAC,KAA/B,EAAsC,CAAC,IAAvC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,CAA5D,CAAP;EACD;EAtNH;EAAA;EAAA,WAuNE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAACpD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGrC,cAAA,CAAkB,UAAlB,CAAd;;EACA,8BAAmB,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,CAAnB,0BAAmD;EAA9C,YAAM,IAAI,WAAV;EACH,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAD,EAAQ,IAAR,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;EACpB;;EACD,aAAO0F,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,KAAD,EAAQ,QAAR,CAAlD,CAAP;EACD;EAhOH;EAAA;EAAA,WAiOE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACrD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,OAAO,GAAGtC,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAG4F,oBAAA,CAAwB,OAAxB,CAArB;EACA,aAAOC,oBAAA,CAAwB,IAAxB,EAA8B,YAA9B,CAAP;EACD;EAtOH;EAAA;EAAA,WAuOE,kBAAM;EACJ,UAAI,CAACvD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAOuD,oBAAA,CAAwB,IAAxB,CAAP;EACD;EA1OH;EAAA;EAAA,WA2OE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACvD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAjPH;EAAA;EAAA,WAkPE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,yDAAd,CAAN;EACD;EApPH;EAAA;EAAA,WAqPE,2BAA2E;EAAA,UAA3D,iBAA2D,uEAAT,SAAS;EACzE,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EAEA,UAAI,iBAAiB,KAAK,SAA1B,EAAqC,OAAOwD,sBAAA,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC,GAAvC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,QAA9D,CAAP;EAErC,UAAM,YAAY,GAAGC,cAAA,CAAkB,iBAAlB,CAArB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,YAAD,EAAe,cAAf,CAA1B;EAEA,aAAOD,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EAlRH;EAAA;EAAA,WAmRE,yBAAgB,IAAhB,EAAkD;EAChD,UAAI,CAACxD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAE9B,UAAI,QAAJ,EAAc,YAAd;;EACA,UAAIvC,QAAA,CAAY,IAAZ,CAAJ,EAAuB;EACrB,YAAM,YAAY,GAAG,IAAI,CAAC,QAA1B;;EACA,YAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B;EACA;EACA;EACA;EACA;EACA,UAAA,QAAQ,GAAGsC,kBAAA,CAAsB,IAAtB,CAAX;EACD,SAPD,MAOO;EACL,UAAA,QAAQ,GAAGA,kBAAA,CAAsB,YAAtB,CAAX;EAEA,UAAA,YAAY,GAAI,IAAkC,CAAC,SAAnD;EACD;EACF,OAdD,MAcO;EACL,QAAA,QAAQ,GAAGA,kBAAA,CAAsB,IAAtB,CAAX;EACD;;EAED,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EAEA,UAAI,IAAI,GAAG,CAAX;EAAA,UACE,MAAM,GAAG,CADX;EAAA,UAEE,MAAM,GAAG,CAFX;EAAA,UAGE,WAAW,GAAG,CAHhB;EAAA,UAIE,WAAW,GAAG,CAJhB;EAAA,UAKE,UAAU,GAAG,CALf;;EAMA,UAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B,QAAA,YAAY,GAAG0D,cAAA,CAAkB,YAAlB,CAAf;EACA,QAAA,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAAd;EACA,QAAA,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAhB;EACA,QAAA,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAhB;EACA,QAAA,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAArB;EACA,QAAA,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAArB;EACA,QAAA,UAAU,GAAG,OAAO,CAAC,YAAD,EAAe,cAAf,CAApB;EACD;;EAED,UAAM,EAAE,GAAGD,sBAAA,CACT,IADS,EAET,KAFS,EAGT,GAHS,EAIT,IAJS,EAKT,MALS,EAMT,MANS,EAOT,WAPS,EAQT,WARS,EAST,UATS,EAUT,QAVS,CAAX;EAYA,UAAM,OAAO,GAAGnD,4BAAA,CAAgC,QAAhC,EAA0C,EAA1C,EAA8C,YAA9C,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,QAA7E,CAAP;EACD;EA5UH;EAAA;EAAA,WA6UE,4BAAgB;EACd,UAAI,CAACvB,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAG2C,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAf;EACA,aAAOC,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,CAAP;EACD;EAnVH;EAAA;EAAA,WAoVE,2BAAe;EACb,UAAI,CAAC3D,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAG2C,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,WAAR,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGiB,wBAAA,CAA4B,IAA5B,EAAkC,UAAlC,CAAf;EACA,aAAOC,kBAAA,CAAsB,QAAtB,EAAgC,MAAhC,CAAP;EACD;EA1VH;EAAA;EAAA,WA2VE,wBAAY;EACV,UAAI,CAAC7D,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,MAAM,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CAFV;EAGL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,SAAP,CAHZ;EAIL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP;EAJX,OAAP;EAMD;EAnWH;EAAA;EAAA,WAoWE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGtC,gBAAA,CAAoB,YAApB,CAAhB;;EACA,UAAIsC,cAAA,CAAkB,IAAlB,CAAJ,EAA6B;EAC3B,QAAAnC,kBAAA,CAAsB,OAAtB,EAD2B;;EAE3B,eAAOQ,kBAAA,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,SAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,OAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,QAAP,CAJF,CAAP;EAMD;;EACD,aAAOV,cAAA,CAAkB,IAAlB,EAAwB,OAAxB,CAAP;EACD;EAhXH;EAAA;EAAA,WAiXE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,cAAA,CAAkB,QAAlB,CAAZ;EACA,UAAM,GAAG,GAAGA,cAAA,CAAkB,QAAlB,CAAZ;EACA,aAAO0B,cAAA,CACL,OAAO,CAAC,GAAD,EAAM,QAAN,CADF,EAEL,OAAO,CAAC,GAAD,EAAM,SAAN,CAFF,EAGL,OAAO,CAAC,GAAD,EAAM,OAAN,CAHF,EAIL,OAAO,CAAC,GAAD,EAAM,QAAN,CAJF,EAKL,OAAO,CAAC,GAAD,EAAM,SAAN,CALF,EAML,OAAO,CAAC,GAAD,EAAM,OAAN,CANF,CAAP;EAQD;EA5XH;;EAAA;EAAA;EAgYA,kBAAkB,CAAC,SAAD,EAAY,oBAAZ,CAAlB;;MCjYa,aAAb;EACE,yBACE,YADF,EAEE,aAFF,EAGE,WAHF,EAUmE;EAAA,QANjE,SAMiE,uEAN3B,CAM2B;EAAA,QALjE,WAKiE,uEALzB,CAKyB;EAAA,QAJjE,WAIiE,uEAJzB,CAIyB;EAAA,QAHjE,gBAGiE,uEAHpB,CAGoB;EAAA,QAFjE,gBAEiE,uEAFpB,CAEoB;EAAA,QADjE,eACiE,uEADrB,CACqB;EAAA,QAAjE,aAAiE,uEAAvBmC,kBAAA,EAAuB;;EAAA;;EAEjE,QAAM,OAAO,GAAGE,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,QAAQ,GAAGA,wBAAA,CAA4B,aAA5B,CAAjB;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,IAAI,GAAGA,wBAAA,CAA4B,SAA5B,CAAb;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,WAAW,GAAGA,wBAAA,CAA4B,gBAA5B,CAApB;EACA,QAAM,WAAW,GAAGA,wBAAA,CAA4B,gBAA5B,CAApB;EACA,QAAM,UAAU,GAAGA,wBAAA,CAA4B,eAA5B,CAAnB;EACA,QAAM,QAAQ,GAAGxD,kBAAA,CAAsB,aAAtB,CAAjB,CAXiE;EAcjE;EACA;EACA;;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,6DAAf,CAAN;EACD;;EAED,IAAA4F,2BAAA,CACE,IADF,EAEE,OAFF,EAGE,QAHF,EAIE,MAJF,EAKE,IALF,EAME,MANF,EAOE,MAPF,EAQE,WARF,EASE,WATF,EAUE,UAVF,EAWE,QAXF;EAaD;;EA7CH;EAAA;EAAA,SA8CE,eAAY;EACV,UAAI,CAAC5D,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EAjDH;EAAA;EAAA,SAkDE,eAAQ;EACN,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO4B,YAAA,CAAgB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAvB,EAAyC,IAAzC,CAAP;EACD;EArDH;EAAA;EAAA,SAsDE,eAAS;EACP,UAAI,CAAC5B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO6B,aAAA,CAAiB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB,EAA0C,IAA1C,CAAP;EACD;EAzDH;EAAA;EAAA,SA0DE,eAAa;EACX,UAAI,CAAC7B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO8B,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EA7DH;EAAA;EAAA,SA8DE,eAAO;EACL,UAAI,CAAC9B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO+B,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EAjEH;EAAA;EAAA,SAkEE,eAAQ;EACN,UAAI,CAAC/B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EArEH;EAAA;EAAA,SAsEE,eAAU;EACR,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,UAAP,CAAd;EACD;EAzEH;EAAA;EAAA,SA0EE,eAAU;EACR,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,UAAP,CAAd;EACD;EA7EH;EAAA;EAAA,SA8EE,eAAe;EACb,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,eAAP,CAAd;EACD;EAjFH;EAAA;EAAA,SAkFE,eAAe;EACb,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,eAAP,CAAd;EACD;EArFH;EAAA;EAAA,SAsFE,eAAc;EACZ,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,cAAP,CAAd;EACD;EAzFH;EAAA;EAAA,SA0FE,eAAO;EACL,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO0B,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EA7FH;EAAA;EAAA,SA8FE,eAAW;EACT,UAAI,CAAC1B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO2B,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,IAA5C,CAAP;EACD;EAjGH;EAAA;EAAA,SAkGE,eAAa;EACX,UAAI,CAAC3B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOgC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EArGH;EAAA;EAAA,SAsGE,eAAa;EACX,UAAI,CAAChC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOiC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EAzGH;EAAA;EAAA,SA0GE,eAAc;EACZ,UAAI,CAACjC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOkC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EA7GH;EAAA;EAAA,SA8GE,eAAc;EACZ,UAAI,CAAClC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOmC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EAjHH;EAAA;EAAA,SAkHE,eAAc;EACZ,UAAI,CAACnC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOqC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EArHH;EAAA;EAAA,SAsHE,eAAe;EACb,UAAI,CAACrC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOoC,mBAAA,CAAuB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA9B,EAAgD,IAAhD,CAAP;EACD;EAzHH;EAAA;EAAA,SA0HE,eAAgB;EACd,UAAI,CAACpC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOsC,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,IAAjD,CAAP;EACD;EA7HH;EAAA;EAAA,SA8HE,eAAc;EACZ,UAAI,CAACtC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOuC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EAjIH;EAAA;EAAA,WAkIE,eAAK,oBAAL,EAAyF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EACvF,UAAI,CAACvC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAClC,UAAI,CAACzC,QAAA,CAAY,oBAAZ,CAAL,EAAwC;EACtC,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,oBAAtC;EAEA,UAAM,OAAO,GAAGhF,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGiF,cAAA,CAAkB,QAAlB,EAA4B,CAC7C,KAD6C,EAE7C,MAF6C,EAG7C,aAH6C,EAI7C,aAJ6C,EAK7C,QAL6C,EAM7C,OAN6C,EAO7C,WAP6C,EAQ7C,YAR6C,EAS7C,QAT6C,EAU7C,MAV6C,CAA5B,CAAnB;EAYA,UAAM,KAAK,GAAGC,eAAA,CAAmB,oBAAnB,EAAyC,UAAzC,CAAd;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,wBAAd,CAAN;EACD;;EACD,UAAI,MAAM,GAAGmB,wBAAA,CAA4B,IAA5B,EAAkC,UAAlC,CAAb;EACA,MAAA,MAAM,GAAGjB,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,KAAzC,CAAT;EACA,MAAA,MAAM,GAAGiB,wBAAA,CAA4B,MAA5B,EAAoC,UAApC,CAAT;;EACA,kCACEC,+BAAA,CAAmC,QAAnC,EAA6C,MAA7C,EAAqD,OAArD,CADF;EAAA,UAAQ,IAAR,yBAAQ,IAAR;EAAA,UAAc,KAAd,yBAAc,KAAd;EAAA,UAAqB,GAArB,yBAAqB,GAArB;EAAA,UAA0B,IAA1B,yBAA0B,IAA1B;EAAA,UAAgC,MAAhC,yBAAgC,MAAhC;EAAA,UAAwC,MAAxC,yBAAwC,MAAxC;EAAA,UAAgD,WAAhD,yBAAgD,WAAhD;EAAA,UAA6D,WAA7D,yBAA6D,WAA7D;EAAA,UAA0E,UAA1E,yBAA0E,UAA1E;;EAGA,aAAOR,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EA7KH;EAAA;EAAA,WA8KE,yBAAuE;EAAA,UAAzD,iBAAyD,uEAAT,SAAS;EACrE,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EAEA,UAAI,iBAAiB,KAAK,SAA1B,EAAqC,OAAOsD,sBAAA,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC,GAAvC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,QAA9D,CAAP;EAErC,UAAM,YAAY,GAAGC,cAAA,CAAkB,iBAAlB,CAArB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,YAAD,EAAe,cAAf,CAA1B;EAEA,aAAOD,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EA3MH;EAAA;EAAA,WA4ME,uBAAc,iBAAd,EAA2D;EACzD,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAElC,UAAM,YAAY,GAAGvC,cAAA,CAAkB,iBAAlB,CAArB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,YAAD,EAAe,SAAf,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,YAAD,EAAe,OAAf,CAAnB;EACA,UAAI,QAAQ,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAAtB;EAEA,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAA1B;EAEA,MAAA,QAAQ,GAAGsG,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,QAAjD,CAAX;EACA,aAAOT,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EAzOH;EAAA;EAAA,WA0OE,sBAAa,aAAb,EAAqD;EACnD,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGhC,kBAAA,CAAsB,aAAtB,CAAjB;EACA,aAAO,IAAI,aAAJ,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,SAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,OAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,QAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,UAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,UAAP,CANF,EAOL,OAAO,CAAC,IAAD,EAAO,eAAP,CAPF,EAQL,OAAO,CAAC,IAAD,EAAO,eAAP,CARF,EASL,OAAO,CAAC,IAAD,EAAO,cAAP,CATF,EAUL,QAVK,CAAP;EAYD;EAzPH;EAAA;EAAA,WA0PE,aAAI,oBAAJ,EAAsF;EAAA,UAA1C,YAA0C,uEAAT,SAAS;EACpF,UAAI,CAACgC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGS,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAAyG,QAAzG,CAAQ,KAAR;EAAA,UAAe,MAAf,GAAyG,QAAzG,CAAe,MAAf;EAAA,UAAuB,KAAvB,GAAyG,QAAzG,CAAuB,KAAvB;EAAA,UAA8B,IAA9B,GAAyG,QAAzG,CAA8B,IAA9B;EAAA,UAAoC,KAApC,GAAyG,QAAzG,CAAoC,KAApC;EAAA,UAA2C,OAA3C,GAAyG,QAAzG,CAA2C,OAA3C;EAAA,UAAoD,OAApD,GAAyG,QAAzG,CAAoD,OAApD;EAAA,UAA6D,YAA7D,GAAyG,QAAzG,CAA6D,YAA7D;EAAA,UAA2E,YAA3E,GAAyG,QAAzG,CAA2E,YAA3E;EAAA,UAAyF,WAAzF,GAAyG,QAAzG,CAAyF,WAAzF;EACA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;;EACA,4BAAyFwG,WAAA,CACvF,OAAO,CAAC,IAAD,EAAO,QAAP,CADgF,EAEvF,OAAO,CAAC,IAAD,EAAO,SAAP,CAFgF,EAGvF,OAAO,CAAC,IAAD,EAAO,OAAP,CAHgF,EAIvF,OAAO,CAAC,IAAD,EAAO,QAAP,CAJgF,EAKvF,OAAO,CAAC,IAAD,EAAO,UAAP,CALgF,EAMvF,OAAO,CAAC,IAAD,EAAO,UAAP,CANgF,EAOvF,OAAO,CAAC,IAAD,EAAO,eAAP,CAPgF,EAQvF,OAAO,CAAC,IAAD,EAAO,eAAP,CARgF,EASvF,OAAO,CAAC,IAAD,EAAO,cAAP,CATgF,EAUvF,QAVuF,EAWvF,KAXuF,EAYvF,MAZuF,EAavF,KAbuF,EAcvF,IAduF,EAevF,KAfuF,EAgBvF,OAhBuF,EAiBvF,OAjBuF,EAkBvF,YAlBuF,EAmBvF,YAnBuF,EAoBvF,WApBuF,EAqBvF,OArBuF,CAAzF;EAAA,UAAQ,IAAR,mBAAQ,IAAR;EAAA,UAAc,KAAd,mBAAc,KAAd;EAAA,UAAqB,GAArB,mBAAqB,GAArB;EAAA,UAA0B,IAA1B,mBAA0B,IAA1B;EAAA,UAAgC,MAAhC,mBAAgC,MAAhC;EAAA,UAAwC,MAAxC,mBAAwC,MAAxC;EAAA,UAAgD,WAAhD,mBAAgD,WAAhD;EAAA,UAA6D,WAA7D,mBAA6D,WAA7D;EAAA,UAA0E,UAA1E,mBAA0E,UAA1E;;EAuBA,aAAOV,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EAnSH;EAAA;EAAA,WAoSE,kBACE,oBADF,EAEiD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EAE/C,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGS,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAAyG,QAAzG,CAAQ,KAAR;EAAA,UAAe,MAAf,GAAyG,QAAzG,CAAe,MAAf;EAAA,UAAuB,KAAvB,GAAyG,QAAzG,CAAuB,KAAvB;EAAA,UAA8B,IAA9B,GAAyG,QAAzG,CAA8B,IAA9B;EAAA,UAAoC,KAApC,GAAyG,QAAzG,CAAoC,KAApC;EAAA,UAA2C,OAA3C,GAAyG,QAAzG,CAA2C,OAA3C;EAAA,UAAoD,OAApD,GAAyG,QAAzG,CAAoD,OAApD;EAAA,UAA6D,YAA7D,GAAyG,QAAzG,CAA6D,YAA7D;EAAA,UAA2E,YAA3E,GAAyG,QAAzG,CAA2E,YAA3E;EAAA,UAAyF,WAAzF,GAAyG,QAAzG,CAAyF,WAAzF;EACA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;;EACA,6BAAyFwG,WAAA,CACvF,OAAO,CAAC,IAAD,EAAO,QAAP,CADgF,EAEvF,OAAO,CAAC,IAAD,EAAO,SAAP,CAFgF,EAGvF,OAAO,CAAC,IAAD,EAAO,OAAP,CAHgF,EAIvF,OAAO,CAAC,IAAD,EAAO,QAAP,CAJgF,EAKvF,OAAO,CAAC,IAAD,EAAO,UAAP,CALgF,EAMvF,OAAO,CAAC,IAAD,EAAO,UAAP,CANgF,EAOvF,OAAO,CAAC,IAAD,EAAO,eAAP,CAPgF,EAQvF,OAAO,CAAC,IAAD,EAAO,eAAP,CARgF,EASvF,OAAO,CAAC,IAAD,EAAO,cAAP,CATgF,EAUvF,QAVuF,EAWvF,CAAC,KAXsF,EAYvF,CAAC,MAZsF,EAavF,CAAC,KAbsF,EAcvF,CAAC,IAdsF,EAevF,CAAC,KAfsF,EAgBvF,CAAC,OAhBsF,EAiBvF,CAAC,OAjBsF,EAkBvF,CAAC,YAlBsF,EAmBvF,CAAC,YAnBsF,EAoBvF,CAAC,WApBsF,EAqBvF,OArBuF,CAAzF;EAAA,UAAQ,IAAR,oBAAQ,IAAR;EAAA,UAAc,KAAd,oBAAc,KAAd;EAAA,UAAqB,GAArB,oBAAqB,GAArB;EAAA,UAA0B,IAA1B,oBAA0B,IAA1B;EAAA,UAAgC,MAAhC,oBAAgC,MAAhC;EAAA,UAAwC,MAAxC,oBAAwC,MAAxC;EAAA,UAAgD,WAAhD,oBAAgD,WAAhD;EAAA,UAA6D,WAA7D,oBAA6D,WAA7D;EAAA,UAA0E,UAA1E,oBAA0E,UAA1E;;EAuBA,aAAOV,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EAhVH;EAAA;EAAA,WAiVE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,KAAK,GAAGiE,kBAAA,CAAsB,UAAtB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAG5G,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,kBAAkB,GAAGC,wBAAA,CAA4B,KAA5B,EAAmC,YAAnC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,kBAA9C,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGmD,mCAAA,CAAuC,OAAvC,EAAgD,YAAhD,CAA1B;;EAEA,kCACEC,qBAAA,CACE,OAAO,CAAC,IAAD,EAAO,QAAP,CADT,EAEE,OAAO,CAAC,IAAD,EAAO,SAAP,CAFT,EAGE,OAAO,CAAC,IAAD,EAAO,OAAP,CAHT,EAIE,OAAO,CAAC,IAAD,EAAO,QAAP,CAJT,EAKE,OAAO,CAAC,IAAD,EAAO,UAAP,CALT,EAME,OAAO,CAAC,IAAD,EAAO,UAAP,CANT,EAOE,OAAO,CAAC,IAAD,EAAO,eAAP,CAPT,EAQE,OAAO,CAAC,IAAD,EAAO,eAAP,CART,EASE,OAAO,CAAC,IAAD,EAAO,cAAP,CATT,EAUE,OAAO,CAAC,KAAD,EAAQ,QAAR,CAVT,EAWE,OAAO,CAAC,KAAD,EAAQ,SAAR,CAXT,EAYE,OAAO,CAAC,KAAD,EAAQ,OAAR,CAZT,EAaE,OAAO,CAAC,KAAD,EAAQ,QAAR,CAbT,EAcE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAdT,EAeE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAfT,EAgBE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAhBT,EAiBE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAjBT,EAkBE,OAAO,CAAC,KAAD,EAAQ,cAAR,CAlBT,EAmBE,QAnBF,EAoBE,WApBF,EAqBE,OArBF,CADF;EAAA,UAAM,KAAN,yBAAM,KAAN;EAAA,UAAa,MAAb,yBAAa,MAAb;EAAA,UAAqB,KAArB,yBAAqB,KAArB;EAAA,UAA4B,IAA5B,yBAA4B,IAA5B;EAAA,UAAkC,KAAlC,yBAAkC,KAAlC;EAAA,UAAyC,OAAzC,yBAAyC,OAAzC;EAAA,UAAkD,OAAlD,yBAAkD,OAAlD;EAAA,UAA2D,YAA3D,yBAA2D,YAA3D;EAAA,UAAyE,YAAzE,yBAAyE,YAAzE;EAAA,UAAuF,WAAvF,yBAAuF,WAAvF;;EAyBA,UAAM,UAAU,GAAGC,sBAAA,CAA0B,IAA1B,CAAnB;;EA3CgF,8BA6C9EnB,aAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,UAdF,CA7C8E;;EA4C7E,MAAA,KA5C6E,qBA4C7E,KA5C6E;EA4CtE,MAAA,MA5CsE,qBA4CtE,MA5CsE;EA4C9D,MAAA,KA5C8D,qBA4C9D,KA5C8D;EA4CvD,MAAA,IA5CuD,qBA4CvD,IA5CuD;EA4CjD,MAAA,KA5CiD,qBA4CjD,KA5CiD;EA4C1C,MAAA,OA5C0C,qBA4C1C,OA5C0C;EA4CjC,MAAA,OA5CiC,qBA4CjC,OA5CiC;EA4CxB,MAAA,YA5CwB,qBA4CxB,YA5CwB;EA4CV,MAAA,YA5CU,qBA4CV,YA5CU;EA4CI,MAAA,WA5CJ,qBA4CI,WA5CJ;;EAAA,gCA6DFrF,eAAA,CAC5E,IAD4E,EAE5E,KAF4E,EAG5E,OAH4E,EAI5E,OAJ4E,EAK5E,YAL4E,EAM5E,YAN4E,EAO5E,WAP4E,EAQ5E,WAR4E,CA7DE;;EA6D7E,MAAA,IA7D6E,uBA6D7E,IA7D6E;EA6DvE,MAAA,KA7DuE,uBA6DvE,KA7DuE;EA6DhE,MAAA,OA7DgE,uBA6DhE,OA7DgE;EA6DvD,MAAA,OA7DuD,uBA6DvD,OA7DuD;EA6D9C,MAAA,YA7D8C,uBA6D9C,YA7D8C;EA6DhC,MAAA,YA7DgC,uBA6DhC,YA7DgC;EA6DlB,MAAA,WA7DkB,uBA6DlB,WA7DkB;EAwEhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EA3ZH;EAAA;EAAA,WA4ZE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACoC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,KAAK,GAAGiE,kBAAA,CAAsB,UAAtB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAG5G,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,kBAAkB,GAAGC,wBAAA,CAA4B,KAA5B,EAAmC,YAAnC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,kBAA9C,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGmD,mCAAA,CAAuC,OAAvC,EAAgD,YAAhD,CAA1B;;EAEA,mCACEC,qBAAA,CACE,OAAO,CAAC,IAAD,EAAO,QAAP,CADT,EAEE,OAAO,CAAC,IAAD,EAAO,SAAP,CAFT,EAGE,OAAO,CAAC,IAAD,EAAO,OAAP,CAHT,EAIE,OAAO,CAAC,IAAD,EAAO,QAAP,CAJT,EAKE,OAAO,CAAC,IAAD,EAAO,UAAP,CALT,EAME,OAAO,CAAC,IAAD,EAAO,UAAP,CANT,EAOE,OAAO,CAAC,IAAD,EAAO,eAAP,CAPT,EAQE,OAAO,CAAC,IAAD,EAAO,eAAP,CART,EASE,OAAO,CAAC,IAAD,EAAO,cAAP,CATT,EAUE,OAAO,CAAC,KAAD,EAAQ,QAAR,CAVT,EAWE,OAAO,CAAC,KAAD,EAAQ,SAAR,CAXT,EAYE,OAAO,CAAC,KAAD,EAAQ,OAAR,CAZT,EAaE,OAAO,CAAC,KAAD,EAAQ,QAAR,CAbT,EAcE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAdT,EAeE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAfT,EAgBE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAhBT,EAiBE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAjBT,EAkBE,OAAO,CAAC,KAAD,EAAQ,cAAR,CAlBT,EAmBE,QAnBF,EAoBE,WApBF,EAqBE,OArBF,CADF;EAAA,UAAM,KAAN,0BAAM,KAAN;EAAA,UAAa,MAAb,0BAAa,MAAb;EAAA,UAAqB,KAArB,0BAAqB,KAArB;EAAA,UAA4B,IAA5B,0BAA4B,IAA5B;EAAA,UAAkC,KAAlC,0BAAkC,KAAlC;EAAA,UAAyC,OAAzC,0BAAyC,OAAzC;EAAA,UAAkD,OAAlD,0BAAkD,OAAlD;EAAA,UAA2D,YAA3D,0BAA2D,YAA3D;EAAA,UAAyE,YAAzE,0BAAyE,YAAzE;EAAA,UAAuF,WAAvF,0BAAuF,WAAvF;;EAyBA,UAAM,UAAU,GAAGC,sBAAA,CAA0B,IAA1B,CAAnB;;EA3CgF,+BA6C9EnB,aAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaEC,0BAAA,CAA8B,YAA9B,CAbF,EAcE,UAdF,CA7C8E;;EA4C7E,MAAA,KA5C6E,sBA4C7E,KA5C6E;EA4CtE,MAAA,MA5CsE,sBA4CtE,MA5CsE;EA4C9D,MAAA,KA5C8D,sBA4C9D,KA5C8D;EA4CvD,MAAA,IA5CuD,sBA4CvD,IA5CuD;EA4CjD,MAAA,KA5CiD,sBA4CjD,KA5CiD;EA4C1C,MAAA,OA5C0C,sBA4C1C,OA5C0C;EA4CjC,MAAA,OA5CiC,sBA4CjC,OA5CiC;EA4CxB,MAAA,YA5CwB,sBA4CxB,YA5CwB;EA4CV,MAAA,YA5CU,sBA4CV,YA5CU;EA4CI,MAAA,WA5CJ,sBA4CI,WA5CJ;;EAAA,iCA6DFtF,eAAA,CAC5E,IAD4E,EAE5E,KAF4E,EAG5E,OAH4E,EAI5E,OAJ4E,EAK5E,YAL4E,EAM5E,YAN4E,EAO5E,WAP4E,EAQ5E,WAR4E,CA7DE;;EA6D7E,MAAA,IA7D6E,wBA6D7E,IA7D6E;EA6DvE,MAAA,KA7DuE,wBA6DvE,KA7DuE;EA6DhE,MAAA,OA7DgE,wBA6DhE,OA7DgE;EA6DvD,MAAA,OA7DuD,wBA6DvD,OA7DuD;EA6D9C,MAAA,YA7D8C,wBA6D9C,YA7D8C;EA6DhC,MAAA,YA7DgC,wBA6DhC,YA7DgC;EA6DlB,MAAA,WA7DkB,wBA6DlB,WA7DkB;EAwEhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CACL,CAAC,KADI,EAEL,CAAC,MAFI,EAGL,CAAC,KAHI,EAIL,CAAC,IAJI,EAKL,CAAC,KALI,EAML,CAAC,OANI,EAOL,CAAC,OAPI,EAQL,CAAC,YARI,EASL,CAAC,YATI,EAUL,CAAC,WAVI,CAAP;EAYD;EAjfH;EAAA;EAAA,WAkfE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAACoC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EAChC,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACKkB,mBAAA,CAAuB,cAAvB,EAAuC,YAAvC,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,SAAnC,EAA8C,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAA9C,CAArB;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EAChC,UAAM,YAAY,GAAGG,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,iBAAiB,GAAG;EACxB,QAAA,GAAG,EAAE,CADmB;EAExB,QAAA,IAAI,EAAE,EAFkB;EAGxB,QAAA,MAAM,EAAE,EAHgB;EAIxB,QAAA,MAAM,EAAE,EAJgB;EAKxB,QAAA,WAAW,EAAE,IALW;EAMxB,QAAA,WAAW,EAAE,IANW;EAOxB,QAAA,UAAU,EAAE;EAPY,OAA1B;EASA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,iBAAiB,CAAC,YAAD,CAAzD,EAAyE,KAAzE,CAA1B;EAEA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAnB;EACA,UAAI,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAAjB;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAAxB;;EA7BoC,iCA8BgDqD,gBAAA,CAClF,IADkF,EAElF,KAFkF,EAGlF,GAHkF,EAIlF,IAJkF,EAKlF,MALkF,EAMlF,MANkF,EAOlF,WAPkF,EAQlF,WARkF,EASlF,UATkF,EAUlF,iBAVkF,EAWlF,YAXkF,EAYlF,YAZkF,CA9BhD;;EA8BjC,MAAA,IA9BiC,wBA8BjC,IA9BiC;EA8B3B,MAAA,KA9B2B,wBA8B3B,KA9B2B;EA8BpB,MAAA,GA9BoB,wBA8BpB,GA9BoB;EA8Bf,MAAA,IA9Be,wBA8Bf,IA9Be;EA8BT,MAAA,MA9BS,wBA8BT,MA9BS;EA8BD,MAAA,MA9BC,wBA8BD,MA9BC;EA8BO,MAAA,WA9BP,wBA8BO,WA9BP;EA8BoB,MAAA,WA9BpB,wBA8BoB,WA9BpB;EA8BiC,MAAA,UA9BjC,wBA8BiC,UA9BjC;EA6CpC,aAAOf,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,OAAO,CAAC,IAAD,EAAO,QAAP,CAVF,CAAP;EAYD;EA3iBH;EAAA;EAAA,WA4iBE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAACtD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,KAAK,GAAGiE,kBAAA,CAAsB,UAAtB,CAAd;;EACA,8BAAmB,CACjB,QADiB,EAEjB,SAFiB,EAGjB,OAHiB,EAIjB,QAJiB,EAKjB,UALiB,EAMjB,UANiB,EAOjB,eAPiB,EAQjB,eARiB,EASjB,cATiB,CAAnB,0BAUG;EAVE,YAAM,IAAI,WAAV;EAWH,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAD,EAAQ,IAAR,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;EACpB;;EACD,aAAOd,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,KAAD,EAAQ,QAAR,CAAlD,CAAP;EACD;EA/jBH;EAAA;EAAA,WAgkBE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACnD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,OAAO,GAAGxC,gBAAA,CAAoB,YAApB,CAAhB;;EACA,kCAAuC4D,wBAAA,CAA4B,OAA5B,CAAvC;EAAA,UAAQ,SAAR,yBAAQ,SAAR;EAAA,UAAmB,IAAnB,yBAAmB,IAAnB;EAAA,UAAyB,SAAzB,yBAAyB,SAAzB;;EACA,UAAM,YAAY,GAAGgC,oBAAA,CAAwB,OAAxB,CAArB;EACA,UAAM,YAAY,GAAGrC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,aAAOuD,wBAAA,CAA4B,IAA5B,EAAkC,SAAlC,EAA6C,YAA7C,EAA2D;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,SAAS,EAAT,SAAR;EAAmB,QAAA,YAAY,EAAZ;EAAnB,OAA3D,CAAP;EACD;EAvkBH;EAAA;EAAA,WAwkBE,kBAAM;EACJ,UAAI,CAACtE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOsE,wBAAA,CAA4B,IAA5B,EAAkC,MAAlC,CAAP;EACD;EA3kBH;EAAA;EAAA,WA4kBE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACtE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAllBH;EAAA;EAAA,WAmlBE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,6DAAd,CAAN;EACD;EArlBH;EAAA;EAAA,WAulBE,yBACE,oBADF,EAEwD;EAAA,UAAtD,YAAsD,uEAAT,SAAS;EAEtD,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGH,kBAAA,CAAsB,oBAAtB,CAAjB;EACA,UAAM,OAAO,GAAGrC,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,cAAc,GAAG+G,wBAAA,CAA4B,OAA5B,CAAvB;EACA,UAAM,OAAO,GAAGpE,4BAAA,CAAgC,QAAhC,EAA0C,IAA1C,EAAgD,cAAhD,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,OAAO,CAAC,IAAD,EAAO,QAAP,CAApF,CAAP;EACD;EAjmBH;EAAA;EAAA,WAkmBE,uBAAW;EACT,UAAI,CAACrB,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOoE,sBAAA,CAA0B,IAA1B,CAAP;EACD;EArmBH;EAAA;EAAA,WAsmBE,4BAAgB;EACd,UAAI,CAACpE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGyC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAf;EACA,aAAOC,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,CAAP;EACD;EA5mBH;EAAA;EAAA,WA6mBE,2BAAe;EACb,UAAI,CAACzD,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGyC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,WAAR,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGiB,wBAAA,CAA4B,IAA5B,EAAkC,UAAlC,CAAf;EACA,aAAOC,kBAAA,CAAsB,QAAtB,EAAgC,MAAhC,CAAP;EACD;EAnnBH;EAAA;EAAA,WAonBE,uBAAW;EACT,UAAI,CAAC3D,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOwE,sBAAA,CAA0B,IAA1B,CAAP;EACD;EAvnBH;EAAA;EAAA,WAwnBE,wBAAY;EACV,UAAI,CAACxE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,MAAM,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CAFV;EAGL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CAHX;EAIL,QAAA,cAAc,EAAE,OAAO,CAAC,IAAD,EAAO,eAAP,CAJlB;EAKL,QAAA,cAAc,EAAE,OAAO,CAAC,IAAD,EAAO,eAAP,CALlB;EAML,QAAA,SAAS,EAAE,OAAO,CAAC,IAAD,EAAO,UAAP,CANb;EAOL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,SAAP,CAPZ;EAQL,QAAA,aAAa,EAAE,OAAO,CAAC,IAAD,EAAO,cAAP,CARjB;EASL,QAAA,SAAS,EAAE,OAAO,CAAC,IAAD,EAAO,UAAP,CATb;EAUL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP;EAVX,OAAP;EAYD;EAtoBH;EAAA;EAAA,WAwoBE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGxC,gBAAA,CAAoB,YAApB,CAAhB;;EACA,UAAIwC,kBAAA,CAAsB,IAAtB,CAAJ,EAAiC;EAC/B,QAAArC,kBAAA,CAAsB,OAAtB,EAD+B;;EAE/B,eAAO2F,sBAAA,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,SAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,OAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,QAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,UAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,UAAP,CANF,EAOL,OAAO,CAAC,IAAD,EAAO,eAAP,CAPF,EAQL,OAAO,CAAC,IAAD,EAAO,eAAP,CARF,EASL,OAAO,CAAC,IAAD,EAAO,cAAP,CATF,EAUL,OAAO,CAAC,IAAD,EAAO,QAAP,CAVF,CAAP;EAYD;;EACD,aAAOW,kBAAA,CAAsB,IAAtB,EAA4B,OAA5B,CAAP;EACD;EA1pBH;EAAA;EAAA,WA2pBE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,kBAAA,CAAsB,QAAtB,CAAZ;EACA,UAAM,GAAG,GAAGA,kBAAA,CAAsB,QAAtB,CAAZ;;EACA,gCAAmB,CACjB,QADiB,EAEjB,SAFiB,EAGjB,OAHiB,EAIjB,QAJiB,EAKjB,UALiB,EAMjB,UANiB,EAOjB,eAPiB,EAQjB,eARiB,EASjB,cATiB,CAAnB,6BAUY;EAVP,YAAM,IAAI,aAAV;EAWH,YAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO/E,gBAAA,CAAoB,IAAI,GAAG,IAA3B,CAAP;EACpB;;EACD,aAAO,CAAP;EACD;EA9qBH;;EAAA;EAAA;EAkrBA,kBAAkB,CAAC,aAAD,EAAgB,wBAAhB,CAAlB;;MClrBa,QAAb;EACE,sBAUgD;EAAA,QAT9C,UAS8C,uEATP,CASO;EAAA,QAR9C,WAQ8C,uEARN,CAQM;EAAA,QAP9C,UAO8C,uEAPP,CAOO;EAAA,QAN9C,SAM8C,uEANR,CAMQ;EAAA,QAL9C,UAK8C,uEALP,CAKO;EAAA,QAJ9C,YAI8C,uEAJL,CAIK;EAAA,QAH9C,YAG8C,uEAHL,CAGK;EAAA,QAF9C,iBAE8C,uEAFA,CAEA;EAAA,QAD9C,iBAC8C,uEADA,CACA;EAAA,QAA9C,gBAA8C,uEAAD,CAAC;;EAAA;;EAE9C,QAAM,KAAK,GAAGuF,wBAAA,CAA4B,UAA5B,CAAd;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,KAAK,GAAGA,wBAAA,CAA4B,UAA5B,CAAd;EACA,QAAM,IAAI,GAAGA,wBAAA,CAA4B,SAA5B,CAAb;EACA,QAAM,KAAK,GAAGA,wBAAA,CAA4B,UAA5B,CAAd;EACA,QAAM,OAAO,GAAGA,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,OAAO,GAAGA,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,YAAY,GAAGA,wBAAA,CAA4B,iBAA5B,CAArB;EACA,QAAM,YAAY,GAAGA,wBAAA,CAA4B,iBAA5B,CAArB;EACA,QAAM,WAAW,GAAGA,wBAAA,CAA4B,gBAA5B,CAApB;EAEA,QAAM,IAAI,GAAGC,YAAA,CACX,KADW,EAEX,MAFW,EAGX,KAHW,EAIX,IAJW,EAKX,KALW,EAMX,OANW,EAOX,OAPW,EAQX,YARW,EASX,YATW,EAUX,WAVW,CAAb;;EAYA,4BAAmB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,YAAtD,EAAoE,YAApE,EAAkF,WAAlF,CAAnB,0BAAmH;EAA9G,UAAM,IAAI,WAAV;EACH,UAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAL,EAA4B,MAAM,IAAI,UAAJ,CAAe,gDAAf,CAAN;EAC5B,UAAM,QAAQ,GAAG,IAAI,CAAC,IAAL,CAAU,IAAV,CAAjB;EACA,UAAI,QAAQ,KAAK,CAAb,IAAkB,QAAQ,KAAK,IAAnC,EAAyC,MAAM,IAAI,UAAJ,CAAe,kDAAf,CAAN;EAC1C;;EAED,IAAA,WAAW,CAAC,IAAD,CAAX;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,OAAP,EAAgB,OAAhB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,OAAP,EAAgB,OAAhB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,YAAP,EAAqB,YAArB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,YAAP,EAAqB,YAArB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,WAAP,EAAoB,WAApB,CAAP;;EAEA,IAAW;EACT,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpC,QAAA,KAAK,YAAK,KAAK,MAAM,CAAC,WAAZ,CAAL,eAAkCC,wBAAA,CAA4B,IAA5B,CAAlC,MAD+B;EAEpC,QAAA,QAAQ,EAAE,KAF0B;EAGpC,QAAA,UAAU,EAAE,KAHwB;EAIpC,QAAA,YAAY,EAAE;EAJsB,OAAtC;EAMD;EACF;;EA9DH;EAAA;EAAA,SA+DE,eAAS;EACP,UAAI,CAACC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,KAAP,CAAd;EACD;EAlEH;EAAA;EAAA,SAmEE,eAAU;EACR,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,MAAP,CAAd;EACD;EAtEH;EAAA;EAAA,SAuEE,eAAS;EACP,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,KAAP,CAAd;EACD;EA1EH;EAAA;EAAA,SA2EE,eAAQ;EACN,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,IAAP,CAAd;EACD;EA9EH;EAAA;EAAA,SA+EE,eAAS;EACP,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,KAAP,CAAd;EACD;EAlFH;EAAA;EAAA,SAmFE,eAAW;EACT,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,OAAP,CAAd;EACD;EAtFH;EAAA;EAAA,SAuFE,eAAW;EACT,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,OAAP,CAAd;EACD;EA1FH;EAAA;EAAA,SA2FE,eAAgB;EACd,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,YAAP,CAAd;EACD;EA9FH;EAAA;EAAA,SA+FE,eAAgB;EACd,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,YAAP,CAAd;EACD;EAlGH;EAAA;EAAA,SAmGE,eAAe;EACb,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,WAAP,CAAd;EACD;EAtGH;EAAA;EAAA,SAuGE,eAAQ;EACN,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOF,YAAA,CACL,OAAO,CAAC,IAAD,EAAO,KAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,MAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,KAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,IAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,KAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,OAAP,CANF,EAOL,OAAO,CAAC,IAAD,EAAO,OAAP,CAPF,EAQL,OAAO,CAAC,IAAD,EAAO,YAAP,CARF,EASL,OAAO,CAAC,IAAD,EAAO,YAAP,CATF,EAUL,OAAO,CAAC,IAAD,EAAO,WAAP,CAVF,CAAP;EAYD;EArHH;EAAA;EAAA,SAsHE,eAAS;EACP,UAAI,CAACE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aACEF,YAAA,CACE,OAAO,CAAC,IAAD,EAAO,KAAP,CADT,EAEE,OAAO,CAAC,IAAD,EAAO,MAAP,CAFT,EAGE,OAAO,CAAC,IAAD,EAAO,KAAP,CAHT,EAIE,OAAO,CAAC,IAAD,EAAO,IAAP,CAJT,EAKE,OAAO,CAAC,IAAD,EAAO,KAAP,CALT,EAME,OAAO,CAAC,IAAD,EAAO,OAAP,CANT,EAOE,OAAO,CAAC,IAAD,EAAO,OAAP,CAPT,EAQE,OAAO,CAAC,IAAD,EAAO,YAAP,CART,EASE,OAAO,CAAC,IAAD,EAAO,YAAP,CATT,EAUE,OAAO,CAAC,IAAD,EAAO,WAAP,CAVT,MAWM,CAZR;EAcD;EAtIH;EAAA;EAAA,WAuIE,eAAK,YAAL,EAAoC;EAClC,UAAI,CAACE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,KAAK,GAAGlC,eAAA,CAAmB,YAAnB,EAAiC,CAC7C,MAD6C,EAE7C,OAF6C,EAG7C,cAH6C,EAI7C,cAJ6C,EAK7C,SAL6C,EAM7C,QAN6C,EAO7C,aAP6C,EAQ7C,SAR6C,EAS7C,OAT6C,EAU7C,OAV6C,CAAjC,CAAd;;EAYA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,uBAAd,CAAN;EACD;;EACD,yBAWI,KAXJ,CACE,KADF;EAAA,UACE,KADF,6BACU,OAAO,CAAC,IAAD,EAAO,KAAP,CADjB;EAAA,0BAWI,KAXJ,CAEE,MAFF;EAAA,UAEE,MAFF,8BAEW,OAAO,CAAC,IAAD,EAAO,MAAP,CAFlB;EAAA,yBAWI,KAXJ,CAGE,KAHF;EAAA,UAGE,KAHF,6BAGU,OAAO,CAAC,IAAD,EAAO,KAAP,CAHjB;EAAA,wBAWI,KAXJ,CAIE,IAJF;EAAA,UAIE,IAJF,4BAIS,OAAO,CAAC,IAAD,EAAO,IAAP,CAJhB;EAAA,yBAWI,KAXJ,CAKE,KALF;EAAA,UAKE,KALF,6BAKU,OAAO,CAAC,IAAD,EAAO,KAAP,CALjB;EAAA,2BAWI,KAXJ,CAME,OANF;EAAA,UAME,OANF,+BAMY,OAAO,CAAC,IAAD,EAAO,OAAP,CANnB;EAAA,2BAWI,KAXJ,CAOE,OAPF;EAAA,UAOE,OAPF,+BAOY,OAAO,CAAC,IAAD,EAAO,OAAP,CAPnB;EAAA,gCAWI,KAXJ,CAQE,YARF;EAAA,UAQE,YARF,oCAQiB,OAAO,CAAC,IAAD,EAAO,YAAP,CARxB;EAAA,gCAWI,KAXJ,CASE,YATF;EAAA,UASE,YATF,oCASiB,OAAO,CAAC,IAAD,EAAO,YAAP,CATxB;EAAA,+BAWI,KAXJ,CAUE,WAVF;EAAA,UAUE,WAVF,mCAUgB,OAAO,CAAC,IAAD,EAAO,WAAP,CAVvB;EAYA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EArKH;EAAA;EAAA,WAsKE,mBAAO;EACL,UAAI,CAACkC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO7B,6BAAA,CAAiC,IAAjC,CAAP;EACD;EAzKH;EAAA;EAAA,WA0KE,eAAG;EACD,UAAI,CAAC6B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,IAAI,QAAJ,CACL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,KAAP,CAAhB,CADK,EAEL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,MAAP,CAAhB,CAFK,EAGL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,KAAP,CAAhB,CAHK,EAIL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,IAAP,CAAhB,CAJK,EAKL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,KAAP,CAAhB,CALK,EAML,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,OAAP,CAAhB,CANK,EAOL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,OAAP,CAAhB,CAPK,EAQL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,YAAP,CAAhB,CARK,EASL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,YAAP,CAAhB,CATK,EAUL,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,IAAD,EAAO,WAAP,CAAhB,CAVK,CAAP;EAYD;EAxLH;EAAA;EAAA,WAyLE,aAAI,KAAJ,EAAuE;EAAA,UAA1C,YAA0C,uEAAT,SAAS;EACrE,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAClC,kCACEnE,yBAAA,CAA6B,KAA7B,CADF;EAAA,UAAM,KAAN,yBAAM,KAAN;EAAA,UAAa,MAAb,yBAAa,MAAb;EAAA,UAAqB,KAArB,yBAAqB,KAArB;EAAA,UAA4B,IAA5B,yBAA4B,IAA5B;EAAA,UAAkC,KAAlC,yBAAkC,KAAlC;EAAA,UAAyC,OAAzC,yBAAyC,OAAzC;EAAA,UAAkD,OAAlD,yBAAkD,OAAlD;EAAA,UAA2D,YAA3D,yBAA2D,YAA3D;EAAA,UAAyE,YAAzE,yBAAyE,YAAzE;EAAA,UAAuF,WAAvF,yBAAuF,WAAvF;;EAEA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,UAAU,GAAGqH,wBAAA,CAA4B,OAA5B,CAAnB;;EALqE,4BAM+BC,WAAA,CAClG,OAAO,CAAC,IAAD,EAAO,KAAP,CAD2F,EAElG,OAAO,CAAC,IAAD,EAAO,MAAP,CAF2F,EAGlG,OAAO,CAAC,IAAD,EAAO,KAAP,CAH2F,EAIlG,OAAO,CAAC,IAAD,EAAO,IAAP,CAJ2F,EAKlG,OAAO,CAAC,IAAD,EAAO,KAAP,CAL2F,EAMlG,OAAO,CAAC,IAAD,EAAO,OAAP,CAN2F,EAOlG,OAAO,CAAC,IAAD,EAAO,OAAP,CAP2F,EAQlG,OAAO,CAAC,IAAD,EAAO,YAAP,CAR2F,EASlG,OAAO,CAAC,IAAD,EAAO,YAAP,CAT2F,EAUlG,OAAO,CAAC,IAAD,EAAO,WAAP,CAV2F,EAWlG,KAXkG,EAYlG,MAZkG,EAalG,KAbkG,EAclG,IAdkG,EAelG,KAfkG,EAgBlG,OAhBkG,EAiBlG,OAjBkG,EAkBlG,YAlBkG,EAmBlG,YAnBkG,EAoBlG,WApBkG,EAqBlG,UArBkG,CAN/B;;EAMlE,MAAA,KANkE,mBAMlE,KANkE;EAM3D,MAAA,MAN2D,mBAM3D,MAN2D;EAMnD,MAAA,KANmD,mBAMnD,KANmD;EAM5C,MAAA,IAN4C,mBAM5C,IAN4C;EAMtC,MAAA,KANsC,mBAMtC,KANsC;EAM/B,MAAA,OAN+B,mBAM/B,OAN+B;EAMtB,MAAA,OANsB,mBAMtB,OANsB;EAMb,MAAA,YANa,mBAMb,YANa;EAMC,MAAA,YAND,mBAMC,YAND;EAMe,MAAA,WANf,mBAMe,WANf;EA6BrE,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EAvNH;EAAA;EAAA,WAwNE,kBAAS,KAAT,EAAsF;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACpF,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAClC,mCACEnE,yBAAA,CAA6B,KAA7B,CADF;EAAA,UAAM,KAAN,0BAAM,KAAN;EAAA,UAAa,MAAb,0BAAa,MAAb;EAAA,UAAqB,KAArB,0BAAqB,KAArB;EAAA,UAA4B,IAA5B,0BAA4B,IAA5B;EAAA,UAAkC,KAAlC,0BAAkC,KAAlC;EAAA,UAAyC,OAAzC,0BAAyC,OAAzC;EAAA,UAAkD,OAAlD,0BAAkD,OAAlD;EAAA,UAA2D,YAA3D,0BAA2D,YAA3D;EAAA,UAAyE,YAAzE,0BAAyE,YAAzE;EAAA,UAAuF,WAAvF,0BAAuF,WAAvF;;EAEA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,UAAU,GAAGqH,wBAAA,CAA4B,OAA5B,CAAnB;;EALoF,6BAMgBC,WAAA,CAClG,OAAO,CAAC,IAAD,EAAO,KAAP,CAD2F,EAElG,OAAO,CAAC,IAAD,EAAO,MAAP,CAF2F,EAGlG,OAAO,CAAC,IAAD,EAAO,KAAP,CAH2F,EAIlG,OAAO,CAAC,IAAD,EAAO,IAAP,CAJ2F,EAKlG,OAAO,CAAC,IAAD,EAAO,KAAP,CAL2F,EAMlG,OAAO,CAAC,IAAD,EAAO,OAAP,CAN2F,EAOlG,OAAO,CAAC,IAAD,EAAO,OAAP,CAP2F,EAQlG,OAAO,CAAC,IAAD,EAAO,YAAP,CAR2F,EASlG,OAAO,CAAC,IAAD,EAAO,YAAP,CAT2F,EAUlG,OAAO,CAAC,IAAD,EAAO,WAAP,CAV2F,EAWlG,CAAC,KAXiG,EAYlG,CAAC,MAZiG,EAalG,CAAC,KAbiG,EAclG,CAAC,IAdiG,EAelG,CAAC,KAfiG,EAgBlG,CAAC,OAhBiG,EAiBlG,CAAC,OAjBiG,EAkBlG,CAAC,YAlBiG,EAmBlG,CAAC,YAnBiG,EAoBlG,CAAC,WApBiG,EAqBlG,UArBkG,CANhB;;EAMjF,MAAA,KANiF,oBAMjF,KANiF;EAM1E,MAAA,MAN0E,oBAM1E,MAN0E;EAMlE,MAAA,KANkE,oBAMlE,KANkE;EAM3D,MAAA,IAN2D,oBAM3D,IAN2D;EAMrD,MAAA,KANqD,oBAMrD,KANqD;EAM9C,MAAA,OAN8C,oBAM9C,OAN8C;EAMrC,MAAA,OANqC,oBAMrC,OANqC;EAM5B,MAAA,YAN4B,oBAM5B,YAN4B;EAMd,MAAA,YANc,oBAMd,YANc;EAMA,MAAA,WANA,oBAMA,WANA;EA6BpF,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EAtPH;EAAA;EAAA,WAuPE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EAChC,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,MAAP,CAApB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAAlB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,OAAO,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAArB;EACA,UAAI,OAAO,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAArB;EACA,UAAI,YAAY,GAAG,OAAO,CAAC,IAAD,EAAO,YAAP,CAA1B;EACA,UAAI,YAAY,GAAG,OAAO,CAAC,IAAD,EAAO,YAAP,CAA1B;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAzB;EAEA,UAAI,kBAAkB,GAAGG,0BAAA,CACvB,KADuB,EAEvB,MAFuB,EAGvB,KAHuB,EAIvB,IAJuB,EAKvB,KALuB,EAMvB,OANuB,EAOvB,OAPuB,EAQvB,YARuB,EASvB,YATuB,EAUvB,WAVuB,CAAzB;EAYA,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACK7D,mBAAA,CAAuB,cAAvB,EAAuC,YAAvC,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAI,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,SAAnC,CAAnB;EACA,UAAI,mBAAmB,GAAG,IAA1B;;EACA,UAAI,CAAC,YAAL,EAAmB;EACjB,QAAA,mBAAmB,GAAG,KAAtB;EACA,QAAA,YAAY,GAAG,YAAf;EACD;;EACD,MAAA,kBAAkB,GAAGC,wBAAA,CAA4B,kBAA5B,EAAgD,YAAhD,CAArB;EACA,UAAI,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,SAAlC,CAAlB;EACA,UAAI,kBAAkB,GAAG,IAAzB;;EACA,UAAI,CAAC,WAAL,EAAkB;EAChB,QAAA,kBAAkB,GAAG,KAArB;EACA,QAAA,WAAW,GAAG,kBAAd;EACD;;EACD,UAAI,WAAW,KAAK,MAApB,EAA4B,WAAW,GAAG,kBAAd;;EAC5B,UAAI,CAAC,mBAAD,IAAwB,CAAC,kBAA7B,EAAiD;EAC/C,cAAM,IAAI,UAAJ,CAAe,yDAAf,CAAN;EACD;;EACD,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGmD,mCAAA,CAAuC,OAAvC,EAAgD,YAAhD,CAA1B;EACA,UAAI,UAAU,GAAGW,wBAAA,CAA4B,OAA5B,CAAjB;;EAlDoC,kCAoDFG,yBAAA,CAChC,KADgC,EAEhC,MAFgC,EAGhC,KAHgC,EAIhC,IAJgC,EAKhC,WALgC,EAMhC,UANgC,CApDE;;EAoDjC,MAAA,KApDiC,yBAoDjC,KApDiC;EAoD1B,MAAA,MApD0B,yBAoD1B,MApD0B;EAoDlB,MAAA,KApDkB,yBAoDlB,KApDkB;EAoDX,MAAA,IApDW,yBAoDX,IApDW;;EAAA,8BA6DlC/B,aAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,UAdF,CA7DkC;;EA4DjC,MAAA,KA5DiC,qBA4DjC,KA5DiC;EA4D1B,MAAA,MA5D0B,qBA4D1B,MA5D0B;EA4DlB,MAAA,KA5DkB,qBA4DlB,KA5DkB;EA4DX,MAAA,IA5DW,qBA4DX,IA5DW;EA4DL,MAAA,KA5DK,qBA4DL,KA5DK;EA4DE,MAAA,OA5DF,qBA4DE,OA5DF;EA4DW,MAAA,OA5DX,qBA4DW,OA5DX;EA4DoB,MAAA,YA5DpB,qBA4DoB,YA5DpB;EA4DkC,MAAA,YA5DlC,qBA4DkC,YA5DlC;EA4DgD,MAAA,WA5DhD,qBA4DgD,WA5DhD;;EAAA,kCA8ElCgC,yBAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,UAdF,CA9EkC;;EA6EjC,MAAA,KA7EiC,yBA6EjC,KA7EiC;EA6E1B,MAAA,MA7E0B,yBA6E1B,MA7E0B;EA6ElB,MAAA,KA7EkB,yBA6ElB,KA7EkB;EA6EX,MAAA,IA7EW,yBA6EX,IA7EW;EA6EL,MAAA,KA7EK,yBA6EL,KA7EK;EA6EE,MAAA,OA7EF,yBA6EE,OA7EF;EA6EW,MAAA,OA7EX,yBA6EW,OA7EX;EA6EoB,MAAA,YA7EpB,yBA6EoB,YA7EpB;EA6EkC,MAAA,YA7ElC,yBA6EkC,YA7ElC;EA6EgD,MAAA,WA7EhD,yBA6EgD,WA7EhD;;EAAA,kCA8FFC,uBAAA,CAA2B,KAA3B,EAAkC,MAAlC,EAA0C,KAA1C,EAAiD,IAAjD,EAAuD,WAAvD,EAAoE,UAApE,CA9FE;;EA8FjC,MAAA,KA9FiC,yBA8FjC,KA9FiC;EA8F1B,MAAA,MA9F0B,yBA8F1B,MA9F0B;EA8FlB,MAAA,KA9FkB,yBA8FlB,KA9FkB;EA8FX,MAAA,IA9FW,yBA8FX,IA9FW;;EA+FpC,UAAIjF,uBAAA,CAA2B,UAA3B,CAAJ,EAA4C;EAC1C,QAAA,UAAU,GAAGkF,yBAAA,CAA6B,UAA7B,EAAyC,KAAzC,EAAgD,MAAhD,EAAwD,KAAxD,EAA+D,CAA/D,CAAb;EACD;;EAjGmC,gCAkG0CvH,eAAA,CAC5E,IAD4E,EAE5E,KAF4E,EAG5E,OAH4E,EAI5E,OAJ4E,EAK5E,YAL4E,EAM5E,YAN4E,EAO5E,WAP4E,EAQ5E,WAR4E,EAS5E,UAT4E,CAlG1C;;EAkGjC,MAAA,IAlGiC,uBAkGjC,IAlGiC;EAkG3B,MAAA,KAlG2B,uBAkG3B,KAlG2B;EAkGpB,MAAA,OAlGoB,uBAkGpB,OAlGoB;EAkGX,MAAA,OAlGW,uBAkGX,OAlGW;EAkGF,MAAA,YAlGE,uBAkGF,YAlGE;EAkGY,MAAA,YAlGZ,uBAkGY,YAlGZ;EAkG0B,MAAA,WAlG1B,uBAkG0B,WAlG1B;EA8GpC,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EAtWH;EAAA;EAAA,WAuWE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAACgH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,MAAP,CAApB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAAlB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,KAAP,CAAnB;EACA,UAAI,OAAO,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAArB;EACA,UAAI,OAAO,GAAG,OAAO,CAAC,IAAD,EAAO,OAAP,CAArB;EACA,UAAI,YAAY,GAAG,OAAO,CAAC,IAAD,EAAO,YAAP,CAA1B;EACA,UAAI,YAAY,GAAG,OAAO,CAAC,IAAD,EAAO,YAAP,CAA1B;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAzB;EAEA,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;EAChC,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACK1D,mBAAA,CAAuB,MAAvB,EAA+B,YAA/B,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAM,IAAI,GAAG4H,2BAAA,CAA+B,OAA/B,CAAb;EACA,UAAI,IAAI,KAAK,SAAb,EAAwB,MAAM,IAAI,UAAJ,CAAe,yBAAf,CAAN;EACxB,UAAM,UAAU,GAAGP,wBAAA,CAA4B,OAA5B,CAAnB,CApBoC;;EAAA,mCAuBFG,yBAAA,CAA6B,KAA7B,EAAoC,MAApC,EAA4C,KAA5C,EAAmD,IAAnD,EAAyD,IAAzD,EAA+D,UAA/D,CAvBE;;EAuBjC,MAAA,KAvBiC,0BAuBjC,KAvBiC;EAuB1B,MAAA,MAvB0B,0BAuB1B,MAvB0B;EAuBlB,MAAA,KAvBkB,0BAuBlB,KAvBkB;EAuBX,MAAA,IAvBW,0BAuBX,IAvBW;EAwBpC;EACA,UAAI,YAAJ;;EACA,UAAI/E,uBAAA,CAA2B,UAA3B,CAAJ,EAA4C;EAC1C,QAAA,YAAY,GAAGkF,yBAAA,CAA6B,UAA7B,EAAyC,KAAzC,EAAgD,MAAhD,EAAwD,KAAxD,EAA+D,CAA/D,CAAf;EACD;;EA5BmC,iCA6B0CvH,eAAA,CAC5E,IAD4E,EAE5E,KAF4E,EAG5E,OAH4E,EAI5E,OAJ4E,EAK5E,YAL4E,EAM5E,YAN4E,EAO5E,WAP4E,EAQ5E,IAR4E,EAS5E,YAT4E,CA7B1C;;EA6BjC,MAAA,IA7BiC,wBA6BjC,IA7BiC;EA6B3B,MAAA,KA7B2B,wBA6B3B,KA7B2B;EA6BpB,MAAA,OA7BoB,wBA6BpB,OA7BoB;EA6BX,MAAA,OA7BW,wBA6BX,OA7BW;EA6BF,MAAA,YA7BE,wBA6BF,YA7BE;EA6BY,MAAA,YA7BZ,wBA6BY,YA7BZ;EA6B0B,MAAA,WA7B1B,wBA6B0B,WA7B1B;;EAwCpC;EACA,+BAAkBqF,aAAA,CAChB,KADgB,EAEhB,MAFgB,EAGhB,KAHgB,EAIhB,IAJgB,EAKhB,KALgB,EAMhB,OANgB,EAOhB,OAPgB,EAQhB,YARgB,EAShB,YATgB,EAUhB,WAVgB,EAWhB,CAXgB,EAYhB,IAZgB,EAahB,OAbgB,EAchB,UAdgB,CAAlB;EAAA,UAAQ,KAAR,sBAAQ,KAAR;;EAgBA,aAAO,KAAP;EACD;EAjaH;EAAA;EAAA,WAkaE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAAC2B,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,OAAO,GAAGpH,gBAAA,CAAoB,YAApB,CAAhB;;EACA,kCAAuC4D,wBAAA,CAA4B,OAA5B,CAAvC;EAAA,UAAQ,SAAR,yBAAQ,SAAR;EAAA,UAAmB,IAAnB,yBAAmB,IAAnB;EAAA,UAAyB,SAAzB,yBAAyB,SAAzB;;EACA,UAAI,SAAS,KAAK,QAAlB,EAA4B,MAAM,IAAI,UAAJ,CAAe,mCAAf,CAAN;EAC5B,UAAM,YAAY,GAAGL,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,aAAO4D,wBAAA,CAA4B,IAA5B,EAAkC,SAAlC,EAA6C;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,SAAS,EAAT,SAAR;EAAmB,QAAA,YAAY,EAAZ;EAAnB,OAA7C,CAAP;EACD;EAzaH;EAAA;EAAA,WA0aE,kBAAM;EACJ,UAAI,CAACC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOD,wBAAA,CAA4B,IAA5B,CAAP;EACD;EA7aH;EAAA;EAAA,WA8aE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACC,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAClC,UAAI,OAAO,IAAP,KAAgB,WAAhB,IAA+B,OAAQ,IAAY,CAAC,cAArB,KAAwC,WAA3E,EAAwF;EACtF,eAAO,IAAK,IAAY,CAAC,cAAlB,CAAiC,OAAjC,EAA0C,OAA1C,EAAmD,MAAnD,CAA0D,IAA1D,CAAP;EACD;;EACD,MAAA,OAAO,CAAC,IAAR,CAAa,4EAAb;EACA,aAAOD,wBAAA,CAA4B,IAA5B,CAAP;EACD;EAxbH;EAAA;EAAA,WAybE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,4CAAd,CAAN;EACD;EA3bH;EAAA;EAAA,WA4bE,cAAY,IAAZ,EAAmC;EACjC,UAAIC,kBAAA,CAAsB,IAAtB,CAAJ,EAAiC;EAC/B,eAAO,IAAI,QAAJ,CACL,OAAO,CAAC,IAAD,EAAO,KAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,MAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,KAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,IAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,KAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,OAAP,CANF,EAOL,OAAO,CAAC,IAAD,EAAO,OAAP,CAPF,EAQL,OAAO,CAAC,IAAD,EAAO,YAAP,CARF,EASL,OAAO,CAAC,IAAD,EAAO,YAAP,CATF,EAUL,OAAO,CAAC,IAAD,EAAO,WAAP,CAVF,CAAP;EAYD;;EACD,aAAOlH,kBAAA,CAAsB,IAAtB,CAAP;EACD;EA5cH;EAAA;EAAA,WA6cE,iBACE,QADF,EAEE,QAFF,EAGgD;EAAA,UAA9C,YAA8C,uEAAT,SAAS;EAE9C,UAAM,GAAG,GAAGA,kBAAA,CAAsB,QAAtB,CAAZ;EACA,UAAM,GAAG,GAAGA,kBAAA,CAAsB,QAAtB,CAAZ;EACA,UAAM,OAAO,GAAGF,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,UAAU,GAAGqH,wBAAA,CAA4B,OAA5B,CAAnB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,MAAN,CAApB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAI,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAAhB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAApB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAAlB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,YAAN,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,YAAN,CAAnB;EACA,UAAI,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,WAAN,CAAjB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,MAAN,CAApB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAI,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAAhB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,KAAN,CAAlB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAApB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAAlB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,YAAN,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,YAAN,CAAnB;EACA,UAAI,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,WAAN,CAAjB;EACA,UAAM,MAAM,GAAGQ,oBAAA,CAAwB,UAAxB,EAAoC,EAApC,EAAwC,IAAxC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,EAA0D,IAA1D,EAAgE,EAAhE,EAAoE,GAApE,EAAyE,GAAzE,EAA8E,GAA9E,CAAf;EACA,UAAM,MAAM,GAAGA,oBAAA,CAAwB,UAAxB,EAAoC,EAApC,EAAwC,IAAxC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,EAA0D,IAA1D,EAAgE,EAAhE,EAAoE,GAApE,EAAyE,GAAzE,EAA8E,GAA9E,CAAf;;EACA,UAAI,EAAE,KAAK,CAAP,IAAY,EAAE,KAAK,CAAnB,IAAwB,IAAI,KAAK,CAAjC,IAAsC,IAAI,KAAK,CAA/C,IAAoD,EAAE,KAAK,CAA3D,IAAgE,EAAE,KAAK,CAA3E,EAA8E;EAAA,qCAC5DL,yBAAA,CAA6B,EAA7B,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,KAA/C,EAAsD,UAAtD,CAD4D;;EACnE,QAAA,EADmE,0BACzE,IADyE;;EAAA,qCAE5DA,yBAAA,CAA6B,EAA7B,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,KAA/C,EAAsD,UAAtD,CAF4D;;EAEnE,QAAA,EAFmE,0BAEzE,IAFyE;EAG7E;;EACD,UAAM,QAAQ,GAAGM,wBAAA,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,IAApC,EAA0C,EAA1C,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,MAA7D,CAAjB;EACA,UAAM,QAAQ,GAAGA,wBAAA,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,IAApC,EAA0C,EAA1C,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,MAA7D,CAAjB;EACA,aAAOpG,gBAAA,CAAoB,QAAQ,CAAC,KAAT,CAAe,QAAf,EAAyB,UAAzB,EAApB,CAAP;EACD;EAnfH;;EAAA;EAAA;EAufA,kBAAkB,CAAC,QAAD,EAAW,mBAAX,CAAlB;;ECrgBA,IAAMG,cAAY,GAAG,MAAM,CAAC,MAA5B;MAEa,aAAb;EACE,yBACE,aADF,EAEE,WAFF,EAI8B;EAAA,QAD5B,aAC4B,uEADwBiC,kBAAA,EACxB;EAAA,QAA5B,qBAA4B,uEAAJ,IAAI;;EAAA;;EAE5B,QAAM,QAAQ,GAAGE,wBAAA,CAA4B,aAA5B,CAAjB;EACA,QAAM,MAAM,GAAGA,wBAAA,CAA4B,WAA5B,CAAf;EACA,QAAM,QAAQ,GAAGxD,kBAAA,CAAsB,aAAtB,CAAjB;EACA,QAAM,gBAAgB,GAAGwD,wBAAA,CAA4B,qBAA5B,CAAzB,CAL4B;EAQ5B;EACA;EACA;;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,oDAAf,CAAN;EACD;;EAED,IAAA+D,2BAAA,CAA+B,IAA/B,EAAqC,QAArC,EAA+C,MAA/C,EAAuD,QAAvD,EAAiE,gBAAjE;EACD;;EArBH;EAAA;EAAA,SAuBE,eAAa;EACX,UAAI,CAACxH,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO+D,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EA1BH;EAAA;EAAA,SA2BE,eAAO;EACL,UAAI,CAAC/D,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOgE,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EA9BH;EAAA;EAAA,SA+BE,eAAY;EACV,UAAI,CAAChE,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EAlCH;EAAA;EAAA,WAoCE,eAAK,oBAAL,EAAyF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EACvF,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAClC,UAAI,CAACR,QAAA,CAAY,oBAAZ,CAAL,EAAwC;EACtC,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,oBAAtC;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,OAAR,EAAiB,WAAjB,EAA8B,MAA9B,CAA5B,CAAnB;EACA,UAAM,KAAK,GAAGC,eAAA,CAAmB,oBAAnB,EAAyC,UAAzC,CAAd;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,wBAAd,CAAN;EACD;;EACD,UAAI,MAAM,GAAGgB,wBAAA,CAA4B,IAA5B,EAAkC,UAAlC,CAAb;EACA,MAAA,MAAM,GAAGd,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,KAAzC,CAAT;EACA,MAAA,MAAM,GAAGc,wBAAA,CAA4B,MAA5B,EAAoC,UAApC,CAAT;EAEA,UAAM,OAAO,GAAGlG,gBAAA,CAAoB,YAApB,CAAhB;EACA,aAAOmG,kBAAA,CAAsB,QAAtB,EAAgC,MAAhC,EAAwC,OAAxC,CAAP;EACD;EAvDH;EAAA;EAAA,WAwDE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAAC5F,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,KAAK,GAAGyH,kBAAA,CAAsB,UAAtB,CAAd;;EACA,8BAAmB,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,CAAnB,0BAAmD;EAA9C,YAAM,IAAI,WAAV;EACH,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAD,EAAQ,IAAR,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;EACpB;;EACD,aAAOrC,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,KAAD,EAAQ,QAAR,CAAlD,CAAP;EACD;EAjEH;EAAA;EAAA,WAkEE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACpF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,OAAO,GAAGP,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAG4F,oBAAA,CAAwB,OAAxB,CAArB;EACA,aAAOqC,wBAAA,CAA4B,IAA5B,EAAkC,YAAlC,CAAP;EACD;EAvEH;EAAA;EAAA,WAwEE,kBAAM;EACJ,UAAI,CAAC1H,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO0H,wBAAA,CAA4B,IAA5B,CAAP;EACD;EA3EH;EAAA;EAAA,WA4EE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAAC1H,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAlFH;EAAA;EAAA,WAmFE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,gDAAd,CAAN;EACD;EArFH;EAAA;EAAA,WAsFE,qBAAY,IAAZ,EAA0C;EACxC,UAAI,CAACA,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAI,CAACR,QAAA,CAAY,IAAZ,CAAL,EAAwB,MAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;EACxB,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EAEA,UAAM,kBAAkB,GAAGkF,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,WAAR,CAA5B,CAA3B;EACA,UAAM,MAAM,GAAGiB,wBAAA,CAA4B,IAA5B,EAAkC,kBAAlC,CAAf;EAEA,UAAM,eAAe,GAAGjB,cAAA,CAAkB,QAAlB,EAA4B,CAAC,MAAD,CAA5B,CAAxB;EACA,UAAM,YAAY,GAA8C,CAAC,CAAC,MAAD,EAAS,SAAT,CAAD,CAAhE,CATwC;;EAWxC,MAAA,eAAe,CAAC,OAAhB,CAAwB,UAAC,SAAD,EAAc;EACpC,YAAI,CAAC,YAAY,CAAC,IAAb,CAAkB;EAAA;EAAA,cAAE,IAAF;;EAAA,iBAAY,IAAI,KAAK,SAArB;EAAA,SAAlB,CAAL,EAAwD;EACtD,UAAA,YAAY,CAAC,IAAb,CAAkB,CAAC,SAAD,EAAY,SAAZ,CAAlB,EADsD;EAEvD;EACF,OAJD;EAKA,UAAM,WAAW,GAAGxE,qBAAA,CAAyB,IAAzB,EAA+B,YAA/B,CAApB;EACA,UAAI,YAAY,GAAG2E,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,WAAzC,CAAnB;;EAEA,UAAM,gBAAgB,sBAAO,IAAI,GAAJ,8BAAY,kBAAZ,sBAAmC,eAAnC,GAAP,CAAtB;;EACA,UAAM,aAAa,GAA8C,EAAjE;EACA,MAAA,gBAAgB,CAAC,OAAjB,CAAyB,UAAC,SAAD,EAAc;EACrC,YAAI,CAAC,aAAa,CAAC,IAAd,CAAmB;EAAA;EAAA,cAAE,IAAF;;EAAA,iBAAY,IAAI,KAAK,SAArB;EAAA,SAAnB,CAAL,EAAyD;EACvD,UAAA,aAAa,CAAC,IAAd,CAAmB,CAAC,SAAD,EAAY,SAAZ,CAAnB;EACD;EACF,OAJD;EAKA,MAAA,YAAY,GAAG3E,qBAAA,CAAyB,YAAzB,EAAuC,aAAvC,CAAf;EACA,UAAM,OAAO,GAAGoB,cAAY,CAAC,IAAD,CAA5B;EACA,MAAA,OAAO,CAAC,QAAR,GAAmB,QAAnB;EACA,aAAOwD,cAAA,CAAkB,QAAlB,EAA4B,YAA5B,EAA0C,OAA1C,CAAP;EACD;EApHH;EAAA;EAAA,WAqHE,wBAAY;EACV,UAAI,CAAC9E,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,MAAM,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CAFV;EAGL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,SAAP,CAHZ;EAIL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP;EAJX,OAAP;EAMD;EA7HH;EAAA;EAAA,WA8HE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGP,gBAAA,CAAoB,YAApB,CAAhB;;EACA,UAAIO,kBAAA,CAAsB,IAAtB,CAAJ,EAAiC;EAC/B,QAAAJ,kBAAA,CAAsB,OAAtB,EAD+B;;EAE/B,eAAOW,sBAAA,CACL,OAAO,CAAC,IAAD,EAAO,SAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,OAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,QAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,QAAP,CAJF,CAAP;EAMD;;EACD,aAAOkH,kBAAA,CAAsB,IAAtB,EAA4B,OAA5B,CAAP;EACD;EA1IH;;EAAA;EAAA;EA8IA,kBAAkB,CAAC,aAAD,EAAgB,wBAAhB,CAAlB;;ECnJA,IAAM,OAAO,GAAmC,SAA1C,OAA0C,GAAK;EACnD,MAAM,OAAO,GAAG,YAAY,CAAC,oBAAD,CAA5B;EACA,SAAO,IAAI,OAAJ,CAAYE,yBAAA,EAAZ,CAAP;EACD,CAHD;;EAIA,IAAM,aAAa,GAAyC,SAAtD,aAAsD,CAAC,YAAD,EAAoD;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EAC9G,MAAM,EAAE,GAAG7F,kBAAA,CAAsB,oBAAtB,CAAX;EACA,MAAM,QAAQ,GAAG7B,kBAAA,CAAsB,YAAtB,CAAjB;EACA,MAAM,IAAI,GAAG,OAAO,EAApB;EACA,SAAO2H,kCAAA,CAAsC,EAAtC,EAA0C,IAA1C,EAAgD,QAAhD,CAAP;EACD,CALD;;EAMA,IAAM,gBAAgB,GAA4C,SAA5D,gBAA4D,GAAsC;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EACtG,MAAM,EAAE,GAAG9F,kBAAA,CAAsB,oBAAtB,CAAX;EACA,MAAM,QAAQ,GAAGyB,kBAAA,EAAjB;EACA,MAAM,IAAI,GAAG,OAAO,EAApB;EACA,SAAOqE,kCAAA,CAAsC,EAAtC,EAA0C,IAA1C,EAAgD,QAAhD,CAAP;EACD,CALD;;EAMA,IAAM,aAAa,GAAyC,SAAtD,aAAsD,CAAC,YAAD,EAAoD;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EAC9G,MAAM,EAAE,GAAG9F,kBAAA,CAAsB,oBAAtB,CAAX;EACA,MAAM,QAAQ,GAAG7B,kBAAA,CAAsB,YAAtB,CAAjB;EACA,SAAOqD,2BAAA,CAA+BqE,yBAAA,EAA/B,EAA+D,EAA/D,EAAmE,QAAnE,CAAP;EACD,CAJD;;EAKA,IAAM,gBAAgB,GAA4C,SAA5D,gBAA4D,GAAsC;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EACtG,SAAO,aAAa,CAACpE,kBAAA,EAAD,EAA0B,oBAA1B,CAApB;EACD,CAFD;;EAGA,IAAM,SAAS,GAAqC,SAA9C,SAA8C,CAAC,YAAD,EAAoD;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EACtG,SAAO8C,sBAAA,CAA0B,aAAa,CAAC,YAAD,EAAe,oBAAf,CAAvC,CAAP;EACD,CAFD;;EAGA,IAAM,YAAY,GAAwC,SAApD,YAAoD,GAAsC;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EAC9F,SAAOA,sBAAA,CAA0B,gBAAgB,CAAC,oBAAD,CAA1C,CAAP;EACD,CAFD;;EAGA,IAAM,YAAY,GAAwC,SAApD,YAAoD,GAAsC;EAAA,MAArC,oBAAqC,uEAAd,QAAQ,EAAM;EAC9F,SAAOI,sBAAA,CAA0B,gBAAgB,CAAC,oBAAD,CAA1C,CAAP;EACD,CAFD;;EAGA,IAAM,QAAQ,GAAoC,SAA5C,QAA4C,GAAK;EACrD,SAAOoB,cAAA,EAAP;EACD,CAFD;;EAIO,IAAM,GAAG;EACd,EAAA,OAAO,EAAP,OADc;EAEd,EAAA,aAAa,EAAb,aAFc;EAGd,EAAA,gBAAgB,EAAhB,gBAHc;EAId,EAAA,SAAS,EAAT,SAJc;EAKd,EAAA,YAAY,EAAZ,YALc;EAMd,EAAA,YAAY,EAAZ,YANc;EAOd,EAAA,QAAQ,EAAR,QAPc;EAQd,EAAA,aAAa,EAAb,aARc;EASd,EAAA,gBAAgB,EAAhB;EATc,GAUb,MAAM,CAAC,WAVM,EAUQ,cAVR,CAAT;EAYP,MAAM,CAAC,cAAP,CAAsB,GAAtB,EAA2B,MAAM,CAAC,WAAlC,EAA+C;EAC7C,EAAA,KAAK,EAAE,cADsC;EAE7C,EAAA,QAAQ,EAAE,KAFmC;EAG7C,EAAA,UAAU,EAAE,KAHiC;EAI7C,EAAA,YAAY,EAAE;EAJ+B,CAA/C;;EC7BA,IAAM,YAAY,GAAG,MAAM,CAAC,MAA5B;EAEA,IAAMxF,kBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,KAA1B,CAAzB;EACA,IAAM,cAAc,GAAG;EACrB,EAAA,IAAI,EAAE,EADe;EAErB,EAAA,MAAM,EAAE,EAFa;EAGrB,EAAA,MAAM,EAAE,EAHa;EAIrB,EAAA,WAAW,EAAE,IAJQ;EAKrB,EAAA,WAAW,EAAE,IALQ;EAMrB,EAAA,UAAU,EAAE;EANS,CAAvB;;EAeA,SAAS,oBAAT,CACE,IADF,EAEE,SAFF,EAGkD;EAAA,MAAhD,OAAgD,uEAAT,SAAS;EAEhD,MAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,MAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,MAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,MAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,MAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,MAAI,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAAxB;;EAEA,MAAI,OAAJ,EAAa;EACX,QAAQ,IAAR,GAA0C,OAA1C,CAAQ,IAAR;EAAA,QAAc,SAAd,GAA0C,OAA1C,CAAc,SAAd;EAAA,QAAyB,YAAzB,GAA0C,OAA1C,CAAyB,YAAzB;;EADW,wBAEuDyF,SAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,SAPgE,EAQhE,IARgE,EAShE,YATgE,CAFvD;;EAER,IAAA,IAFQ,iBAER,IAFQ;EAEF,IAAA,MAFE,iBAEF,MAFE;EAEM,IAAA,MAFN,iBAEM,MAFN;EAEc,IAAA,WAFd,iBAEc,WAFd;EAE2B,IAAA,WAF3B,iBAE2B,WAF3B;EAEwC,IAAA,UAFxC,iBAEwC,UAFxC;EAaZ;;EAED,MAAM,UAAU,GAAG5G,qBAAA,CAAyB,IAAzB,CAAnB;EACA,MAAM,YAAY,GAAGA,qBAAA,CAAyB,MAAzB,CAArB;EACA,MAAM,OAAO,GAAG6G,uBAAA,CAA2B,MAA3B,EAAmC,WAAnC,EAAgD,WAAhD,EAA6D,UAA7D,EAAyE,SAAzE,CAAhB;EACA,mBAAU,UAAV,cAAwB,YAAxB,SAAuC,OAAvC;EACD;;MAEY,SAAb;EACE,uBAMwB;EAAA,QALtB,YAKsB,uEALP,CAKO;EAAA,QAJtB,cAIsB,uEAJL,CAIK;EAAA,QAHtB,cAGsB,uEAHL,CAGK;EAAA,QAFtB,mBAEsB,uEAFA,CAEA;EAAA,QADtB,mBACsB,uEADA,CACA;EAAA,QAAtB,kBAAsB,uEAAD,CAAC;;EAAA;;EAEtB,QAAM,OAAO,GAAGtE,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,SAAS,GAAGA,wBAAA,CAA4B,cAA5B,CAAlB;EACA,QAAM,SAAS,GAAGA,wBAAA,CAA4B,cAA5B,CAAlB;EACA,QAAM,cAAc,GAAGA,wBAAA,CAA4B,mBAA5B,CAAvB;EACA,QAAM,cAAc,GAAGA,wBAAA,CAA4B,mBAA5B,CAAvB;EACA,QAAM,aAAa,GAAGA,wBAAA,CAA4B,kBAA5B,CAAtB;EAEA,IAAAuE,UAAA,CAAc,OAAd,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,cAA7C,EAA6D,cAA7D,EAA6E,aAA7E;EACA,IAAA,WAAW,CAAC,IAAD,CAAX;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,QAAP,EAAiB,OAAjB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,SAAnB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,SAAnB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,eAAP,EAAwB,cAAxB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,eAAP,EAAwB,cAAxB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,cAAP,EAAuB,aAAvB,CAAP;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,QAAP,EAAiBzE,kBAAA,EAAjB,CAAP;;EAEA,IAAW;EACT,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpC,QAAA,KAAK,YAAK,KAAK,MAAM,CAAC,WAAZ,CAAL,eAAkC,oBAAoB,CAAC,IAAD,EAAO,MAAP,CAAtD,MAD+B;EAEpC,QAAA,QAAQ,EAAE,KAF0B;EAGpC,QAAA,UAAU,EAAE,KAHwB;EAIpC,QAAA,YAAY,EAAE;EAJsB,OAAtC;EAMD;EACF;;EAlCH;EAAA;EAAA,SAoCE,eAAY;EACV,UAAI,CAACvB,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN,CADpB;;EAGV,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EAxCH;EAAA;EAAA,SAyCE,eAAQ;EACN,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EA5CH;EAAA;EAAA,SA6CE,eAAU;EACR,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,UAAP,CAAd;EACD;EAhDH;EAAA;EAAA,SAiDE,eAAU;EACR,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,UAAP,CAAd;EACD;EApDH;EAAA;EAAA,SAqDE,eAAe;EACb,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,eAAP,CAAd;EACD;EAxDH;EAAA;EAAA,SAyDE,eAAe;EACb,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,eAAP,CAAd;EACD;EA5DH;EAAA;EAAA,SA6DE,eAAc;EACZ,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,OAAO,CAAC,IAAD,EAAO,cAAP,CAAd;EACD;EAhEH;EAAA;EAAA,WAkEE,eAAK,gBAAL,EAAqF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EACnF,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAC9B,UAAI,CAACxC,QAAA,CAAY,gBAAZ,CAAL,EAAoC;EAClC,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,gBAAtC;EAEA,UAAM,OAAO,GAAGhF,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAGG,kBAAA,CAAsB,OAAtB,CAAjB;EAEA,UAAM,KAAK,GAAG+E,eAAA,CAAmB,gBAAnB,EAAqC,CACjD,MADiD,EAEjD,aAFiD,EAGjD,aAHiD,EAIjD,QAJiD,EAKjD,YALiD,EAMjD,QANiD,CAArC,CAAd;;EAQA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,mBAAd,CAAN;EACD;;EACD,UAAM,MAAM,GAAGsD,oBAAA,CAAwB,IAAxB,CAAf;;EACA,0BAAqE,YAAY,CAAC,MAAD,EAAS,KAAT,CAAjF;EAAA,UAAM,IAAN,iBAAM,IAAN;EAAA,UAAY,MAAZ,iBAAY,MAAZ;EAAA,UAAoB,MAApB,iBAAoB,MAApB;EAAA,UAA4B,WAA5B,iBAA4B,WAA5B;EAAA,UAAyC,WAAzC,iBAAyC,WAAzC;EAAA,UAAsD,UAAtD,iBAAsD,UAAtD;;EAtBmF,6BAuBjBC,YAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,QAPgE,CAvBiB;;EAuBhF,MAAA,IAvBgF,oBAuBhF,IAvBgF;EAuB1E,MAAA,MAvB0E,oBAuB1E,MAvB0E;EAuBlE,MAAA,MAvBkE,oBAuBlE,MAvBkE;EAuB1D,MAAA,WAvB0D,oBAuB1D,WAvB0D;EAuB7C,MAAA,WAvB6C,oBAuB7C,WAvB6C;EAuBhC,MAAA,UAvBgC,oBAuBhC,UAvBgC;EAgCnF,aAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,CAAP;EACD;EAnGH;EAAA;EAAA,WAoGE,aAAI,oBAAJ,EAA0C;EACxC,UAAI,CAAClG,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,QAAQ,GAAGU,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAA6E,QAA7E,CAAQ,KAAR;EAAA,UAAe,OAAf,GAA6E,QAA7E,CAAe,OAAf;EAAA,UAAwB,OAAxB,GAA6E,QAA7E,CAAwB,OAAxB;EAAA,UAAiC,YAAjC,GAA6E,QAA7E,CAAiC,YAAjC;EAAA,UAA+C,YAA/C,GAA6E,QAA7E,CAA+C,YAA/C;EAAA,UAA6D,WAA7D,GAA6E,QAA7E,CAA6D,WAA7D;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAAxB;;EATwC,wBAU0ByF,OAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,KAPgE,EAQhE,OARgE,EAShE,OATgE,EAUhE,YAVgE,EAWhE,YAXgE,EAYhE,WAZgE,CAV1B;;EAUrC,MAAA,IAVqC,eAUrC,IAVqC;EAU/B,MAAA,MAV+B,eAU/B,MAV+B;EAUvB,MAAA,MAVuB,eAUvB,MAVuB;EAUf,MAAA,WAVe,eAUf,WAVe;EAUF,MAAA,WAVE,eAUF,WAVE;EAUW,MAAA,UAVX,eAUW,UAVX;;EAAA,8BAwB0BD,YAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,QAPgE,CAxB1B;;EAwBrC,MAAA,IAxBqC,qBAwBrC,IAxBqC;EAwB/B,MAAA,MAxB+B,qBAwB/B,MAxB+B;EAwBvB,MAAA,MAxBuB,qBAwBvB,MAxBuB;EAwBf,MAAA,WAxBe,qBAwBf,WAxBe;EAwBF,MAAA,WAxBE,qBAwBF,WAxBE;EAwBW,MAAA,UAxBX,qBAwBW,UAxBX;EAiCxC,aAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,CAAP;EACD;EAtIH;EAAA;EAAA,WAuIE,kBAAS,oBAAT,EAAoD;EAClD,UAAI,CAAClG,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,QAAQ,GAAGU,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAA6E,QAA7E,CAAQ,KAAR;EAAA,UAAe,OAAf,GAA6E,QAA7E,CAAe,OAAf;EAAA,UAAwB,OAAxB,GAA6E,QAA7E,CAAwB,OAAxB;EAAA,UAAiC,YAAjC,GAA6E,QAA7E,CAAiC,YAAjC;EAAA,UAA+C,YAA/C,GAA6E,QAA7E,CAA+C,YAA/C;EAAA,UAA6D,WAA7D,GAA6E,QAA7E,CAA6D,WAA7D;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAAxB;;EATkD,yBAUgByF,OAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,CAAC,KAP+D,EAQhE,CAAC,OAR+D,EAShE,CAAC,OAT+D,EAUhE,CAAC,YAV+D,EAWhE,CAAC,YAX+D,EAYhE,CAAC,WAZ+D,CAVhB;;EAU/C,MAAA,IAV+C,gBAU/C,IAV+C;EAUzC,MAAA,MAVyC,gBAUzC,MAVyC;EAUjC,MAAA,MAViC,gBAUjC,MAViC;EAUzB,MAAA,WAVyB,gBAUzB,WAVyB;EAUZ,MAAA,WAVY,gBAUZ,WAVY;EAUC,MAAA,UAVD,gBAUC,UAVD;;EAAA,8BAwBgBD,YAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,QAPgE,CAxBhB;;EAwB/C,MAAA,IAxB+C,qBAwB/C,IAxB+C;EAwBzC,MAAA,MAxByC,qBAwBzC,MAxByC;EAwBjC,MAAA,MAxBiC,qBAwBjC,MAxBiC;EAwBzB,MAAA,WAxByB,qBAwBzB,WAxByB;EAwBZ,MAAA,WAxBY,qBAwBZ,WAxBY;EAwBC,MAAA,UAxBD,qBAwBC,UAxBD;EAiClD,aAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,CAAP;EACD;EAzKH;EAAA;EAAA,WA0KE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAAClG,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGwD,cAAA,CAAkB,UAAlB,CAAd;EACA,UAAM,OAAO,GAAG/F,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,WAAW,GAAGK,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,MAA5D,CAApB;EACA,UAAM,YAAY,GAAGQ,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,EAAiDR,kBAAjD,CAArB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,cAAc,CAAC,YAAD,CAAtD,EAAsE,KAAtE,CAA1B;;EACA,+BAA2EmF,cAAA,CACzE,OAAO,CAAC,IAAD,EAAO,QAAP,CADkE,EAEzE,OAAO,CAAC,IAAD,EAAO,UAAP,CAFkE,EAGzE,OAAO,CAAC,IAAD,EAAO,UAAP,CAHkE,EAIzE,OAAO,CAAC,IAAD,EAAO,eAAP,CAJkE,EAKzE,OAAO,CAAC,IAAD,EAAO,eAAP,CALkE,EAMzE,OAAO,CAAC,IAAD,EAAO,cAAP,CANkE,EAOzE,OAAO,CAAC,KAAD,EAAQ,QAAR,CAPkE,EAQzE,OAAO,CAAC,KAAD,EAAQ,UAAR,CARkE,EASzE,OAAO,CAAC,KAAD,EAAQ,UAAR,CATkE,EAUzE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAVkE,EAWzE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAXkE,EAYzE,OAAO,CAAC,KAAD,EAAQ,cAAR,CAZkE,CAA3E;EAAA,UAAM,KAAN,sBAAM,KAAN;EAAA,UAAa,OAAb,sBAAa,OAAb;EAAA,UAAsB,OAAtB,sBAAsB,OAAtB;EAAA,UAA+B,YAA/B,sBAA+B,YAA/B;EAAA,UAA6C,YAA7C,sBAA6C,YAA7C;EAAA,UAA2D,WAA3D,sBAA2D,WAA3D;;EATgF,8BAuBRlD,aAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,CAJsE,EAKtE,KALsE,EAMtE,OANsE,EAOtE,OAPsE,EAQtE,YARsE,EAStE,YATsE,EAUtE,WAVsE,EAWtE,iBAXsE,EAYtE,YAZsE,EAatE,YAbsE,CAvBQ;;EAuB7E,MAAA,KAvB6E,qBAuB7E,KAvB6E;EAuBtE,MAAA,OAvBsE,qBAuBtE,OAvBsE;EAuB7D,MAAA,OAvB6D,qBAuB7D,OAvB6D;EAuBpD,MAAA,YAvBoD,qBAuBpD,YAvBoD;EAuBtC,MAAA,YAvBsC,qBAuBtC,YAvBsC;EAuBxB,MAAA,WAvBwB,qBAuBxB,WAvBwB;;EAAA,gCAsCRrF,eAAA,CACtE,CADsE,EAEtE,KAFsE,EAGtE,OAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CAtCQ;;EAsC7E,MAAA,KAtC6E,uBAsC7E,KAtC6E;EAsCtE,MAAA,OAtCsE,uBAsCtE,OAtCsE;EAsC7D,MAAA,OAtC6D,uBAsC7D,OAtC6D;EAsCpD,MAAA,YAtCoD,uBAsCpD,YAtCoD;EAsCtC,MAAA,YAtCsC,uBAsCtC,YAtCsC;EAsCxB,MAAA,WAtCwB,uBAsCxB,WAtCwB;EAgDhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,CAAP;EACD;EA5NH;EAAA;EAAA,WA6NE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACmC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGwD,cAAA,CAAkB,UAAlB,CAAd;EACA,UAAM,OAAO,GAAG/F,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,WAAW,GAAGK,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0CuC,kBAA1C,EAA4D,MAA5D,CAApB;EACA,UAAM,YAAY,GAAGQ,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,EAAiDR,kBAAjD,CAArB;EACA,MAAAU,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,cAAc,CAAC,YAAD,CAAtD,EAAsE,KAAtE,CAA1B;;EACA,gCAA2EmF,cAAA,CACzE,OAAO,CAAC,KAAD,EAAQ,QAAR,CADkE,EAEzE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAFkE,EAGzE,OAAO,CAAC,KAAD,EAAQ,UAAR,CAHkE,EAIzE,OAAO,CAAC,KAAD,EAAQ,eAAR,CAJkE,EAKzE,OAAO,CAAC,KAAD,EAAQ,eAAR,CALkE,EAMzE,OAAO,CAAC,KAAD,EAAQ,cAAR,CANkE,EAOzE,OAAO,CAAC,IAAD,EAAO,QAAP,CAPkE,EAQzE,OAAO,CAAC,IAAD,EAAO,UAAP,CARkE,EASzE,OAAO,CAAC,IAAD,EAAO,UAAP,CATkE,EAUzE,OAAO,CAAC,IAAD,EAAO,eAAP,CAVkE,EAWzE,OAAO,CAAC,IAAD,EAAO,eAAP,CAXkE,EAYzE,OAAO,CAAC,IAAD,EAAO,cAAP,CAZkE,CAA3E;EAAA,UAAM,KAAN,uBAAM,KAAN;EAAA,UAAa,OAAb,uBAAa,OAAb;EAAA,UAAsB,OAAtB,uBAAsB,OAAtB;EAAA,UAA+B,YAA/B,uBAA+B,YAA/B;EAAA,UAA6C,YAA7C,uBAA6C,YAA7C;EAAA,UAA2D,WAA3D,uBAA2D,WAA3D;;EATgF,+BAuBRlD,aAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,CAJsE,EAKtE,CAAC,KALqE,EAMtE,CAAC,OANqE,EAOtE,CAAC,OAPqE,EAQtE,CAAC,YARqE,EAStE,CAAC,YATqE,EAUtE,CAAC,WAVqE,EAWtE,iBAXsE,EAYtE,YAZsE,EAatEC,0BAAA,CAA8B,YAA9B,CAbsE,CAvBQ;;EAuB7E,MAAA,KAvB6E,sBAuB7E,KAvB6E;EAuBtE,MAAA,OAvBsE,sBAuBtE,OAvBsE;EAuB7D,MAAA,OAvB6D,sBAuB7D,OAvB6D;EAuBpD,MAAA,YAvBoD,sBAuBpD,YAvBoD;EAuBtC,MAAA,YAvBsC,sBAuBtC,YAvBsC;EAuBxB,MAAA,WAvBwB,sBAuBxB,WAvBwB;EAsChF,MAAA,KAAK,GAAG,CAAC,KAAT;EACA,MAAA,OAAO,GAAG,CAAC,OAAX;EACA,MAAA,OAAO,GAAG,CAAC,OAAX;EACA,MAAA,YAAY,GAAG,CAAC,YAAhB;EACA,MAAA,YAAY,GAAG,CAAC,YAAhB;EACA,MAAA,WAAW,GAAG,CAAC,WAAf;;EA3CgF,iCA4CRtF,eAAA,CACtE,CADsE,EAEtE,KAFsE,EAGtE,OAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CA5CQ;;EA4C7E,MAAA,KA5C6E,wBA4C7E,KA5C6E;EA4CtE,MAAA,OA5CsE,wBA4CtE,OA5CsE;EA4C7D,MAAA,OA5C6D,wBA4C7D,OA5C6D;EA4CpD,MAAA,YA5CoD,wBA4CpD,YA5CoD;EA4CtC,MAAA,YA5CsC,wBA4CtC,YA5CsC;EA4CxB,MAAA,WA5CwB,wBA4CxB,WA5CwB;EAsDhF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,CAAP;EACD;EArRH;EAAA;EAAA,WAsRE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAACmC,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EAChC,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACKmB,mBAAA,CAAuB,cAAvB,EAAuC,YAAvC,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,SAAnC,EAA8CR,kBAA9C,CAArB;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EAChC,UAAM,YAAY,GAAGW,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,cAAc,CAAC,YAAD,CAAtD,EAAsE,KAAtE,CAA1B;EAEA,UAAI,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAApB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAAzB;EACA,UAAI,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAAxB;;EAjBoC,2BAkB8B6E,SAAA,CAChE,IADgE,EAEhE,MAFgE,EAGhE,MAHgE,EAIhE,WAJgE,EAKhE,WALgE,EAMhE,UANgE,EAOhE,iBAPgE,EAQhE,YARgE,EAShE,YATgE,CAlB9B;;EAkBjC,MAAA,IAlBiC,kBAkBjC,IAlBiC;EAkB3B,MAAA,MAlB2B,kBAkB3B,MAlB2B;EAkBnB,MAAA,MAlBmB,kBAkBnB,MAlBmB;EAkBX,MAAA,WAlBW,kBAkBX,WAlBW;EAkBE,MAAA,WAlBF,kBAkBE,WAlBF;EAkBe,MAAA,UAlBf,kBAkBe,UAlBf;EA8BpC,aAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,UAA9D,CAAP;EACD;EArTH;EAAA;EAAA,WAsTE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAAC9F,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,KAAK,GAAGwD,cAAA,CAAkB,UAAlB,CAAd;;EACA,8BAAmB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,eAAnC,EAAoD,eAApD,EAAqE,cAArE,CAAnB,0BAAyG;EAApG,YAAM,IAAI,WAAV;EACH,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAD,EAAQ,IAAR,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;EACpB;;EACD,aAAO,IAAP;EACD;EA/TH;EAAA;EAAA,WAiUE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACxD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,UAAM,OAAO,GAAGvC,gBAAA,CAAoB,YAApB,CAAhB;;EACA,kCAAuC4D,wBAAA,CAA4B,OAA5B,CAAvC;EAAA,UAAQ,SAAR,yBAAQ,SAAR;EAAA,UAAmB,IAAnB,yBAAmB,IAAnB;EAAA,UAAyB,SAAzB,yBAAyB,SAAzB;;EACA,UAAM,YAAY,GAAGL,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,aAAO,oBAAoB,CAAC,IAAD,EAAO,SAAP,EAAkB;EAAE,QAAA,IAAI,EAAJ,IAAF;EAAQ,QAAA,SAAS,EAAT,SAAR;EAAmB,QAAA,YAAY,EAAZ;EAAnB,OAAlB,CAA3B;EACD;EAvUH;EAAA;EAAA,WAwUE,kBAAM;EACJ,UAAI,CAAChB,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,oBAAoB,CAAC,IAAD,EAAO,MAAP,CAA3B;EACD;EA3UH;EAAA;EAAA,WA4UE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAlVH;EAAA;EAAA,WAmVE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,yDAAd,CAAN;EACD;EArVH;EAAA;EAAA,WAuVE,yBAAgB,iBAAhB,EAA+D;EAC7D,UAAI,CAACA,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAE9B,UAAM,YAAY,GAAGtC,cAAA,CAAkB,iBAAlB,CAArB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,YAAD,EAAe,SAAf,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,YAAD,EAAe,OAAf,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAAxB;EAEA,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAA1B;EAEA,aAAO6F,sBAAA,CACL,IADK,EAEL,KAFK,EAGL,GAHK,EAIL,IAJK,EAKL,MALK,EAML,MANK,EAOL,WAPK,EAQL,WARK,EASL,UATK,EAUL,QAVK,CAAP;EAYD;EAnXH;EAAA;EAAA,WAoXE,yBAAgB,IAAhB,EAAkD;EAChD,UAAI,CAACvD,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EAE9B,UAAI,CAACxC,QAAA,CAAY,IAAZ,CAAL,EAAwB;EACtB,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EAED,UAAM,QAAQ,GAAG,IAAI,CAAC,SAAtB;;EACA,UAAI,QAAQ,KAAK,SAAjB,EAA4B;EAC1B,cAAM,IAAI,SAAJ,CAAc,uBAAd,CAAN;EACD;;EACD,UAAM,YAAY,GAAGE,cAAA,CAAkB,QAAlB,CAArB;EAEA,UAAM,YAAY,GAAG,IAAI,CAAC,QAA1B;;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC;EAC9B,cAAM,IAAI,SAAJ,CAAc,2BAAd,CAAN;EACD;;EACD,UAAM,QAAQ,GAAGoC,kBAAA,CAAsB,YAAtB,CAAjB;EAEA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,YAAD,EAAe,SAAf,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,YAAD,EAAe,OAAf,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAAxB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,UAAP,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,IAAD,EAAO,eAAP,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,IAAD,EAAO,cAAP,CAA1B;EAEA,UAAM,aAAa,GAAG,YAAY,CAAC,0BAAD,CAAlC;EACA,UAAM,EAAE,GAAG,IAAI,aAAJ,CACT,IADS,EAET,KAFS,EAGT,GAHS,EAIT,IAJS,EAKT,MALS,EAMT,MANS,EAOT,WAPS,EAQT,WARS,EAST,UATS,EAUT,QAVS,CAAX;EAYA,UAAM,OAAO,GAAGM,4BAAA,CAAgC,QAAhC,EAA0C,EAA1C,EAA8C,YAA9C,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,QAA7E,CAAP;EACD;EAjaH;EAAA;EAAA,WAkaE,wBAAY;EACV,UAAI,CAACtB,cAAA,CAAkB,IAAlB,CAAL,EAA8B,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAC9B,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CAFX;EAGL,QAAA,cAAc,EAAE,OAAO,CAAC,IAAD,EAAO,eAAP,CAHlB;EAIL,QAAA,cAAc,EAAE,OAAO,CAAC,IAAD,EAAO,eAAP,CAJlB;EAKL,QAAA,SAAS,EAAE,OAAO,CAAC,IAAD,EAAO,UAAP,CALb;EAML,QAAA,aAAa,EAAE,OAAO,CAAC,IAAD,EAAO,cAAP,CANjB;EAOL,QAAA,SAAS,EAAE,OAAO,CAAC,IAAD,EAAO,UAAP;EAPb,OAAP;EASD;EA7aH;EAAA;EAAA,WA+aE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGvC,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAGG,kBAAA,CAAsB,OAAtB,CAAjB;;EACA,UAAIoC,cAAA,CAAkB,IAAlB,CAAJ,EAA6B;EAC3B,eAAO,IAAI,SAAJ,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,UAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,UAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,eAAP,CAJF,EAKL,OAAO,CAAC,IAAD,EAAO,eAAP,CALF,EAML,OAAO,CAAC,IAAD,EAAO,cAAP,CANF,CAAP;EAQD;;EACD,aAAOwD,cAAA,CAAkB,IAAlB,EAAwB,QAAxB,CAAP;EACD;EA7bH;EAAA;EAAA,WA8bE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,cAAA,CAAkB,QAAlB,CAAZ;EACA,UAAM,GAAG,GAAGA,cAAA,CAAkB,QAAlB,CAAZ;;EACA,gCAAmB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,eAAnC,EAAoD,eAApD,EAAqE,cAArE,CAAnB,6BAAkH;EAA7G,YAAM,IAAI,aAAV;EACH,YAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,GAAD,EAAM,IAAN,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAOrE,gBAAA,CAAoB,IAAI,GAAG,IAA3B,CAAP;EACpB;;EACD,aAAO,CAAP;EACD;EAvcH;;EAAA;EAAA;EA2cA,kBAAkB,CAAC,SAAD,EAAY,oBAAZ,CAAlB;;MChgBa,QAAb;EACE,oBAAY,uBAAZ,EAA2C;EAAA;;EACzC;EACA;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,0CAAf,CAAN;EACD;;EAED,QAAM,kBAAkB,GAAGkH,8BAAA,CAAkC,uBAAlC,CAA3B;EACA,IAAA,WAAW,CAAC,IAAD,CAAX;EACA,IAAA,OAAO,CAAC,IAAD,EAAO,WAAP,EAAoB,kBAApB,CAAP;;EAEA,IAAW;EACT,MAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;EACpC,QAAA,KAAK,YAAK,KAAK,MAAM,CAAC,WAAZ,CAAL,eAAkC,kBAAlC,MAD+B;EAEpC,QAAA,QAAQ,EAAE,KAF0B;EAGpC,QAAA,UAAU,EAAE,KAHwB;EAIpC,QAAA,YAAY,EAAE;EAJsB,OAAtC;EAMD;EACF;;EApBH;EAAA;EAAA,SAqBE,eAAM;EACJ,aAAO/I,QAAA,CAAY,IAAZ,CAAP;EACD;EAvBH;EAAA;EAAA,WAwBE,iCAAwB,YAAxB,EAA0E;EACxE,UAAI,CAACgJ,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,OAAO,GAAG1F,iBAAA,CAAqB,YAArB,CAAhB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAlB;EAEA,UAAM,QAAQ,GAAG2F,iBAAA,CAAqB,EAArB,CAAjB;EACA,UAAI,QAAQ,KAAK,IAAjB,EAAuB,OAAO,QAAP;EAEvB,aAAOC,gCAAA,CAAoC,OAAO,CAAC,OAAD,EAAU,gBAAV,CAA3C,EAAwE,EAAxE,CAAP;EACD;EAjCH;EAAA;EAAA,WAkCE,4BAAmB,YAAnB,EAAgE;EAC9D,UAAI,CAACF,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,OAAO,GAAG1F,iBAAA,CAAqB,YAArB,CAAhB;EACA,aAAO6F,iCAAA,CAAqC,IAArC,EAA2C,OAA3C,CAAP;EACD;EAtCH;EAAA;EAAA,WAuCE,6BACE,YADF,EAE2E;EAAA,UAAzE,aAAyE,uEAAvBlF,kBAAA,EAAuB;EAEzE,UAAM,OAAO,GAAGX,iBAAA,CAAqB,YAArB,CAAhB;EACA,UAAM,QAAQ,GAAG3C,kBAAA,CAAsB,aAAtB,CAAjB;EACA,aAAO2H,kCAAA,CAAsC,IAAtC,EAA4C,OAA5C,EAAqD,QAArD,CAAP;EACD;EA9CH;EAAA;EAAA,WA+CE,uBACE,aADF,EAEsD;EAAA,UAApD,YAAoD,uEAAT,SAAS;EAEpD,UAAI,CAACU,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGpC,kBAAA,CAAsB,aAAtB,CAAjB;EACA,UAAM,OAAO,GAAGzG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,cAAc,GAAG+G,wBAAA,CAA4B,OAA5B,CAAvB;EACA,aAAOpE,4BAAA,CAAgC,IAAhC,EAAsC,QAAtC,EAAgD,cAAhD,CAAP;EACD;EAxDH;EAAA;EAAA,WAyDE,gCAAuB,aAAvB,EAAyE;EACvE,UAAI,CAACkG,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,QAAQ,GAAGpC,kBAAA,CAAsB,aAAtB,CAAjB;EACA,UAAM,OAAO,GAAG,YAAY,CAAC,oBAAD,CAA5B;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAlB;EAEA,UAAM,QAAQ,GAAGqC,iBAAA,CAAqB,EAArB,CAAjB;;EACA,UAAI,QAAQ,KAAK,IAAjB,EAAuB;EACrB,YAAM,OAAO,GAAGG,oBAAA,CACd,OAAO,CAAC,QAAD,EAAW,QAAX,CADO,EAEd,OAAO,CAAC,QAAD,EAAW,SAAX,CAFO,EAGd,OAAO,CAAC,QAAD,EAAW,OAAX,CAHO,EAId,OAAO,CAAC,QAAD,EAAW,QAAX,CAJO,EAKd,OAAO,CAAC,QAAD,EAAW,UAAX,CALO,EAMd,OAAO,CAAC,QAAD,EAAW,UAAX,CANO,EAOd,OAAO,CAAC,QAAD,EAAW,eAAX,CAPO,EAQd,OAAO,CAAC,QAAD,EAAW,eAAX,CARO,EASd,OAAO,CAAC,QAAD,EAAW,cAAX,CATO,CAAhB;EAWA,YAAI,OAAO,KAAK,IAAhB,EAAsB,MAAM,IAAI,UAAJ,CAAe,qCAAf,CAAN;EACtB,eAAO,CAAC,IAAI,OAAJ,CAAY,OAAO,CAAC,KAAR,CAAc,QAAd,CAAZ,CAAD,CAAP;EACD;;EAED,UAAM,eAAe,GAAGC,yBAAA,CACtB,EADsB,EAEtB,OAAO,CAAC,QAAD,EAAW,QAAX,CAFe,EAGtB,OAAO,CAAC,QAAD,EAAW,SAAX,CAHe,EAItB,OAAO,CAAC,QAAD,EAAW,OAAX,CAJe,EAKtB,OAAO,CAAC,QAAD,EAAW,QAAX,CALe,EAMtB,OAAO,CAAC,QAAD,EAAW,UAAX,CANe,EAOtB,OAAO,CAAC,QAAD,EAAW,UAAX,CAPe,EAQtB,OAAO,CAAC,QAAD,EAAW,eAAX,CARe,EAStB,OAAO,CAAC,QAAD,EAAW,eAAX,CATe,EAUtB,OAAO,CAAC,QAAD,EAAW,cAAX,CAVe,CAAxB;EAYA,aAAO,eAAe,CAAC,GAAhB,CAAoB,UAAC,EAAD;EAAA,eAAQ,IAAI,OAAJ,CAAY,EAAZ,CAAR;EAAA,OAApB,CAAP;EACD;EA7FH;EAAA;EAAA,WA8FE,2BAAkB,kBAAlB,EAAoE;EAClE,UAAI,CAACL,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,aAAa,GAAG1F,iBAAA,CAAqB,kBAArB,CAAtB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAlB,CAHkE;;EAMlE,UAAI2F,iBAAA,CAAqB,EAArB,MAA6B,IAA7B,IAAqC,EAAE,KAAK,KAAhD,EAAuD;EACrD,eAAO,IAAP;EACD;;EAED,UAAI,gBAAgB,GAAG,OAAO,CAAC,aAAD,EAAgB,gBAAhB,CAA9B;EACA,UAAM,OAAO,GAAG,YAAY,CAAC,oBAAD,CAA5B;EACA,MAAA,gBAAgB,GAAGK,6BAAA,CAAiC,gBAAjC,EAAmD,EAAnD,CAAnB;EACA,aAAO,gBAAgB,KAAK,IAArB,GAA4B,IAA5B,GAAmC,IAAI,OAAJ,CAAY,gBAAZ,CAA1C;EACD;EA5GH;EAAA;EAAA,WA6GE,+BAAsB,kBAAtB,EAA4E;EAC1E,UAAI,CAACN,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,UAAM,aAAa,GAAG1F,iBAAA,CAAqB,kBAArB,CAAtB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,WAAP,CAAlB,CAH0E;;EAM1E,UAAI2F,iBAAA,CAAqB,EAArB,MAA6B,IAA7B,IAAqC,EAAE,KAAK,KAAhD,EAAuD;EACrD,eAAO,IAAP;EACD;;EAED,UAAI,gBAAgB,GAAG,OAAO,CAAC,aAAD,EAAgB,gBAAhB,CAA9B;EACA,UAAM,OAAO,GAAG,YAAY,CAAC,oBAAD,CAA5B;EACA,MAAA,gBAAgB,GAAGM,iCAAA,CAAqC,gBAArC,EAAuD,EAAvD,CAAnB;EACA,aAAO,gBAAgB,KAAK,IAArB,GAA4B,IAA5B,GAAmC,IAAI,OAAJ,CAAY,gBAAZ,CAA1C;EACD;EA3HH;EAAA;EAAA,WA4HE,oBAAQ;EACN,UAAI,CAACP,kBAAA,CAAsB,IAAtB,CAAL,EAAkC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAClC,aAAOhJ,QAAA,CAAY,OAAO,CAAC,IAAD,EAAO,WAAP,CAAnB,CAAP;EACD;EA/HH;EAAA;EAAA,WAgIE,kBAAM;EACJ,aAAOA,QAAA,CAAY,IAAZ,CAAP;EACD;EAlIH;EAAA;EAAA,WAmIE,cAAY,IAAZ,EAAmC;EACjC,aAAOwC,kBAAA,CAAsB,IAAtB,CAAP;EACD;EArIH;;EAAA;EAAA;EAyIA,kBAAkB,CAAC,QAAD,EAAW,mBAAX,CAAlB;;ECxJA,IAAM,YAAY,GAAG,MAAM,CAAC,MAA5B;EAEA,IAAM,gBAAgB,GAAG,CACvB,MADuB,EAEvB,KAFuB,EAGvB,MAHuB,EAIvB,QAJuB,EAKvB,QALuB,EAMvB,aANuB,EAOvB,aAPuB,EAQvB,YARuB,CAAzB;MAWa,cAAb;EACE,0BACE,YADF,EAEE,aAFF,EAIoD;EAAA,QADlD,aACkD,uEADRyB,kBAAA,EACQ;EAAA,QAAlD,oBAAkD,uEAAD,CAAC;;EAAA;;EAElD,QAAM,OAAO,GAAGE,wBAAA,CAA4B,YAA5B,CAAhB;EACA,QAAM,QAAQ,GAAGA,wBAAA,CAA4B,aAA5B,CAAjB;EACA,QAAM,QAAQ,GAAGxD,kBAAA,CAAsB,aAAtB,CAAjB;EACA,QAAM,eAAe,GAAGwD,wBAAA,CAA4B,oBAA5B,CAAxB,CALkD;EAQlD;EACA;EACA;;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,UAAJ,CAAe,qDAAf,CAAN;EACD;;EAED,IAAAqF,4BAAA,CAAgC,IAAhC,EAAsC,OAAtC,EAA+C,QAA/C,EAAyD,QAAzD,EAAmE,eAAnE;EACD;;EArBH;EAAA;EAAA,SAsBE,eAAQ;EACN,UAAI,CAAC/I,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO8D,YAAA,CAAgB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAvB,EAAyC,IAAzC,CAAP;EACD;EAzBH;EAAA;EAAA,SA0BE,eAAS;EACP,UAAI,CAAC9D,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO+D,aAAA,CAAiB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB,EAA0C,IAA1C,CAAP;EACD;EA7BH;EAAA;EAAA,SA8BE,eAAa;EACX,UAAI,CAAC/D,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOgE,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,IAA9C,CAAP;EACD;EAjCH;EAAA;EAAA,SAkCE,eAAY;EACV,UAAI,CAAChE,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EArCH;EAAA;EAAA,SAsCE,eAAO;EACL,UAAI,CAACA,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO4D,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,IAAxC,CAAP;EACD;EAzCH;EAAA;EAAA,SA0CE,eAAW;EACT,UAAI,CAAC5D,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO6D,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,IAA5C,CAAP;EACD;EA7CH;EAAA;EAAA,SA8CE,eAAe;EACb,UAAI,CAAC7D,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOsE,mBAAA,CAAuB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA9B,EAAgD,IAAhD,CAAP;EACD;EAjDH;EAAA;EAAA,SAkDE,eAAc;EACZ,UAAI,CAACtE,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOuE,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EArDH;EAAA;EAAA,SAsDE,eAAgB;EACd,UAAI,CAACvE,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOwE,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,IAAjD,CAAP;EACD;EAzDH;EAAA;EAAA,SA0DE,eAAc;EACZ,UAAI,CAACxE,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOyE,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,IAA/C,CAAP;EACD;EA7DH;EAAA;EAAA,WA8DE,eAAK,qBAAL,EAA0F;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EACxF,UAAI,CAACzE,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACnC,UAAI,CAACP,QAAA,CAAY,qBAAZ,CAAL,EAAyC;EACvC,cAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,qBAAtC;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,OAAD,EAAU,WAAV,EAAuB,MAAvB,CAA5B,CAAnB;EACA,UAAM,KAAK,GAAGC,eAAA,CAAmB,qBAAnB,EAA0C,UAA1C,CAAd;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,yBAAd,CAAN;EACD;;EACD,UAAI,MAAM,GAAGc,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAb;EACA,MAAA,MAAM,GAAGZ,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,KAAzC,CAAT;EACA,MAAA,MAAM,GAAGY,yBAAA,CAA6B,MAA7B,EAAqC,UAArC,CAAT;EAEA,UAAM,OAAO,GAAGhG,gBAAA,CAAoB,YAApB,CAAhB;EAEA,aAAOiG,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,OAAzC,CAAP;EACD;EAlFH;EAAA;EAAA,WAmFE,aAAI,oBAAJ,EAAsF;EAAA,UAA1C,YAA0C,uEAAT,SAAS;EACpF,UAAI,CAAC3F,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAM,QAAQ,GAAG2C,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAM,KAAN,GAAuG,QAAvG,CAAM,KAAN;EAAA,UAAa,MAAb,GAAuG,QAAvG,CAAa,MAAb;EAAA,UAAqB,KAArB,GAAuG,QAAvG,CAAqB,KAArB;EAAA,UAA4B,IAA5B,GAAuG,QAAvG,CAA4B,IAA5B;EAAA,UAAkC,KAAlC,GAAuG,QAAvG,CAAkC,KAAlC;EAAA,UAAyC,OAAzC,GAAuG,QAAvG,CAAyC,OAAzC;EAAA,UAAkD,OAAlD,GAAuG,QAAvG,CAAkD,OAAlD;EAAA,UAA2D,YAA3D,GAAuG,QAAvG,CAA2D,YAA3D;EAAA,UAAyE,YAAzE,GAAuG,QAAvG,CAAyE,YAAzE;EAAA,UAAuF,WAAvF,GAAuG,QAAvG,CAAuF,WAAvF;;EAHoF,gCAIxE7C,eAAA,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,EAA2F,KAA3F,CAJwE;;EAIjF,MAAA,IAJiF,uBAIjF,IAJiF;EAMpF,UAAM,OAAO,GAAGJ,gBAAA,CAAoB,YAApB,CAAhB;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGiF,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAf;EACA,UAAM,IAAI,GAAGkB,YAAA,CAAgB,KAAhB,EAAuB,MAAvB,EAA+B,KAA/B,EAAsC,IAAtC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,CAAb;EACA,UAAM,GAAG,GAAG,IAAI,GAAG,CAAP,GAAWoC,iBAAA,CAAqB1E,mBAAA,CAAuB,QAAvB,EAAiC,IAAjC,CAArB,CAAX,GAA0E,CAAtF;EACA,UAAM,SAAS,GAAGS,cAAA,CAAkB,QAAlB,oCAAiC,MAAjC;EAAyC,QAAA,GAAG,EAAH;EAAzC,SAAlB;;EACA,UAAM,WAAW,sBAAQ,OAAR,CAAjB;;EACA,UAAM,SAAS,GAAGC,eAAA,CAAmB,QAAnB,EAA6B,SAA7B,oCAA6C,QAA7C;EAAuD,QAAA,IAAI,EAAJ;EAAvD,UAA+D,OAA/D,CAAlB;EACA,UAAM,eAAe,GAAGU,yBAAA,CAA6B,SAA7B,EAAwC,UAAxC,CAAxB;EAEA,aAAOC,mBAAA,CAAuB,QAAvB,EAAiC,eAAjC,EAAkD,WAAlD,CAAP;EACD;EAtGH;EAAA;EAAA,WAuGE,kBACE,oBADF,EAEiD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EAE/C,UAAI,CAAC3F,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAI,QAAQ,GAAG2C,yBAAA,CAA6B,oBAA7B,CAAf;EACA,MAAA,QAAQ,GAAG;EACT,QAAA,KAAK,EAAE,CAAC,QAAQ,CAAC,KADR;EAET,QAAA,MAAM,EAAE,CAAC,QAAQ,CAAC,MAFT;EAGT,QAAA,KAAK,EAAE,CAAC,QAAQ,CAAC,KAHR;EAIT,QAAA,IAAI,EAAE,CAAC,QAAQ,CAAC,IAJP;EAKT,QAAA,KAAK,EAAE,CAAC,QAAQ,CAAC,KALR;EAMT,QAAA,OAAO,EAAE,CAAC,QAAQ,CAAC,OANV;EAOT,QAAA,OAAO,EAAE,CAAC,QAAQ,CAAC,OAPV;EAQT,QAAA,YAAY,EAAE,CAAC,QAAQ,CAAC,YARf;EAST,QAAA,YAAY,EAAE,CAAC,QAAQ,CAAC,YATf;EAUT,QAAA,WAAW,EAAE,CAAC,QAAQ,CAAC;EAVd,OAAX;EAYA,sBAAuG,QAAvG;EAAA,UAAM,KAAN,aAAM,KAAN;EAAA,UAAa,MAAb,aAAa,MAAb;EAAA,UAAqB,KAArB,aAAqB,KAArB;EAAA,UAA4B,IAA5B,aAA4B,IAA5B;EAAA,UAAkC,KAAlC,aAAkC,KAAlC;EAAA,UAAyC,OAAzC,aAAyC,OAAzC;EAAA,UAAkD,OAAlD,aAAkD,OAAlD;EAAA,UAA2D,YAA3D,aAA2D,YAA3D;EAAA,UAAyE,YAAzE,aAAyE,YAAzE;EAAA,UAAuF,WAAvF,aAAuF,WAAvF;;EAhB+C,iCAiBnC7C,eAAA,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,WAA9E,EAA2F,KAA3F,CAjBmC;;EAiB5C,MAAA,IAjB4C,wBAiB5C,IAjB4C;EAmB/C,UAAM,OAAO,GAAGJ,gBAAA,CAAoB,YAApB,CAAhB;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGiF,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAf;EACA,UAAM,IAAI,GAAGkB,YAAA,CAAgB,KAAhB,EAAuB,MAAvB,EAA+B,KAA/B,EAAsC,IAAtC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,CAAb;EACA,UAAM,GAAG,GAAG,IAAI,GAAG,CAAP,GAAWoC,iBAAA,CAAqB1E,mBAAA,CAAuB,QAAvB,EAAiC,IAAjC,CAArB,CAAX,GAA0E,CAAtF;EACA,UAAM,SAAS,GAAGS,cAAA,CAAkB,QAAlB,oCAAiC,MAAjC;EAAyC,QAAA,GAAG,EAAH;EAAzC,SAAlB;;EACA,UAAM,WAAW,sBAAQ,OAAR,CAAjB;;EACA,UAAM,SAAS,GAAGC,eAAA,CAAmB,QAAnB,EAA6B,SAA7B,oCAA6C,QAA7C;EAAuD,QAAA,IAAI,EAAJ;EAAvD,UAA+D,OAA/D,CAAlB;EACA,UAAM,eAAe,GAAGU,yBAAA,CAA6B,SAA7B,EAAwC,UAAxC,CAAxB;EAEA,aAAOC,mBAAA,CAAuB,QAAvB,EAAiC,eAAjC,EAAkD,WAAlD,CAAP;EACD;EAzIH;EAAA;EAAA,WA0IE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAAC3F,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAM,KAAK,GAAGiJ,mBAAA,CAAuB,UAAvB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAG1J,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,uDAC2C,UAD3C,kBAC6D,eAD7D,gBAAN;EAGD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C,gBAA5C,CAArB;EACA,UAAM,WAAW,GAAG/C,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,gBAA1C,EAA4D,MAA5D,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,SAAxC,EAAmD,KAAnD,CAA1B;EAEA,UAAM,UAAU,GAAGyB,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,WAAW,GAAGe,yBAAA,CAA6B,KAA7B,EAAoC,UAApC,CAApB;EACA,UAAM,UAAU,GAAGA,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAnB;EACA,UAAM,SAAS,GAAGX,cAAA,CAAkB,QAAlB,oCAAiC,WAAjC;EAA8C,QAAA,GAAG,EAAE;EAAnD,SAAlB;EACA,UAAM,QAAQ,GAAGA,cAAA,CAAkB,QAAlB,oCAAiC,UAAjC;EAA6C,QAAA,GAAG,EAAE;EAAlD,SAAjB;;EAEA,UAAM,YAAY,qCAAQ,OAAR;EAAiB,QAAA,WAAW,EAAX;EAAjB,QAAlB;;EACA,UAAM,MAAM,GAAGG,iBAAA,CAAqB,QAArB,EAA+B,QAA/B,EAAyC,SAAzC,EAAoD,YAApD,CAAf;EACA,UAAI,YAAY,KAAK,OAAjB,IAA4B,iBAAiB,KAAK,CAAtD,EAAyD,OAAO,MAAP;EAEzD,UAAM,KAAN,GAAwB,MAAxB,CAAM,KAAN;EAAA,UAAa,MAAb,GAAwB,MAAxB,CAAa,MAAb;;EA7BgF,8BA8B3DC,aAAA,CACnB,KADmB,EAEnB,MAFmB,EAGnB,CAHmB,EAInB,CAJmB,EAKnB,CALmB,EAMnB,CANmB,EAOnB,CAPmB,EAQnB,CARmB,EASnB,CATmB,EAUnB,CAVmB,EAWnB,iBAXmB,EAYnB,YAZmB,EAanB,YAbmB,EAcnB,QAdmB,CA9B2D;;EA8B7E,MAAA,KA9B6E,qBA8B7E,KA9B6E;EA8BtE,MAAA,MA9BsE,qBA8BtE,MA9BsE;EA+ChF,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,CAAP;EACD;EA3LH;EAAA;EAAA,WA4LE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACnF,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAM,KAAK,GAAGiJ,mBAAA,CAAuB,UAAvB,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAG1J,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,uDAC2C,UAD3C,kBAC6D,eAD7D,gBAAN;EAGD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C,gBAA5C,CAArB;EACA,UAAM,WAAW,GAAG/C,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,gBAA1C,EAA4D,MAA5D,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,SAAxC,EAAmD,KAAnD,CAA1B;EAEA,UAAM,UAAU,GAAGyB,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,WAAW,GAAGe,yBAAA,CAA6B,KAA7B,EAAoC,UAApC,CAApB;EACA,UAAM,UAAU,GAAGA,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAnB;EACA,UAAM,SAAS,GAAGX,cAAA,CAAkB,QAAlB,oCAAiC,WAAjC;EAA8C,QAAA,GAAG,EAAE;EAAnD,SAAlB;EACA,UAAM,QAAQ,GAAGA,cAAA,CAAkB,QAAlB,oCAAiC,UAAjC;EAA6C,QAAA,GAAG,EAAE;EAAlD,SAAjB;;EAEA,UAAM,YAAY,qCAAQ,OAAR;EAAiB,QAAA,WAAW,EAAX;EAAjB,QAAlB;;EACA,kCAAwBG,iBAAA,CAAqB,QAArB,EAA+B,QAA/B,EAAyC,SAAzC,EAAoD,YAApD,CAAxB;EAAA,UAAM,KAAN,yBAAM,KAAN;EAAA,UAAa,MAAb,yBAAa,MAAb;;EACA,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;;EACA,UAAI,YAAY,KAAK,OAAjB,IAA4B,iBAAiB,KAAK,CAAtD,EAAyD;EACvD,eAAO,IAAI,QAAJ,CAAa,CAAC,KAAd,EAAqB,CAAC,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAAP;EACD;;EA9B+E,+BA+B3DC,aAAA,CACnB,KADmB,EAEnB,MAFmB,EAGnB,CAHmB,EAInB,CAJmB,EAKnB,CALmB,EAMnB,CANmB,EAOnB,CAPmB,EAQnB,CARmB,EASnB,CATmB,EAUnB,CAVmB,EAWnB,iBAXmB,EAYnB,YAZmB,EAanBC,0BAAA,CAA8B,YAA9B,CAbmB,EAcnB,QAdmB,CA/B2D;;EA+B7E,MAAA,KA/B6E,sBA+B7E,KA/B6E;EA+BtE,MAAA,MA/BsE,sBA+BtE,MA/BsE;EAgDhF,aAAO,IAAI,QAAJ,CAAa,CAAC,KAAd,EAAqB,CAAC,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAAP;EACD;EA7OH;EAAA;EAAA,WA8OE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAACpF,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAM,KAAK,GAAGiJ,mBAAA,CAAuB,UAAvB,CAAd;;EACA,8BAAmB,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,CAAnB,0BAAmD;EAA9C,YAAM,IAAI,WAAV;EACH,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,EAAO,IAAP,CAApB;EACA,YAAM,IAAI,GAAG,OAAO,CAAC,KAAD,EAAQ,IAAR,CAApB;EACA,YAAI,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;EACpB;;EACD,aAAO5D,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,KAAD,EAAQ,QAAR,CAAlD,CAAP;EACD;EAvPH;EAAA;EAAA,WAwPE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAACrF,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAM,OAAO,GAAGN,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAG4F,oBAAA,CAAwB,OAAxB,CAArB;EACA,aAAO4D,yBAAA,CAA6B,IAA7B,EAAmC,YAAnC,CAAP;EACD;EA7PH;EAAA;EAAA,WA8PE,kBAAM;EACJ,UAAI,CAAClJ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAOkJ,yBAAA,CAA6B,IAA7B,CAAP;EACD;EAjQH;EAAA;EAAA,WAkQE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAAClJ,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAxQH;EAAA;EAAA,WAyQE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,8DAAd,CAAN;EACD;EA3QH;EAAA;EAAA,WA4QE,qBAAY,IAAZ,EAA0C;EACxC,UAAI,CAACA,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,UAAI,CAACP,QAAA,CAAY,IAAZ,CAAL,EAAwB,MAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;EACxB,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EAEA,UAAM,kBAAkB,GAAGkF,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAA3B;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,kBAAnC,CAAf;EAEA,UAAM,eAAe,GAAGf,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,CAA5B,CAAxB;EACA,UAAM,YAAY,GAAkE,CAAC,CAAC,KAAD,CAAD,CAApF,CATwC;;EAWxC,MAAA,eAAe,CAAC,OAAhB,CAAwB,UAAC,SAAD,EAAc;EACpC,YAAI,CAAC,YAAY,CAAC,IAAb,CAAkB;EAAA;EAAA,cAAE,IAAF;;EAAA,iBAAY,IAAI,KAAK,SAArB;EAAA,SAAlB,CAAL,EAAwD;EACrD,UAAA,YAA8D,CAAC,IAA/D,CAAoE,CACnE,SADmE,EAEnE,SAFmE,CAApE,EADqD;EAKvD;EACF,OAPD;EAQA,UAAM,WAAW,GAAGxE,qBAAA,CAAyB,IAAzB,EAA+B,YAA/B,CAApB;EACA,UAAI,YAAY,GAAG2E,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,WAAzC,CAAnB;;EAEA,UAAM,gBAAgB,sBAAO,IAAI,GAAJ,8BAAY,kBAAZ,sBAAmC,eAAnC,GAAP,CAAtB;;EACA,UAAM,aAAa,GAA8C,EAAjE;EACA,MAAA,gBAAgB,CAAC,OAAjB,CAAyB,UAAC,SAAD,EAAc;EACrC,YAAI,CAAC,aAAa,CAAC,IAAd,CAAmB;EAAA;EAAA,cAAE,IAAF;;EAAA,iBAAY,IAAI,KAAK,SAArB;EAAA,SAAnB,CAAL,EAAyD;EACvD,UAAA,aAAa,CAAC,IAAd,CAAmB,CAAC,SAAD,EAAY,SAAZ,CAAnB;EACD;EACF,OAJD;EAKA,MAAA,YAAY,GAAG3E,qBAAA,CAAyB,YAAzB,EAAuC,aAAvC,CAAf;EACA,UAAM,OAAO,GAAG,YAAY,CAAC,IAAD,CAA5B;EACA,MAAA,OAAO,CAAC,QAAR,GAAmB,QAAnB;EACA,aAAO4E,cAAA,CAAkB,QAAlB,EAA4B,YAA5B,EAA0C,OAA1C,CAAP;EACD;EA7SH;EAAA;EAAA,WA8SE,wBAAY;EACV,UAAI,CAAC/E,mBAAA,CAAuB,IAAvB,CAAL,EAAmC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACnC,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,MAAM,EAAE,OAAO,CAAC,IAAD,EAAO,OAAP,CAFV;EAGL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,SAAP,CAHZ;EAIL,QAAA,OAAO,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP;EAJX,OAAP;EAMD;EAtTH;EAAA;EAAA,WAuTE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGN,gBAAA,CAAoB,YAApB,CAAhB;;EACA,UAAIM,mBAAA,CAAuB,IAAvB,CAAJ,EAAkC;EAChC,QAAAH,kBAAA,CAAsB,OAAtB,EADgC;;EAEhC,eAAOU,uBAAA,CACL,OAAO,CAAC,IAAD,EAAO,QAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,SAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,QAAP,CAHF,EAIL,OAAO,CAAC,IAAD,EAAO,OAAP,CAJF,CAAP;EAMD;;EACD,aAAO0I,mBAAA,CAAuB,IAAvB,EAA6B,OAA7B,CAAP;EACD;EAnUH;EAAA;EAAA,WAoUE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,mBAAA,CAAuB,QAAvB,CAAZ;EACA,UAAM,GAAG,GAAGA,mBAAA,CAAuB,QAAvB,CAAZ;EACA,aAAO5H,cAAA,CACL,OAAO,CAAC,GAAD,EAAM,QAAN,CADF,EAEL,OAAO,CAAC,GAAD,EAAM,SAAN,CAFF,EAGL,OAAO,CAAC,GAAD,EAAM,OAAN,CAHF,EAIL,OAAO,CAAC,GAAD,EAAM,QAAN,CAJF,EAKL,OAAO,CAAC,GAAD,EAAM,SAAN,CALF,EAML,OAAO,CAAC,GAAD,EAAM,OAAN,CANF,CAAP;EAQD;EA/UH;;EAAA;EAAA;EAmVA,kBAAkB,CAAC,cAAD,EAAiB,yBAAjB,CAAlB;;EC/UA,IAAM,kBAAkB,GAAG,KAAK,CAAC,SAAN,CAAgB,IAA3C;MAEa,aAAb;EACE,yBACE,qBADF,EAEE,aAFF,EAG6E;EAAA,QAA3E,aAA2E,uEAAvBmC,kBAAA,EAAuB;;EAAA;;EAE3E;EACA;EACA;EACA;EACA,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;EACxB,YAAM,IAAI,SAAJ,CAAc,gDAAd,CAAN;EACD;;EACD,QAAM,gBAAgB,GAAGjB,QAAA,CAAY,qBAAZ,CAAzB;EACA,QAAM,QAAQ,GAAGR,kBAAA,CAAsB,aAAtB,CAAjB;EACA,QAAM,QAAQ,GAAG7B,kBAAA,CAAsB,aAAtB,CAAjB;EAEA,IAAAiJ,gCAAA,CAAoC,IAApC,EAA0C,gBAA1C,EAA4D,QAA5D,EAAsE,QAAtE;EACD;;EAlBH;EAAA;EAAA,SAmBE,eAAY;EACV,UAAI,CAAChH,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,IAAD,EAAO,QAAP,CAAd;EACD;EAtBH;EAAA;EAAA,SAuBE,eAAY;EACV,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,IAAD,EAAO,SAAP,CAAd;EACD;EA1BH;EAAA;EAAA,SA2BE,eAAQ;EACN,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO2B,YAAA,CAAgB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAvB,EAAyC,QAAQ,CAAC,IAAD,CAAjD,CAAP;EACD;EA9BH;EAAA;EAAA,SA+BE,eAAS;EACP,UAAI,CAAC3B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO4B,aAAA,CAAiB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB,EAA0C,QAAQ,CAAC,IAAD,CAAlD,CAAP;EACD;EAlCH;EAAA;EAAA,SAmCE,eAAa;EACX,UAAI,CAAC5B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO6B,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,QAAQ,CAAC,IAAD,CAAtD,CAAP;EACD;EAtCH;EAAA;EAAA,SAuCE,eAAO;EACL,UAAI,CAAC7B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO8B,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,QAAQ,CAAC,IAAD,CAAhD,CAAP;EACD;EA1CH;EAAA;EAAA,SA2CE,eAAQ;EACN,UAAI,CAAC9B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,QAAjB,CAAd;EACD;EA9CH;EAAA;EAAA,SA+CE,eAAU;EACR,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,UAAjB,CAAd;EACD;EAlDH;EAAA;EAAA,SAmDE,eAAU;EACR,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,UAAjB,CAAd;EACD;EAtDH;EAAA;EAAA,SAuDE,eAAe;EACb,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,eAAjB,CAAd;EACD;EA1DH;EAAA;EAAA,SA2DE,eAAe;EACb,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,eAAjB,CAAd;EACD;EA9DH;EAAA;EAAA,SA+DE,eAAc;EACZ,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,OAAO,CAAC,QAAQ,CAAC,IAAD,CAAT,EAAiB,cAAjB,CAAd;EACD;EAlEH;EAAA;EAAA,SAmEE,eAAO;EACL,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOyB,WAAA,CAAe,OAAO,CAAC,IAAD,EAAO,QAAP,CAAtB,EAAwC,QAAQ,CAAC,IAAD,CAAhD,CAAP;EACD;EAtEH;EAAA;EAAA,SAuEE,eAAW;EACT,UAAI,CAACzB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO0B,eAAA,CAAmB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA1B,EAA4C,QAAQ,CAAC,IAAD,CAApD,CAAP;EACD;EA1EH;EAAA;EAAA,SA2EE,eAAgB;EACd,UAAI,CAAC1B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,aAAO,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAR;EACD;EA/EH;EAAA;EAAA,SAgFE,eAAqB;EACnB,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,aAAO,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAR;EACD;EApFH;EAAA;EAAA,SAqFE,eAAqB;EACnB,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAArB;EACA,aAAOO,mBAAiB,CAAC,KAAK,CAAC,MAAN,CAAa,GAAb,CAAD,CAAxB;EACD;EAzFH;EAAA;EAAA,SA0FE,eAAoB;EAClB,UAAI,CAACP,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOO,mBAAiB,CAAC,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAR,CAAxB;EACD;EA7FH;EAAA;EAAA,SA8FE,eAAa;EACX,UAAI,CAACP,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO+B,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,QAAQ,CAAC,IAAD,CAAtD,CAAP;EACD;EAjGH;EAAA;EAAA,SAkGE,eAAa;EACX,UAAI,CAAC/B,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOgC,iBAAA,CAAqB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA5B,EAA8C,QAAQ,CAAC,IAAD,CAAtD,CAAP;EACD;EArGH;EAAA;EAAA,SAsGE,eAAc;EACZ,UAAI,CAAChC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOiC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,QAAQ,CAAC,IAAD,CAAvD,CAAP;EACD;EAzGH;EAAA;EAAA,SA0GE,eAAc;EACZ,UAAI,CAACjC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,EAAE,GAAG,QAAQ,CAAC,IAAD,CAAnB;EACA,UAAM,QAAQ,GAAG,YAAY,CAAC,0BAAD,CAA7B;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,EAAD,EAAK,QAAL,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,EAAD,EAAK,SAAL,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,EAAD,EAAK,OAAL,CAAnB;EACA,UAAM,KAAK,GAAG,IAAI,QAAJ,CAAa,IAAb,EAAmB,KAAnB,EAA0B,GAA1B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAd;EACA,UAAM,cAAc,GAAG1B,UAAA,CAAc,IAAd,EAAoB,KAApB,EAA2B,GAA3B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,QAA5C,CAAvB;EACA,UAAM,QAAQ,GAAG,IAAI,QAAJ,CAAa,cAAc,CAAC,IAA5B,EAAkC,cAAc,CAAC,KAAjD,EAAwD,cAAc,CAAC,GAAvE,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,CAA3F,CAAjB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,OAAO,GAAG,OAAO,CAAC4B,4BAAA,CAAgC,QAAhC,EAA0C,KAA1C,EAAiD,YAAjD,CAAD,EAAiE,gBAAjE,CAAvB;EACA,UAAM,UAAU,GAAG,OAAO,CAACA,4BAAA,CAAgC,QAAhC,EAA0C,QAA1C,EAAoD,YAApD,CAAD,EAAoE,gBAApE,CAA1B;EACA,aAAO,UAAU,CAAC,QAAX,CAAoB,OAApB,EAA6B,UAA7B,KAA4C,MAAnD;EACD;EAxHH;EAAA;EAAA,SAyHE,eAAc;EACZ,UAAI,CAACF,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOkC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,QAAQ,CAAC,IAAD,CAAvD,CAAP;EACD;EA5HH;EAAA;EAAA,SA6HE,eAAe;EACb,UAAI,CAAClC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOmC,mBAAA,CAAuB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA9B,EAAgD,QAAQ,CAAC,IAAD,CAAxD,CAAP;EACD;EAhIH;EAAA;EAAA,SAiIE,eAAc;EACZ,UAAI,CAACnC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOoC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,QAAQ,CAAC,IAAD,CAAvD,CAAP;EACD;EApIH;EAAA;EAAA,SAqIE,eAAgB;EACd,UAAI,CAACpC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOqC,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,QAAQ,CAAC,IAAD,CAAzD,CAAP;EACD;EAxIH;EAAA;EAAA,SAyIE,eAAc;EACZ,UAAI,CAACrC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOsC,kBAAA,CAAsB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA7B,EAA+C,QAAQ,CAAC,IAAD,CAAvD,CAAP;EACD;EA5IH;EAAA;EAAA,SA6IE,eAAU;EACR,UAAI,CAACtC,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOuG,iCAAA,CAAqC,OAAO,CAAC,IAAD,EAAO,SAAP,CAA5C,EAA+D,OAAO,CAAC,IAAD,EAAO,OAAP,CAAtE,CAAP;EACD;EAhJH;EAAA;EAAA,SAiJE,eAAqB;EACnB,UAAI,CAACvG,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOiH,uBAAA,CAA2B,OAAO,CAAC,IAAD,EAAO,SAAP,CAAlC,EAAqD,OAAO,CAAC,IAAD,EAAO,OAAP,CAA5D,CAAP;EACD;EApJH;EAAA;EAAA,WAqJE,eAAK,yBAAL,EAA8F;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC5F,UAAI,CAACjH,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;;EACvC,UAAI,CAAC1C,QAAA,CAAY,yBAAZ,CAAL,EAA6C;EAC3C,cAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;EACD;;EACD,MAAAiF,kCAAA,CAAsC,yBAAtC;EAEA,UAAM,OAAO,GAAGhF,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,cAAc,GAAG+G,wBAAA,CAA4B,OAA5B,CAAvB;EACA,UAAM,MAAM,GAAG4C,gBAAA,CAAoB,OAApB,EAA6B,QAA7B,CAAf;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAG1E,cAAA,CAAkB,QAAlB,EAA4B,CAC7C,KAD6C,EAE7C,MAF6C,EAG7C,aAH6C,EAI7C,aAJ6C,EAK7C,QAL6C,EAM7C,OAN6C,EAO7C,WAP6C,EAQ7C,YAR6C,EAS7C,QAT6C,EAU7C,MAV6C,CAA5B,CAAnB;EAYA,MAAA,kBAAkB,CAAC,IAAnB,CAAwB,UAAxB,EAAoC,QAApC;EACA,UAAM,KAAK,GAAGC,eAAA,CAAmB,yBAAnB,EAA8C,UAA9C,CAAd;;EACA,UAAI,CAAC,KAAL,EAAY;EACV,cAAM,IAAI,SAAJ,CAAc,8BAAd,CAAN;EACD,OA7B2F;;;EA+B5F,UAAM,OAAO,GAAsF,CACjG,CAAC,KAAD,EAAQ,SAAR,CADiG,EAEjG,CAAC,MAAD,EAAS,CAAT,CAFiG,EAGjG,CAAC,aAAD,EAAgB,CAAhB,CAHiG,EAIjG,CAAC,aAAD,EAAgB,CAAhB,CAJiG,EAKjG,CAAC,QAAD,EAAW,CAAX,CALiG,EAMjG,CAAC,OAAD,EAAU,SAAV,CANiG,EAOjG,CAAC,WAAD,EAAc,SAAd,CAPiG,EAQjG,CAAC,YAAD,EAAe,CAAf,CARiG,EASjG,CAAC,QAAD,EAAW,CAAX,CATiG,EAUjG,CAAC,MAAD,EAAS,SAAT,CAViG,EAWjG,CAAC,QAAD,CAXiG,EAYjG,CAAC,UAAD,CAZiG,CAAnG,CA/B4F;;EA8C5F,MAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAc;EAC/B,YAAI,CAAC,OAAO,CAAC,IAAR,CAAa;EAAA;EAAA,cAAE,IAAF;;EAAA,iBAAY,IAAI,KAAK,SAArB;EAAA,SAAb,CAAL,EAAmD;EACjD,UAAA,OAAO,CAAC,IAAR,CAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;EACD;EACF,OAJD;EAKA,UAAI,MAAM,GAAGzE,qBAAA,CAAyB,IAAzB,EAA+B,OAA/B,CAAb;EACA,MAAA,MAAM,GAAG2E,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,KAAzC,CAAT;EACA,MAAA,MAAM,GAAG3E,qBAAA,CAAyB,MAAzB,EAAiC,OAAjC,CAAT;;EACA,kCACE6F,+BAAA,CAAmC,QAAnC,EAA6C,MAA7C,EAAqD,OAArD,CADF;EAAA,UAAQ,IAAR,yBAAQ,IAAR;EAAA,UAAc,KAAd,yBAAc,KAAd;EAAA,UAAqB,GAArB,yBAAqB,GAArB;EAAA,UAA0B,IAA1B,yBAA0B,IAA1B;EAAA,UAAgC,MAAhC,yBAAgC,MAAhC;EAAA,UAAwC,MAAxC,yBAAwC,MAAxC;EAAA,UAAgD,WAAhD,yBAAgD,WAAhD;EAAA,UAA6D,WAA7D,yBAA6D,WAA7D;EAAA,UAA0E,UAA1E,yBAA0E,UAA1E;;EAEA,UAAM,QAAQ,GAAGwC,iBAAA,CAAqB,MAAM,CAAC,MAA5B,CAAjB;EACA,UAAM,gBAAgB,GAAGc,0BAAA,CACvB,IADuB,EAEvB,KAFuB,EAGvB,GAHuB,EAIvB,IAJuB,EAKvB,MALuB,EAMvB,MANuB,EAOvB,WAPuB,EAQvB,WARuB,EASvB,UATuB,EAUvB,QAVuB,EAWvB,QAXuB,EAYvB,QAZuB,EAavB,cAbuB,EAcvB,MAduB;EAevB;EAAoB,WAfG,CAAzB;EAkBA,aAAO/F,2BAAA,CAA+B,gBAA/B,EAAiD,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxD,EAA2E,QAA3E,CAAP;EACD;EAjOH;EAAA;EAAA,WAkOE,uBAAc,iBAAd,EAA2D;EACzD,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAEvC,UAAM,YAAY,GAAGxC,cAAA,CAAkB,iBAAlB,CAArB;EAEA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,YAAD,EAAe,SAAf,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,YAAD,EAAe,OAAf,CAAnB;EACA,UAAI,QAAQ,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAAtB;EACA,UAAM,MAAM,GAAG,QAAQ,CAAC,IAAD,CAAvB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,MAAD,EAAS,QAAT,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,MAAD,EAAS,UAAT,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,MAAD,EAAS,UAAT,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,MAAD,EAAS,eAAT,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,MAAD,EAAS,eAAT,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,MAAD,EAAS,cAAT,CAA1B;EAEA,MAAA,QAAQ,GAAGsG,oBAAA,CAAwB,OAAO,CAAC,IAAD,EAAO,QAAP,CAA/B,EAAiD,QAAjD,CAAX;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,aAAa,GAAG,YAAY,CAAC,0BAAD,CAAlC;EACA,UAAM,EAAE,GAAG,IAAI,aAAJ,CACT,IADS,EAET,KAFS,EAGT,GAHS,EAIT,IAJS,EAKT,MALS,EAMT,MANS,EAOT,WAPS,EAQT,WARS,EAST,UATS,EAUT,QAVS,CAAX;EAYA,UAAM,OAAO,GAAG5D,4BAAA,CAAgC,QAAhC,EAA0C,EAA1C,EAA8C,YAA9C,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,QAA7E,CAAP;EACD;EApQH;EAAA;EAAA,WAqQE,yBAAuE;EAAA,UAAzD,iBAAyD,uEAAT,SAAS;EACrE,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EAEvC,UAAM,SAAS,GAAG,YAAY,CAAC,sBAAD,CAA9B;EACA,UAAM,YAAY,GAAG,iBAAiB,IAAI,SAArB,GAAiC,IAAI,SAAJ,EAAjC,GAAmDsD,cAAA,CAAkB,iBAAlB,CAAxE;EAEA,UAAM,MAAM,GAAG,QAAQ,CAAC,IAAD,CAAvB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,MAAD,EAAS,QAAT,CAApB;EACA,UAAM,KAAK,GAAG,OAAO,CAAC,MAAD,EAAS,SAAT,CAArB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,MAAD,EAAS,OAAT,CAAnB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,IAAI,GAAG,OAAO,CAAC,YAAD,EAAe,QAAf,CAApB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,MAAM,GAAG,OAAO,CAAC,YAAD,EAAe,UAAf,CAAtB;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,WAAW,GAAG,OAAO,CAAC,YAAD,EAAe,eAAf,CAA3B;EACA,UAAM,UAAU,GAAG,OAAO,CAAC,YAAD,EAAe,cAAf,CAA1B;EAEA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,aAAa,GAAG,YAAY,CAAC,0BAAD,CAAlC;EACA,UAAM,EAAE,GAAG,IAAI,aAAJ,CACT,IADS,EAET,KAFS,EAGT,GAHS,EAIT,IAJS,EAKT,MALS,EAMT,MANS,EAOT,WAPS,EAQT,WARS,EAST,UATS,EAUT,QAVS,CAAX;EAYA,UAAM,OAAO,GAAGpD,4BAAA,CAAgC,QAAhC,EAA0C,EAA1C,EAA8C,YAA9C,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,QAA7E,CAAP;EACD;EAvSH;EAAA;EAAA,WAwSE,sBAAa,aAAb,EAAqD;EACnD,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAGJ,kBAAA,CAAsB,aAAtB,CAAjB;EACA,aAAOwB,2BAAA,CAA+B,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAtC,EAAgE,QAAhE,EAA0E,OAAO,CAAC,IAAD,EAAO,QAAP,CAAjF,CAAP;EACD;EA5SH;EAAA;EAAA,WA6SE,sBAAa,aAAb,EAAqD;EACnD,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAGjC,kBAAA,CAAsB,aAAtB,CAAjB;EACA,aAAOqD,2BAAA,CAA+B,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAtC,EAAgE,OAAO,CAAC,IAAD,EAAO,SAAP,CAAvE,EAA0F,QAA1F,CAAP;EACD;EAjTH;EAAA;EAAA,WAkTE,aAAI,oBAAJ,EAAsF;EAAA,UAA1C,YAA0C,uEAAT,SAAS;EACpF,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAGQ,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAAyG,QAAzG,CAAQ,KAAR;EAAA,UAAe,MAAf,GAAyG,QAAzG,CAAe,MAAf;EAAA,UAAuB,KAAvB,GAAyG,QAAzG,CAAuB,KAAvB;EAAA,UAA8B,IAA9B,GAAyG,QAAzG,CAA8B,IAA9B;EAAA,UAAoC,KAApC,GAAyG,QAAzG,CAAoC,KAApC;EAAA,UAA2C,OAA3C,GAAyG,QAAzG,CAA2C,OAA3C;EAAA,UAAoD,OAApD,GAAyG,QAAzG,CAAoD,OAApD;EAAA,UAA6D,YAA7D,GAAyG,QAAzG,CAA6D,YAA7D;EAAA,UAA2E,YAA3E,GAAyG,QAAzG,CAA2E,YAA3E;EAAA,UAAyF,WAAzF,GAAyG,QAAzG,CAAyF,WAAzF;EACA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,gBAAgB,GAAG6J,gBAAA,CACvB,OAAO,CAAC,IAAD,EAAO,OAAP,CADgB,EAEvB,QAFuB,EAGvB,QAHuB,EAIvB,KAJuB,EAKvB,MALuB,EAMvB,KANuB,EAOvB,IAPuB,EAQvB,KARuB,EASvB,OATuB,EAUvB,OAVuB,EAWvB,YAXuB,EAYvB,YAZuB,EAavB,WAbuB,EAcvB,OAduB,CAAzB;EAgBA,aAAOhG,2BAAA,CAA+B,gBAA/B,EAAiD,QAAjD,EAA2D,QAA3D,CAAP;EACD;EA1UH;EAAA;EAAA,WA2UE,kBACE,oBADF,EAEiD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EAE/C,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAGQ,yBAAA,CAA6B,oBAA7B,CAAjB;EACA,UAAQ,KAAR,GAAyG,QAAzG,CAAQ,KAAR;EAAA,UAAe,MAAf,GAAyG,QAAzG,CAAe,MAAf;EAAA,UAAuB,KAAvB,GAAyG,QAAzG,CAAuB,KAAvB;EAAA,UAA8B,IAA9B,GAAyG,QAAzG,CAA8B,IAA9B;EAAA,UAAoC,KAApC,GAAyG,QAAzG,CAAoC,KAApC;EAAA,UAA2C,OAA3C,GAAyG,QAAzG,CAA2C,OAA3C;EAAA,UAAoD,OAApD,GAAyG,QAAzG,CAAoD,OAApD;EAAA,UAA6D,YAA7D,GAAyG,QAAzG,CAA6D,YAA7D;EAAA,UAA2E,YAA3E,GAAyG,QAAzG,CAA2E,YAA3E;EAAA,UAAyF,WAAzF,GAAyG,QAAzG,CAAyF,WAAzF;EACA,UAAM,OAAO,GAAGjD,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,gBAAgB,GAAG6J,gBAAA,CACvB,OAAO,CAAC,IAAD,EAAO,OAAP,CADgB,EAEvB,QAFuB,EAGvB,QAHuB,EAIvB,CAAC,KAJsB,EAKvB,CAAC,MALsB,EAMvB,CAAC,KANsB,EAOvB,CAAC,IAPsB,EAQvB,CAAC,KARsB,EASvB,CAAC,OATsB,EAUvB,CAAC,OAVsB,EAWvB,CAAC,YAXsB,EAYvB,CAAC,YAZsB,EAavB,CAAC,WAbsB,EAcvB,OAduB,CAAzB;EAgBA,aAAOhG,2BAAA,CAA+B,gBAA/B,EAAiD,QAAjD,EAA2D,QAA3D,CAAP;EACD;EAtWH;EAAA;EAAA,WAuWE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAGqH,uBAAA,CAA2B,UAA3B,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAGjK,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,kBAAkB,GAAGC,wBAAA,CAA4B,MAA5B,EAAoC,YAApC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,kBAA9C,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAM,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,iBAAiB,GAAGmD,mCAAA,CAAuC,OAAvC,EAAgD,YAAhD,CAA1B;EAEA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAAnB;EACA,UAAI,KAAJ,EAAW,MAAX,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,YAAzD,EAAuE,YAAvE,EAAqF,WAArF;;EACA,UAAI,WAAW,KAAK,MAAhB,IAA0B,WAAW,KAAK,OAA1C,IAAqD,WAAW,KAAK,MAArE,IAA+E,WAAW,KAAK,KAAnG,EAA0G;EACxG;EACA,QAAA,KAAK,GAAG,CAAR;EACA,QAAA,MAAM,GAAG,CAAT;EACA,QAAA,KAAK,GAAG,CAAR;EACA,QAAA,IAAI,GAAG,CAAP;;EALwG,oCAMhDjD,iBAAA,CACtD,GADsD,EAEtD,GAFsD,EAGtD,iBAHsD,EAItD,YAJsD,EAKtD,YALsD,CANgD;;EAMrG,QAAA,OANqG,yBAMrG,OANqG;EAM5F,QAAA,YAN4F,yBAM5F,YAN4F;EAM9E,QAAA,YAN8E,yBAM9E,YAN8E;EAMhE,QAAA,WANgE,yBAMhE,WANgE;;EAAA,kCAahCrD,eAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CAbgC;;EAarG,QAAA,KAbqG,uBAarG,KAbqG;EAa9F,QAAA,OAb8F,uBAa9F,OAb8F;EAarF,QAAA,OAbqF,uBAarF,OAbqF;EAa5E,QAAA,YAb4E,uBAa5E,YAb4E;EAa9D,QAAA,YAb8D,uBAa9D,YAb8D;EAahD,QAAA,WAbgD,uBAahD,WAbgD;EAuBzG,OAvBD,MAuBO;EACL,YAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;;EACA,YAAI,CAAC2J,cAAA,CAAkB,QAAlB,EAA4B,OAAO,CAAC,KAAD,EAAQ,SAAR,CAAnC,CAAL,EAA6D;EAC3D,gBAAM,IAAI,UAAJ,CACJ,iFACE,oGAFE,CAAN;EAID;;EACD,YAAM,YAAY,qCAAQ,OAAR;EAAiB,UAAA,WAAW,EAAX;EAAjB,UAAlB;;EARK,oCAUHC,uBAAA,CAA2B,GAA3B,EAAgC,GAAhC,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,WAAzD,EAAsE,YAAtE,CAVG;;EASF,QAAA,KATE,yBASF,KATE;EASK,QAAA,MATL,yBASK,MATL;EASa,QAAA,KATb,yBASa,KATb;EASoB,QAAA,IATpB,yBASoB,IATpB;EAS0B,QAAA,KAT1B,yBAS0B,KAT1B;EASiC,QAAA,OATjC,yBASiC,OATjC;EAS0C,QAAA,OAT1C,yBAS0C,OAT1C;EASmD,QAAA,YATnD,yBASmD,YATnD;EASiE,QAAA,YATjE,yBASiE,YATjE;EAS+E,QAAA,WAT/E,yBAS+E,WAT/E;;EAAA,gCAYHvE,aAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,IAdF,CAZG;;EAWF,QAAA,KAXE,qBAWF,KAXE;EAWK,QAAA,MAXL,qBAWK,MAXL;EAWa,QAAA,KAXb,qBAWa,KAXb;EAWoB,QAAA,IAXpB,qBAWoB,IAXpB;EAW0B,QAAA,KAX1B,qBAW0B,KAX1B;EAWiC,QAAA,OAXjC,qBAWiC,OAXjC;EAW0C,QAAA,OAX1C,qBAW0C,OAX1C;EAWmD,QAAA,YAXnD,qBAWmD,YAXnD;EAWiE,QAAA,YAXjE,qBAWiE,YAXjE;EAW+E,QAAA,WAX/E,qBAW+E,WAX/E;;EAAA,oCA6BHgC,yBAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,IAdF,CA7BG;;EA4BF,QAAA,KA5BE,yBA4BF,KA5BE;EA4BK,QAAA,MA5BL,yBA4BK,MA5BL;EA4Ba,QAAA,KA5Bb,yBA4Ba,KA5Bb;EA4BoB,QAAA,IA5BpB,yBA4BoB,IA5BpB;EA4B0B,QAAA,KA5B1B,yBA4B0B,KA5B1B;EA4BiC,QAAA,OA5BjC,yBA4BiC,OA5BjC;EA4B0C,QAAA,OA5B1C,yBA4B0C,OA5B1C;EA4BmD,QAAA,YA5BnD,yBA4BmD,YA5BnD;EA4BiE,QAAA,YA5BjE,yBA4BiE,YA5BjE;EA4B+E,QAAA,WA5B/E,yBA4B+E,WA5B/E;EA6CN;;EAED,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CAAa,KAAb,EAAoB,MAApB,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,YAAlE,EAAgF,YAAhF,EAA8F,WAA9F,CAAP;EACD;EApcH;EAAA;EAAA,WAqcE,eAAM,UAAN,EAAkF;EAAA,UAA5C,YAA4C,uEAAT,SAAS;EAChF,UAAI,CAAChF,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAGqH,uBAAA,CAA2B,UAA3B,CAAd;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,aAAa,GAAG,OAAO,CAAC,KAAD,EAAQ,QAAR,CAA7B;EACA,UAAM,UAAU,GAAGjK,QAAA,CAAY,QAAZ,CAAnB;EACA,UAAM,eAAe,GAAGA,QAAA,CAAY,aAAZ,CAAxB;;EACA,UAAI,UAAU,KAAK,eAAnB,EAAoC;EAClC,cAAM,IAAI,UAAJ,sDAA6D,UAA7D,kBAA+E,eAA/E,gBAAN;EACD;;EACD,UAAM,OAAO,GAAGG,gBAAA,CAAoB,YAApB,CAAhB;EACA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,kBAAkB,GAAGC,wBAAA,CAA4B,MAA5B,EAAoC,YAApC,CAA3B;EACA,UAAM,WAAW,GAAGhD,qBAAA,CAAyB,OAAzB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,kBAA9C,CAApB;EACA,MAAAiD,yBAAA,CAA6B,WAA7B,EAA0C,YAA1C;EACA,UAAI,YAAY,GAAGC,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAAnB;EACA,MAAA,YAAY,GAAGmC,0BAAA,CAA8B,YAA9B,CAAf;EACA,UAAM,iBAAiB,GAAGgB,mCAAA,CAAuC,OAAvC,EAAgD,YAAhD,CAA1B;EAEA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAAnB;EACA,UAAI,KAAJ,EAAW,MAAX,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,YAAzD,EAAuE,YAAvE,EAAqF,WAArF;;EACA,UAAI,WAAW,KAAK,MAAhB,IAA0B,WAAW,KAAK,OAA1C,IAAqD,WAAW,KAAK,MAArE,IAA+E,WAAW,KAAK,KAAnG,EAA0G;EACxG;EACA,QAAA,KAAK,GAAG,CAAR;EACA,QAAA,MAAM,GAAG,CAAT;EACA,QAAA,KAAK,GAAG,CAAR;EACA,QAAA,IAAI,GAAG,CAAP;;EALwG,qCAMhDjD,iBAAA,CACtD,GADsD,EAEtD,GAFsD,EAGtD,iBAHsD,EAItD,YAJsD,EAKtD,YALsD,CANgD;;EAMrG,QAAA,OANqG,0BAMrG,OANqG;EAM5F,QAAA,YAN4F,0BAM5F,YAN4F;EAM9E,QAAA,YAN8E,0BAM9E,YAN8E;EAMhE,QAAA,WANgE,0BAMhE,WANgE;;EAAA,mCAahCrD,eAAA,CACtE,CADsE,EAEtE,CAFsE,EAGtE,CAHsE,EAItE,OAJsE,EAKtE,YALsE,EAMtE,YANsE,EAOtE,WAPsE,EAQtE,WARsE,CAbgC;;EAarG,QAAA,KAbqG,wBAarG,KAbqG;EAa9F,QAAA,OAb8F,wBAa9F,OAb8F;EAarF,QAAA,OAbqF,wBAarF,OAbqF;EAa5E,QAAA,YAb4E,wBAa5E,YAb4E;EAa9D,QAAA,YAb8D,wBAa9D,YAb8D;EAahD,QAAA,WAbgD,wBAahD,WAbgD;EAuBzG,OAvBD,MAuBO;EACL,YAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;;EACA,YAAI,CAAC2J,cAAA,CAAkB,QAAlB,EAA4B,OAAO,CAAC,KAAD,EAAQ,SAAR,CAAnC,CAAL,EAA6D;EAC3D,gBAAM,IAAI,UAAJ,CACJ,iFACE,oGAFE,CAAN;EAID;;EACD,YAAM,YAAY,qCAAQ,OAAR;EAAiB,UAAA,WAAW,EAAX;EAAjB,UAAlB;;EARK,qCAUHC,uBAAA,CAA2B,GAA3B,EAAgC,GAAhC,EAAqC,QAArC,EAA+C,QAA/C,EAAyD,WAAzD,EAAsE,YAAtE,CAVG;;EASF,QAAA,KATE,0BASF,KATE;EASK,QAAA,MATL,0BASK,MATL;EASa,QAAA,KATb,0BASa,KATb;EASoB,QAAA,IATpB,0BASoB,IATpB;EAS0B,QAAA,KAT1B,0BAS0B,KAT1B;EASiC,QAAA,OATjC,0BASiC,OATjC;EAS0C,QAAA,OAT1C,0BAS0C,OAT1C;EASmD,QAAA,YATnD,0BASmD,YATnD;EASiE,QAAA,YATjE,0BASiE,YATjE;EAS+E,QAAA,WAT/E,0BAS+E,WAT/E;;EAAA,iCAYHvE,aAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,IAdF,CAZG;;EAWF,QAAA,KAXE,sBAWF,KAXE;EAWK,QAAA,MAXL,sBAWK,MAXL;EAWa,QAAA,KAXb,sBAWa,KAXb;EAWoB,QAAA,IAXpB,sBAWoB,IAXpB;EAW0B,QAAA,KAX1B,sBAW0B,KAX1B;EAWiC,QAAA,OAXjC,sBAWiC,OAXjC;EAW0C,QAAA,OAX1C,sBAW0C,OAX1C;EAWmD,QAAA,YAXnD,sBAWmD,YAXnD;EAWiE,QAAA,YAXjE,sBAWiE,YAXjE;EAW+E,QAAA,WAX/E,sBAW+E,WAX/E;;EAAA,qCA6BHgC,yBAAA,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,IAJF,EAKE,KALF,EAME,OANF,EAOE,OAPF,EAQE,YARF,EASE,YATF,EAUE,WAVF,EAWE,iBAXF,EAYE,YAZF,EAaE,YAbF,EAcE,IAdF,CA7BG;;EA4BF,QAAA,KA5BE,0BA4BF,KA5BE;EA4BK,QAAA,MA5BL,0BA4BK,MA5BL;EA4Ba,QAAA,KA5Bb,0BA4Ba,KA5Bb;EA4BoB,QAAA,IA5BpB,0BA4BoB,IA5BpB;EA4B0B,QAAA,KA5B1B,0BA4B0B,KA5B1B;EA4BiC,QAAA,OA5BjC,0BA4BiC,OA5BjC;EA4B0C,QAAA,OA5B1C,0BA4B0C,OA5B1C;EA4BmD,QAAA,YA5BnD,0BA4BmD,YA5BnD;EA4BiE,QAAA,YA5BjE,0BA4BiE,YA5BjE;EA4B+E,QAAA,WA5B/E,0BA4B+E,WA5B/E;EA6CN;;EAED,UAAM,QAAQ,GAAG,YAAY,CAAC,qBAAD,CAA7B;EACA,aAAO,IAAI,QAAJ,CACL,CAAC,KADI,EAEL,CAAC,MAFI,EAGL,CAAC,KAHI,EAIL,CAAC,IAJI,EAKL,CAAC,KALI,EAML,CAAC,OANI,EAOL,CAAC,OAPI,EAQL,CAAC,YARI,EASL,CAAC,YATI,EAUL,CAAC,WAVI,CAAP;EAYD;EA9iBH;EAAA;EAAA,WA+iBE,eAAM,YAAN,EAAsC;EACpC,UAAI,CAAChF,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;EAChC,UAAM,OAAO,GACX,OAAO,YAAP,KAAwB,QAAxB,GACKiB,mBAAA,CAAuB,cAAvB,EAAuC,YAAvC,CADL,GAEI1D,gBAAA,CAAoB,YAApB,CAHN;EAIA,UAAM,YAAY,GAAGoD,sBAAA,CAA0B,OAA1B,EAAmC,SAAnC,EAA8C,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAA9C,CAArB;EACA,UAAI,YAAY,KAAK,SAArB,EAAgC,MAAM,IAAI,UAAJ,CAAe,0BAAf,CAAN;EAChC,UAAM,YAAY,GAAGG,sBAAA,CAA0B,OAA1B,EAAmC,YAAnC,CAArB;EACA,UAAM,iBAAiB,GAAG;EACxB,QAAA,GAAG,EAAE,CADmB;EAExB,QAAA,IAAI,EAAE,EAFkB;EAGxB,QAAA,MAAM,EAAE,EAHgB;EAIxB,QAAA,MAAM,EAAE,EAJgB;EAKxB,QAAA,WAAW,EAAE,IALW;EAMxB,QAAA,WAAW,EAAE,IANW;EAOxB,QAAA,UAAU,EAAE;EAPY,OAA1B;EASA,UAAM,iBAAiB,GAAGC,2BAAA,CAA+B,OAA/B,EAAwC,iBAAiB,CAAC,YAAD,CAAzD,EAAyE,KAAzE,CAA1B,CAnBoC;;EAsBpC,UAAM,EAAE,GAAG,QAAQ,CAAC,IAAD,CAAnB;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,EAAD,EAAK,QAAL,CAAlB;EACA,UAAI,KAAK,GAAG,OAAO,CAAC,EAAD,EAAK,SAAL,CAAnB;EACA,UAAI,GAAG,GAAG,OAAO,CAAC,EAAD,EAAK,OAAL,CAAjB;EACA,UAAI,IAAI,GAAG,OAAO,CAAC,EAAD,EAAK,QAAL,CAAlB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,EAAD,EAAK,UAAL,CAApB;EACA,UAAI,MAAM,GAAG,OAAO,CAAC,EAAD,EAAK,UAAL,CAApB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,EAAD,EAAK,eAAL,CAAzB;EACA,UAAI,WAAW,GAAG,OAAO,CAAC,EAAD,EAAK,eAAL,CAAzB;EACA,UAAI,UAAU,GAAG,OAAO,CAAC,EAAD,EAAK,cAAL,CAAxB;EAEA,UAAM,QAAQ,GAAG,YAAY,CAAC,0BAAD,CAA7B;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,OAAO,GAAG,IAAI,QAAJ,CAAa,OAAO,CAAC,EAAD,EAAK,QAAL,CAApB,EAAoC,OAAO,CAAC,EAAD,EAAK,SAAL,CAA3C,EAA4D,OAAO,CAAC,EAAD,EAAK,OAAL,CAAnE,EAAkF,CAAlF,EAAqF,CAArF,EAAwF,CAAxF,EAA2F,CAA3F,EAA8F,CAA9F,EAAiG,CAAjG,CAAhB;EACA,UAAM,YAAY,GAAGb,4BAAA,CAAgC,QAAhC,EAA0C,OAA1C,EAAmD,YAAnD,CAArB;EACA,UAAM,KAAK,GAAGkH,gBAAA,CAAoB,YAApB,EAAkC,QAAlC,EAA4C,QAA5C,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,CAArE,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,CAA9E,EAAiF,CAAjF,CAAd;EACA,UAAM,WAAW,GAAG,KAAK,CAAC,QAAN,CAAe,OAAO,CAAC,YAAD,EAAe,gBAAf,CAAtB,CAApB;;EACA,UAAI,WAAW,CAAC,MAAZ,EAAJ,EAA0B;EACxB,cAAM,IAAI,UAAJ,CAAe,kEAAf,CAAN;EACD;;EA1CmC,iCA2CgDhD,gBAAA,CAClF,IADkF,EAElF,KAFkF,EAGlF,GAHkF,EAIlF,IAJkF,EAKlF,MALkF,EAMlF,MANkF,EAOlF,WAPkF,EAQlF,WARkF,EASlF,UATkF,EAUlF,iBAVkF,EAWlF,YAXkF,EAYlF,YAZkF;EAclF;EACA,MAAA,WAAW,CAAC,UAAZ,EAfkF,CA3ChD;;EA2CjC,MAAA,IA3CiC,wBA2CjC,IA3CiC;EA2C3B,MAAA,KA3C2B,wBA2C3B,KA3C2B;EA2CpB,MAAA,GA3CoB,wBA2CpB,GA3CoB;EA2Cf,MAAA,IA3Ce,wBA2Cf,IA3Ce;EA2CT,MAAA,MA3CS,wBA2CT,MA3CS;EA2CD,MAAA,MA3CC,wBA2CD,MA3CC;EA2CO,MAAA,WA3CP,wBA2CO,WA3CP;EA2CoB,MAAA,WA3CpB,wBA2CoB,WA3CpB;EA2CiC,MAAA,UA3CjC,wBA2CiC,UA3CjC;EA6DpC;EACA;EACA;EACA;EACA;EACA,UAAM,QAAQ,GAAG6C,uBAAA,CAA2B,QAA3B,EAAqC,OAAO,CAAC,IAAD,EAAO,OAAP,CAA5C,CAAjB;EACA,UAAM,gBAAgB,GAAGE,0BAAA,CACvB,IADuB,EAEvB,KAFuB,EAGvB,GAHuB,EAIvB,IAJuB,EAKvB,MALuB,EAMvB,MANuB,EAOvB,WAPuB,EAQvB,WARuB,EASvB,UATuB,EAUvB,QAVuB,EAWvB,QAXuB,EAYvB,QAZuB,EAavB,YAbuB,EAcvB,QAduB;EAevB;EAAoB,WAfG,CAAzB;EAkBA,aAAO/F,2BAAA,CAA+B,gBAA/B,EAAiD,QAAjD,EAA2D,OAAO,CAAC,IAAD,EAAO,QAAP,CAAlE,CAAP;EACD;EAroBH;EAAA;EAAA,WAsoBE,gBAAO,UAAP,EAAsC;EACpC,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,KAAK,GAAGqH,uBAAA,CAA2B,UAA3B,CAAd;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,IAAD,EAAO,gBAAP,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,KAAD,EAAQ,gBAAR,CAAnB;EACA,UAAI,CAAC,MAAM,CAAC,GAAD,CAAN,CAAY,MAAZ,CAAmB,GAAnB,CAAL,EAA8B,OAAO,KAAP;EAC9B,UAAI,CAACC,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,SAAP,CAAzB,EAA4C,OAAO,CAAC,KAAD,EAAQ,SAAR,CAAnD,CAAL,EAA6E,OAAO,KAAP;EAC7E,aAAOpE,cAAA,CAAkB,OAAO,CAAC,IAAD,EAAO,QAAP,CAAzB,EAA2C,OAAO,CAAC,KAAD,EAAQ,QAAR,CAAlD,CAAP;EACD;EA9oBH;EAAA;EAAA,WA+oBE,oBAAwD;EAAA,UAA/C,YAA+C,uEAAT,SAAS;EACtD,UAAI,CAAClD,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,OAAO,GAAGzC,gBAAA,CAAoB,YAApB,CAAhB;;EACA,kCAAuC4D,wBAAA,CAA4B,OAA5B,CAAvC;EAAA,UAAQ,SAAR,yBAAQ,SAAR;EAAA,UAAmB,IAAnB,yBAAmB,IAAnB;EAAA,UAAyB,SAAzB,yBAAyB,SAAzB;;EACA,UAAM,YAAY,GAAGL,sBAAA,CAA0B,OAA1B,EAAmC,OAAnC,CAArB;EACA,UAAM,YAAY,GAAGqC,oBAAA,CAAwB,OAAxB,CAArB;EACA,UAAM,YAAY,GAAGqE,wBAAA,CAA4B,OAA5B,CAArB;EACA,UAAM,UAAU,GAAGC,kBAAA,CAAsB,OAAtB,CAAnB;EACA,aAAOC,6BAAA,CAAiC,IAAjC,EAAuC,SAAvC,EAAkD,YAAlD,EAAgE,YAAhE,EAA8E,UAA9E,EAA0F;EAC/F,QAAA,IAAI,EAAJ,IAD+F;EAE/F,QAAA,SAAS,EAAT,SAF+F;EAG/F,QAAA,YAAY,EAAZ;EAH+F,OAA1F,CAAP;EAKD;EA5pBH;EAAA;EAAA,WA6pBE,0BAEkD;EAAA,UADhD,OACgD,uEADT,SACS;EAAA,UAAhD,OAAgD,uEAAT,SAAS;EAEhD,UAAI,CAAC1H,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,IAAI,cAAJ,CAAmB,OAAnB,EAA4B,OAA5B,EAAqC,MAArC,CAA4C,IAA5C,CAAP;EACD;EAnqBH;EAAA;EAAA,WAoqBE,kBAAM;EACJ,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO0H,6BAAA,CAAiC,IAAjC,EAAuC,MAAvC,CAAP;EACD;EAvqBH;EAAA;EAAA,WAwqBE,mBAAO;EACL,YAAM,IAAI,SAAJ,CAAc,6DAAd,CAAN;EACD;EA1qBH;EAAA;EAAA,WA2qBE,sBAAU;EACR,UAAI,CAAC1H,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,EAAE,GAAG,QAAQ,CAAC,IAAD,CAAnB;EACA,UAAM,QAAQ,GAAG,YAAY,CAAC,0BAAD,CAA7B;EACA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,OAAO,GAAG,IAAI,QAAJ,CACd,OAAO,CAAC,EAAD,EAAK,QAAL,CADO,EAEd,OAAO,CAAC,EAAD,EAAK,SAAL,CAFO,EAGd,OAAO,CAAC,EAAD,EAAK,OAAL,CAHO,EAId,CAJc,EAKd,CALc,EAMd,CANc,EAOd,CAPc,EAQd,CARc,EASd,CATc,EAUd,QAVc,CAAhB;EAYA,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAxB;EACA,UAAM,OAAO,GAAGE,4BAAA,CAAgC,QAAhC,EAA0C,OAA1C,EAAmD,YAAnD,CAAhB;EACA,aAAOkB,2BAAA,CAA+B,OAAO,CAAC,OAAD,EAAU,gBAAV,CAAtC,EAAmE,QAAnE,EAA6E,QAA7E,CAAP;EACD;EA/rBH;EAAA;EAAA,WAgsBE,qBAAS;EACP,UAAI,CAACpB,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,eAAe,GAAG,YAAY,CAAC,oBAAD,CAApC;EACA,aAAO,IAAI,eAAJ,CAAoB,OAAO,CAAC,IAAD,EAAO,gBAAP,CAA3B,CAAP;EACD;EApsBH;EAAA;EAAA,WAqsBE,uBAAW;EACT,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOmE,sBAAA,CAA0B,QAAQ,CAAC,IAAD,CAAlC,CAAP;EACD;EAxsBH;EAAA;EAAA,WAysBE,uBAAW;EACT,UAAI,CAACnE,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAOuE,sBAAA,CAA0B,QAAQ,CAAC,IAAD,CAAlC,CAAP;EACD;EA5sBH;EAAA;EAAA,WA6sBE,2BAAe;EACb,UAAI,CAACvE,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,aAAO,QAAQ,CAAC,IAAD,CAAf;EACD;EAhtBH;EAAA;EAAA,WAitBE,4BAAgB;EACd,UAAI,CAACA,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGwC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,WAAD,EAAc,MAAd,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGe,yBAAA,CAA6B,IAA7B,EAAmC,UAAnC,CAAf;EACA,aAAOC,mBAAA,CAAuB,QAAvB,EAAiC,MAAjC,CAAP;EACD;EAvtBH;EAAA;EAAA,WAwtBE,2BAAe;EACb,UAAI,CAACxD,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,QAAQ,GAAG,OAAO,CAAC,IAAD,EAAO,QAAP,CAAxB;EACA,UAAM,UAAU,GAAGwC,cAAA,CAAkB,QAAlB,EAA4B,CAAC,KAAD,EAAQ,WAAR,CAA5B,CAAnB;EACA,UAAM,MAAM,GAAGiB,wBAAA,CAA4B,IAA5B,EAAkC,UAAlC,CAAf;EACA,aAAOC,kBAAA,CAAsB,QAAtB,EAAgC,MAAhC,CAAP;EACD;EA9tBH;EAAA;EAAA,WA+tBE,wBAAY;EACV,UAAI,CAAC1D,uBAAA,CAA2B,IAA3B,CAAL,EAAuC,MAAM,IAAI,SAAJ,CAAc,kBAAd,CAAN;EACvC,UAAM,EAAE,GAAG,QAAQ,CAAC,IAAD,CAAnB;EACA,UAAM,EAAE,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAlB;EACA,aAAO;EACL,QAAA,QAAQ,EAAE,OAAO,CAAC,IAAD,EAAO,QAAP,CADZ;EAEL,QAAA,MAAM,EAAE,OAAO,CAAC,EAAD,EAAK,OAAL,CAFV;EAGL,QAAA,OAAO,EAAE,OAAO,CAAC,EAAD,EAAK,QAAL,CAHX;EAIL,QAAA,cAAc,EAAE,OAAO,CAAC,EAAD,EAAK,eAAL,CAJlB;EAKL,QAAA,cAAc,EAAE,OAAO,CAAC,EAAD,EAAK,eAAL,CALlB;EAML,QAAA,SAAS,EAAE,OAAO,CAAC,EAAD,EAAK,UAAL,CANb;EAOL,QAAA,QAAQ,EAAE,OAAO,CAAC,EAAD,EAAK,SAAL,CAPZ;EAQL,QAAA,aAAa,EAAE,OAAO,CAAC,EAAD,EAAK,cAAL,CARjB;EASL,QAAA,SAAS,EAAE,OAAO,CAAC,EAAD,EAAK,UAAL,CATb;EAUL,QAAA,OAAO,EAAE,OAAO,CAAC,EAAD,EAAK,QAAL,CAVX;EAWL,QAAA,MAAM,EAAEuG,iCAAA,CAAqC,EAArC,EAAyC,OAAO,CAAC,IAAD,EAAO,OAAP,CAAhD,CAXH;EAYL,QAAA,QAAQ,EAAE;EAZL,OAAP;EAcD;EAjvBH;EAAA;EAAA,WAkvBE,cAAY,IAAZ,EAAgF;EAAA,UAA3C,YAA2C,uEAAT,SAAS;EAC9E,UAAM,OAAO,GAAGhJ,gBAAA,CAAoB,YAApB,CAAhB;;EACA,UAAIyC,uBAAA,CAA2B,IAA3B,CAAJ,EAAsC;EACpC,QAAAtC,kBAAA,CAAsB,OAAtB,EADoC;;EAEpC,QAAA4G,wBAAA,CAA4B,OAA5B;EACA,QAAA4C,gBAAA,CAAoB,OAApB,EAA6B,QAA7B;EACA,eAAO9F,2BAAA,CACL,OAAO,CAAC,IAAD,EAAO,gBAAP,CADF,EAEL,OAAO,CAAC,IAAD,EAAO,SAAP,CAFF,EAGL,OAAO,CAAC,IAAD,EAAO,QAAP,CAHF,CAAP;EAKD;;EACD,aAAOiG,uBAAA,CAA2B,IAA3B,EAAiC,OAAjC,CAAP;EACD;EA/vBH;EAAA;EAAA,WAgwBE,iBAAe,QAAf,EAA+C,QAA/C,EAA6E;EAC3E,UAAM,GAAG,GAAGA,uBAAA,CAA2B,QAA3B,CAAZ;EACA,UAAM,GAAG,GAAGA,uBAAA,CAA2B,QAA3B,CAAZ;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,gBAAN,CAAnB;EACA,UAAM,GAAG,GAAG,OAAO,CAAC,GAAD,EAAM,gBAAN,CAAnB;EACA,UAAI,MAAM,CAAC,GAAD,CAAN,CAAY,MAAZ,CAAmB,GAAnB,CAAJ,EAA6B,OAAO,CAAC,CAAR;EAC7B,UAAI,MAAM,CAAC,GAAD,CAAN,CAAY,OAAZ,CAAoB,GAApB,CAAJ,EAA8B,OAAO,CAAP;EAC9B,aAAO,CAAP;EACD;EAxwBH;;EAAA;EAAA;EA4wBA,kBAAkB,CAAC,aAAD,EAAgB,wBAAhB,CAAlB;;EAEA,SAAS9G,mBAAT,CAA2B,OAA3B,EAA8D;EAC5D,SAAO,OAAQ,UAAkB,CAAC,MAA3B,KAAsC,WAAtC,GAAoD,OAApD,GAA+D,OAAe,CAAC,KAAtF;EACD;;EAED,SAAS,QAAT,CAAkB,GAAlB,EAA6C;EAC3C,SAAOmF,kCAAA,CAAsC,OAAO,CAAC,GAAD,EAAM,SAAN,CAA7C,EAA+D,OAAO,CAAC,GAAD,EAAM,OAAN,CAAtE,EAAsF,OAAO,CAAC,GAAD,EAAM,QAAN,CAA7F,CAAP;EACD;;;;;;;;;;;;;;;;;EC1yBK,SAAU,iBAAV,GAA2B;EAC/B;EACA,MAAM,gBAAgB,GAAG,MAAM,CAAC,CAAC,IAAF,CAAN,CAAc,QAAd,CAAuB,GAAvB,CAAzB;EACA,SAAO,IAAI,OAAJ,CAAY,iBAAiB,CAAC,gBAAD,CAA7B,CAAP;EACD;;EAED,SAAS,iBAAT,CAA2B,OAA3B,EAA8D;EAC5D,SAAO,OAAQ,UAAkB,CAAC,MAA3B,KAAsC,WAAtC,GAAoD,OAApD,GAA+D,OAAe,CAAC,KAAtF;EACD;;;;;;;;;;;;"}