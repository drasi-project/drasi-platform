name: Publish

on:
    workflow_dispatch:
      inputs:
        tag:
          description: 'Tag to publish'
          required: true
          default: 'latest'
        acr_name:
          description: 'Registry name'
          required: false
          default: 'drasi'

permissions:
  id-token: write # Required for requesting the JWT
  contents: read  # Required for actions/checkout
  packages: read

jobs:
  publish:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retag and push Docker images
        run: |
            IMAGE_NAMES=(
                "query-container-query-host"
                "query-container-publish-api"
                "query-container-view-svc"
                "api"
                "kubernetes-provider"
                
                "source-change-router"
                "source-change-dispatcher"
                "source-query-api"
                
                "source-debezium-reactivator"
                "source-sql-proxy"
                "source-cosmosdb-reactivator"
                "source-gremlin-proxy"      
                "source-eventhub-reactivator"
                "source-eventhub-proxy"
                "source-dataverse-reactivator"
                "source-dataverse-proxy"

                "reaction-signalr"
                "reaction-dataverse"
                "reaction-debezium"
                "reaction-debug"
                "reaction-eventgrid"
                "reaction-gremlin"
                "reaction-result"
                "reaction-storagequeue"
                "reaction-storedproc"
            )

            for IMAGE_NAME in "${IMAGE_NAMES[@]}"; do
                REPO=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

                docker pull $REPO:${{ github.sha }}
                docker tag $REPO:${{ github.sha }} $REPO:${{ github.event.inputs.tag }}
                docker push $REPO:${{ github.event.inputs.tag }}
            done
    
      - name: Logout from GitHub Container Registry
        run: docker logout ghcr.io

  publish_ACR:
    runs-on: ubuntu-latest
    environment: 
      name: github-actions
    strategy:
      matrix:
        image:
          - "query-container-query-host"
          - "query-container-publish-api"
          - "query-container-view-svc"
          - "api"
          - "kubernetes-provider"
          - "source-change-router"
          - "source-change-dispatcher"
          - "source-query-api"
          - "source-debezium-reactivator"
          - "source-sql-proxy"
          - "source-cosmosdb-reactivator"
          - "source-gremlin-proxy"
          - "source-eventhub-reactivator"
          - "source-eventhub-proxy"
          - "source-dataverse-reactivator"
          - "source-dataverse-proxy"
          - "reaction-signalr"
          - "reaction-dataverse"
          - "reaction-debezium"
          - "reaction-debug"
          - "reaction-eventgrid"
          - "reaction-gremlin"
          - "reaction-result"
          - "reaction-storagequeue"
          - "reaction-storedproc"
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull from ghcr
        run: |
          REPO=ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}

          docker pull $REPO:${{ github.sha }}
          docker tag $REPO:${{ github.sha }} ${{ github.event.inputs.acr_name}}.azurecr.io/drasi-project/${{ matrix.image }}:${{ github.event.inputs.tag }}
          docker logout
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Push to ACR
        run: |
          az acr login --name ${{ github.event.inputs.acr_name}}
          docker push ${{ github.event.inputs.acr_name}}.azurecr.io/drasi-project/${{ matrix.image }}:${{ github.event.inputs.tag }}