name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-query-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.DRASI_CORE_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Query Host
        uses: docker/build-push-action@v5
        with:
          context: ./query-container/query-host
          file: ./query-container/query-host/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/query-container-query-host:${{ github.sha }}
            ${{ github.repository_owner }}/query-container-query-host:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/query-host:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/query-host:cache
          push: true

      - name: Build Publish API
        uses: docker/build-push-action@v5
        with:
          context: ./query-container/publish-api
          file: ./query-container/publish-api/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}query-container-publish-api:${{ github.sha }}
            ${{ github.repository_owner }}query-container-publish-api:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/publish-api:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/publish-api:cache
          push: true

      - name: Build View Service
        uses: docker/build-push-action@v5
        with:
          context: ./query-container/view-svc
          file: ./query-container/view-svc/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}query-container-view-svc:${{ github.sha }}
            ${{ github.repository_owner }}query-container-view-svc:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/view-svc:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/view-svc:cache
          push: true

  build-control-plane:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Management API
        uses: docker/build-push-action@v5
        with:
          context: ./control-planes
          file: ./control-planes/mgmt_api/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}api:${{ github.sha }}
            ${{ github.repository_owner }}api:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/api:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/api:cache
          push: true

      - name: Build k8s Resource Provider
        uses: docker/build-push-action@v5
        with:
          context: ./control-planes
          file: ./control-planes/kubernetes_provider/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}kubernetes-provider:${{ github.sha }}
            ${{ github.repository_owner }}kubernetes-provider:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/kubernetes-provider:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/kubernetes-provider:cache
          push: true

  build-sources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Change Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./sources/shared/change-svc/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}source-change-svc:${{ github.sha }}
            ${{ github.repository_owner }}source-change-svc:${{ github.sha }}
          push: true

      - name: Build Change Dispatcher
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./sources/shared/change-dispatcher/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}source-change-dispatcher:${{ github.sha }}
            ${{ github.repository_owner }}source-change-dispatcher:${{ github.sha }}
          push: true

      - name: Build Query API
        uses: docker/build-push-action@v5
        with:
          context: ./sources/shared/query-api
          file: ./sources/shared/query-api/Dockerfile
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}source-query-api:${{ github.sha }}
            ${{ github.repository_owner }}source-query-api:${{ github.sha }}
          push: true

      - name: Build Debezium Reactivator
        uses: docker/build-push-action@v5
        with:
          context: ./sources/debezium/debezium-reactivator
          file: ./sources/debezium/debezium-reactivator/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}source-debezium-reactivator:${{ github.sha }}
            ${{ github.repository_owner }}source-debezium-reactivator:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/source-debezium-reactivator:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/source-debezium-reactivator:cache
          push: true

      - name: Build SQL Proxy
        uses: docker/build-push-action@v5
        with:
          context: ./sources/generic/sql-source-proxy
          file: ./sources/generic/sql-source-proxy/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}source-sql-proxy:${{ github.sha }}
            ${{ github.repository_owner }}source-sql-proxy:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/source-sql-proxy:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/source-sql-proxy:cache
          push: true

  build-reactions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build SiganlR reaction
        uses: docker/build-push-action@v5
        with:
          context: ./reactions/signalr-reactor
          file: ./reactions/signalr-reactor/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}reaction-signalr:${{ github.sha }}
            ${{ github.repository_owner }}reaction-signalr:${{ github.sha }}            
          push: true

  build-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        working-directory: cli
        run: make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli
          path: cli/bin

  e2e-tests:
    runs-on: ubuntu-latest
    needs: 
      - build-query-container
      - build-control-plane
      - build-sources
      - build-reactions
      - build-cli

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Install Drasi CLI
        run: |
          chmod +x ./cli/linux-x64/drasi
          sudo mv ./cli/linux-x64/drasi /usr/local/bin/drasi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Download images
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/query-container-query-host:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/query-container-publish-api:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/query-container-view-svc:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/api:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/kubernetes-provider:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/source-change-svc:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/source-change-dispatcher:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/source-query-api:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/source-debezium-reactivator:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/source-sql-proxy:${{ github.sha }}
          docker pull ghcr.io/${{ github.repository_owner }}/reaction-signalr:${{ github.sha }}
          
          docker image list

      - name: Tag images
        run: |
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}query-container-query-host:${{ github.sha }} ${{ github.repository_owner }}query-container-query-host
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}query-container-publish-api:${{ github.sha }} ${{ github.repository_owner }}query-container-publish-api
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}query-container-view-svc:${{ github.sha }} ${{ github.repository_owner }}query-container-view-svc
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}api:${{ github.sha }} ${{ github.repository_owner }}api
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}kubernetes-provider:${{ github.sha }} ${{ github.repository_owner }}kubernetes-provider
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}source-change-svc:${{ github.sha }} ${{ github.repository_owner }}source-change-svc
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}source-change-dispatcher:${{ github.sha }} ${{ github.repository_owner }}source-change-dispatcher
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}source-query-api:${{ github.sha }} ${{ github.repository_owner }}source-query-api
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}source-debezium-reactivator:${{ github.sha }} ${{ github.repository_owner }}source-debezium-reactivator
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}source-sql-proxy:${{ github.sha }} ${{ github.repository_owner }}source-sql-proxy
          docker image tag docker.io/ghcr.io/${{ github.repository_owner }}reaction-signalr:${{ github.sha }} ${{ github.repository_owner }}reaction-signalr
        
      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: npm install
        working-directory: e2e-tests
        run: npm install

      - name: Run e2e tests
        working-directory: e2e-tests
        run: npm test

  cleanup:
    runs-on: ubuntu-latest
    if: failure()
    needs: 
      - build-query-container
      - build-control-plane
      - build-sources
      - build-reactions
      - build-cli
      - e2e-tests
    steps:
    
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete images from GHCR
        run: |
          IMAGE_NAMES=(
            "query-container-query-host"
            "query-container-publish-api"
            "query-container-view-svc"
            "api"
            "kubernetes-provider"
            "source-change-svc"
            "source-change-dispatcher"
            "source-query-api"
            "source-debezium-reactivator"
            "source-sql-proxy"
            "reaction-signalr"
          )
          for IMAGE_NAME in "${IMAGE_NAMES[@]}"; do
            REPO=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            TAG=${{ github.sha }}
            FULL_IMAGE_NAME=$REPO:$TAG
            if docker pull $FULL_IMAGE_NAME; then
              DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $FULL_IMAGE_NAME | sed 's/.*@//')
              if [ -n "$DIGEST" ]; then
                curl -X DELETE -u ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} https://ghcr.io/v2/${{ github.repository_owner }}/$IMAGE_NAME/manifests/$DIGEST
                echo "Deleted image $FULL_IMAGE_NAME"
              fi
            else
              echo "Image with tag $TAG for $IMAGE_NAME does not exist."
            fi
          done